From R.Lamprecht at T-Online.de  Wed Jul  2 00:36:35 2008
From: R.Lamprecht at T-Online.de (Ronald Lamprecht)
Date: Wed, 02 Jul 2008 00:36:35 +0200
Subject: [Enigma-game-svn] r1203 - trunk
Message-ID: <486AB173.5090303@T-Online.de>

As the patch is too large the commit message as a short manual notification:

Trunk 1.1: I18N update
- added Ukrainian translation, flag, support
- added Belarusian flag, support - translation still missing
- updated all other languages

Ronald


From ral at mail.berlios.de  Thu Jul  3 00:28:24 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Thu, 3 Jul 2008 00:28:24 +0200
Subject: [Enigma-game-svn] r1204 - in trunk: data/schemas src src/others
	src/stones
Message-ID: <200807022228.m62MSOcO031901@sheep.berlios.de>

Author: ral
Date: 2008-07-03 00:27:58 +0200 (Thu, 03 Jul 2008)
New Revision: 1204

Added:
   trunk/src/others/
   trunk/src/others/Other.cc
   trunk/src/others/Other.hh
   trunk/src/others/Rubberband.cc
   trunk/src/others/Rubberband.hh
   trunk/src/others/WireControl.cc
   trunk/src/others/WireControl.hh
Modified:
   trunk/data/schemas/objects.xml
   trunk/data/schemas/objects.xsd
   trunk/src/Makefile.am
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/d_engine.hh
   trunk/src/display.cc
   trunk/src/display.hh
   trunk/src/items.cc
   trunk/src/lua.cc
   trunk/src/oxyd.cc
   trunk/src/player.cc
   trunk/src/stones.cc
   trunk/src/stones.hh
   trunk/src/stones/BoulderStone.cc
   trunk/src/stones/BoulderStone.hh
   trunk/src/stones/ChessStone.cc
   trunk/src/stones/ChessStone.hh
   trunk/src/stones/LightPassengerStone.cc
   trunk/src/stones/LightPassengerStone.hh
   trunk/src/stones/RotatorStone.cc
   trunk/src/stones/RotatorStone.hh
   trunk/src/stones_complex.cc
   trunk/src/stones_simple.cc
   trunk/src/world.cc
   trunk/src/world.hh
   trunk/src/world_internal.hh
Log:
Trunk 1.1: new API reengineering
- Other: new object type besides Floor, Item, Stone, Actor
  - superclass for unpositioned objects and gadgets
- Rubberband:
  - elimintion of all old structurs and code
  - made a full valued Enigma object of type Other
  - named "ot_rubberband"
  - full support of attributes, messages, naming,...
  - own attributes: "anchor1", "anchor2", "strength", "length", "threshold"
  - adjustments to all involved objects like, scissor, st_rubberband, 
    it_rubberband
- Wirecontrol: new object
  - name "ot_wirecontrol"
  - wires to stones given by attributes: "anchor1", "anchor2"
  - transfers stoneimpulses between its stones
- wo:add() new method to add Other objects given by a tile or table declaration
- all objects support new attributes:
  - "rubbers" - read only, a group of all connected rubbers
  - "wires"   - read only, a group of all connected wires
  - "fellows" - read only, a group of all objects connected by rubbers or wires
- fix YieldedGridStone: set correct owner positions for yielded stones
  (avoid rubberband jumping temporarily to -1,-1)
Note:
- did temporarily brake support of turnstile stones and rubberbands
- rubberband needs support of min and max values to avoid infinite moves
- wirecontrol impulse behaviour has to be settled for various special stones


Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/data/schemas/objects.xml	2008-07-02 22:27:58 UTC (rev 1204)
@@ -2,6 +2,8 @@
 <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="objects.xsd">
   <attributes>
     <attr name="action" type="tokens" default="nil" rw="rw"/>
+    <attr name="anchor1" type="tokens" default="nil" rw="rw"/>
+    <attr name="anchor2" type="tokens" default="nil" rw="rw"/>
     <attr name="autoclose" type="bool" default="false" rw="rw"/>
     <attr name="cluster" type="int" default="nil" min="0" max="1" rw="rw"/>
     <attr name="code" type="int" default="1" rw="rw"/>
@@ -11,6 +13,7 @@
     <attr name="counterclock" type="bool" default="false" rw="rw"/>
     <attr name="destination" type="tokens" default="nil" rw="rw"/>
     <attr name="faces" type="string" default="nil" rw="rw"/>
+    <attr name="fellows" type="group" default="nil" rw="r"/>
     <attr name="flavor" type="string" default="b" rw="rw"/>
     <attr name="friction" type="double" default="nil" rw="rw"/>
     <attr name="gradient" type="double" default="nil" rw="rw"/>
@@ -26,7 +29,10 @@
     <attr name="interval_l" type="double" default="12" rw="rw"/>
     <attr name="inverse" type="bool" default="false" rw="rw"/>
     <attr name="invisible" type="bool" default="false" rw="rw"/>
+    <attr name="length" type="double" default="1" rw="rw"/>
     <attr name="loop" type="bool" default="true" rw="rw"/>
+    <attr name="max" type="double" default="0" rw="rw"/>
+    <attr name="min" type="double" default="0" rw="rw"/>
     <attr name="movable" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
     <attr name="nopaction" type="bool" default="false" rw="rw"/>
@@ -34,6 +40,7 @@
     <attr name="orientation" type="int" default="0" min="0" max="3" rw="rw"/>
     <attr name="oxydcolor" type="int" default="-1" min="-4" max="7" rw="rw"/>
     <attr name="range" type="double" default="1.0" rw="rw"/>
+    <attr name="rubbers" type="group" default="nil" rw="r"/>
     <attr name="secure" type="bool" default="false" rw="rw"/>
     <attr name="scissor" type="bool" default="true" rw="rw"/>
     <attr name="scratches" type="string" default="" rw="rw"/>
@@ -42,10 +49,13 @@
     <attr name="strength" type="double" default="1" rw="rw"/>
     <attr name="target" type="tokens" default="nil" rw="rw"/>
     <attr name="transparent" type="bool" default="false" rw="rw"/>
+    <attr name="threshold" type="double" default="0" rw="rw"/>
+    <attr name="wires" type="group" default="nil" rw="r"/>
   </attributes>
   <messages>
     <msg name="close" type="nil"/>
     <msg name="closeall" type="nil"/>
+    <msg name="disconnect" type="nil"/>
     <msg name="flip" type="nil"/>
     <msg name="hit" type="object"/>
     <msg name="inner_pull" type="dir"/>
@@ -86,6 +96,7 @@
       <attr name="state"/>
       <attr name="target"/>
       <action type="bool"/>
+      <msg name="disconnect"/>
       <msg name="kill"/>
       <msg name="toggle"/>
     </object>
@@ -207,8 +218,26 @@
       <attr name="faces"/>
       <msg name="_model_reanimated"/>
     </object>
+    <object name="ot" abstract="true">
+    </object>
+    <object name="ot_rubberband">
+      <attr name="anchor1"/>
+      <attr name="anchor2"/>
+      <attr name="strength" default="10"/>
+      <attr name="length"/>
+      <attr name="threshold"/>
+      <attr name="max"/>
+      <attr name="min"/>
+    </object>
+    <object name="ot_wirecontrol">
+      <attr name="anchor1"/>
+      <attr name="anchor2"/>
+    </object>
     <object name="st" abstract="true">
       <attr name="movable" rw="r"/>
+      <attr name="fellows"/>
+      <attr name="rubbers"/>
+      <attr name="wires"/>
     </object>
     <object name="st_actorimpulse">
       <attr name="invisible"/>

Modified: trunk/data/schemas/objects.xsd
===================================================================
--- trunk/data/schemas/objects.xsd	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/data/schemas/objects.xsd	2008-07-02 22:27:58 UTC (rev 1204)
@@ -117,6 +117,7 @@
       <xs:enumeration value="string"/>
       <xs:enumeration value="enum"/>
       <xs:enumeration value="object"/>
+      <xs:enumeration value="group"/>
       <xs:enumeration value="tokens"/>
     </xs:restriction>
   </xs:simpleType>

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/Makefile.am	2008-07-02 22:27:58 UTC (rev 1204)
@@ -197,6 +197,12 @@
 	lev/ScoreManager.hh	\
 	lev/VolatileIndex.cc	\
 	lev/VolatileIndex.hh	\
+	others/Other.cc		\
+	others/Other.hh		\
+	others/Rubberband.cc	\
+	others/Rubberband.hh	\
+	others/WireControl.cc	\
+	others/WireControl.hh	\
 	stones/ActorImpulseStone.cc	\
 	stones/ActorImpulseStone.hh	\
 	stones/BlockerStone.cc	\

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/Object.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -152,6 +152,8 @@
             finalizeNearestObjectReferences();
         } else if (m.message == "kill") {
             switch (getObjectType()) {
+                case OTHER:
+                    KillOther(dynamic_cast<Other *>(this)); break;
                 case FLOOR:
                     KillFloor(dynamic_cast<GridObject *>(this)->get_pos()); break;
                 case ITEM:
@@ -159,6 +161,13 @@
                 case STONE:
                     KillStone(dynamic_cast<GridObject *>(this)->get_pos()); break;
             }
+        } else if (m.message == "disconnect") {
+            ObjectList olist = getAttr("rubbers");   // a private deletion resistant copy
+            for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it)
+                KillOther(dynamic_cast<Other *>(*it));
+            olist = getAttr("wires");   // a private deletion resistant copy
+            for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it)
+                KillOther(dynamic_cast<Other *>(*it));
         }
         return Value();
     }
@@ -401,7 +410,7 @@
     }
     
     Object::ObjectType Object::getObjectType() const {
-        return OTHER;
+        return OBJECT;
     }
     
     double Object::squareDistance(const Object *other) const {

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/Object.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -79,6 +79,7 @@
 
     public:
         enum ObjectType { 
+            OBJECT,
             OTHER,
             STONE,
             FLOOR,

Modified: trunk/src/d_engine.hh
===================================================================
--- trunk/src/d_engine.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/d_engine.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -26,7 +26,7 @@
 
 namespace display
 {
-
+
 /* -------------------- DisplayEngine -------------------- */
 
     class DisplayEngine {
@@ -131,7 +131,7 @@
         DisplayEngine *m_engine;
     };
 
-
+
 /* -------------------- ModelLayer -------------------- */
 
     /*! The base class for all layers that contains Models. */
@@ -187,7 +187,7 @@
         int m_redrawsize;
     };
 
-
+
 /* -------------------- Sprites -------------------- */
 
     class Sprite : public ecl::Nocopy {
@@ -253,7 +253,7 @@
         unsigned dispensiblesprites;    // Threshold above which just critical sprites are accepted
     };
 
-
+
 /* -------------------- Shadows -------------------- */
 
     struct StoneShadowCache;
@@ -289,14 +289,17 @@
         ecl::Array2<bool>   m_hasactor;
     };
 
-
+
 /* -------------------- Lines -------------------- */
 
     struct Line {
-        V2 start,end;
+        V2 start, end;
         V2 oldstart, oldend;
+        unsigned short r,g,b;
 
-        Line(const V2 &s, const V2 &e) :start(s), end(e) {}
+        Line(const V2 &s, const V2 &e, unsigned short rc, unsigned short gc, unsigned short bc) :
+                start (s), end (e), r (rc), g (gc), b (bc) {
+        }
         Line() {}
     };
 
@@ -313,7 +316,7 @@
         {}
         void draw_onepass (ecl::GC &gc);
 
-        RubberHandle add_line (const V2 &p1, const V2 &p2);
+        RubberHandle add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc);
         void set_startpoint (unsigned id, const V2 &p1);
         void set_endpoint (unsigned id, const V2 &p2);
         void kill_line (unsigned id);
@@ -328,7 +331,7 @@
         LineMap   m_rubbers;
     };
 
-
+
 /* -------------------- CommonDisplay -------------------- */
 
     /*! Parts of the display engine that are common to the game and
@@ -351,7 +354,7 @@
         SpriteHandle add_effect (const V2& pos, Model *m, bool isDispensible = false);
         SpriteHandle add_sprite (const V2 &pos, Model *m);
 
-        RubberHandle add_line (V2 p1, V2 p2);
+        RubberHandle add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc);
 
         void new_world (int w, int h);
         void redraw();
@@ -372,7 +375,7 @@
         DisplayEngine *m_engine;
     };
 
-
+
 /* -------------------- Scrolling -------------------- */
 
 
@@ -437,7 +440,7 @@
         ecl::V2 calc_offset (const ecl::V2 &point);
     };
 
-
+
 /* -------------------- GameDisplay -------------------- */
 
     class GameDisplay : public CommonDisplay {

Modified: trunk/src/display.cc
===================================================================
--- trunk/src/display.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/display.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -1070,7 +1070,7 @@
 {
     DisplayEngine *engine = get_engine();
 
-    set_color (gc, 240, 140, 20, 255);
+//    set_color (gc, 240, 140, 20, 255);
     set_flags (gc.flags, GS_ANTIALIAS);
 
     for (LineMap::iterator i=m_rubbers.begin(); i!= m_rubbers.end(); ++i)
@@ -1079,6 +1079,7 @@
         engine->world_to_screen (i->second.start, &x1, &y1);
         engine->world_to_screen (i->second.end, &x2, &y2);
 
+        set_color(gc, i->second.r, i->second.g, i->second.b, 255);
         line (gc, x1, y1, x2, y2);
     }
 }
@@ -1139,10 +1140,9 @@
     }
 }
 
-RubberHandle
-DL_Lines::add_line (const V2 &p1, const V2 &p2)
+RubberHandle DL_Lines::add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc)
 {
-    m_rubbers[m_id] = Line(p1, p2);
+    m_rubbers[m_id] = Line(p1, p2, rc, gc, bc);
     mark_redraw_line (m_rubbers[m_id]);
     return RubberHandle(this, m_id++);
 }
@@ -1876,9 +1876,9 @@
 
 
 RubberHandle
-CommonDisplay::add_line (V2 p1, V2 p2)
+CommonDisplay::add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc)
 {
-    return line_layer->add_line (p1, p2);
+    return line_layer->add_line (p1, p2, rc, gc, bc);
 }
 
 SpriteHandle
@@ -2227,9 +2227,8 @@
 }
 
 RubberHandle
-display::AddRubber (const V2 &p1, const V2 &p2)
-{
-    return gamedpy->add_line (p1, p2);
+display::AddRubber (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc) {
+    return gamedpy->add_line(p1, p2, rc, gc, bc);
 }
 
 void display::SetTextSpeed(int newspeed) {

Modified: trunk/src/display.hh
===================================================================
--- trunk/src/display.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/display.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -189,10 +189,10 @@
         unsigned id;
     };
 
-    RubberHandle AddRubber (const ecl::V2 &p1, const ecl::V2 &p2);
+    RubberHandle AddRubber (const ecl::V2 &p1, const ecl::V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc);
 }
 
-
+
 /* -------------------- Status bar -------------------- */
 namespace display
 {

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/items.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -2038,7 +2038,7 @@
                 state |= 4;  // mark warping
                 bool isScissor = to_bool(getAttr("scissor")) || server::GameCompatibility != GAMET_ENIGMA;
                 if (isScissor)
-                    KillRubberBands(actor);
+                    SendMessage(actor, "disconnect");
                 WarpActor(actor, targetpos[0], targetpos[1], false);
                 state &= ~4; // release warping
             }
@@ -2284,7 +2284,7 @@
                 bool isScissor = to_bool(getDefaultedAttr("scissor", 
                         (server::EnigmaCompatibility >= 1.10) || server::GameCompatibility != GAMET_ENIGMA));
                 if (isScissor)
-                    KillRubberBands(actor);
+                    SendMessage(actor, "disconnect");
             }
         }
         state = OPEN;
@@ -2304,7 +2304,7 @@
             bool isScissor = to_bool(getDefaultedAttr("scissor", 
                     (server::EnigmaCompatibility >= 1.10) || server::GameCompatibility != GAMET_ENIGMA));
             if (isScissor)
-                KillRubberBands(actor);
+                SendMessage(actor, "disconnect");
         }
         state = OPEN;
         if (getAttr("autoclose").to_bool())
@@ -4135,7 +4135,7 @@
 
             if (id == ac_blackball || id == ac_whiteball) {
                 // Kill ALL rubberbands connected with the actor:
-                KillRubberBands (a);
+                SendMessage(a, "disconnect");
                 Actor *rotor = MakeActor (ac_rotor);
                 rotor->setAttr("mouseforce", Value (1.0));
                 rotor->setAttr("controllers", Value (iplayer+1));
@@ -4165,7 +4165,7 @@
     DEF_TRAITS(Drop, "it-drop", it_drop);
 }
 
-/* -------------------- RubberbandItem -------------------- */
+/* -------------------- Rubberband Item-------------------- */
 namespace
 {
     class RubberbandItem : public Item {
@@ -4173,46 +4173,35 @@
         DECL_TRAITS;
 
         ItemAction activate(Actor *a, GridPos p) {
-            // Default values for the rubberband:
-            double strength = getDefaultedAttr("strength", 10.0);
-            double length = getDefaultedAttr("length", 1.0);
-            double minlength = getDefaultedAttr("minlength", 0.0);
-
-            RubberBandData rbd;
-            rbd.strength = strength;
-            rbd.length = length;
-            rbd.minlength = minlength;
-
-            // Target to connect to, default: ""
-            std::string target(getAttr("target"));
-            
             // TODO: Multiple Targets!
             // TODO: Target for black and target for white marble?
             // TODO: MultiplayerGame: Defaulttarget is second actor!
 
+            // Get actor or stone with the name, given in "connect_to":
+            Object *anchor2 = getAttr("target");
+            
+            // Target does NOT exist, Drop Item
+            if (anchor2 == NULL)
+                return ITEM_DROP;
+                
             // The mode attribute "scissor" defines, if when using an it-rubberband,
             // other rubberbands to the actor will be cut of or not, true means they will. false is default.
             bool isScissor = to_bool(getAttr("scissor"));
 
-            // Get actor or stone with the name, given in "connect_to":
-            Actor *target_actor = dynamic_cast<Actor*>(GetNamedObject(target));
-            Stone *target_stone = dynamic_cast<Stone*>(GetNamedObject(target));
-
-            // Target does NOT exist, Drop Item
-            if((!target_actor)&&(!target_stone)) return ITEM_DROP;
-
             if (isScissor)
-                KillRubberBands (a);
+                SendMessage(a, "disconnect");
 
             sound_event ("rubberband");
-            if (target_actor) {
-                // It's not allowed to connect a rubberband to self.
-                if (target_actor != a)
-                    AddRubberBand (a,target_actor,rbd);
-                else
-                    return ITEM_DROP; }
-            else
-                AddRubberBand (a,target_stone,rbd);
+            
+            if (anchor2 != a) { // It's not allowed to connect a rubberband to self.
+                Object *obj = MakeObject("ot_rubberband");
+                obj->setAttr("anchor1", a);
+                obj->setAttr("anchor2", anchor2);
+                obj->setAttr("strength", getDefaultedAttr("strength", 10.0));
+                obj->setAttr("length", getDefaultedAttr("length", 1.0));
+                obj->setAttr("threshold", getDefaultedAttr("minlength", 0.0));
+                AddOther(dynamic_cast<Other *>(obj));
+            }
 
             return ITEM_KILL;
         }

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/lua.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -757,21 +757,25 @@
     Object *o2       = to_object(L, 2);
     Actor  *a2       = dynamic_cast<Actor*>(o2);
     Stone  *st       = dynamic_cast<Stone*>(o2);
-    RubberBandData d;
-    d.strength  = lua_tonumber (L, 3);
-    d.length    = lua_tonumber (L, 4);
-    d.minlength = lua_tonumber (L, 5);
 
     if (!a1)
         throwLuaError(L, "AddRubberBand: First argument must be an actor\n");
+
+    Object *obj = MakeObject("ot_rubberband");
+    obj->setAttr("anchor1", a1);
+    if (a2)
+        obj->setAttr("anchor2", a2);
+    else if (st)
+        obj->setAttr("anchor2", st);
     else {
-        if (a2)
-            AddRubberBand (a1, a2, d);
-        else if (st)
-            AddRubberBand (a1, st, d);
-        else
-            throwLuaError(L, "AddRubberBand: Second argument must be actor or stone\n");
+        obj->dispose();
+        throwLuaError(L, "AddRubberBand: Second argument must be actor or stone\n");
     }
+    obj->setAttr("strength", lua_tonumber (L, 3));
+    obj->setAttr("length", lua_tonumber (L, 4));
+    obj->setAttr("threshold", lua_tonumber (L, 5));
+    AddOther(dynamic_cast<Other *>(obj));
+
     return 0;
 }
 
@@ -1851,6 +1855,10 @@
             } else
                 DisposeObject(obj);
             break;
+        case Object::OTHER :
+            if (x < 0)
+                AddOther(dynamic_cast<Other *>(obj));
+            break;
         default :
             throwLuaError(L, "World set of unknown object");
     }
@@ -2180,6 +2188,17 @@
     return 1;
 }
 
+static int addOther(lua_State *L) {
+    // world, table | tile
+    if (is_tile(L, 2)  || is_table(L, 2)) {
+        if (is_table(L, -1))
+            setObjectByTable(L, -1, -1);
+        else // is tile
+            setObjectByTile(L, -1, -1);
+    }
+    return 0;
+}
+
 static int shuffleOxyd(lua_State *L) {
     // world, {table}  -- table with 1=(group|obj|name), [2=(group|obj|name], 
     //                               min=[number], max=[number], circular=true, linear=true
@@ -2721,6 +2740,7 @@
     {createWorld,                   "create"},
     {registerWorldUserMethod,       "_register"},
     {evaluateKey,                   "_evaluate"},
+    {addOther,                      "add"},
     {getFloor,                      "fl"},
     {getItem,                       "it"},
     {getStone,                      "st"},

Added: trunk/src/others/Other.cc
===================================================================
--- trunk/src/others/Other.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/Other.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "others/Other.hh"
+//#include "main.hh"
+
+namespace enigma {
+    Other::Other() {
+    }
+
+    Object::ObjectType Other::getObjectType() const {
+        return Object::OTHER;
+    }
+
+    void Other::postAddition() {
+    }
+    
+    void Other::preRemoval() {
+    }
+    
+    void Other::tick(double dt) {
+    }
+} // namespace enigma


Property changes on: trunk/src/others/Other.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/others/Other.hh
===================================================================
--- trunk/src/others/Other.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/Other.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef OTHER_HH_INCLUDED
+#define OTHER_HH_INCLUDED
+
+#include "StateObject.hh"
+
+/* -------------------- Other -------------------- */
+
+
+namespace enigma {
+    
+    class Other : public StateObject {
+        
+    public:
+        Other();
+        
+        // Object interface
+        virtual Object::ObjectType getObjectType() const;
+        
+        virtual void postAddition();
+        virtual void preRemoval();
+        virtual void tick(double dt);
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/others/Other.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/others/Rubberband.cc
===================================================================
--- trunk/src/others/Rubberband.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/Rubberband.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,182 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "others/Rubberband.hh"
+#include "errors.hh"
+#include "main.hh"
+#include "world.hh"
+
+namespace enigma {
+    Rubberband::Rubberband() {
+    }
+    
+    std::string Rubberband::getClass() const {
+        return "ot_rubberband";
+    }
+
+    void Rubberband::setAttr(const std::string &key, const Value &val) {
+        if (key == "anchor1") {
+            Actor *old = anchor1;
+            anchor1 = dynamic_cast<Actor *>((Object *)val);
+            ASSERT(anchor1 != NULL, XLevelRuntime, "Rubberband: 'anchor1' is no actor");
+            ASSERT(anchor1 != anchor2.ac, XLevelRuntime, "Rubberband: 'anchor1' is identical to 'anchor2'");
+            switchAnchor(old, anchor1, (objFlags & OBJBIT_STONE) ? (Object *)anchor2.st : (Object *)anchor2.ac);
+        } else if (key == "anchor2") {
+            Object * old = (objFlags & OBJBIT_STONE) ? (Object *)anchor2.st : (Object *)anchor2.ac;
+            Object * obj = val;
+            if (obj != NULL && obj->getObjectType() == Object::ACTOR) {
+                anchor2.ac = dynamic_cast<Actor *>((Object *)val);
+                ASSERT(anchor1 != anchor2.ac, XLevelRuntime, "Rubberband: 'anchor1' is identical to 'anchor2'");
+                objFlags &= ~OBJBIT_STONE;
+                switchAnchor(old, anchor2.ac, anchor1);
+            } else if (obj != NULL && obj->getObjectType() == Object::STONE) {
+                anchor2.st = dynamic_cast<Stone *>((Object *)val);
+                objFlags |= OBJBIT_STONE;
+                switchAnchor(old, anchor2.st, anchor1);
+            } else
+                ASSERT(false, XLevelRuntime, "Rubberband: 'anchor2' is neither actor nor stone");
+        } else if (key == "strength") {
+            strength = val;
+        } else if (key == "length") {
+            outerThreshold = val;
+            ASSERT(outerThreshold >= 0, XLevelRuntime, "Rubberband: length is negative");
+        } else if (key == "threshold") {
+            innerThreshold = val;
+            ASSERT(innerThreshold >= 0, XLevelRuntime, "Rubberband: inner threshold is negative");
+        } else if (key == "max") {
+            maxLength = val;
+            ASSERT(minLength >= 0, XLevelRuntime, "Rubberband: max length is negative");
+        } else if (key == "min") {
+            minLength = val;
+            ASSERT(maxLength >= 0, XLevelRuntime, "Rubberband: min length is negative");
+        }
+        Other::setAttr(key, val);
+    }
+    
+    Value Rubberband::getAttr(const std::string &key) const {
+        if (key == "anchor1") {
+            return anchor1;
+        } else if (key == "anchor2") {
+            return (objFlags & OBJBIT_STONE) ? (Object *)anchor2.st : (Object *)anchor2.ac;
+        } else if (key == "strength") {
+            return strength;
+        } else if (key == "length") {
+            return outerThreshold;
+        } else if (key == "threshold") {
+            return innerThreshold;
+        } else if (key == "max") {
+            return maxLength;
+        } else if (key == "min") {
+            return minLength;
+        }
+        return Other::getAttr(key);
+    }
+    
+    void Rubberband::postAddition() {
+        model = display::AddRubber(anchor1->get_pos(), posAnchor2(), 240, 140, 20);  // orange
+    }
+    
+    void Rubberband::preRemoval() {
+        model.kill();
+        switchAnchor(anchor1, NULL, (objFlags & OBJBIT_STONE) ? (Object *)anchor2.st : (Object *)anchor2.ac);
+        switchAnchor((objFlags & OBJBIT_STONE) ? (Object *)anchor2.st : (Object *)anchor2.ac, NULL, anchor1);        
+    }
+    
+    void Rubberband::tick(double dt) {
+        model.update_first(anchor1->get_pos());
+        model.update_second(posAnchor2());
+    }
+    
+    void Rubberband::applyForces(double dt) {
+        ecl::V2 v = posAnchor2() - anchor1->get_pos();
+        double vv = ecl::length(v);
+        ecl::V2 force;
+        
+        if (vv == 0) {
+            force = V2(0, 0);
+        } else if (maxLength > 0 && vv > maxLength) {
+            ActorInfo *ai = anchor1->get_actorinfo();
+            ecl::V2 vn = normalize(v);
+            double av = ai->vel * vn;
+            if (av > -0.05) 
+                av = -0.05;
+                
+            force = - 1 * av * vn / dt * ai->mass;
+            force /= 6;
+        } else if (minLength > 0 && vv < minLength) {
+            
+        } else if (vv < innerThreshold) {
+            force = v * strength * (vv - innerThreshold)/vv;
+            force /= 6;
+        } else if (vv > outerThreshold) {
+            force = v * strength * (vv - outerThreshold)/vv;
+            force /= 6;
+        }
+        
+        anchor1->add_force(force);
+        if (!(objFlags & OBJBIT_STONE))
+            anchor2.ac->add_force(-force);
+    }
+    
+    ecl::V2 Rubberband::posAnchor2() {
+        return (objFlags & OBJBIT_STONE) ? anchor2.st->getOwnerPos().center() : anchor2.ac->get_pos();
+    }
+    
+    void Rubberband::switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor) {
+        if (oldAnchor != NULL) {
+            ObjectList olist = oldAnchor->getAttr("rubbers");
+            olist.remove(this);
+            oldAnchor->setAttr("rubbers", olist);
+            if (otherAnchor != NULL) {
+                // remove both anchors from each others fellows list
+                olist = oldAnchor->getAttr("fellows");
+                ObjectList::iterator it = find(olist.begin(), olist.end(), otherAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                oldAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                it = find(olist.begin(), olist.end(), oldAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                otherAnchor->setAttr("fellows", olist);
+            }            
+        }
+        if (newAnchor != NULL) {
+            ObjectList olist = newAnchor->getAttr("rubbers");
+            olist.push_back(this);
+            newAnchor->setAttr("rubbers", olist);
+            if (otherAnchor != NULL) {
+                // add both anchors to each others fellows list
+                olist = newAnchor->getAttr("fellows");
+                olist.push_back(otherAnchor);
+                newAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                olist.push_back(newAnchor);
+                otherAnchor->setAttr("fellows", olist);
+            }
+        }
+    }
+
+    BOOT_REGISTER_START
+        BootRegister(new Rubberband(), "ot_rubberband");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/others/Rubberband.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/others/Rubberband.hh
===================================================================
--- trunk/src/others/Rubberband.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/Rubberband.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,73 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef RUBBERBAND_HH_INCLUDED
+#define RUBBERBAND_HH_INCLUDED
+
+#include "others/Other.hh"
+#include "actors.hh"
+#include "display.hh"
+#include "stones.hh"
+
+/* -------------------- Other -------------------- */
+
+
+namespace enigma {
+    
+    class Rubberband : public Other {
+        CLONEOBJ(Rubberband)
+
+        enum ObjectPrivatFlagsBits {
+            OBJBIT_STONE      =  1<<24   ///< anchor2 is a stone
+        };
+
+    public:
+        Rubberband();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
+        virtual Value getAttr(const std::string &key) const;
+        
+        // Other interface
+        virtual void postAddition();
+        virtual void preRemoval();
+        virtual void tick(double dt);
+        
+        void applyForces(double dt);
+        
+    private:
+        Actor * anchor1;
+        union {
+            Actor * ac;
+            Stone * st;
+        } anchor2;
+        double strength;
+        double outerThreshold;
+        double innerThreshold;
+        double minLength;
+        double maxLength;
+        display::RubberHandle model;
+        
+        ecl::V2 posAnchor2();
+        void switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor);
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/others/Rubberband.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/others/WireControl.cc
===================================================================
--- trunk/src/others/WireControl.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/WireControl.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,116 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "others/WireControl.hh"
+#include "errors.hh"
+#include "main.hh"
+#include "world.hh"
+
+namespace enigma {
+    WireControl::WireControl() {
+    }
+    
+    std::string WireControl::getClass() const {
+        return "ot_wirecontrol";
+    }
+
+    void WireControl::setAttr(const std::string &key, const Value &val) {
+        if (key == "anchor1") {
+            Stone *old = anchor1;
+            anchor1 = dynamic_cast<Stone *>((Object *)val);
+            ASSERT(anchor1 != NULL, XLevelRuntime, "WireControl: 'anchor1' is no stone");
+            ASSERT(anchor1 != anchor2, XLevelRuntime, "WireControl: 'anchor1' is identical to 'anchor2'");
+            switchAnchor(old, anchor1, anchor2);
+        } else if (key == "anchor2") {
+            Stone * old = anchor2;
+            anchor2 = dynamic_cast<Stone *>((Object *)val);
+            ASSERT(anchor2 != NULL, XLevelRuntime, "WireControl: 'anchor2' is no stone");
+            ASSERT(anchor2 != anchor1, XLevelRuntime, "WireControl: 'anchor1' is identical to 'anchor2'");
+            switchAnchor(old, anchor2, anchor1);
+        }
+        Other::setAttr(key, val);
+    }
+    
+    Value WireControl::getAttr(const std::string &key) const {
+        if (key == "anchor1") {
+            return anchor1;
+        } else if (key == "anchor2") {
+            return anchor2;
+        }
+        return Other::getAttr(key);
+    }
+    
+    void WireControl::postAddition() {
+        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 200, 50, 150);    // purple
+    }
+    
+    void WireControl::preRemoval() {
+        model.kill();
+        switchAnchor(anchor1, NULL, anchor2);
+        switchAnchor(anchor2, NULL, anchor1);        
+    }
+    
+    void WireControl::tick(double dt) {  // TODO maybe we should let the stones inform the wires on every move
+        model.update_first(anchor1->getOwnerPos().center());
+        model.update_second(anchor2->getOwnerPos().center());
+    }
+    
+    
+    void WireControl::switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor) {
+        if (oldAnchor != NULL) {
+            ObjectList olist = oldAnchor->getAttr("wires");
+            olist.remove(this);
+            oldAnchor->setAttr("wires", olist);
+            if (otherAnchor != NULL) {
+                // remove both anchors from each others fellows list
+                olist = oldAnchor->getAttr("fellows");
+                ObjectList::iterator it = find(olist.begin(), olist.end(), otherAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                oldAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                it = find(olist.begin(), olist.end(), oldAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                otherAnchor->setAttr("fellows", olist);
+            }            
+        }
+        if (newAnchor != NULL) {
+            ObjectList olist = newAnchor->getAttr("wires");
+            olist.push_back(this);
+            newAnchor->setAttr("wires", olist);
+            if (otherAnchor != NULL) {
+                // add both anchors to each others fellows list
+                olist = newAnchor->getAttr("fellows");
+                olist.push_back(otherAnchor);
+                newAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                olist.push_back(newAnchor);
+                otherAnchor->setAttr("fellows", olist);
+            }
+        }
+    }
+
+    BOOT_REGISTER_START
+        BootRegister(new WireControl(), "ot_wirecontrol");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/others/WireControl.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/others/WireControl.hh
===================================================================
--- trunk/src/others/WireControl.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/others/WireControl.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef WIRECONTROL_HH_INCLUDED
+#define WIRECONTROL_HH_INCLUDED
+
+#include "others/Other.hh"
+#include "display.hh"
+#include "stones.hh"
+
+/* -------------------- Other -------------------- */
+
+
+namespace enigma {
+    
+    class WireControl : public Other {
+        CLONEOBJ(WireControl)
+
+    public:
+        WireControl();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
+        virtual Value getAttr(const std::string &key) const;
+        
+        // Other interface
+        virtual void postAddition();
+        virtual void preRemoval();
+        virtual void tick(double dt);
+        
+    private:
+        Stone * anchor1;
+        Stone * anchor2;
+        display::RubberHandle model;
+        
+        void switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor);
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/others/WireControl.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/oxyd.cc
===================================================================
--- trunk/src/oxyd.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/oxyd.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -631,19 +631,24 @@
     for (int i=0; i<num_rubberbands; ++i) {
         const RubberBand &rb = level.getRubberBand(game_mode, i);
 
-        Actor *actor = get_actor (rb.getFirstEndMarble());
-        RubberBandData rbd;
-        rbd.length = rb.getNaturalLength() / 32.0;
-        rbd.strength = rb.getForce() / 60.0;
+        Object *anchor2 = NULL;
         if (rb.isSecondEndMarble()) {
-            Actor *actor2 = get_actor (rb.getSecondEndMarble());
-            AddRubberBand (actor, actor2, rbd);
+            anchor2 = get_actor (rb.getSecondEndMarble());
         }
         else {
             GridPos p(rb.getSecondEndPieceX(), rb.getSecondEndPieceY());
-            if (GetStone(p) != NULL) // Fix for MagnumGold Level #108
-                AddRubberBand (actor, GetStone(p), rbd); 
+            anchor2 = GetStone(p);
+            if (anchor2 == NULL) // Fix for MagnumGold Level #108
+                continue;
         }
+        
+        Object *obj = MakeObject("ot_rubberband");
+        obj->setAttr("anchor1", get_actor(rb.getFirstEndMarble()));
+        obj->setAttr("anchor2", anchor2);
+        obj->setAttr("strength", rb.getForce() / 60.0);
+        obj->setAttr("length", rb.getNaturalLength() / 32.0);
+        obj->setAttr("threshold", 0.0);
+        AddOther(dynamic_cast<Other *>(obj));
     }
 }
 

Modified: trunk/src/player.cc
===================================================================
--- trunk/src/player.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/player.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -231,7 +231,7 @@
         for (unsigned j=0; j<players[i].actors.size(); ++j) {
             Actor *a = players[i].actors[j];
             SendMessage(a, "disappear");
-            KillRubberBands (a);
+            SendMessage(a, "disconnect");
         }
     }
 }
@@ -586,7 +586,7 @@
                 kind[0] = 'i';
 
             if (Item *item = MakeItem(kind.c_str())) {
-                KillRubberBands(stone);
+                SendMessage(stone, "disconnect");
                 DisposeObject (stone);
                 inv->add_item(item);
                 player::RedrawInventory(inv);

Modified: trunk/src/stones/BoulderStone.cc
===================================================================
--- trunk/src/stones/BoulderStone.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/BoulderStone.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -150,7 +150,7 @@
         Stone::on_move();
     }
     
-    void BoulderStone::on_impulse(const Impulse& impulse) {
+    void BoulderStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
         if (state == FALLING)
             return;
 

Modified: trunk/src/stones/BoulderStone.hh
===================================================================
--- trunk/src/stones/BoulderStone.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/BoulderStone.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -68,7 +68,7 @@
         virtual void actor_hit(const StoneContact &sc);
         virtual void on_floor_change();
         virtual void on_move();
-        virtual void on_impulse(const Impulse& impulse);
+        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
 //        virtual const char *collision_sound();
 
     private:

Modified: trunk/src/stones/ChessStone.cc
===================================================================
--- trunk/src/stones/ChessStone.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/ChessStone.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -141,7 +141,7 @@
         }
     }
 
-    void ChessStone::on_impulse(const Impulse& impulse) {
+    void ChessStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
     }
     
     bool ChessStone::is_removable() const {    // Interface for st-swap and st-pull

Modified: trunk/src/stones/ChessStone.hh
===================================================================
--- trunk/src/stones/ChessStone.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/ChessStone.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -86,7 +86,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse);
+        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
         virtual bool is_removable() const;
         virtual void on_floor_change();
 

Modified: trunk/src/stones/LightPassengerStone.cc
===================================================================
--- trunk/src/stones/LightPassengerStone.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/LightPassengerStone.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -167,7 +167,7 @@
         }
     }
 
-    void LightPassengerStone::on_impulse(const Impulse& impulse) {
+    void LightPassengerStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
         Actor *a = dynamic_cast<Actor*>(impulse.sender);
         if (a == NULL && ((objFlags & OBJBIT_LIGHTNEWDIRS) == NODIRBIT || state == OFF 
                 || server::GameCompatibility != GAMET_ENIGMA))

Modified: trunk/src/stones/LightPassengerStone.hh
===================================================================
--- trunk/src/stones/LightPassengerStone.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/LightPassengerStone.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -68,7 +68,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse);
+        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
 
         // TimeHandler interface
         virtual void alarm();

Modified: trunk/src/stones/RotatorStone.cc
===================================================================
--- trunk/src/stones/RotatorStone.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/RotatorStone.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -116,7 +116,7 @@
             maybe_push_stone(sc);
     }
 
-    void RotatorStone::on_impulse(const Impulse& impulse) {
+    void RotatorStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
         if (objFlags & OBJBIT_MOVABLE) {
             move_stone(impulse.dir);
         }

Modified: trunk/src/stones/RotatorStone.hh
===================================================================
--- trunk/src/stones/RotatorStone.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones/RotatorStone.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -64,7 +64,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse);
+        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
         virtual void on_move();
         virtual FreezeStatusBits get_freeze_bits();
 

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -149,9 +149,20 @@
 void Stone::actor_touch(const StoneContact &sc) {
 }
 
-void Stone::on_impulse(const Impulse& impulse) {
-    if (is_movable())
+void Stone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+    if (is_movable()) {
         move_stone(impulse.dir);
+        if (!isWireImpulse) {
+            ObjectList olist = getAttr("fellows");
+            for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it) {
+                Stone *fellow = dynamic_cast<Stone *>(*it);
+                if (fellow != NULL) {
+                    Impulse wireImpulse(this, fellow->get_pos(), impulse.dir);
+                    fellow->on_impulse(wireImpulse, true);
+                }
+            }
+        }
+    }
 }
 
 const char * Stone::collision_sound() {
@@ -455,6 +466,7 @@
     GridPos pos = stone->get_pos();
     model       = display::YieldModel(GridLoc(GRID_STONES, pos));
     YieldStone(pos);
+    st->setOwnerPos(pos);   // the stone remains owned at the old position
 }
 
 YieldedGridStone::~YieldedGridStone() 

Modified: trunk/src/stones.hh
===================================================================
--- trunk/src/stones.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -164,6 +164,7 @@
     };
         
     class Stone : public GridObject {
+    
     public:
         Stone();
         Stone(const char *kind);
@@ -216,7 +217,7 @@
         
         virtual void   on_move();
         virtual void   on_floor_change() {}
-        virtual void   on_impulse(const Impulse& impulse);
+        virtual void   on_impulse(const Impulse& impulse, bool isWireImpulse=false);
 
     protected:
         virtual Object::ObjectType getObjectType() const {return Object::STONE;}

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones_complex.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -101,7 +101,7 @@
             if (state == IDLE)
                 maybe_push_stone(sc);
         }
-        void on_impulse(const Impulse& impulse);
+        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
         bool is_removable() const {
             return state == IDLE;
         }
@@ -189,7 +189,7 @@
     change_state(IDLE);
 }
 
-void PullStone::on_impulse(const Impulse& impulse) 
+void PullStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
 {
     if (state != IDLE)
         return;
@@ -561,7 +561,7 @@
         virtual Value message(const Message &m);
 
         void on_creation (GridPos p);
-        void on_impulse (const Impulse& impulse);
+        void on_impulse (const Impulse& impulse, bool isWireImpulse=false);
 
         bool is_floating() const;
 
@@ -906,7 +906,7 @@
     return ConnectiveStone::message(m);
 }
 
-void PuzzleStone::on_impulse(const Impulse& impulse) 
+void PuzzleStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
 {
 //    if (!oxyd1_compatible() && state == IDLE) {
     if (state == IDLE) {
@@ -1362,7 +1362,7 @@
                 SendMessage(it, "noshogun");
         }
 
-        void on_impulse(const Impulse& impulse);
+        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
 
         void init_model() {
             set_model(ecl::strf("st-shogun%d", int(get_holes())));
@@ -1408,7 +1408,7 @@
     }
 }
 
-void ShogunStone::on_impulse(const Impulse& impulse) {
+void ShogunStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
     GridPos destpos     = move(get_pos(), impulse.dir);
     Holes holes         = get_holes();
     Holes smallest      = smallest_hole(holes);
@@ -1487,7 +1487,7 @@
 
         void change_state(State st);
 
-        virtual void on_impulse(const Impulse& impulse) {
+        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false) {
             incoming = impulse.dir;
             change_state(PULSING);
         }
@@ -1698,7 +1698,7 @@
             }
         }
 
-        void on_impulse(const Impulse& impulse) {
+        void on_impulse(const Impulse& impulse, bool isWireImpulse) {
             State oldstate = state;
 
             if (move_stone(impulse.dir)) {
@@ -1753,7 +1753,7 @@
         // Private methods
         DirectionBits arms_present() const;
         bool          no_stone (int xoff, int yoff) const;
-        void set_arm (Direction dir, RBI_vector &rubs);
+        void set_arm (Direction dir);
         void remove_arms (DirectionBits arms);
         void rotate_arms (DirectionBits arms, bool clockwise);
         void handleActorsAndItems(bool clockwise, Object *impulse_sender);
@@ -1798,7 +1798,7 @@
         virtual Direction get_dir() const = 0;
 
         void actor_hit(const StoneContact &sc);
-        void on_impulse(const Impulse& impulse);
+        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
 
         Turnstile_Pivot_Base *get_pivot() {
             Stone *st = GetStone (move (get_pos(), reverse(get_dir())));
@@ -1849,7 +1849,7 @@
 
 /* -------------------- Turnstile_Arm -------------------- */
 
-void Turnstile_Arm::on_impulse(const Impulse& impulse) {
+void Turnstile_Arm::on_impulse(const Impulse& impulse, bool isWireImpulse) {
     enum Action { ROTL, ROTR, stay };
     static Action actions[4][4] = {
         { stay, ROTL, stay, ROTR }, // west arm
@@ -1944,33 +1944,33 @@
 void Turnstile_Pivot_Base::rotate_arms (DirectionBits arms, bool clockwise) {
     GridPos p = get_pos();
 
-    RBI_vector Nrubs;
-    RBI_vector Erubs;
-    RBI_vector Srubs;
-    RBI_vector Wrubs;
+//    RBI_vector Nrubs;
+//    RBI_vector Erubs;
+//    RBI_vector Srubs;
+//    RBI_vector Wrubs;
 
-    if (arms & NORTHBIT) GiveRubberBands(GetStone(move (p, NORTH)), Nrubs);
-    if (arms & EASTBIT) GiveRubberBands(GetStone(move (p, EAST)), Erubs);
-    if (arms & SOUTHBIT) GiveRubberBands(GetStone(move (p, SOUTH)), Srubs);
-    if (arms & WESTBIT) GiveRubberBands(GetStone(move (p, WEST)), Wrubs);
+//    if (arms & NORTHBIT) GiveRubberBands(GetStone(move (p, NORTH)), Nrubs);
+//    if (arms & EASTBIT) GiveRubberBands(GetStone(move (p, EAST)), Erubs);
+//    if (arms & SOUTHBIT) GiveRubberBands(GetStone(move (p, SOUTH)), Srubs);
+//    if (arms & WESTBIT) GiveRubberBands(GetStone(move (p, WEST)), Wrubs);
 
     remove_arms(arms);
 
     if (clockwise) {
-	if (arms & NORTHBIT) set_arm(EAST, Nrubs);
-	if (arms & EASTBIT)  set_arm(SOUTH, Erubs);
-	if (arms & SOUTHBIT) set_arm(WEST, Srubs);
-	if (arms & WESTBIT)  set_arm(NORTH, Wrubs);
+	if (arms & NORTHBIT) set_arm(EAST);
+	if (arms & EASTBIT)  set_arm(SOUTH);
+	if (arms & SOUTHBIT) set_arm(WEST);
+	if (arms & WESTBIT)  set_arm(NORTH);
     }
     else {
-	if (arms & NORTHBIT) set_arm(WEST, Nrubs);
-	if (arms & EASTBIT)  set_arm(NORTH, Erubs);
-	if (arms & SOUTHBIT) set_arm(EAST, Srubs);
-	if (arms & WESTBIT)  set_arm(SOUTH, Wrubs);
+	if (arms & NORTHBIT) set_arm(WEST);
+	if (arms & EASTBIT)  set_arm(NORTH);
+	if (arms & SOUTHBIT) set_arm(EAST);
+	if (arms & WESTBIT)  set_arm(SOUTH);
     }
 }
 
-void Turnstile_Pivot_Base::set_arm (Direction dir, RBI_vector &rubs) {
+void Turnstile_Pivot_Base::set_arm (Direction dir) {
     const char *names[4] = { "st-turnstile-w", "st-turnstile-s",
                              "st-turnstile-e", "st-turnstile-n" };
     Stone   *st   = MakeStone(names[dir]);
@@ -1980,9 +1980,9 @@
     if (Item *it = GetItem(newp))
         it->on_stonehit(st);
 
-    if (!rubs.empty())
-	for (RBI_vector::iterator i = rubs.begin(); i != rubs.end(); ++i)
-	    AddRubberBand (i->act, st, i->data);
+//    if (!rubs.empty())
+//	for (RBI_vector::iterator i = rubs.begin(); i != rubs.end(); ++i)
+//	    AddRubberBand (i->act, st, i->data);
 }
 
 bool Turnstile_Pivot_Base::rotate(bool clockwise, Object *impulse_sender) {

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/stones_simple.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -393,7 +393,7 @@
         void on_removal(GridPos p);
 
         // Stone interface
-        void on_impulse (const Impulse &impulse);
+        void on_impulse (const Impulse &impulse, bool isWireImpulse=false);
         bool is_removable() const { return state == IDLE; }
         void actor_hit (const StoneContact &sc);
 
@@ -460,7 +460,7 @@
 //    sound_event ("moveslow");
 }
 
-void SwapStone::on_impulse(const Impulse& impulse) 
+void SwapStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
 {
     if (state == IDLE) {
         GridPos oldp = get_pos();
@@ -728,7 +728,7 @@
 //             else
 //                 maybe_push_stone (sc);
         }
-        void on_impulse(const Impulse& impulse) {
+        void on_impulse(const Impulse& impulse, bool isWireImpulse=false) {
             move_stone(impulse.dir);
         }
 
@@ -1148,7 +1148,7 @@
         void actor_hit(const StoneContact &sc) {
             sound_event("scissors");
             set_anim("st-scissors-snip");
-            if (KillRubberBands (sc.actor))
+            if (SendMessage(sc.actor, "disconnect").to_bool())
                 performAction(false);
         }
         void animcb() {
@@ -1187,31 +1187,37 @@
         DECL_TRAITS;
 
         void actor_hit(const StoneContact &sc) {
-            double strength = getDefaultedAttr("strength", 10.0);
-            double length = getDefaultedAttr("length", 1.0);
-            double minlength = getAttr("minlength");
-
-            RubberBandData rbd;
-            rbd.strength = strength;
-            rbd.length = length;
-            rbd.minlength = minlength;
-
             // The mode attribute "scissor" defines, if when touching an st-rubberband,
             // other rubberbands to the actor will be cut of or not, true means they will. true is default.
             bool isScissor = to_bool(getDefaultedAttr("scissor", true));
 
-            if (!HasRubberBand (sc.actor, this)) {
+//            if (!HasRubberBand (sc.actor, this)) {
+            bool alreadyConnected = false;
+            ObjectList rubbers = sc.actor->getAttr("rubbers");
+            for (ObjectList::iterator it =  rubbers.begin(); it != rubbers.end(); ++it) {
+                if (((Object *)(*it)->getAttr("anchor2")) == this) {
+                    alreadyConnected = true;
+                    break;
+                }
+            }
+            if (!alreadyConnected) {
                 sound_event ("rubberband");
                 if (isScissor) {
-                    KillRubberBand (sc.actor, (Stone*)0);
+                    SendMessage(sc.actor, "disconnect");
                 }
-                AddRubberBand (sc.actor, this, rbd);
+                Object *obj = MakeObject("ot_rubberband");
+                obj->setAttr("anchor1", sc.actor);
+                obj->setAttr("anchor2", this);
+                obj->setAttr("strength", getDefaultedAttr("strength", 10.0));
+                obj->setAttr("length", getDefaultedAttr("length", 1.0));
+                obj->setAttr("threshold", getAttr("minlength"));
+                AddOther(dynamic_cast<Other *>(obj));
             }
             // if (player::wielded_item_is (sc.actor, "it-magicwand"))
             maybe_push_stone (sc);
         }
 
-        void on_impulse (const Impulse& impulse) {
+        void on_impulse (const Impulse& impulse, bool isWireImpulse=false) {
             Actor *a = dynamic_cast<Actor *> (impulse.sender);
             if (a && player::WieldedItemIs (a, "it-magicwand"))
                 move_stone(impulse.dir);

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/world.cc	2008-07-02 22:27:58 UTC (rev 1204)
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2002,2003,2004,2005 Daniel Heck
- * Copyright (C) 2007 Ronald Lamprecht
+ * Copyright (C) 2007,2008 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -92,85 +92,6 @@
         message (theMessage), value (theValue), sender (theSender) {
 }
 
-/* -------------------- RubberBandData -------------------- */
-
-RubberBandData::RubberBandData () {
-    strength = 1;
-    length = 2;
-    minlength = 0;
-}
-
-RubberBandData::RubberBandData (const RubberBandData &x) {
-    strength  = x.strength;
-    length    = x.length;
-    minlength = x.minlength;
-}
-
-/* -------------------- RubberBand -------------------- */
-
-RubberBand::RubberBand (Actor *a1, Actor *a2, const RubberBandData &d)
-: actor(a1), actor2(a2), stone(0), model(0), data (d)
-{
-    ASSERT(actor, XLevelRuntime, "RubberBand: no actor defined");
-    ASSERT(d.length >= 0, XLevelRuntime, "RubberBand: length negative");
-	ASSERT(d.length >= d.minlength, XLevelRuntime, "RubberBand: minlength > length");
-    model = display::AddRubber(get_p1(),get_p2());
-}
-
-RubberBand::RubberBand (Actor *a1, Stone *st, const RubberBandData &d)
-: actor(a1), actor2(0), stone(st), model(0), data (d)
-{
-    ASSERT(actor, XLevelRuntime, "RubberBand: no actor defined");
-    ASSERT(d.length >= 0, XLevelRuntime, "RubberBand: length negative");
-    ASSERT(d.length >= d.minlength, XLevelRuntime, "RubberBand: minlength > length");
-    model = display::AddRubber(get_p1(), get_p2());
-}
-
-RubberBand::~RubberBand() {
-    model.kill();
-}
-
-void RubberBand::apply_forces ()
-{
-    V2 v = get_p2()-get_p1();
-    double vv = ecl::length(v);
-    V2 force;
-    
-    if (vv == 0) {
-        force = V2(0, 0);
-    } else if (vv < data.minlength) {
-        force = v*data.strength*(vv-data.minlength)/vv;
-        force /= 6;
-    } else if (vv > data.length) {
-        force = v*data.strength*(vv-data.length)/vv;
-        force /= 6;
-    }
-    
-    actor->add_force(force);
-    if (actor2)
-        actor2->add_force(-force);
-}
-
-V2 RubberBand::get_p1() const
-{
-    return V2(actor->get_pos()[0], actor->get_pos()[1]);
-}
-
-V2 RubberBand::get_p2() const
-{
-    if (!stone)
-        return V2(actor2->get_pos()[0], actor2->get_pos()[1]);
-    else
-        return stone->get_pos().center();
-}
-
-void RubberBand::tick (double /* dtime */) 
-{
-    model.update_first (get_p1());
-    model.update_second (get_p2());
-}
-
-
 /* -------------------- Field -------------------- */
 
 Field::Field()
@@ -311,7 +232,11 @@
 {
     fields = FieldArray(0,0);
     for_each(actorlist.begin(), actorlist.end(), mem_fun(&Actor::dispose));
-    delete_sequence (m_rubberbands.begin(), m_rubberbands.end());
+    while (!others.empty()) {
+        Other *ot = others.back();
+        others.pop_back();
+        ot->dispose();
+    }
 }
 
 bool World::is_border(const GridPos &p) {
@@ -1346,8 +1271,9 @@
             a->move();         // 'move' nevertheless, to pick up items etc
             a->think(dtime); 
         }
-        for_each (m_rubberbands.begin(), m_rubberbands.end(), 
-                  mem_fun(&RubberBand::apply_forces));
+        for (RubberbandList::iterator rit = rubberbands.begin(); rit != rubberbands.end(); ++rit) {
+            (*rit)->applyForces(dt);
+        }    
 
         rest_time -= dt;
     }
@@ -1682,104 +1608,6 @@
 }
 
 
-/* -------------------- Rubber bands -------------------- */
-
-void AddRubberBand (Actor *a, Stone *st, const RubberBandData &d)
-{
-    level->m_rubberbands.push_back(new RubberBand (a, st, d));
-}
-
-void AddRubberBand (Actor *a, Actor *a2, const RubberBandData &d)
-{
-    RubberBandData rbd (d);
-    rbd.length = ecl::Max (d.length, get_radius(a) + get_radius(a2));
-    level->m_rubberbands.push_back(new RubberBand (a, a2, rbd));
-}
-
-bool KillRubberBands (Actor *a)
-{
-    bool didKill = false;
-    for (unsigned i=0; i<level->m_rubberbands.size(); ) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_actor() == a || r.get_actor2() == a) {
-            delete &r;
-            level->m_rubberbands.erase(level->m_rubberbands.begin()+i);
-            didKill = true;
-            continue;       // don't increment i
-        }
-        ++i;
-    }
-    return didKill;
-}
-
-
-void KillRubberBand (Actor *a, Stone *st)
-{
-    ASSERT(a, XLevelRuntime, "KillRubberBand: no actor attached");
-    for (unsigned i=0; i<level->m_rubberbands.size(); ) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_actor() == a && r.get_stone() != 0)
-            if (r.get_stone()==st || st==0) {
-                delete &r;
-                level->m_rubberbands.erase(level->m_rubberbands.begin()+i);
-                continue;       // don't increment i
-            }
-        ++i;
-    }
-}
-
-void KillRubberBand (Actor *a, Actor *a2)
-{
-    ASSERT(a, XLevelRuntime, "KillRubberBand: no actor attached");
-    for (unsigned i=0; i<level->m_rubberbands.size(); ) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_actor() == a && r.get_actor2() != 0)
-            if (r.get_actor2()==a2 || a2==0) {
-                delete &r;
-                level->m_rubberbands.erase(level->m_rubberbands.begin()+i);
-                continue;       // don't increment i
-            }
-        ++i;
-    }
-}
-
-void KillRubberBands (Stone *st)
-{
-   for (unsigned i=0; i<level->m_rubberbands.size(); ) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_stone() != 0 && r.get_stone()==st) {
-            delete &r;
-            level->m_rubberbands.erase(level->m_rubberbands.begin()+i);
-            continue;       // don't increment i
-        }
-        ++i;
-    }
-}
-
-void GiveRubberBands (Stone *st, vector<Rubber_Band_Info> &rubs) {
-   for (unsigned i=0; i<level->m_rubberbands.size(); ) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_stone() == st) {
-            Rubber_Band_Info rbi;
-            rbi.act = r.get_actor();
-            rbi.data = r.get_data();
-            rubs.push_back(rbi);
-        }
-        ++i;
-    }
-}
-
-bool HasRubberBand (Actor *a, Stone *st)
-{
-    for (unsigned i=0; i<level->m_rubberbands.size(); ++i) {
-        RubberBand &r = *level->m_rubberbands[i];
-        if (r.get_actor() == a && r.get_stone() == st)
-            return true;
-    }
-    return false;
-}
-
-
 /* -------------------- Signals, Messages, Actions -------------------- */
 
 void AddSignal (const GridLoc &srcloc, const GridLoc &dstloc, const string &msg) {
@@ -2030,6 +1858,32 @@
 }
 
 
+/* -------------------- Other manipulation -------------------- */
+
+void AddOther(Other *o) {
+    level->others.push_back(o);
+    Rubberband * rb = dynamic_cast<Rubberband *>(o);
+    if (rb != NULL)
+        level->rubberbands.push_back(rb);
+    o->postAddition();
+}
+
+void KillOther(Other *o) {
+    o->preRemoval();
+    OtherList::iterator i = find(level->others.begin(), level->others.end(), o);
+    if (i != level->others.end()) {
+        level->others.erase(i);
+        Rubberband * rb = dynamic_cast<Rubberband *>(o);
+        if (rb != NULL) {
+            RubberbandList::iterator j = find(level->rubberbands.begin(), level->rubberbands.end(), rb);
+            if (j != level->rubberbands.end()) {
+                level->rubberbands.erase(j);
+            }
+        }
+        o->dispose();
+    }
+}
+
 /* -------------------- Floor manipulation -------------------- */
 
 void KillFloor(GridPos p) 
@@ -2311,9 +2165,10 @@
         level->actorlist[i]->move_screen();
     }
 
-    // 
-    for (unsigned i=0; i<level->m_rubberbands.size();++i) 
-        level->m_rubberbands[i]->tick (0.0);
+    //     
+    for (OtherList::iterator oit = level->others.begin(); oit != level->others.end(); ++oit) {
+        (*oit)->tick(0);
+    }    
 }
 
 void InitWorld()

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/world.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -27,6 +27,8 @@
 #include "items.hh"
 #include "stones.hh"
 #include "util.hh"
+#include "others/Other.hh"
+#include "others/Rubberband.hh"
 
 namespace enigma {
 
@@ -175,52 +177,11 @@
     void SetConstantForce (V2 force);
 
 
-/* -------------------- Rubbers Bands -------------------- */
+/* -------------------- Other Objects -------------------- */
 
-    struct RubberBandData {
-	double strength;
-	double length;
-        double minlength;
-        RubberBandData ();
-        RubberBandData (const RubberBandData &);
-    };
+    void AddOther(Other *o);
+    void KillOther(Other *o);
 
-    struct Rubber_Band_Info {
-	Actor *act;
-        RubberBandData data;
-    };
-    typedef std::vector<Rubber_Band_Info> RBI_vector;
-
-
-    /*! Add a rubber band that connects an actor with either a stone
-      or another actor.  `strength' is the force constant, and
-      `length' is the natural length of the elastic: if it is shorter
-      than `length' it will exert no force on the actor(s). */
-    void AddRubberBand (Actor *a, Stone *st, const RubberBandData &d);
-    void AddRubberBand (Actor *a, Actor *a2, const RubberBandData &d);
-
-    /*! Remove all rubber bands connected to `a'. */
-    bool KillRubberBands (Actor *a);
-
-    /*! Remove the rubber band between `a' and `st'.  If `st' is 0,
-      all rubber bands connecting `a' to a stone will be cut. */
-    void KillRubberBand (Actor *a, Stone *st);
-
-    /*! Remove the rubber band between `a' and `a2'.  If `a2' is 0,
-      all rubber bands connecting `a' to other actors will be cut. */
-    void KillRubberBand (Actor *a, Actor *a2);
-
-    /*! Remove all rubber bands attached to stone ST. */
-    void KillRubberBands (Stone *st);
-
-    /*! Fills given vector with basic info about rubbers attached to
-      given stone */
-    void GiveRubberBands (Stone *st, RBI_vector &rubbers);
-
-    /*! Returns true if there already is a rubber band connecting `a'
-      and `st'. */
-    bool HasRubberBand (Actor *a, Stone *st);
-
 /* -------------------- Meditation Control ---------------------- */
 
     void ChangeMeditation(int diffMeditatists, int diffIndispensableHollows,

Modified: trunk/src/world_internal.hh
===================================================================
--- trunk/src/world_internal.hh	2008-07-01 22:27:22 UTC (rev 1203)
+++ trunk/src/world_internal.hh	2008-07-02 22:27:58 UTC (rev 1204)
@@ -17,6 +17,7 @@
  *
  */
 
+
 #include <memory>
 
 namespace enigma {
@@ -28,39 +29,12 @@
 
     typedef vector<ForceField*>  ForceList;
 //    typedef vector<StoneContact> StoneContactList;
+    typedef list<Other *>         OtherList;
+    typedef list<Rubberband *>    RubberbandList;
     typedef vector<Actor*>       ActorList;
     typedef vector<Signal>       SignalList;
 
 
-/* -------------------- RubberBand -------------------- */
-    
-    /*! Stores the physical information about a rubber band (to which
-      object it is attached, its length and force, etc.) */
-    class RubberBand {
-    public:
-        RubberBand (Actor *a1, Actor *a2, const RubberBandData &d);
-        RubberBand (Actor *a1, Stone *st, const RubberBandData &d);
-        ~RubberBand();
-
-        void apply_forces ();
-        void tick (double dtime);
-
-        Actor *get_actor() const { return actor; }
-        Actor *get_actor2() const { return actor2; }
-        Stone *get_stone() const { return stone; }
-
-        const RubberBandData get_data () const { return data; }
-    private:
-        V2 get_p1() const;
-        V2 get_p2() const;
-
-        // Variables.
-        Actor *actor, *actor2;
-        Stone *stone;
-        display::RubberHandle model;
-        RubberBandData data;
-    };
-
 /* -------------------- MouseForce -------------------- */
 
     /*! This class implements the "force field" that accelerates
@@ -224,7 +198,7 @@
         void raw_set (Field &f, Stone *st) { f.stone = st;}
         void dispose (Stone *st) {
             if (st) {
-                KillRubberBands(st);
+                SendMessage(st, "disconnect");
                 DisposeObject(st);
             }
         }
@@ -332,7 +306,8 @@
         ActorList            actorlist; // List of movable, dynamic objects
         Actor               *leftmost_actor;   // sorted double linked list of actors
         Actor               *rightmost_actor;  
-        vector<RubberBand *> m_rubberbands;
+        OtherList            others;
+        RubberbandList       rubberbands;
         MouseForce           m_mouseforce;
         V2                   flatForce;
         int                  scrambleIntensity;



From ral at mail.berlios.de  Thu Jul  3 01:00:01 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Thu, 3 Jul 2008 01:00:01 +0200
Subject: [Enigma-game-svn] r1205 - team_levelpacks/team_test_new_api
Message-ID: <200807022300.m62N01aP006357@sheep.berlios.de>

Author: ral
Date: 2008-07-03 00:59:52 +0200 (Thu, 03 Jul 2008)
New Revision: 1205

Added:
   team_levelpacks/team_test_new_api/ralT053_1.xml
   team_levelpacks/team_test_new_api/ralT054_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT014_1.xml
Log:
Test Level new API:
- new test levels for rubberband and wirecontrol


Modified: team_levelpacks/team_test_new_api/ralT014_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT014_1.xml	2008-07-02 22:27:58 UTC (rev 1204)
+++ team_levelpacks/team_test_new_api/ralT014_1.xml	2008-07-02 22:59:52 UTC (rev 1205)
@@ -104,6 +104,7 @@
         no.buggy["mypos"] = po(no.money)
         chess_grp["color"] = 1
         chess_grp:move(po(-2,-1))
+--        chess_grp:message("move",po(-2,-1))
         wo[mygrp] = {"st-wood"}
     else
         it(blocker_pos):close()

Added: team_levelpacks/team_test_new_api/ralT053_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-02 22:27:58 UTC (rev 1204)
+++ team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-02 22:59:52 UTC (rev 1205)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Rubberbands new API" el:subtitle="" el:id="20080628ral127"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["~"] = {"fl-water"}
+ti["#"] = {"st-rock1"}
+ti["y"] = {"it-yinyang"}
+ti["."] = {"st-wood"}
+ti["w"] = {"st-wood", "w"}
+ti["s"] = {"st-scissors"}
+ti["S"] = {"st-swap"}
+ti["r"] = {"st-rubberband"}
+
+ti["1"] = ti["y"] .. {"#ac-blackball", "a1"} 
+ti["2"] = ti["y"] .. {"#ac-whiteball", "a2"} 
+ti["3"] = {"#ac-horse", "a3"} 
+
+w, h = wo(ti, " ", {
+"       r  r  r      ",
+"                    ",
+"                    ",
+"     1              ",
+"             2      ",
+"                    ",
+"                    ",
+"        3       S   ",
+"            w      ",
+"                    ",
+"               #    ",
+"          ~~        ",
+"s         ~~.       "
+})
+
+--wo:add({"ot_rubberband", anchor1="a1", anchor2="w", length=2, strength=80, threshold=0, max=2.4})
+--wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=1, strength=8000, threshold=0, max=1})
+wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=4, strength=10, threshold=2})
+wo:add({"ot_rubberband", anchor1="a3", anchor2="w", length=3, strength=20})
+
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT053_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Added: team_levelpacks/team_test_new_api/ralT054_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-02 22:27:58 UTC (rev 1204)
+++ team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-02 22:59:52 UTC (rev 1205)
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Wirecontrol new API" el:subtitle="" el:id="20080701ral670"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["#"] = {"st-rock1"}
+ti["+"] = {"st-rock1", "rock"}
+ti["~"] = {"fl-water"}
+
+ti["p"] = {"it-puller-w"}
+ti["m"] = {"it-magicwand"}
+
+ti["w"] = {"st-wood"}
+ti["template_w"] = {"st-wood", "w%%"}
+ti["template_b"] = {"st-brownie", "b%%"}
+ti["S"] = {"st-swap"}
+ti["R"] = {"st_rotator_cw", movable=true}
+
+
+ti["r"] = {"st-rubberband", "rubber"}
+ti["i"] = {"st-stoneimpulse_movable", "impulse"}
+ti["I"] = {"st-stoneimpulse"}
+ti["B"] = {"st_boulder_e", "boulder"}
+ti["L"] = {"st_lightpassenger", "lp"}
+ti["l"] = {"st_laser_e", state=ON}
+ti["P"] = {"st_polarswitch"}
+
+
+ti["@"] = {"#ac-blackball"} 
+
+resolver = res.autotile(ti, {"1","9","template_w"}, {"a","h","template_b"})
+
+w, h = wo(resolver, " ", {
+"                    ",
+"                    ",
+"                    ",
+"           2#   3   ",
+"                    ",
+"              ~~    ",
+"   a         b~~w   ",
+"             #      ",
+"                    ",
+"     1  @   mpppppp ",
+"   R   S            ",
+"                    ",
+"              4     ",
+"                    ",
+"                 +  ",
+"       5            ",
+"IIIi                ",
+"                    ",
+"                    ",
+"                    ",
+"     6              ",
+"B                   ",
+"                    ",
+"       7            ",
+"lPL                 "
+})
+
+
+wo:add({"ot_wirecontrol", anchor1="w%1", anchor2="b%1"})
+wo:add({"ot_wirecontrol", anchor1="w%2", anchor2="w%3"})
+wo:add({"ot_wirecontrol", anchor1="w%2", anchor2="b%2"})
+wo:add({"ot_wirecontrol", anchor1="w%4", anchor2="rock"})
+wo:add({"ot_wirecontrol", anchor1="w%5", anchor2="impulse"})
+wo:add({"ot_wirecontrol", anchor1="w%6", anchor2="boulder"})
+wo:add({"ot_wirecontrol", anchor1="w%7", anchor2="lp"})
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: team_levelpacks/team_test_new_api/ralT054_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From ral at mail.berlios.de  Thu Jul  3 19:59:41 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Thu, 3 Jul 2008 19:59:41 +0200
Subject: [Enigma-game-svn] r1206 - team_levelpacks/team_test_new_api
Message-ID: <200807031759.m63HxfA8021149@sheep.berlios.de>

Author: ral
Date: 2008-07-03 19:59:34 +0200 (Thu, 03 Jul 2008)
New Revision: 1206

Modified:
   team_levelpacks/team_test_new_api/ralT054_1.xml
Log:
Test Level new API:
- extended wirecontrol test level
Warning:
- the pull stone will crash Enigma on the second push!
(pull stone fix will follow in the next trunk commit)



Modified: team_levelpacks/team_test_new_api/ralT054_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-02 22:59:52 UTC (rev 1205)
+++ team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-03 17:59:34 UTC (rev 1206)
@@ -24,12 +24,17 @@
 
 ti["p"] = {"it-puller-w"}
 ti["m"] = {"it-magicwand"}
+ti["t"] = {"it_wrench"}
 
 ti["w"] = {"st-wood"}
 ti["template_w"] = {"st-wood", "w%%"}
 ti["template_b"] = {"st-brownie", "b%%"}
+ti["s"] = {"st-scissors"}
 ti["S"] = {"st-swap"}
+ti["U"] = {"st-pull", "pull"}
 ti["R"] = {"st_rotator_cw", movable=true}
+ti["Q"] = {"st_rotator_cw", "rotcw", movable=true}
+ti["q"] = {"st_rotator_ccw", "rotccw", movable=true}
 
 
 ti["r"] = {"st-rubberband", "rubber"}
@@ -56,20 +61,20 @@
 "             #      ",
 "                    ",
 "     1  @   mpppppp ",
-"   R   S            ",
+"   R   S    t       ",
 "                    ",
 "              4     ",
 "                    ",
 "                 +  ",
 "       5            ",
-"IIIi                ",
-"                    ",
-"                    ",
-"                    ",
+"IIIi             8  ",
+"         #          s",
+"      q   #      r  ",
+"  Q                 ",
 "     6              ",
 "B                   ",
-"                    ",
-"       7            ",
+"             U      ",
+"       7        9   ",
 "lPL                 "
 })
 
@@ -81,6 +86,9 @@
 wo:add({"ot_wirecontrol", anchor1="w%5", anchor2="impulse"})
 wo:add({"ot_wirecontrol", anchor1="w%6", anchor2="boulder"})
 wo:add({"ot_wirecontrol", anchor1="w%7", anchor2="lp"})
+wo:add({"ot_wirecontrol", anchor1="rotcw", anchor2="rotccw"})
+wo:add({"ot_wirecontrol", anchor1="w%8", anchor2="rubber"})
+wo:add({"ot_wirecontrol", anchor1="w%9", anchor2="pull"})
 
   ]]></el:luamain>
     <el:i18n>



From ral at mail.berlios.de  Thu Jul  3 23:39:20 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Thu, 3 Jul 2008 23:39:20 +0200
Subject: [Enigma-game-svn] r1207 - in trunk: data data/schemas src src/stones
Message-ID: <200807032139.m63LdKY2007202@sheep.berlios.de>

Author: ral
Date: 2008-07-03 23:39:17 +0200 (Thu, 03 Jul 2008)
New Revision: 1207

Added:
   trunk/src/stones/RubberbandStone.cc
   trunk/src/stones/RubberbandStone.hh
   trunk/src/stones/ScissorsStone.cc
   trunk/src/stones/ScissorsStone.hh
Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/Makefile.am
   trunk/src/Object.cc
   trunk/src/lua.cc
   trunk/src/ox_peroxyd.cc
   trunk/src/stones.cc
   trunk/src/stones.hh
   trunk/src/stones/BoulderStone.cc
   trunk/src/stones/BoulderStone.hh
   trunk/src/stones/ChessStone.cc
   trunk/src/stones/ChessStone.hh
   trunk/src/stones/LightPassengerStone.cc
   trunk/src/stones/LightPassengerStone.hh
   trunk/src/stones/RotatorStone.cc
   trunk/src/stones/RotatorStone.hh
   trunk/src/stones_complex.cc
   trunk/src/stones_simple.cc
   trunk/src/world.cc
   trunk/src/world.hh
Log:
Trunk 1.1: new API reengineering
- st(grp), it(grp), fl(grp) allow group as argument, returns the result group 
- seperate wire impulse handling from stone::on_impulse as propagateImpulse()
- integrate wire flag into Impulse structure
- Rotator: if movable then propagate wire impulses
- RubberbandStone reengineering:
  - rename to st_rubberband
  - adjust attribute "minlength" to "threshold"
  - add attribute "max" ("min" is not supported )
  - propagate wire impulses if hit with wand
  - do not accept wire impulses
- ScissorsStone reengineering
  - rename to "st_scissors"
- fix Pull stone crash


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/data/api1init.lua	2008-07-03 21:39:17 UTC (rev 1207)
@@ -171,6 +171,8 @@
     st_rotator_ccw = "st-rotator-left",
     st_rotator_cw_movable = "st-rotator_move-right",
     st_rotator_ccw_movable = "st-rotator_move-left",
+    st_rubberband = "st-rubberband",
+    st_scissors = "st-scissors",
     st_switch = "st-switch",
     st_switch_black = "st-switch_black",
     st_switch_white = "st-switch_white",
@@ -375,6 +377,9 @@
      if key == "gradient_factor" then
          _key = "gradient"
      end
+     if key == "minlength" and (_obj_name == "st-rubberband")  then
+         _key = "threshold"
+     end
      if key == "targetx" then
          local d = enigma._GetAttrib(obj, "destination")
          if (en.usertype(d) == "position") then
@@ -454,6 +459,9 @@
      if key == "gradient_factor" then
          _key = "gradient"
      end
+     if key == "minlength" and (_obj_name == "st-rubberband")  then
+         _key = "threshold"
+     end
      if key == "blackball" or key == "whiteball" then
          _key = "color"
      end

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/data/schemas/objects.xml	2008-07-03 21:39:17 UTC (rev 1207)
@@ -42,7 +42,7 @@
     <attr name="range" type="double" default="1.0" rw="rw"/>
     <attr name="rubbers" type="group" default="nil" rw="r"/>
     <attr name="secure" type="bool" default="false" rw="rw"/>
-    <attr name="scissor" type="bool" default="true" rw="rw"/>
+    <attr name="scissor" type="bool" default="false" rw="rw"/>
     <attr name="scratches" type="string" default="" rw="rw"/>
     <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
     <attr name="static" type="bool" default="false" rw="rw"/>
@@ -586,6 +586,14 @@
     <object name="st_rotator_ccw">
       <attr name="state" value="1"/>
     </object>
+    <object name="st_rubberband">
+      <attr name="strength" default="10"/>
+      <attr name="length"/>
+      <attr name="threshold"/>
+      <attr name="max"/>
+      <attr name="scissor" default="true"/>
+    </object>
+    <object name="st_scissors"/>
     <object name="st_switch">
       <attr name="color"/>
       <attr name="instant"/>

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/Makefile.am	2008-07-03 21:39:17 UTC (rev 1207)
@@ -241,6 +241,10 @@
 	stones/PolarSwitchStone.hh	\
 	stones/RotatorStone.cc	\
 	stones/RotatorStone.hh	\
+	stones/RubberbandStone.cc	\
+	stones/RubberbandStone.hh	\
+	stones/ScissorsStone.cc	\
+	stones/ScissorsStone.hh	\
 	stones/Switch.cc	\
 	stones/Switch.hh	\
 	stones/TimerStone.cc	\

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/Object.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -162,12 +162,22 @@
                     KillStone(dynamic_cast<GridObject *>(this)->get_pos()); break;
             }
         } else if (m.message == "disconnect") {
+            bool wasConnected = false;
             ObjectList olist = getAttr("rubbers");   // a private deletion resistant copy
             for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it)
                 KillOther(dynamic_cast<Other *>(*it));
+            if (olist.size() > 0) {
+                wasConnected = true;
+                setAttr("rubber", Value());   // delete attribute
+            }
             olist = getAttr("wires");   // a private deletion resistant copy
             for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it)
                 KillOther(dynamic_cast<Other *>(*it));
+            if (olist.size() > 0) {
+                wasConnected = true;
+                setAttr("wires", Value());   // delete attribute
+            }
+            return wasConnected;
         }
         return Value();
     }

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/lua.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -1145,49 +1145,68 @@
     return 0;
 }
 
-static int getFloor(lua_State *L) {
-    // position|table|obj|(num,num)
+static int getStoneItemFloor(lua_State *L, Object::ObjectType ot) {
+    // position|table|obj|(num,num)|group
     if (is_world(L, 1))      // world method?
         lua_remove(L, 1);    // no need of context
-    newPosition(L);          // unify all arg types to a position
-    lua_getmetatable(L, -1);            
-    lua_rawgeti(L, -1, 1);
-    int x = round_down<int>(lua_tonumber(L, -1));
-    lua_rawgeti(L, -2, 2);
-    int y = round_down<int>(lua_tonumber(L, -1));
-    Object *o = GetFloor(GridPos(x, y));
-    pushobject(L, o);
+    if (is_group(L, 1)) {
+        ObjectList srcList = to_value(L, 1);
+        ObjectList objects;
+        for (ObjectList::iterator itr = srcList.begin(); itr != srcList.end(); ++itr) {
+            GridPos  p;
+            if (GridObject *gobj = dynamic_cast<GridObject*>(*itr)) {
+                p = gobj->getOwnerPos();
+            } else if (Actor *a = dynamic_cast<Actor*>(*itr)) {
+                p = GridPos(a->get_pos());
+            } else {
+                continue;  // no valid position
+            }
+            Object *obj = NULL;
+            switch (ot) {
+                case Object::FLOOR :
+                    obj = GetFloor(p); break;
+                case Object::ITEM :
+                    obj = GetItem(p); break;
+                case Object::STONE :
+                    obj = GetStone(p); break;
+            }
+            if (obj != NULL) 
+                objects.push_back(obj);
+        }
+        pushNewGroup(L, objects);
+    } else {
+        newPosition(L);          // unify all arg types to a position
+        lua_getmetatable(L, -1);            
+        lua_rawgeti(L, -1, 1);
+        int x = round_down<int>(lua_tonumber(L, -1));
+        lua_rawgeti(L, -2, 2);
+        int y = round_down<int>(lua_tonumber(L, -1));
+        Object *obj = NULL;
+        switch (ot) {
+            case Object::FLOOR :
+                obj = GetFloor(GridPos(x, y)); break;
+            case Object::ITEM :
+                obj = GetItem(GridPos(x, y)); break;
+            case Object::STONE :
+                obj = GetStone(GridPos(x, y)); break;
+        }
+        pushobject(L, obj);
+    }
     return 1;
 }
+static int getFloor(lua_State *L) {
+    // position|table|obj|(num,num)|group
+    return getStoneItemFloor(L, Object::FLOOR);
+}
 
 static int getItem(lua_State *L) {
-    // position|table|obj|(num,num)
-    if (is_world(L, 1))      // world method?
-        lua_remove(L, 1);    // no need of context
-    newPosition(L);          // unify all arg types to a position
-    lua_getmetatable(L, -1);            
-    lua_rawgeti(L, -1, 1);
-    int x = round_down<int>(lua_tonumber(L, -1));
-    lua_rawgeti(L, -2, 2);
-    int y = round_down<int>(lua_tonumber(L, -1));
-    Object *o = GetItem(GridPos(x, y));
-    pushobject(L, o);
-    return 1;
+    // position|table|obj|(num,num)|group
+    return getStoneItemFloor(L, Object::ITEM);
 }
 
 static int getStone(lua_State *L) {
-    // position|table|obj|(num,num)
-    if (is_world(L, 1))      // world method?
-        lua_remove(L, 1);    // no need of context
-    newPosition(L);          // unify all arg types to a position
-    lua_getmetatable(L, -1);            
-    lua_rawgeti(L, -1, 1);
-    int x = round_down<int>(lua_tonumber(L, -1));
-    lua_rawgeti(L, -2, 2);
-    int y = round_down<int>(lua_tonumber(L, -1));
-    Object *o = GetStone(GridPos(x, y));
-    pushobject(L, o);
-    return 1;
+    // position|table|obj|(num,num)|group
+    return getStoneItemFloor(L, Object::STONE);
 }
 
 static int killObjectBase(lua_State *L) {  // TODO Itemholder owner objects
@@ -1341,7 +1360,10 @@
         lua_rawgeti(L, -1, i);  // the object
         lua_pushvalue(L, 2);    // copy the message
         lua_pushvalue(L, 3);    // copy message value
-        objectMessageBase(L);   // end up with return value on top
+        if (lua_isnil(L, -3)) 
+            lua_pushnil(L);     // do not send messages to nil - nil may occur in groups
+        else
+            objectMessageBase(L);   // end up with return value on top
     }
     return numObjects >= 1 ? 1 : 0;  // return last message value if group was not empty
 }

Modified: trunk/src/ox_peroxyd.cc
===================================================================
--- trunk/src/ox_peroxyd.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/ox_peroxyd.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -344,8 +344,8 @@
     "st-swap",                  // PerOxyd stone 0x93
     "st-spitter",               // PerOxyd stone 0x94
     0,                          // PerOxyd stone 0x95 (dynamite holder, will implememnt it)(levels: 41 184 200)
-    "st-rubberband",            // PerOxyd stone 0x96
-    "st-scissors",              // PerOxyd stone 0x97
+    "st_rubberband",            // PerOxyd stone 0x96
+    "st_scissors",              // PerOxyd stone 0x97
     "st-grate3",                // PerOxyd stone 0x98
     "st_blocker",               // PerOxyd stone 0x99
     "st-grate1",                // PerOxyd stone 0x9a

Modified: trunk/src/stones/BoulderStone.cc
===================================================================
--- trunk/src/stones/BoulderStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/BoulderStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -150,7 +150,7 @@
         Stone::on_move();
     }
     
-    void BoulderStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+    void BoulderStone::on_impulse(const Impulse& impulse) {
         if (state == FALLING)
             return;
 

Modified: trunk/src/stones/BoulderStone.hh
===================================================================
--- trunk/src/stones/BoulderStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/BoulderStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -68,7 +68,7 @@
         virtual void actor_hit(const StoneContact &sc);
         virtual void on_floor_change();
         virtual void on_move();
-        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        virtual void on_impulse(const Impulse& impulse);
 //        virtual const char *collision_sound();
 
     private:

Modified: trunk/src/stones/ChessStone.cc
===================================================================
--- trunk/src/stones/ChessStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/ChessStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -141,7 +141,7 @@
         }
     }
 
-    void ChessStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+    void ChessStone::on_impulse(const Impulse& impulse) {
     }
     
     bool ChessStone::is_removable() const {    // Interface for st-swap and st-pull

Modified: trunk/src/stones/ChessStone.hh
===================================================================
--- trunk/src/stones/ChessStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/ChessStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -86,7 +86,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        virtual void on_impulse(const Impulse& impulse);
         virtual bool is_removable() const;
         virtual void on_floor_change();
 

Modified: trunk/src/stones/LightPassengerStone.cc
===================================================================
--- trunk/src/stones/LightPassengerStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/LightPassengerStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -167,7 +167,7 @@
         }
     }
 
-    void LightPassengerStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+    void LightPassengerStone::on_impulse(const Impulse& impulse) {
         Actor *a = dynamic_cast<Actor*>(impulse.sender);
         if (a == NULL && ((objFlags & OBJBIT_LIGHTNEWDIRS) == NODIRBIT || state == OFF 
                 || server::GameCompatibility != GAMET_ENIGMA))

Modified: trunk/src/stones/LightPassengerStone.hh
===================================================================
--- trunk/src/stones/LightPassengerStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/LightPassengerStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -68,7 +68,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        virtual void on_impulse(const Impulse& impulse);
 
         // TimeHandler interface
         virtual void alarm();

Modified: trunk/src/stones/RotatorStone.cc
===================================================================
--- trunk/src/stones/RotatorStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/RotatorStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -116,9 +116,10 @@
             maybe_push_stone(sc);
     }
 
-    void RotatorStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+    void RotatorStone::on_impulse(const Impulse& impulse) {
         if (objFlags & OBJBIT_MOVABLE) {
             move_stone(impulse.dir);
+            propagateImpulse(impulse);
         }
     }
     

Modified: trunk/src/stones/RotatorStone.hh
===================================================================
--- trunk/src/stones/RotatorStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/RotatorStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -64,7 +64,7 @@
         
         // Stone interface
         virtual void actor_hit(const StoneContact &sc);
-        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        virtual void on_impulse(const Impulse& impulse);
         virtual void on_move();
         virtual FreezeStatusBits get_freeze_bits();
 

Added: trunk/src/stones/RubberbandStone.cc
===================================================================
--- trunk/src/stones/RubberbandStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/RubberbandStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -0,0 +1,82 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "stones/RubberbandStone.hh"
+//#include "main.hh"
+#include "player.hh"
+
+namespace enigma {
+    RubberbandStone::RubberbandStone() : Stone () {
+    }
+
+    std::string RubberbandStone::getClass() const {
+        return "st_rubberband";
+    }
+        
+    void RubberbandStone::init_model() {
+        set_model("st-rubberband");
+    }
+    
+    void RubberbandStone::actor_hit(const StoneContact &sc) {
+        // The mode attribute "scissor" defines, if when touching an st-rubberband,
+        // other rubberbands to the actor will be cut of or not, true means they will. true is default.
+        bool isScissor = to_bool(getAttr("scissor"));
+
+        bool alreadyConnected = false;
+        ObjectList rubbers = sc.actor->getAttr("rubbers");
+        for (ObjectList::iterator it =  rubbers.begin(); it != rubbers.end(); ++it) {
+            if (((Object *)(*it)->getAttr("anchor2")) == this) {
+                alreadyConnected = true;
+                break;
+            }
+        }
+        if (!alreadyConnected) {
+            sound_event("rubberband");
+            if (isScissor) {
+                SendMessage(sc.actor, "disconnect");
+            }
+            Object *obj = MakeObject("ot_rubberband");
+            obj->setAttr("anchor1", sc.actor);
+            obj->setAttr("anchor2", this);
+            obj->setAttr("strength", getAttr("strength"));
+            obj->setAttr("length", getAttr("length"));
+            obj->setAttr("threshold", getAttr("threshold"));
+            obj->setAttr("max", getAttr("max"));
+            AddOther(dynamic_cast<Other *>(obj));
+        }
+        
+        maybe_push_stone(sc);
+    }
+
+    void RubberbandStone::on_impulse (const Impulse& impulse) {
+        Actor *a = dynamic_cast<Actor *>(impulse.sender);
+        if (a && player::WieldedItemIs (a, "it-magicwand")) {
+            move_stone(impulse.dir);
+            propagateImpulse(impulse);
+        }
+    }
+
+    DEF_TRAITSM(RubberbandStone, "st_rubberband", st_rubberband, MOVABLE_STANDARD);
+        
+    BOOT_REGISTER_START
+        BootRegister(new RubberbandStone(), "st_rubberband");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/stones/RubberbandStone.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/RubberbandStone.hh
===================================================================
--- trunk/src/stones/RubberbandStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/RubberbandStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -0,0 +1,51 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef RUBBERBANDSTONE_HH
+#define RUBBERBANDSTONE_HH
+
+#include "stones.hh"
+
+#include "stones_internal.hh"
+
+namespace enigma {
+
+    /** 
+     * 
+     */
+    class RubberbandStone : public Stone {
+        CLONEOBJ(RubberbandStone);
+        DECL_TRAITS;
+    public:
+        RubberbandStone();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        
+        // GridObject interface
+        virtual void init_model();
+                
+        // Stone interface
+        virtual void actor_hit(const StoneContact &sc);
+        virtual void on_impulse(const Impulse& impulse);
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/stones/RubberbandStone.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/ScissorsStone.cc
===================================================================
--- trunk/src/stones/ScissorsStone.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/ScissorsStone.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "stones/ScissorsStone.hh"
+//#include "main.hh"
+
+namespace enigma {
+    ScissorsStone::ScissorsStone() : Stone () {
+    }
+
+    std::string ScissorsStone::getClass() const {
+        return "st_scissors";
+    }
+        
+    void ScissorsStone::init_model() {
+        set_model("st-scissors");
+    }
+    
+    void ScissorsStone::animcb() {
+        set_model("st-scissors");
+    }
+    
+    void ScissorsStone::actor_hit(const StoneContact &sc) {
+        sound_event("scissors");
+        set_anim("st-scissors-snip");
+        if (SendMessage(sc.actor, "disconnect").to_bool())
+            performAction(false);
+    }
+
+    DEF_TRAITS(ScissorsStone, "st_scissors", st_scissors);
+        
+    BOOT_REGISTER_START
+        BootRegister(new ScissorsStone(), "st_scissors");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/stones/ScissorsStone.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/ScissorsStone.hh
===================================================================
--- trunk/src/stones/ScissorsStone.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones/ScissorsStone.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -0,0 +1,53 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef SCISSORSSTONE_HH
+#define SCISSORSSTONE_HH
+
+#include "stones.hh"
+
+#include "stones_internal.hh"
+
+namespace enigma {
+
+    /** 
+     * 
+     */
+    class ScissorsStone : public Stone {
+        CLONEOBJ(ScissorsStone);
+        DECL_TRAITS;
+    public:
+        ScissorsStone();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        
+        // GridObject interface
+        virtual void init_model();
+                
+        // ModelCallback interface
+        virtual void animcb();
+        
+        // Stone interface
+        virtual void actor_hit(const StoneContact &sc);
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/stones/ScissorsStone.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -58,56 +58,6 @@
 }
 
 
-//======================================================================
-// STONES
-//======================================================================
-
-/** \page lstones  Available Stones
-
-Oxyd Stones:
-- \ref st-oxyd
-- \ref st-fakeoxyd
-- \ref st-fart
-
-Movable stones:
-- \ref st-brownie
-- \ref st-wood
-- \ref st-block
-
-Stones that can trigger actions:
-- \ref st-switch
-- \ref st-fourswitch
-- \ref st-laserswitch
-- \ref st-key
-- \ref st-coinslot
-- \ref st-timer
-
-Stones that can change their behaviour:
-- \ref st-brick_magic
-- \ref st-stonebrush
-- \ref st-invisible_magic
-- \ref st-break_invisible
-
-Lasers and Mirrors:
-- \ref st-laser
-- \ref st-pmirror
-- \ref st-3mirror
-
-Other stones:
-- \ref st-death
-- \ref st-swap
-- \ref st-bolder
-- \ref st-puzzle
-- \ref st-stone_break
-- \ref st_window
-- \ref st-break_acwhite
-- \ref st-break_acblack
-- \ref st-oneway
-- \ref st-oneway_black
-- \ref st-oneway_white
-- \ref st-chameleon
-*/
-
 Stone::Stone()
 : freeze_check_running (false)
 {}
@@ -149,17 +99,21 @@
 void Stone::actor_touch(const StoneContact &sc) {
 }
 
-void Stone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+void Stone::on_impulse(const Impulse& impulse) {
     if (is_movable()) {
         move_stone(impulse.dir);
-        if (!isWireImpulse) {
-            ObjectList olist = getAttr("fellows");
-            for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it) {
-                Stone *fellow = dynamic_cast<Stone *>(*it);
-                if (fellow != NULL) {
-                    Impulse wireImpulse(this, fellow->get_pos(), impulse.dir);
-                    fellow->on_impulse(wireImpulse, true);
-                }
+        propagateImpulse(impulse);
+    }
+}
+
+void Stone::propagateImpulse(const Impulse& impulse) {
+    if (!impulse.byWire) {
+        ObjectList olist = getAttr("fellows");
+        for (ObjectList::iterator it = olist.begin(); it != olist.end(); ++it) {
+            Stone *fellow = dynamic_cast<Stone *>(*it);
+            if (fellow != NULL) {
+                Impulse wireImpulse(this, fellow->get_pos(), impulse.dir, true);
+                fellow->on_impulse(wireImpulse);
             }
         }
     }

Modified: trunk/src/stones.hh
===================================================================
--- trunk/src/stones.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -208,16 +208,17 @@
 
         /* ---------- Stone interface (events) ---------- */
 
-        virtual void   actor_hit (const StoneContact &sc);
-        virtual void   actor_touch (const StoneContact &sc);
-        virtual void   actor_inside (Actor * /*a*/) {}
-        virtual void   actor_contact (Actor * /*a*/) {}
+        virtual void actor_hit (const StoneContact &sc);
+        virtual void actor_touch (const StoneContact &sc);
+        virtual void actor_inside (Actor * /*a*/) {}
+        virtual void actor_contact (Actor * /*a*/) {}
 
-        virtual bool   freeze_check();
+        virtual bool freeze_check();
         
-        virtual void   on_move();
-        virtual void   on_floor_change() {}
-        virtual void   on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        virtual void on_move();
+        virtual void on_floor_change() {}
+        virtual void on_impulse(const Impulse& impulse);
+        void propagateImpulse(const Impulse& impulse);
 
     protected:
         virtual Object::ObjectType getObjectType() const {return Object::STONE;}

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones_complex.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -101,7 +101,7 @@
             if (state == IDLE)
                 maybe_push_stone(sc);
         }
-        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        void on_impulse(const Impulse& impulse);
         bool is_removable() const {
             return state == IDLE;
         }
@@ -189,7 +189,7 @@
     change_state(IDLE);
 }
 
-void PullStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
+void PullStone::on_impulse(const Impulse& impulse) 
 {
     if (state != IDLE)
         return;
@@ -204,7 +204,7 @@
         return;                 // avoid unremoveable and border stones
     }
 
-    PullStone *newStone = this->clone();
+    PullStone *newStone = this->clone();    // TODO never ever clone a world's object!! reengineering!
 
     if (other_stone) {
         // yield other_stone:
@@ -561,7 +561,7 @@
         virtual Value message(const Message &m);
 
         void on_creation (GridPos p);
-        void on_impulse (const Impulse& impulse, bool isWireImpulse=false);
+        void on_impulse (const Impulse& impulse);
 
         bool is_floating() const;
 
@@ -906,7 +906,7 @@
     return ConnectiveStone::message(m);
 }
 
-void PuzzleStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
+void PuzzleStone::on_impulse(const Impulse& impulse) 
 {
 //    if (!oxyd1_compatible() && state == IDLE) {
     if (state == IDLE) {
@@ -1362,7 +1362,7 @@
                 SendMessage(it, "noshogun");
         }
 
-        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        void on_impulse(const Impulse& impulse);
 
         void init_model() {
             set_model(ecl::strf("st-shogun%d", int(get_holes())));
@@ -1408,7 +1408,7 @@
     }
 }
 
-void ShogunStone::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+void ShogunStone::on_impulse(const Impulse& impulse) {
     GridPos destpos     = move(get_pos(), impulse.dir);
     Holes holes         = get_holes();
     Holes smallest      = smallest_hole(holes);
@@ -1487,7 +1487,7 @@
 
         void change_state(State st);
 
-        virtual void on_impulse(const Impulse& impulse, bool isWireImpulse=false) {
+        virtual void on_impulse(const Impulse& impulse) {
             incoming = impulse.dir;
             change_state(PULSING);
         }
@@ -1698,7 +1698,7 @@
             }
         }
 
-        void on_impulse(const Impulse& impulse, bool isWireImpulse) {
+        void on_impulse(const Impulse& impulse) {
             State oldstate = state;
 
             if (move_stone(impulse.dir)) {
@@ -1798,7 +1798,7 @@
         virtual Direction get_dir() const = 0;
 
         void actor_hit(const StoneContact &sc);
-        void on_impulse(const Impulse& impulse, bool isWireImpulse=false);
+        void on_impulse(const Impulse& impulse);
 
         Turnstile_Pivot_Base *get_pivot() {
             Stone *st = GetStone (move (get_pos(), reverse(get_dir())));
@@ -1849,7 +1849,7 @@
 
 /* -------------------- Turnstile_Arm -------------------- */
 
-void Turnstile_Arm::on_impulse(const Impulse& impulse, bool isWireImpulse) {
+void Turnstile_Arm::on_impulse(const Impulse& impulse) {
     enum Action { ROTL, ROTR, stay };
     static Action actions[4][4] = {
         { stay, ROTL, stay, ROTR }, // west arm

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/stones_simple.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -393,7 +393,7 @@
         void on_removal(GridPos p);
 
         // Stone interface
-        void on_impulse (const Impulse &impulse, bool isWireImpulse=false);
+        void on_impulse (const Impulse &impulse);
         bool is_removable() const { return state == IDLE; }
         void actor_hit (const StoneContact &sc);
 
@@ -460,7 +460,7 @@
 //    sound_event ("moveslow");
 }
 
-void SwapStone::on_impulse(const Impulse& impulse, bool isWireImpulse) 
+void SwapStone::on_impulse(const Impulse& impulse) 
 {
     if (state == IDLE) {
         GridPos oldp = get_pos();
@@ -728,7 +728,7 @@
 //             else
 //                 maybe_push_stone (sc);
         }
-        void on_impulse(const Impulse& impulse, bool isWireImpulse=false) {
+        void on_impulse(const Impulse& impulse) {
             move_stone(impulse.dir);
         }
 
@@ -1131,106 +1131,7 @@
 }
 
 
-/* -------------------- Scissors stone -------------------- */
 
-/** \page st-scissors Scissors stone
-
-This stone cuts \c all rubber bands attached to an actor that touches
-it.
-
-\image html st-scissors
-*/
-namespace
-{
-    class ScissorsStone : public Stone {
-        CLONEOBJ(ScissorsStone);
-        DECL_TRAITS;
-        void actor_hit(const StoneContact &sc) {
-            sound_event("scissors");
-            set_anim("st-scissors-snip");
-            if (SendMessage(sc.actor, "disconnect").to_bool())
-                performAction(false);
-        }
-        void animcb() {
-            set_model("st-scissors");
-        }
-    public:
-        ScissorsStone() 
-        {}
-    };
-    DEF_TRAITS(ScissorsStone, "st-scissors", st_scissors);
-}
-
-
-/* -------------------- Rubberband stone -------------------- */
-
-/** \page st-rubberband Rubberband stone
-
-If hit by a marble, this stone first removes existing connections with
-other rubberband stones and then attaches a new elastic between the
-marble and itself.  Nothing happens if the marble was already attached
-to this particular stone.
-
-This stone can be moved if hit with a magic wand.
-
-\subsection rubberbanda Attributes
-
-- \c length  The natural length of the rubberband (default: 1)
-- \c strength The strength of the rubberband (default: 10)
-
-\image html st-rubberband.png
-*/
-namespace
-{
-    class RubberBandStone : public Stone {
-        CLONEOBJ(RubberBandStone);
-        DECL_TRAITS;
-
-        void actor_hit(const StoneContact &sc) {
-            // The mode attribute "scissor" defines, if when touching an st-rubberband,
-            // other rubberbands to the actor will be cut of or not, true means they will. true is default.
-            bool isScissor = to_bool(getDefaultedAttr("scissor", true));
-
-//            if (!HasRubberBand (sc.actor, this)) {
-            bool alreadyConnected = false;
-            ObjectList rubbers = sc.actor->getAttr("rubbers");
-            for (ObjectList::iterator it =  rubbers.begin(); it != rubbers.end(); ++it) {
-                if (((Object *)(*it)->getAttr("anchor2")) == this) {
-                    alreadyConnected = true;
-                    break;
-                }
-            }
-            if (!alreadyConnected) {
-                sound_event ("rubberband");
-                if (isScissor) {
-                    SendMessage(sc.actor, "disconnect");
-                }
-                Object *obj = MakeObject("ot_rubberband");
-                obj->setAttr("anchor1", sc.actor);
-                obj->setAttr("anchor2", this);
-                obj->setAttr("strength", getDefaultedAttr("strength", 10.0));
-                obj->setAttr("length", getDefaultedAttr("length", 1.0));
-                obj->setAttr("threshold", getAttr("minlength"));
-                AddOther(dynamic_cast<Other *>(obj));
-            }
-            // if (player::wielded_item_is (sc.actor, "it-magicwand"))
-            maybe_push_stone (sc);
-        }
-
-        void on_impulse (const Impulse& impulse, bool isWireImpulse=false) {
-            Actor *a = dynamic_cast<Actor *> (impulse.sender);
-            if (a && player::WieldedItemIs (a, "it-magicwand"))
-                move_stone(impulse.dir);
-        }
-    public:
-        RubberBandStone () {
-            setAttr("length", 1.0);
-            setAttr("strength", 10.0);
-        }
-    };
-    DEF_TRAITSM(RubberBandStone, "st-rubberband", st_rubberband, MOVABLE_STANDARD);
-}
-
 /* -------------------- FartStone -------------------- */
 
 /** \page st-fart Fart Stone
@@ -2034,8 +1935,6 @@
     Register(new Knight);
     Register(new LaserBreakable);
     Register(new MagicStone);
-    Register(new RubberBandStone);
-    Register(new ScissorsStone);
     Register(new Stone_break("st-stone_break"));
     Register(new Stone_break("st-rock3_break"));
     Register(new Stone_break("st-break_gray"));

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/world.cc	2008-07-03 21:39:17 UTC (rev 1207)
@@ -1869,6 +1869,9 @@
 }
 
 void KillOther(Other *o) {
+    if (o == NULL)
+        return;
+    
     o->preRemoval();
     OtherList::iterator i = find(level->others.begin(), level->others.end(), o);
     if (i != level->others.end()) {

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-07-03 17:59:34 UTC (rev 1206)
+++ trunk/src/world.hh	2008-07-03 21:39:17 UTC (rev 1207)
@@ -49,11 +49,12 @@
         Object    *sender;
         GridPos    dest;
         Direction  dir;
+        bool       byWire;
 
         // Constructors
-        Impulse(Object *sender_, const GridPos& dest_, Direction dir_)
-        : sender(sender_), dest(dest_), dir(dir_)
-        {}
+        Impulse(Object *sender_, const GridPos& dest_, Direction dir_, bool sendByWire = false)
+                : sender (sender_), dest (dest_), dir (dir_), byWire (sendByWire) {
+        }
     };
 
     struct Message {



From ral at mail.berlios.de  Thu Jul  3 23:44:16 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Thu, 3 Jul 2008 23:44:16 +0200
Subject: [Enigma-game-svn] r1208 - team_levelpacks/team_test_new_api
Message-ID: <200807032144.m63LiGcC007561@sheep.berlios.de>

Author: ral
Date: 2008-07-03 23:44:08 +0200 (Thu, 03 Jul 2008)
New Revision: 1208

Modified:
   team_levelpacks/team_test_new_api/ralT053_1.xml
   team_levelpacks/team_test_new_api/ralT054_1.xml
Log:
Test Level new API:
- level updates for object renamings

Modified: team_levelpacks/team_test_new_api/ralT053_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-03 21:39:17 UTC (rev 1207)
+++ team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-03 21:44:08 UTC (rev 1208)
@@ -23,9 +23,9 @@
 ti["y"] = {"it-yinyang"}
 ti["."] = {"st-wood"}
 ti["w"] = {"st-wood", "w"}
-ti["s"] = {"st-scissors"}
+ti["s"] = {"st_scissors"}
 ti["S"] = {"st-swap"}
-ti["r"] = {"st-rubberband"}
+ti["r"] = {"st_rubberband"}
 
 ti["1"] = ti["y"] .. {"#ac-blackball", "a1"} 
 ti["2"] = ti["y"] .. {"#ac-whiteball", "a2"} 

Modified: team_levelpacks/team_test_new_api/ralT054_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-03 21:39:17 UTC (rev 1207)
+++ team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-03 21:44:08 UTC (rev 1208)
@@ -29,7 +29,7 @@
 ti["w"] = {"st-wood"}
 ti["template_w"] = {"st-wood", "w%%"}
 ti["template_b"] = {"st-brownie", "b%%"}
-ti["s"] = {"st-scissors"}
+ti["s"] = {"st_scissors"}
 ti["S"] = {"st-swap"}
 ti["U"] = {"st-pull", "pull"}
 ti["R"] = {"st_rotator_cw", movable=true}
@@ -37,7 +37,7 @@
 ti["q"] = {"st_rotator_ccw", "rotccw", movable=true}
 
 
-ti["r"] = {"st-rubberband", "rubber"}
+ti["r"] = {"st_rubberband", "rubber"}
 ti["i"] = {"st-stoneimpulse_movable", "impulse"}
 ti["I"] = {"st-stoneimpulse"}
 ti["B"] = {"st_boulder_e", "boulder"}
@@ -68,7 +68,7 @@
 "                 +  ",
 "       5            ",
 "IIIi             8  ",
-"         #          s",
+"         #         s",
 "      q   #      r  ",
 "  Q                 ",
 "     6              ",



From ral at mail.berlios.de  Fri Jul  4 22:23:44 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Fri, 4 Jul 2008 22:23:44 +0200
Subject: [Enigma-game-svn] r1209 - homepage/input
Message-ID: <200807042023.m64KNiPc004163@sheep.berlios.de>

Author: ral
Date: 2008-07-04 22:23:28 +0200 (Fri, 04 Jul 2008)
New Revision: 1209

Modified:
   homepage/input/stat-other.html
   homepage/input/table-hcp.html
   homepage/input/table-rat.html
   homepage/input/table-solved.html
   homepage/input/table-wr.html
   homepage/input/userlist.html
Log:
Homepage:
- statistics June 2008


Modified: homepage/input/stat-other.html
===================================================================
--- homepage/input/stat-other.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/stat-other.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -1,22 +1,22 @@
   <div class="stat-help">
     <h3>$$Other_Statistics$$</h3>
     <h4>$$Scores$$</h4>
-      77764 $$single_level_scores$$.
+      79887 $$single_level_scores$$.
     <h4>$$Ratings$$</h4>
-      14496 $$single_level_ratings$$ 4.90 $$and_distribution$$: 
+      14698 $$single_level_ratings$$ 4.91 $$and_distribution$$: 
       <table>
         <colgroup><col width="80"><col width="80"></colgroup>
         <tr><th>$$rating$$</th><th>$$count$$</th></tr>
-        <tr><td class="num">0</td><td class="num">84</td></tr>
+        <tr><td class="num">0</td><td class="num">96</td></tr>
         <tr><td class="num">1</td><td class="num">283</td></tr>
-        <tr><td class="num">2</td><td class="num">780</td></tr>
-        <tr><td class="num">3</td><td class="num">2059</td></tr>
-        <tr><td class="num">4</td><td class="num">2736</td></tr>
-        <tr><td class="num">5</td><td class="num">3445</td></tr>
-        <tr><td class="num">6</td><td class="num">2408</td></tr>
-        <tr><td class="num">7</td><td class="num">1667</td></tr>
-        <tr><td class="num">8</td><td class="num">654</td></tr>
-        <tr><td class="num">9</td><td class="num">261</td></tr>
-        <tr><td class="num">10</td><td class="num">119</td></tr>
+        <tr><td class="num">2</td><td class="num">785</td></tr>
+        <tr><td class="num">3</td><td class="num">2069</td></tr>
+        <tr><td class="num">4</td><td class="num">2767</td></tr>
+        <tr><td class="num">5</td><td class="num">3488</td></tr>
+        <tr><td class="num">6</td><td class="num">2442</td></tr>
+        <tr><td class="num">7</td><td class="num">1691</td></tr>
+        <tr><td class="num">8</td><td class="num">669</td></tr>
+        <tr><td class="num">9</td><td class="num">270</td></tr>
+        <tr><td class="num">10</td><td class="num">138</td></tr>
       </table>
   </div>

Modified: homepage/input/table-hcp.html
===================================================================
--- homepage/input/table-hcp.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/table-hcp.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -1,152 +1,156 @@
   <table>
-    <caption>$$Handicap_Statistics$$ $$May$$ 2008</caption>
+    <caption>$$Handicap_Statistics$$ $$June$$ 2008</caption>
     <colgroup><col width="130"><col width="220"></colgroup>
     <tr><th>$$solved_hcp$$</th><th class="left">$$user$$</th></tr>
-     <tr><td class="num">-143.8</td><td class="left">'Moneymaker'</td></tr>
-     <tr><td class="num"> -81.8</td><td class="left">'Johannes'</td></tr>
-     <tr><td class="num"> -81.6</td><td class="left">'Stupid'</td></tr>
-     <tr><td class="num"> -75.4</td><td class="left">'daydreamer'</td></tr>
-     <tr><td class="num"> -70.3</td><td class="left">'Great Scott'</td></tr>
-     <tr><td class="num"> -60.1</td><td class="left">'Duffy'</td></tr>
-     <tr><td class="num"> -58.7</td><td class="left">'Malla'</td></tr>
-     <tr><td class="num"> -54.0</td><td class="left">'ryujun'</td></tr>
-     <tr><td class="num"> -51.1</td><td class="left">'dev0'</td></tr>
-     <tr><td class="num"> -48.2</td><td class="left">'Django'</td></tr>
-     <tr><td class="num"> -42.8</td><td class="left">'Gloop'</td></tr>
-     <tr><td class="num"> -42.0</td><td class="left">'Alexandros'</td></tr>
-     <tr><td class="num"> -39.6</td><td class="left">'Taztunes'</td></tr>
-     <tr><td class="num"> -36.4</td><td class="left">'Safalra'</td></tr>
-     <tr><td class="num"> -31.1</td><td class="left">'B-Huff'</td></tr>
-     <tr><td class="num"> -30.9</td><td class="left">'Ludmian'</td></tr>
-     <tr><td class="num"> -28.6</td><td class="left">'Zekobah'</td></tr>
+     <tr><td class="num">-143.7</td><td class="left">'Moneymaker'</td></tr>
+     <tr><td class="num"> -81.6</td><td class="left">'Johannes'</td></tr>
+     <tr><td class="num"> -81.5</td><td class="left">'Stupid'</td></tr>
+     <tr><td class="num"> -77.3</td><td class="left">'daydreamer'</td></tr>
+     <tr><td class="num"> -70.1</td><td class="left">'Great Scott'</td></tr>
+     <tr><td class="num"> -60.0</td><td class="left">'Duffy'</td></tr>
+     <tr><td class="num"> -58.5</td><td class="left">'Malla'</td></tr>
+     <tr><td class="num"> -55.6</td><td class="left">'ryujun'</td></tr>
+     <tr><td class="num"> -54.1</td><td class="left">'dev0'</td></tr>
+     <tr><td class="num"> -48.0</td><td class="left">'Django'</td></tr>
+     <tr><td class="num"> -47.1</td><td class="left">'Alexandros'</td></tr>
+     <tr><td class="num"> -42.6</td><td class="left">'Gloop'</td></tr>
+     <tr><td class="num"> -39.3</td><td class="left">'Taztunes'</td></tr>
+     <tr><td class="num"> -36.3</td><td class="left">'Safalra'</td></tr>
+     <tr><td class="num"> -31.6</td><td class="left">'Ludmian'</td></tr>
+     <tr><td class="num"> -30.8</td><td class="left">'B-Huff'</td></tr>
+     <tr><td class="num"> -30.6</td><td class="left">'Emmanuel'</td></tr>
+     <tr><td class="num"> -28.2</td><td class="left">'Zekobah'</td></tr>
      <tr><td class="num"> -26.3</td><td class="left">'bojster'</td></tr>
-     <tr><td class="num"> -24.1</td><td class="left">'ged'</td></tr>
-     <tr><td class="num"> -22.5</td><td class="left">'hendrik'</td></tr>
-     <tr><td class="num"> -22.4</td><td class="left">'Emmanuel'</td></tr>
-     <tr><td class="num"> -21.0</td><td class="left">'ABS'</td></tr>
-     <tr><td class="num"> -20.9</td><td class="left">'dpl'</td></tr>
-     <tr><td class="num"> -18.9</td><td class="left">'Raoul'</td></tr>
-     <tr><td class="num"> -15.6</td><td class="left">'Ronald'</td></tr>
-     <tr><td class="num"> -15.2</td><td class="left">'Ghatotkacha'</td></tr>
-     <tr><td class="num"> -11.8</td><td class="left">'Daisy'</td></tr>
-     <tr><td class="num"> -11.8</td><td class="left">'Lukas'</td></tr>
-     <tr><td class="num"> -11.0</td><td class="left">'HuB34'</td></tr>
-     <tr><td class="num">  -7.9</td><td class="left">'joseba'</td></tr>
-     <tr><td class="num">  -7.7</td><td class="left">'Iceshark7'</td></tr>
-     <tr><td class="num">  -3.7</td><td class="left">'Daniel'</td></tr>
-     <tr><td class="num">  -2.4</td><td class="left">'fabian'</td></tr>
-     <tr><td class="num">  -1.0</td><td class="left">'Craven'</td></tr>
-     <tr><td class="num">  -0.8</td><td class="left">'JuSt'</td></tr>
-     <tr><td class="num">  -0.7</td><td class="left">'Wuzzy'</td></tr>
+     <tr><td class="num"> -23.9</td><td class="left">'ged'</td></tr>
+     <tr><td class="num"> -22.1</td><td class="left">'hendrik'</td></tr>
+     <tr><td class="num"> -20.8</td><td class="left">'ABS'</td></tr>
+     <tr><td class="num"> -20.7</td><td class="left">'dpl'</td></tr>
+     <tr><td class="num"> -18.8</td><td class="left">'Raoul'</td></tr>
+     <tr><td class="num"> -15.5</td><td class="left">'Ronald'</td></tr>
+     <tr><td class="num"> -15.0</td><td class="left">'Ghatotkacha'</td></tr>
+     <tr><td class="num"> -11.7</td><td class="left">'Lukas'</td></tr>
+     <tr><td class="num"> -11.6</td><td class="left">'Daisy'</td></tr>
+     <tr><td class="num"> -10.9</td><td class="left">'HuB34'</td></tr>
+     <tr><td class="num">  -7.6</td><td class="left">'joseba'</td></tr>
+     <tr><td class="num">  -7.4</td><td class="left">'Iceshark7'</td></tr>
+     <tr><td class="num">  -3.6</td><td class="left">'Daniel'</td></tr>
+     <tr><td class="num">  -2.3</td><td class="left">'fabian'</td></tr>
+     <tr><td class="num">  -2.0</td><td class="left">'Hairball'</td></tr>
+     <tr><td class="num">  -0.9</td><td class="left">'Craven'</td></tr>
+     <tr><td class="num">  -0.6</td><td class="left">'JuSt'</td></tr>
+     <tr><td class="num">  -0.5</td><td class="left">'Wuzzy'</td></tr>
      <tr><td class="num">   0.0</td><td class="left">'Freshman'</td></tr>
-     <tr><td class="num">   0.7</td><td class="left">'mrduke'</td></tr>
-     <tr><td class="num">   1.9</td><td class="left">'para_doks'</td></tr>
+     <tr><td class="num">   0.8</td><td class="left">'mrduke'</td></tr>
+     <tr><td class="num">   2.0</td><td class="left">'para_doks'</td></tr>
      <tr><td class="num">   2.2</td><td class="left">'Tobias'</td></tr>
-     <tr><td class="num">   3.0</td><td class="left">'Guglielmo'</td></tr>
+     <tr><td class="num">   2.7</td><td class="left">'U-Punkt'</td></tr>
+     <tr><td class="num">   3.2</td><td class="left">'Guglielmo'</td></tr>
      <tr><td class="num">   3.7</td><td class="left">'Kevin'</td></tr>
-     <tr><td class="num">   4.0</td><td class="left">'U-Punkt'</td></tr>
-     <tr><td class="num">   4.4</td><td class="left">'Andy'</td></tr>
-     <tr><td class="num">   4.5</td><td class="left">'serpent'</td></tr>
-     <tr><td class="num">   6.6</td><td class="left">'Austin'</td></tr>
-     <tr><td class="num">   8.5</td><td class="left">'shoki'</td></tr>
-     <tr><td class="num">  10.0</td><td class="left">'Tiza'</td></tr>
-     <tr><td class="num">  11.1</td><td class="left">'ShadowPhrogg32642342'</td></tr>
-     <tr><td class="num">  12.7</td><td class="left">'Andreas'</td></tr>
-     <tr><td class="num">  13.5</td><td class="left">'alfred69'</td></tr>
-     <tr><td class="num">  13.8</td><td class="left">'Chocolate Zero'</td></tr>
-     <tr><td class="num">  14.6</td><td class="left">'Mark P.'</td></tr>
-     <tr><td class="num">  14.7</td><td class="left">'Sim_Ed'</td></tr>
-     <tr><td class="num">  14.9</td><td class="left">'Agnieszka'</td></tr>
+     <tr><td class="num">   4.5</td><td class="left">'Andy'</td></tr>
+     <tr><td class="num">   4.6</td><td class="left">'serpent'</td></tr>
+     <tr><td class="num">   7.0</td><td class="left">'Austin'</td></tr>
+     <tr><td class="num">   8.6</td><td class="left">'shoki'</td></tr>
+     <tr><td class="num">  10.1</td><td class="left">'Tiza'</td></tr>
+     <tr><td class="num">  11.2</td><td class="left">'ShadowPhrogg32642342'</td></tr>
+     <tr><td class="num">  12.8</td><td class="left">'Andreas'</td></tr>
+     <tr><td class="num">  13.6</td><td class="left">'alfred69'</td></tr>
+     <tr><td class="num">  14.0</td><td class="left">'Chocolate Zero'</td></tr>
+     <tr><td class="num">  14.2</td><td class="left">'Mark P.'</td></tr>
+     <tr><td class="num">  14.6</td><td class="left">'AlephD'</td></tr>
+     <tr><td class="num">  14.8</td><td class="left">'Sim_Ed'</td></tr>
+     <tr><td class="num">  15.0</td><td class="left">'Agnieszka'</td></tr>
      <tr><td class="num">  19.5</td><td class="left">'Alex'</td></tr>
-     <tr><td class="num">  21.4</td><td class="left">'Antonio EE'</td></tr>
-     <tr><td class="num">  22.3</td><td class="left">'Klaus'</td></tr>
-     <tr><td class="num">  22.4</td><td class="left">'Marc-Hendrik'</td></tr>
-     <tr><td class="num">  22.7</td><td class="left">'Chris'</td></tr>
-     <tr><td class="num">  23.1</td><td class="left">'Angolino'</td></tr>
-     <tr><td class="num">  23.6</td><td class="left">'Bent'</td></tr>
-     <tr><td class="num">  23.6</td><td class="left">'Thomas'</td></tr>
-     <tr><td class="num">  24.4</td><td class="left">'hdwow'</td></tr>
+     <tr><td class="num">  21.5</td><td class="left">'Antonio EE'</td></tr>
+     <tr><td class="num">  22.4</td><td class="left">'Klaus'</td></tr>
+     <tr><td class="num">  22.6</td><td class="left">'Marc-Hendrik'</td></tr>
+     <tr><td class="num">  22.9</td><td class="left">'Chris'</td></tr>
+     <tr><td class="num">  23.3</td><td class="left">'Angolino'</td></tr>
+     <tr><td class="num">  23.7</td><td class="left">'Thomas'</td></tr>
+     <tr><td class="num">  24.0</td><td class="left">'Bent'</td></tr>
+     <tr><td class="num">  24.5</td><td class="left">'hdwow'</td></tr>
      <tr><td class="num">  25.1</td><td class="left">'Gottseinsohn'</td></tr>
-     <tr><td class="num">  25.5</td><td class="left">'Hans-HD'</td></tr>
+     <tr><td class="num">  25.7</td><td class="left">'Hans-HD'</td></tr>
      <tr><td class="num">  26.1</td><td class="left">'Ale'</td></tr>
      <tr><td class="num">  27.3</td><td class="left">'Little_Mole'</td></tr>
-     <tr><td class="num">  27.4</td><td class="left">'J3FF'</td></tr>
-     <tr><td class="num">  28.6</td><td class="left">'biotopa'</td></tr>
+     <tr><td class="num">  27.5</td><td class="left">'J3FF'</td></tr>
+     <tr><td class="num">  28.7</td><td class="left">'biotopa'</td></tr>
      <tr><td class="num">  29.3</td><td class="left">'oblo'</td></tr>
      <tr><td class="num">  29.6</td><td class="left">'redsantz'</td></tr>
-     <tr><td class="num">  29.9</td><td class="left">'geembo_90'</td></tr>
-     <tr><td class="num">  30.6</td><td class="left">'Edgar_Flesk'</td></tr>
+     <tr><td class="num">  30.0</td><td class="left">'geembo_90'</td></tr>
+     <tr><td class="num">  30.8</td><td class="left">'Edgar_Flesk'</td></tr>
      <tr><td class="num">  31.1</td><td class="left">'Melanie'</td></tr>
-     <tr><td class="num">  31.3</td><td class="left">'IChrisI'</td></tr>
-     <tr><td class="num">  31.5</td><td class="left">'Vinksu'</td></tr>
-     <tr><td class="num">  31.7</td><td class="left">'erich'</td></tr>
-     <tr><td class="num">  31.7</td><td class="left">'NorthForty'</td></tr>
+     <tr><td class="num">  31.4</td><td class="left">'IChrisI'</td></tr>
+     <tr><td class="num">  31.6</td><td class="left">'Vinksu'</td></tr>
+     <tr><td class="num">  31.8</td><td class="left">'erich'</td></tr>
+     <tr><td class="num">  31.8</td><td class="left">'NorthForty'</td></tr>
      <tr><td class="num">  31.9</td><td class="left">'Gorn'</td></tr>
-     <tr><td class="num">  32.1</td><td class="left">'Davacardo'</td></tr>
+     <tr><td class="num">  32.2</td><td class="left">'Davacardo'</td></tr>
      <tr><td class="num">  34.8</td><td class="left">'niebie'</td></tr>
-     <tr><td class="num">  34.8</td><td class="left">'MicWa'</td></tr>
+     <tr><td class="num">  34.9</td><td class="left">'MicWa'</td></tr>
      <tr><td class="num">  35.0</td><td class="left">'WP319'</td></tr>
-     <tr><td class="num">  35.3</td><td class="left">'Kosby'</td></tr>
-     <tr><td class="num">  37.2</td><td class="left">'Rugby4ever'</td></tr>
+     <tr><td class="num">  35.4</td><td class="left">'Kosby'</td></tr>
+     <tr><td class="num">  37.1</td><td class="left">'Rugby4ever'</td></tr>
      <tr><td class="num">  38.2</td><td class="left">'mecke'</td></tr>
-     <tr><td class="num">  38.5</td><td class="left">'Drotten'</td></tr>
-     <tr><td class="num">  38.8</td><td class="left">'Archcorenth'</td></tr>
-     <tr><td class="num">  39.1</td><td class="left">'Harry Lim'</td></tr>
-     <tr><td class="num">  39.2</td><td class="left">'B-man'</td></tr>
-     <tr><td class="num">  39.6</td><td class="left">'Nfol'</td></tr>
-     <tr><td class="num">  40.7</td><td class="left">'Tiger'</td></tr>
+     <tr><td class="num">  38.4</td><td class="left">'WesleyCrusher'</td></tr>
+     <tr><td class="num">  38.6</td><td class="left">'Drotten'</td></tr>
+     <tr><td class="num">  38.9</td><td class="left">'Archcorenth'</td></tr>
+     <tr><td class="num">  39.2</td><td class="left">'Harry Lim'</td></tr>
+     <tr><td class="num">  39.4</td><td class="left">'B-man'</td></tr>
+     <tr><td class="num">  39.7</td><td class="left">'Nfol'</td></tr>
+     <tr><td class="num">  40.8</td><td class="left">'Tiger'</td></tr>
      <tr><td class="num">  41.0</td><td class="left">'gringer'</td></tr>
-     <tr><td class="num">  41.3</td><td class="left">'Vlad'</td></tr>
-     <tr><td class="num">  41.3</td><td class="left">'Snaily'</td></tr>
-     <tr><td class="num">  42.6</td><td class="left">'Momcat'</td></tr>
-     <tr><td class="num">  42.7</td><td class="left">'Liam Sheehan'</td></tr>
-     <tr><td class="num">  43.1</td><td class="left">'Breezy'</td></tr>
-     <tr><td class="num">  43.3</td><td class="left">'Uli'</td></tr>
+     <tr><td class="num">  41.4</td><td class="left">'Vlad'</td></tr>
+     <tr><td class="num">  41.4</td><td class="left">'Snaily'</td></tr>
+     <tr><td class="num">  42.7</td><td class="left">'Momcat'</td></tr>
+     <tr><td class="num">  42.8</td><td class="left">'Liam Sheehan'</td></tr>
+     <tr><td class="num">  43.2</td><td class="left">'Breezy'</td></tr>
+     <tr><td class="num">  43.4</td><td class="left">'Uli'</td></tr>
      <tr><td class="num">  45.1</td><td class="left">'Tarim'</td></tr>
-     <tr><td class="num">  45.6</td><td class="left">'IntKecsk'</td></tr>
-     <tr><td class="num">  45.8</td><td class="left">'tjRaven'</td></tr>
-     <tr><td class="num">  47.0</td><td class="left">'ntaeijr'</td></tr>
-     <tr><td class="num">  47.1</td><td class="left">'mhatta'</td></tr>
-     <tr><td class="num">  48.7</td><td class="left">'Zak'</td></tr>
-     <tr><td class="num">  49.2</td><td class="left">'rima'</td></tr>
+     <tr><td class="num">  45.7</td><td class="left">'IntKecsk'</td></tr>
+     <tr><td class="num">  46.0</td><td class="left">'tjRaven'</td></tr>
+     <tr><td class="num">  47.1</td><td class="left">'ntaeijr'</td></tr>
+     <tr><td class="num">  47.2</td><td class="left">'mhatta'</td></tr>
+     <tr><td class="num">  48.9</td><td class="left">'Zak'</td></tr>
      <tr><td class="num">  49.3</td><td class="left">'Valkyrie2'</td></tr>
-     <tr><td class="num">  49.6</td><td class="left">'Sandra'</td></tr>
-     <tr><td class="num">  50.5</td><td class="left">'jdcampo'</td></tr>
-     <tr><td class="num">  51.0</td><td class="left">'Jeffrey S'</td></tr>
+     <tr><td class="num">  49.4</td><td class="left">'rima'</td></tr>
+     <tr><td class="num">  49.7</td><td class="left">'Sandra'</td></tr>
+     <tr><td class="num">  50.7</td><td class="left">'jdcampo'</td></tr>
+     <tr><td class="num">  51.1</td><td class="left">'Jeffrey S'</td></tr>
      <tr><td class="num">  51.4</td><td class="left">'brynn'</td></tr>
      <tr><td class="num">  51.5</td><td class="left">'AkRa'</td></tr>
      <tr><td class="num">  51.8</td><td class="left">'Slav'</td></tr>
-     <tr><td class="num">  51.9</td><td class="left">'Vaily'</td></tr>
+     <tr><td class="num">  52.0</td><td class="left">'Vaily'</td></tr>
      <tr><td class="num">  53.1</td><td class="left">'Turbogurk'</td></tr>
-     <tr><td class="num">  53.1</td><td class="left">'Cyphase'</td></tr>
      <tr><td class="num">  53.2</td><td class="left">'Neophilus'</td></tr>
+     <tr><td class="num">  53.2</td><td class="left">'Cyphase'</td></tr>
      <tr><td class="num">  55.5</td><td class="left">'krazy62'</td></tr>
-     <tr><td class="num">  56.3</td><td class="left">'Adonica'</td></tr>
+     <tr><td class="num">  56.4</td><td class="left">'Adonica'</td></tr>
      <tr><td class="num">  56.7</td><td class="left">'Kadu'</td></tr>
-     <tr><td class="num">  58.9</td><td class="left">'Mecki'</td></tr>
-     <tr><td class="num">  59.7</td><td class="left">'Sopoforic'</td></tr>
+     <tr><td class="num">  59.0</td><td class="left">'Mecki'</td></tr>
+     <tr><td class="num">  59.6</td><td class="left">'Sopoforic'</td></tr>
      <tr><td class="num">  61.7</td><td class="left">'Asbel'</td></tr>
-     <tr><td class="num">  63.5</td><td class="left">'Meeve'</td></tr>
+     <tr><td class="num">  63.6</td><td class="left">'Meeve'</td></tr>
+     <tr><td class="num">  64.7</td><td class="left">'GiannuzzITA'</td></tr>
      <tr><td class="num">  66.0</td><td class="left">'ael'</td></tr>
-     <tr><td class="num">  66.3</td><td class="left">'Fred_the_wise'</td></tr>
-     <tr><td class="num">  66.4</td><td class="left">'Samuel'</td></tr>
+     <tr><td class="num">  66.4</td><td class="left">'Fred_the_wise'</td></tr>
+     <tr><td class="num">  66.5</td><td class="left">'Samuel'</td></tr>
      <tr><td class="num">  66.8</td><td class="left">'schmusi20'</td></tr>
      <tr><td class="num">  67.1</td><td class="left">'Sparkey'</td></tr>
      <tr><td class="num">  67.4</td><td class="left">'Alf'</td></tr>
      <tr><td class="num">  69.0</td><td class="left">'Magnus and Susi'</td></tr>
-     <tr><td class="num">  69.7</td><td class="left">'Zhura'</td></tr>
-     <tr><td class="num">  70.1</td><td class="left">'xmouse'</td></tr>
+     <tr><td class="num">  69.8</td><td class="left">'Zhura'</td></tr>
+     <tr><td class="num">  70.2</td><td class="left">'xmouse'</td></tr>
      <tr><td class="num">  70.7</td><td class="left">'tasker'</td></tr>
      <tr><td class="num">  71.7</td><td class="left">'Joona'</td></tr>
-     <tr><td class="num">  72.0</td><td class="left">'AQZ'</td></tr>
-     <tr><td class="num">  73.4</td><td class="left">'crypto_rsa'</td></tr>
+     <tr><td class="num">  72.1</td><td class="left">'AQZ'</td></tr>
+     <tr><td class="num">  73.5</td><td class="left">'crypto_rsa'</td></tr>
      <tr><td class="num">  73.9</td><td class="left">'Dvorhagen'</td></tr>
-     <tr><td class="num">  74.7</td><td class="left">'Eselchen'</td></tr>
+     <tr><td class="num">  74.8</td><td class="left">'Eselchen'</td></tr>
      <tr><td class="num">  74.9</td><td class="left">'Nicol?s'</td></tr>
      <tr><td class="num">  74.9</td><td class="left">'jojo'</td></tr>
      <tr><td class="num">  75.1</td><td class="left">'AsuCaga'</td></tr>
      <tr><td class="num">  78.3</td><td class="left">'colonel crayon'</td></tr>
-     <tr><td class="num">  79.2</td><td class="left">'Kroetchen'</td></tr>
+     <tr><td class="num">  79.3</td><td class="left">'Kroetchen'</td></tr>
      <tr><td class="num">  80.2</td><td class="left">'Agares'</td></tr>
      <tr><td class="num">  84.8</td><td class="left">'Miel56'</td></tr>
      <tr><td class="num">  90.0</td><td class="left">'The red O'</td></tr>

Modified: homepage/input/table-rat.html
===================================================================
--- homepage/input/table-rat.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/table-rat.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -1,21 +1,21 @@
   <table>
-    <caption>$$Rating_Statistics$$ $$May$$ 2008</caption>
+    <caption>$$Rating_Statistics$$ $$June$$ 2008</caption>
     <colgroup><col width="80"><col width="80"><col width="220"></colgroup>
     <tr><th>$$count$$</th><th>$$average$$</th><th class="left">$$user$$</th></tr>    <tr><td class="num">1062</td><td class="num"> 5.06</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1056</td><td class="num"> 4.83</td><td class="left">'Taztunes'</td></tr>
-    <tr><td class="num">974</td><td class="num"> 5.03</td><td class="left">'dev0'</td></tr>
-    <tr><td class="num">873</td><td class="num"> 4.79</td><td class="left">'daydreamer'</td></tr>
+    <tr><td class="num">998</td><td class="num"> 5.02</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num">887</td><td class="num"> 4.80</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num">871</td><td class="num"> 5.09</td><td class="left">'Stupid'</td></tr>
     <tr><td class="num">653</td><td class="num"> 5.01</td><td class="left">'Duffy'</td></tr>
     <tr><td class="num">628</td><td class="num"> 5.00</td><td class="left">'Moneymaker'</td></tr>
     <tr><td class="num">622</td><td class="num"> 4.22</td><td class="left">'shoki'</td></tr>
-    <tr><td class="num">596</td><td class="num"> 4.82</td><td class="left">'U-Punkt'</td></tr>
+    <tr><td class="num">618</td><td class="num"> 4.80</td><td class="left">'U-Punkt'</td></tr>
     <tr><td class="num">552</td><td class="num"> 5.14</td><td class="left">'dpl'</td></tr>
     <tr><td class="num">534</td><td class="num"> 4.97</td><td class="left">'B-Huff'</td></tr>
+    <tr><td class="num">518</td><td class="num"> 4.42</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num">511</td><td class="num"> 5.30</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num">487</td><td class="num"> 5.02</td><td class="left">'Ronald'</td></tr>
     <tr><td class="num">448</td><td class="num"> 5.08</td><td class="left">'Johannes'</td></tr>
-    <tr><td class="num">438</td><td class="num"> 4.23</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num">433</td><td class="num"> 4.36</td><td class="left">'ged'</td></tr>
     <tr><td class="num">388</td><td class="num"> 4.86</td><td class="left">'Gloop'</td></tr>
     <tr><td class="num">369</td><td class="num"> 4.04</td><td class="left">'Vinksu'</td></tr>
@@ -34,6 +34,7 @@
     <tr><td class="num"> 75</td><td class="num"> 4.52</td><td class="left">'Kroetchen'</td></tr>
     <tr><td class="num"> 72</td><td class="num"> 5.63</td><td class="left">'Wuzzy'</td></tr>
     <tr><td class="num"> 62</td><td class="num"> 6.03</td><td class="left">'mecke'</td></tr>
+    <tr><td class="num"> 52</td><td class="num"> 6.56</td><td class="left">'Hairball'</td></tr>
     <tr><td class="num"> 51</td><td class="num"> 6.39</td><td class="left">'Little_Mole'</td></tr>
     <tr><td class="num"> 50</td><td class="num"> 5.26</td><td class="left">'Daniel'</td></tr>
     <tr><td class="num"> 49</td><td class="num"> 6.02</td><td class="left">'oblo'</td></tr>
@@ -45,7 +46,7 @@
     <tr><td class="num"> 31</td><td class="num"> 7.61</td><td class="left">'AkRa'</td></tr>
     <tr><td class="num"> 30</td><td class="num"> 4.40</td><td class="left">'Archcorenth'</td></tr>
     <tr><td class="num"> 25</td><td class="num"> 4.88</td><td class="left">'Drotten'</td></tr>
-    <tr><td class="num"> 24</td><td class="num"> 7.13</td><td class="left">'Mark P.'</td></tr>
+    <tr><td class="num"> 25</td><td class="num"> 7.16</td><td class="left">'Mark P.'</td></tr>
     <tr><td class="num"> 19</td><td class="num"> 3.74</td><td class="left">'Eselchen'</td></tr>
     <tr><td class="num"> 17</td><td class="num"> 5.53</td><td class="left">'Jeffrey S'</td></tr>
     <tr><td class="num"> 16</td><td class="num"> 7.63</td><td class="left">'Ghatotkacha'</td></tr>
@@ -54,6 +55,7 @@
     <tr><td class="num"> 13</td><td class="num"> 5.23</td><td class="left">'Samuel'</td></tr>
     <tr><td class="num"> 11</td><td class="num"> 6.36</td><td class="left">'ShadowPhrogg32642342'</td></tr>
     <tr><td class="num"> 10</td><td class="num"> 7.80</td><td class="left">'hdwow'</td></tr>
+    <tr><td class="num">  9</td><td class="num"> 8.22</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num">  8</td><td class="num"> 3.25</td><td class="left">'Vlad'</td></tr>
     <tr><td class="num">  8</td><td class="num"> 7.63</td><td class="left">'Antonio EE'</td></tr>
     <tr><td class="num">  7</td><td class="num"> 4.29</td><td class="left">'Snaily'</td></tr>

Modified: homepage/input/table-solved.html
===================================================================
--- homepage/input/table-solved.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/table-solved.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -1,5 +1,5 @@
   <table>
-    <caption>$$Solved_Level_Statistics$$ $$May$$ 2008</caption>
+    <caption>$$Solved_Level_Statistics$$ $$June$$ 2008</caption>
     <colgroup><col width="130"><col width="130"><col width="130"><col width="240"></colgroup>
     <tr><th>$$difficult$$</th><th>$$easy$$</th><th>$$total$$</th><th class="left">$$user$$</th></tr>
     <tr><td class="num">1045/1045</td><td class="num">189/189</td><td class="num">100.00%</td><td class="left">'ryujun'</td></tr>
@@ -8,11 +8,11 @@
     <tr><td class="num">1029/1045</td><td class="num">183/189</td><td class="num"> 98.22%</td><td class="left">'Craven'</td></tr>
     <tr><td class="num">1031/1045</td><td class="num">179/189</td><td class="num"> 98.06%</td><td class="left">'Moneymaker'</td></tr>
     <tr><td class="num">1016/1045</td><td class="num">182/189</td><td class="num"> 97.08%</td><td class="left">'Ronald'</td></tr>
+    <tr><td class="num">1015/1045</td><td class="num">183/189</td><td class="num"> 97.08%</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num">1021/1045</td><td class="num">177/189</td><td class="num"> 97.08%</td><td class="left">'Malla'</td></tr>
     <tr><td class="num">1014/1045</td><td class="num">175/189</td><td class="num"> 96.35%</td><td class="left">'Stupid'</td></tr>
+    <tr><td class="num">1001/1045</td><td class="num">179/189</td><td class="num"> 95.62%</td><td class="left">'dev0'</td></tr>
     <tr><td class="num"> 999/1045</td><td class="num">177/189</td><td class="num"> 95.30%</td><td class="left">'biotopa'</td></tr>
-    <tr><td class="num"> 995/1045</td><td class="num">175/189</td><td class="num"> 94.81%</td><td class="left">'daydreamer'</td></tr>
-    <tr><td class="num"> 977/1045</td><td class="num">173/189</td><td class="num"> 93.19%</td><td class="left">'dev0'</td></tr>
     <tr><td class="num"> 970/1045</td><td class="num">166/189</td><td class="num"> 92.06%</td><td class="left">'Andy'</td></tr>
     <tr><td class="num"> 949/1045</td><td class="num">170/189</td><td class="num"> 90.68%</td><td class="left">'para_doks'</td></tr>
     <tr><td class="num"> 945/1045</td><td class="num">172/189</td><td class="num"> 90.52%</td><td class="left">'Daisy'</td></tr>
@@ -32,16 +32,18 @@
     <tr><td class="num"> 950/1045</td><td class="num">  0/189</td><td class="num"> 76.99%</td><td class="left">'Tarim'</td></tr>
     <tr><td class="num"> 804/1045</td><td class="num">142/189</td><td class="num"> 76.66%</td><td class="left">'Safalra'</td></tr>
     <tr><td class="num"> 938/1045</td><td class="num">  1/189</td><td class="num"> 76.09%</td><td class="left">'Ale'</td></tr>
-    <tr><td class="num"> 772/1045</td><td class="num">113/189</td><td class="num"> 71.72%</td><td class="left">'U-Punkt'</td></tr>
+    <tr><td class="num"> 782/1045</td><td class="num">132/189</td><td class="num"> 74.07%</td><td class="left">'AlephD'</td></tr>
+    <tr><td class="num"> 773/1045</td><td class="num">116/189</td><td class="num"> 72.04%</td><td class="left">'U-Punkt'</td></tr>
     <tr><td class="num"> 739/1045</td><td class="num">131/189</td><td class="num"> 70.50%</td><td class="left">'ABS'</td></tr>
     <tr><td class="num"> 740/1045</td><td class="num">123/189</td><td class="num"> 69.94%</td><td class="left">'dpl'</td></tr>
+    <tr><td class="num"> 739/1045</td><td class="num">119/189</td><td class="num"> 69.53%</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 728/1045</td><td class="num">126/189</td><td class="num"> 69.21%</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num"> 755/1045</td><td class="num"> 96/189</td><td class="num"> 68.96%</td><td class="left">'brynn'</td></tr>
     <tr><td class="num"> 762/1045</td><td class="num"> 73/189</td><td class="num"> 67.67%</td><td class="left">'redsantz'</td></tr>
-    <tr><td class="num"> 710/1045</td><td class="num">116/189</td><td class="num"> 66.94%</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 734/1045</td><td class="num"> 82/189</td><td class="num"> 66.13%</td><td class="left">'bojster'</td></tr>
     <tr><td class="num"> 782/1045</td><td class="num"> 33/189</td><td class="num"> 66.05%</td><td class="left">'Sim_Ed'</td></tr>
     <tr><td class="num"> 766/1045</td><td class="num"> 37/189</td><td class="num"> 65.07%</td><td class="left">'alfred69'</td></tr>
+    <tr><td class="num"> 648/1045</td><td class="num">128/189</td><td class="num"> 62.88%</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num"> 681/1045</td><td class="num"> 78/189</td><td class="num"> 61.51%</td><td class="left">'HuB34'</td></tr>
     <tr><td class="num"> 659/1045</td><td class="num"> 95/189</td><td class="num"> 61.10%</td><td class="left">'Marc-Hendrik'</td></tr>
     <tr><td class="num"> 633/1045</td><td class="num">110/189</td><td class="num"> 60.21%</td><td class="left">'Raoul'</td></tr>
@@ -49,8 +51,7 @@
     <tr><td class="num"> 714/1045</td><td class="num">  0/189</td><td class="num"> 57.86%</td><td class="left">'Gottseinsohn'</td></tr>
     <tr><td class="num"> 620/1045</td><td class="num"> 72/189</td><td class="num"> 56.08%</td><td class="left">'Breezy'</td></tr>
     <tr><td class="num"> 636/1045</td><td class="num"> 55/189</td><td class="num"> 56.00%</td><td class="left">'fabian'</td></tr>
-    <tr><td class="num"> 566/1045</td><td class="num">117/189</td><td class="num"> 55.35%</td><td class="left">'Alexandros'</td></tr>
-    <tr><td class="num"> 569/1045</td><td class="num">113/189</td><td class="num"> 55.27%</td><td class="left">'Mark P.'</td></tr>
+    <tr><td class="num"> 569/1045</td><td class="num">114/189</td><td class="num"> 55.35%</td><td class="left">'Mark P.'</td></tr>
     <tr><td class="num"> 588/1045</td><td class="num"> 93/189</td><td class="num"> 55.19%</td><td class="left">'Ghatotkacha'</td></tr>
     <tr><td class="num"> 599/1045</td><td class="num"> 80/189</td><td class="num"> 55.02%</td><td class="left">'serpent'</td></tr>
     <tr><td class="num"> 577/1045</td><td class="num">100/189</td><td class="num"> 54.86%</td><td class="left">'Zekobah'</td></tr>
@@ -62,6 +63,7 @@
     <tr><td class="num"> 506/1045</td><td class="num">108/189</td><td class="num"> 49.76%</td><td class="left">'Agnieszka'</td></tr>
     <tr><td class="num"> 613/1045</td><td class="num">  0/189</td><td class="num"> 49.68%</td><td class="left">'Little_Mole'</td></tr>
     <tr><td class="num"> 500/1045</td><td class="num"> 92/189</td><td class="num"> 47.97%</td><td class="left">'Kosby'</td></tr>
+    <tr><td class="num"> 478/1045</td><td class="num">106/189</td><td class="num"> 47.33%</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 478/1045</td><td class="num">101/189</td><td class="num"> 46.92%</td><td class="left">'Austin'</td></tr>
     <tr><td class="num"> 504/1045</td><td class="num"> 62/189</td><td class="num"> 45.87%</td><td class="left">'Hans-HD'</td></tr>
     <tr><td class="num"> 519/1045</td><td class="num"> 37/189</td><td class="num"> 45.06%</td><td class="left">'Valkyrie2'</td></tr>
@@ -71,8 +73,8 @@
     <tr><td class="num"> 506/1045</td><td class="num"> 12/189</td><td class="num"> 41.98%</td><td class="left">'Duffy'</td></tr>
     <tr><td class="num"> 446/1045</td><td class="num"> 65/189</td><td class="num"> 41.41%</td><td class="left">'Tiza'</td></tr>
     <tr><td class="num"> 503/1045</td><td class="num">  7/189</td><td class="num"> 41.33%</td><td class="left">'Edgar_Flesk'</td></tr>
+    <tr><td class="num"> 397/1045</td><td class="num"> 93/189</td><td class="num"> 39.71%</td><td class="left">'Hairball'</td></tr>
     <tr><td class="num"> 440/1045</td><td class="num"> 50/189</td><td class="num"> 39.71%</td><td class="left">'ged'</td></tr>
-    <tr><td class="num"> 390/1045</td><td class="num"> 93/189</td><td class="num"> 39.14%</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 467/1045</td><td class="num">  6/189</td><td class="num"> 38.33%</td><td class="left">'Vinksu'</td></tr>
     <tr><td class="num"> 438/1045</td><td class="num">  3/189</td><td class="num"> 35.74%</td><td class="left">'oblo'</td></tr>
     <tr><td class="num"> 392/1045</td><td class="num"> 40/189</td><td class="num"> 35.01%</td><td class="left">'hendrik'</td></tr>
@@ -91,6 +93,7 @@
     <tr><td class="num"> 350/1045</td><td class="num"> 25/189</td><td class="num"> 30.39%</td><td class="left">'IntKecsk'</td></tr>
     <tr><td class="num"> 323/1045</td><td class="num"> 52/189</td><td class="num"> 30.39%</td><td class="left">'Kevin'</td></tr>
     <tr><td class="num"> 277/1045</td><td class="num"> 90/189</td><td class="num"> 29.74%</td><td class="left">'gringer'</td></tr>
+    <tr><td class="num"> 347/1045</td><td class="num"> 15/189</td><td class="num"> 29.34%</td><td class="left">'WesleyCrusher'</td></tr>
     <tr><td class="num"> 331/1045</td><td class="num"> 14/189</td><td class="num"> 27.96%</td><td class="left">'Archcorenth'</td></tr>
     <tr><td class="num"> 281/1045</td><td class="num"> 63/189</td><td class="num"> 27.88%</td><td class="left">'erich'</td></tr>
     <tr><td class="num"> 295/1045</td><td class="num"> 29/189</td><td class="num"> 26.26%</td><td class="left">'Tiger'</td></tr>
@@ -142,6 +145,7 @@
     <tr><td class="num">  67/1045</td><td class="num">  7/189</td><td class="num">  6.00%</td><td class="left">'Joona'</td></tr>
     <tr><td class="num">  54/1045</td><td class="num"> 18/189</td><td class="num">  5.83%</td><td class="left">'Sopoforic'</td></tr>
     <tr><td class="num">  54/1045</td><td class="num"> 12/189</td><td class="num">  5.35%</td><td class="left">'Samuel'</td></tr>
+    <tr><td class="num">  56/1045</td><td class="num">  9/189</td><td class="num">  5.27%</td><td class="left">'GiannuzzITA'</td></tr>
     <tr><td class="num">  47/1045</td><td class="num"> 17/189</td><td class="num">  5.19%</td><td class="left">'crypto_rsa'</td></tr>
     <tr><td class="num">  44/1045</td><td class="num"> 16/189</td><td class="num">  4.86%</td><td class="left">'Agares'</td></tr>
     <tr><td class="num">  33/1045</td><td class="num"> 23/189</td><td class="num">  4.54%</td><td class="left">'Sparkey'</td></tr>

Modified: homepage/input/table-wr.html
===================================================================
--- homepage/input/table-wr.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/table-wr.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -1,50 +1,51 @@
   <table>
-    <caption>$$Worldrecord_Statistics$$ $$May$$ 2008</caption>
+    <caption>$$Worldrecord_Statistics$$ $$June$$ 2008</caption>
     <colgroup><col width="80"><col width="80"><col width="470"></colgroup>
     <tr><th>$$total$$</th><th>$$shared$$</th><th class="left">$$user$$</th></tr>
-    <tr><td class="num">987</td><td class="num">236</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">974</td><td class="num">245</td><td class="left">'Moneymaker'</td></tr>
     <tr><td class="num">160</td><td class="num"> 92</td><td class="left">'Stupid'</td></tr>
-    <tr><td class="num">116</td><td class="num">108</td><td class="left">'Johannes'</td></tr>
-    <tr><td class="num"> 83</td><td class="num"> 69</td><td class="left">'daydreamer'</td></tr>
+    <tr><td class="num">115</td><td class="num">107</td><td class="left">'Johannes'</td></tr>
+    <tr><td class="num">107</td><td class="num"> 85</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num"> 59</td><td class="num"> 41</td><td class="left">'Duffy'</td></tr>
-    <tr><td class="num"> 51</td><td class="num"> 42</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num"> 55</td><td class="num"> 45</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num"> 49</td><td class="num"> 37</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num"> 47</td><td class="num"> 46</td><td class="left">'Great Scott'</td></tr>
-    <tr><td class="num"> 45</td><td class="num"> 31</td><td class="left">'Malla'</td></tr>
-    <tr><td class="num"> 37</td><td class="num"> 24</td><td class="left">'ryujun'</td></tr>
+    <tr><td class="num"> 44</td><td class="num"> 30</td><td class="left">'Malla'</td></tr>
+    <tr><td class="num"> 39</td><td class="num"> 30</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num"> 35</td><td class="num"> 27</td><td class="left">'Zekobah'</td></tr>
     <tr><td class="num"> 35</td><td class="num"> 33</td><td class="left">'Django'</td></tr>
-    <tr><td class="num"> 32</td><td class="num"> 26</td><td class="left">'Alexandros'</td></tr>
-    <tr><td class="num"> 32</td><td class="num"> 28</td><td class="left">'Iceshark7'</td></tr>
+    <tr><td class="num"> 31</td><td class="num"> 27</td><td class="left">'Iceshark7'</td></tr>
     <tr><td class="num"> 30</td><td class="num"> 29</td><td class="left">'joseba'</td></tr>
     <tr><td class="num"> 27</td><td class="num"> 26</td><td class="left">'Ghatotkacha'</td></tr>
+    <tr><td class="num"> 25</td><td class="num"> 17</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 23</td><td class="num"> 18</td><td class="left">'ged'</td></tr>
-    <tr><td class="num"> 20</td><td class="num"> 15</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 20</td><td class="num"> 19</td><td class="left">'Safalra'</td></tr>
-    <tr><td class="num"> 19</td><td class="num"> 16</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 19</td><td class="num"> 17</td><td class="left">'B-Huff'</td></tr>
+    <tr><td class="num"> 17</td><td class="num"> 14</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 17</td><td class="num"> 17</td><td class="left">'bojster'</td></tr>
-    <tr><td class="num"> 16</td><td class="num"> 14</td><td class="left">'HuB34'</td></tr>
+    <tr><td class="num"> 16</td><td class="num"> 15</td><td class="left">'HuB34'</td></tr>
     <tr><td class="num"> 15</td><td class="num"> 15</td><td class="left">'ABS'</td></tr>
-    <tr><td class="num"> 14</td><td class="num">  7</td><td class="left">'Ronald'</td></tr>
-    <tr><td class="num"> 11</td><td class="num">  8</td><td class="left">'Chocolate Zero'</td></tr>
+    <tr><td class="num"> 13</td><td class="num">  6</td><td class="left">'Ronald'</td></tr>
+    <tr><td class="num"> 10</td><td class="num">  7</td><td class="left">'Chocolate Zero'</td></tr>
     <tr><td class="num">  9</td><td class="num">  5</td><td class="left">'ShadowPhrogg32642342'</td></tr>
     <tr><td class="num">  9</td><td class="num">  9</td><td class="left">'fabian'</td></tr>
-    <tr><td class="num">  8</td><td class="num">  5</td><td class="left">'Taztunes'</td></tr>
     <tr><td class="num">  8</td><td class="num">  6</td><td class="left">'Gloop'</td></tr>
     <tr><td class="num">  8</td><td class="num">  8</td><td class="left">'dpl'</td></tr>
+    <tr><td class="num">  7</td><td class="num">  5</td><td class="left">'Taztunes'</td></tr>
     <tr><td class="num">  7</td><td class="num">  6</td><td class="left">'Edgar_Flesk'</td></tr>
     <tr><td class="num">  6</td><td class="num">  3</td><td class="left">'para_doks' + 'Breezy'</td></tr>
     <tr><td class="num">  6</td><td class="num">  4</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num">  6</td><td class="num">  5</td><td class="left">'Guglielmo' + 'Angolino'</td></tr>
     <tr><td class="num">  6</td><td class="num">  6</td><td class="left">'Tobias' + 'Wuzzy'</td></tr>
+    <tr><td class="num">  5</td><td class="num">  2</td><td class="left">'Hairball'</td></tr>
     <tr><td class="num">  5</td><td class="num">  5</td><td class="left">'Raoul' + 'Cyphase' + 'Thomas' + 'Chris' + 'Ralf'</td></tr>
     <tr><td class="num">  4</td><td class="num">  2</td><td class="left">'Bent'</td></tr>
     <tr><td class="num">  4</td><td class="num">  4</td><td class="left">'U-Punkt' + 'J3FF'</td></tr>
-    <tr><td class="num">  3</td><td class="num">  2</td><td class="left">'mrduke' + 'Craven' + 'colonel crayon' + 'Stephanie'</td></tr>
+    <tr><td class="num">  3</td><td class="num">  2</td><td class="left">'mrduke' + 'colonel crayon' + 'Stephanie'</td></tr>
     <tr><td class="num">  3</td><td class="num">  3</td><td class="left">'geembo_90' + 'Tiza' + 'Neophilus' + 'Nicol?s' + 'Andy' + 'Sopoforic'</td></tr>
     <tr><td class="num">  2</td><td class="num">  1</td><td class="left">'Daniel'</td></tr>
-    <tr><td class="num">  2</td><td class="num">  2</td><td class="left">'Drotten' + 'tjRaven' + 'Sim_Ed' + 'hendrik' + 'Austin' + 'Snaily' + 'Antonio EE' + 'Ingo' + 'serpent'</td></tr>
+    <tr><td class="num">  2</td><td class="num">  2</td><td class="left">'Drotten' + 'tjRaven' + 'Sim_Ed' + 'hendrik' + 'GiannuzzITA' + 'Austin' + 'Snaily' + 'Craven' + 'Antonio EE' + 'Ingo' + 'serpent'</td></tr>
     <tr><td class="num">  1</td><td class="num">  0</td><td class="left">'Ale' + 'Sparkey' + 'Gorn' + 'Nat' + 'Daisy'</td></tr>
-    <tr><td class="num">  1</td><td class="num">  1</td><td class="left">'alfred69' + 'Agares' + 'ntaeijr' + 'Tiger' + 'Zak' + 'Slav' + 'niebie' + 'Andreas' + 'Samuel' + 'Mark P.' + 'oblo' + 'hdwow' + 'B-man' + 'Asbel' + 'Vlad' + 'Vaily' + 'krazy62' + 'JuSt'</td></tr>
-    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'tasker' + 'Miel56' + 'Zhura' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'Eselchen' + 'ael' + 'biotopa' + 'brynn' + 'IntKecsk' + 'Davacardo' + 'Adonica' + 'Joona' + 'Sandra' + 'schmusi20' + 'Kosby' + 'Magnus and Susi' + 'WP319' + 'Kevin' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Alex' + 'Fred_the_wise' + 'jdcampo' + 'Freshman' + 'Little_Mole' + 'Kroetchen' + 'crypto_rsa' + 'Harry Lim' + 'Sequoyah' + 'AkRa' + 'Momcat' + 'NorthForty' + 'Mecki' + 'The red O' + 'gringer' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'Kadu' + 'shoki' + 'jojo' + 'rima' + 'Klaus' + 'Valkyrie2' + 'MicWa' + 'AsuCaga' + 'Rugby4ever' + 'Archcorenth' + 'Meeve' + 'mhatta' + 'Hans-HD' + 'mecke' + 'Dvorhagen' + 'Holger' + 'Ingo_K' + 'Ant' + 'Melanie' + 'IChrisI' + 'redsantz' + 'Markus' + 'Liam Sheehan' + 'Michael' + 'Tarim' + 'Agnieszka'</td></tr>
+    <tr><td class="num">  1</td><td class="num">  1</td><td class="left">'alfred69' + 'Agares' + 'ntaeijr' + 'Tiger' + 'Zak' + 'Slav' + 'niebie' + 'Andreas' + 'AlephD' + 'Samuel' + 'Mark P.' + 'oblo' + 'hdwow' + 'B-man' + 'Asbel' + 'Vlad' + 'Vaily' + 'JuSt'</td></tr>
+    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'tasker' + 'Miel56' + 'Zhura' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'Eselchen' + 'ael' + 'biotopa' + 'brynn' + 'IntKecsk' + 'Davacardo' + 'Adonica' + 'Joona' + 'Sandra' + 'schmusi20' + 'Kosby' + 'Magnus and Susi' + 'WP319' + 'Kevin' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Alex' + 'Fred_the_wise' + 'jdcampo' + 'Freshman' + 'Little_Mole' + 'Kroetchen' + 'crypto_rsa' + 'Harry Lim' + 'Sequoyah' + 'AkRa' + 'Momcat' + 'NorthForty' + 'Mecki' + 'The red O' + 'gringer' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'Kadu' + 'shoki' + 'jojo' + 'WesleyCrusher' + 'rima' + 'Klaus' + 'Valkyrie2' + 'MicWa' + 'AsuCaga' + 'Rugby4ever' + 'Archcorenth' + 'Meeve' + 'mhatta' + 'Hans-HD' + 'mecke' + 'krazy62' + 'Dvorhagen' + 'Holger' + 'Ingo_K' + 'Ant' + 'Melanie' + 'IChrisI' + 'redsantz' + 'Markus' + 'Liam Sheehan' + 'Michael' + 'Tarim' + 'Agnieszka'</td></tr>
   </table>

Modified: homepage/input/userlist.html
===================================================================
--- homepage/input/userlist.html	2008-07-03 21:44:08 UTC (rev 1208)
+++ homepage/input/userlist.html	2008-07-04 20:23:28 UTC (rev 1209)
@@ -8,6 +8,7 @@
     <li>Agnieszka</li>
     <li>AkRa</li>
     <li>Ale</li>
+    <li>AlephD</li>
     <li>Alex</li>
     <li>Alexandros</li>
     <li>Alf</li>
@@ -55,12 +56,14 @@
     <li>ged</li>
     <li>geembo_90</li>
     <li>Ghatotkacha</li>
+    <li>GiannuzzITA</li>
     <li>Gloop</li>
     <li>Gorn</li>
     <li>Gottseinsohn</li>
     <li>Great Scott</li>
     <li>gringer</li>
     <li>Guglielmo</li>
+    <li>Hairball</li>
     <li>Hans-HD</li>
     <li>Harry Lim</li>
     <li>hdwow</li>
@@ -153,6 +156,7 @@
     <li>Valkyrie2</li>
     <li>Vinksu</li>
     <li>Vlad</li>
+    <li>WesleyCrusher</li>
     <li>WP319</li>
     <li>Wuzzy</li>
     <li>xmouse</li>



From ral at mail.berlios.de  Sat Jul  5 00:40:01 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 5 Jul 2008 00:40:01 +0200
Subject: [Enigma-game-svn] r1210 - in trunk: data data/schemas po src
	src/others src/stones
Message-ID: <200807042240.m64Me1bB027975@sheep.berlios.de>

Author: ral
Date: 2008-07-05 00:39:36 +0200 (Sat, 05 Jul 2008)
New Revision: 1210

Added:
   trunk/src/others/Wire.cc
   trunk/src/others/Wire.hh
   trunk/src/stones/KnightStone.cc
   trunk/src/stones/KnightStone.hh
Removed:
   trunk/src/others/WireControl.cc
   trunk/src/others/WireControl.hh
Modified:
   trunk/data/api1init.lua
   trunk/data/models-2d.lua
   trunk/data/schemas/objects.xml
   trunk/po/POTFILES.in
   trunk/src/Makefile.am
   trunk/src/items.cc
   trunk/src/ox_magnum.cc
   trunk/src/ox_oxyd1.cc
   trunk/src/stones/BoulderStone.cc
   trunk/src/stones/LightPassengerStone.cc
   trunk/src/stones_simple.cc
Log:
Trunk 1.1: new API reengineering
- rename ot_wirecontrol to ot_wire
- enable lightpassenger to propagate wire impulses
- enable bouder to propagate wire impulses
- reengineering rubberband item:
  - rename: it-rubberband to it_rubberband
  - rename attribute "target" to "anchor2"
  - rename attribute "minlength" to "threshold"
  - add attributes "min" and "max"
- reengineering knight stone
  - rename st-knight to st_knight
  - read only state of 0 to 4
  - I18N knight message


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/data/api1init.lua	2008-07-04 22:39:36 UTC (rev 1210)
@@ -62,6 +62,7 @@
     it_magnet = "it-magnet",
     it_magnet_on = "it-magnet-on",
     it_magnet_off = "it-magnet-off",
+    it_rubberband = "it-rubberband",
     it_sword = "it-sword",
     it_trap = "it-abyss",
     it_trigger = "it-trigger",
@@ -121,6 +122,7 @@
     st_death_invisible = "st-death_invisible",
     st_floppy = "st-floppy",
     st_fourswitch = "st-fourswitch",
+    st_knight = "st-knight",
     st_laser_w = "st-laser-w",
     st_laser_s = "st-laser-s",
     st_laser_e = "st-laser-e",
@@ -377,9 +379,12 @@
      if key == "gradient_factor" then
          _key = "gradient"
      end
-     if key == "minlength" and (_obj_name == "st-rubberband")  then
+     if key == "minlength"  then
          _key = "threshold"
      end
+     if key == "target" and (_obj_name == "it-rubberband") then
+         _key = "anchor2"
+     end
      if key == "targetx" then
          local d = enigma._GetAttrib(obj, "destination")
          if (en.usertype(d) == "position") then
@@ -459,9 +464,12 @@
      if key == "gradient_factor" then
          _key = "gradient"
      end
-     if key == "minlength" and (_obj_name == "st-rubberband")  then
+     if key == "minlength"  then
          _key = "threshold"
      end
+     if key == "target" and (_obj_name == "it-rubberband") then
+         _key = "anchor2"
+     end
      if key == "blackball" or key == "whiteball" then
          _key = "color"
      end

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/data/models-2d.lua	2008-07-04 22:39:36 UTC (rev 1210)
@@ -408,7 +408,6 @@
         "it-pencil",
         "it-pin",
         "it-ring",
-        "it-rubberband",
         "it-spade",
         "it-spoon",
         "it-squashed",
@@ -437,6 +436,7 @@
     DefImage("it_hammer", {filename="it-hammer"})
     DefImage("it_key", {filename="it-key"})
     DefImage("it_landmine", {filename="it-landmine"})
+    DefImage("it_rubberband", {filename="it-rubberband"})
     DefImage("it_sword", {filename="it-sword"})
     DefImage("it_umbrella", {filename="it-umbrella"})
     DefImage("it_wrench", {filename="it-wrench"})

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/data/schemas/objects.xml	2008-07-04 22:39:36 UTC (rev 1210)
@@ -165,6 +165,15 @@
       <msg name="_glasses"/>
       <msg name="_hit"/>
     </object>
+    <object name="it_rubberband">
+      <attr name="anchor2"/>
+      <attr name="strength" default="10"/>
+      <attr name="length"/>
+      <attr name="threshold"/>
+      <attr name="max"/>
+      <attr name="min"/>
+      <attr name="scissor"/>
+    </object>
     <object name="it_sword"/>
     <object name="it_sword_new" init="true"/>
     <object name="it_trigger">
@@ -229,7 +238,7 @@
       <attr name="max"/>
       <attr name="min"/>
     </object>
-    <object name="ot_wirecontrol">
+    <object name="ot_wire">
       <attr name="anchor1"/>
       <attr name="anchor2"/>
     </object>
@@ -423,6 +432,9 @@
       <msg name="off"/>
       <msg name="signal"/>
     </object>
+    <object name="st_knight">
+      <attr name="state" max="4" rw="r"/>
+    </object>
     <object name="st_laser">
       <attr name="counterclock"/>
       <attr name="orientation"/>

Modified: trunk/po/POTFILES.in
===================================================================
--- trunk/po/POTFILES.in	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/po/POTFILES.in	2008-07-04 22:39:36 UTC (rev 1210)
@@ -20,4 +20,5 @@
 src/d_models.cc
 src/PreferenceManager.cc
 src/StateManager.cc
+src/stones/KnightStone.cc
 po/level_i18n.cc

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/Makefile.am	2008-07-04 22:39:36 UTC (rev 1210)
@@ -201,8 +201,8 @@
 	others/Other.hh		\
 	others/Rubberband.cc	\
 	others/Rubberband.hh	\
-	others/WireControl.cc	\
-	others/WireControl.hh	\
+	others/Wire.cc		\
+	others/Wire.hh		\
 	stones/ActorImpulseStone.cc	\
 	stones/ActorImpulseStone.hh	\
 	stones/BlockerStone.cc	\
@@ -225,6 +225,8 @@
 	stones/FourSwitch.hh	\
 	stones/KeySwitch.cc	\
 	stones/KeySwitch.hh	\
+	stones/KnightStone.cc	\
+	stones/KnightStone.hh	\
 	stones/LaserStone.cc	\
 	stones/LaserStone.hh	\
 	stones/LaserSwitch.cc	\

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/items.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -4166,52 +4166,66 @@
 }
 
 /* -------------------- Rubberband Item-------------------- */
-namespace
-{
     class RubberbandItem : public Item {
         CLONEOBJ(RubberbandItem);
         DECL_TRAITS;
 
-        ItemAction activate(Actor *a, GridPos p) {
-            // TODO: Multiple Targets!
-            // TODO: Target for black and target for white marble?
-            // TODO: MultiplayerGame: Defaulttarget is second actor!
+    public:
+        RubberbandItem();
 
-            // Get actor or stone with the name, given in "connect_to":
-            Object *anchor2 = getAttr("target");
-            
-            // Target does NOT exist, Drop Item
-            if (anchor2 == NULL)
-                return ITEM_DROP;
-                
-            // The mode attribute "scissor" defines, if when using an it-rubberband,
-            // other rubberbands to the actor will be cut of or not, true means they will. false is default.
-            bool isScissor = to_bool(getAttr("scissor"));
+        // Object interface
+        virtual std::string getClass() const;
 
-            if (isScissor)
-                SendMessage(a, "disconnect");
+        // Item interface
+        virtual ItemAction activate(Actor* a, GridPos p);
+};
+    
+    RubberbandItem::RubberbandItem() {
+    }
+    
+    std::string RubberbandItem::getClass() const {
+        return "it_rubberband";
+    }
+    
+    ItemAction RubberbandItem::activate(Actor *a, GridPos p) {
+        // TODO: Multiple Targets!
+        // TODO: Target for black and target for white marble?
+        // TODO: MultiplayerGame: Defaulttarget is second actor!
 
-            sound_event ("rubberband");
+        // Get actor or stone with the name, given in "connect_to":
+        Object *anchor2 = getAttr("anchor2");
+        
+        // Target does NOT exist, Drop Item
+        if (anchor2 == NULL)
+            return ITEM_DROP;
             
-            if (anchor2 != a) { // It's not allowed to connect a rubberband to self.
-                Object *obj = MakeObject("ot_rubberband");
-                obj->setAttr("anchor1", a);
-                obj->setAttr("anchor2", anchor2);
-                obj->setAttr("strength", getDefaultedAttr("strength", 10.0));
-                obj->setAttr("length", getDefaultedAttr("length", 1.0));
-                obj->setAttr("threshold", getDefaultedAttr("minlength", 0.0));
-                AddOther(dynamic_cast<Other *>(obj));
-            }
+        // The mode attribute "scissor" defines, if when using an it-rubberband,
+        // other rubberbands to the actor will be cut of or not, true means they will. false is default.
+        bool isScissor = to_bool(getAttr("scissor"));
 
-            return ITEM_KILL;
+        if (isScissor)
+            SendMessage(a, "disconnect");
+
+        sound_event ("rubberband");
+        
+        if (anchor2 != a) { // It's not allowed to connect a rubberband to self.
+            Object *obj = MakeObject("ot_rubberband");
+            obj->setAttr("anchor1", a);
+            obj->setAttr("anchor2", anchor2);
+            obj->setAttr("strength", getAttr("strength"));
+            obj->setAttr("length", getAttr("length"));
+            obj->setAttr("threshold", getAttr("threshold"));
+            obj->setAttr("max", getAttr("max"));
+            obj->setAttr("min", getAttr("min"));
+            AddOther(dynamic_cast<Other *>(obj));
         }
 
-    public:
-        RubberbandItem() {}
-    };
-    DEF_TRAITS(RubberbandItem, "it-rubberband", it_rubberband);
-}
+        return ITEM_KILL;
+    }
+    
+    DEF_TRAITS(RubberbandItem, "it_rubberband", it_rubberband);
 
+
 /* -------------------- Functions -------------------- */
 
 void InitItems()
@@ -4272,6 +4286,7 @@
     Pipe::setup();
     Puller::setup();
     RegisterItem (new Ring);
+    RegisterItem (new RubberbandItem);
     RegisterItem (new SeedWood);
     RegisterItem (new SeedNowood);
     RegisterItem (new SeedVolcano);
@@ -4304,7 +4319,6 @@
     RegisterItem (new WormHole(true));
     Register ("it_wormhole", new WormHole(true));
     RegisterItem (new YinYang);
-    RegisterItem (new RubberbandItem);
 }
 
 } // namespace enigma

Copied: trunk/src/others/Wire.cc (from rev 1204, trunk/src/others/WireControl.cc)
===================================================================
--- trunk/src/others/WireControl.cc	2008-07-02 22:27:58 UTC (rev 1204)
+++ trunk/src/others/Wire.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -0,0 +1,116 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "others/Wire.hh"
+#include "errors.hh"
+#include "main.hh"
+#include "world.hh"
+
+namespace enigma {
+    Wire::Wire() {
+    }
+    
+    std::string Wire::getClass() const {
+        return "ot_wire";
+    }
+
+    void Wire::setAttr(const std::string &key, const Value &val) {
+        if (key == "anchor1") {
+            Stone *old = anchor1;
+            anchor1 = dynamic_cast<Stone *>((Object *)val);
+            ASSERT(anchor1 != NULL, XLevelRuntime, "Wire: 'anchor1' is no stone");
+            ASSERT(anchor1 != anchor2, XLevelRuntime, "Wire: 'anchor1' is identical to 'anchor2'");
+            switchAnchor(old, anchor1, anchor2);
+        } else if (key == "anchor2") {
+            Stone * old = anchor2;
+            anchor2 = dynamic_cast<Stone *>((Object *)val);
+            ASSERT(anchor2 != NULL, XLevelRuntime, "Wire: 'anchor2' is no stone");
+            ASSERT(anchor2 != anchor1, XLevelRuntime, "Wire: 'anchor1' is identical to 'anchor2'");
+            switchAnchor(old, anchor2, anchor1);
+        }
+        Other::setAttr(key, val);
+    }
+    
+    Value Wire::getAttr(const std::string &key) const {
+        if (key == "anchor1") {
+            return anchor1;
+        } else if (key == "anchor2") {
+            return anchor2;
+        }
+        return Other::getAttr(key);
+    }
+    
+    void Wire::postAddition() {
+        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 200, 50, 150);    // purple
+    }
+    
+    void Wire::preRemoval() {
+        model.kill();
+        switchAnchor(anchor1, NULL, anchor2);
+        switchAnchor(anchor2, NULL, anchor1);        
+    }
+    
+    void Wire::tick(double dt) {  // TODO maybe we should let the stones inform the wires on every move
+        model.update_first(anchor1->getOwnerPos().center());
+        model.update_second(anchor2->getOwnerPos().center());
+    }
+    
+    
+    void Wire::switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor) {
+        if (oldAnchor != NULL) {
+            ObjectList olist = oldAnchor->getAttr("wires");
+            olist.remove(this);
+            oldAnchor->setAttr("wires", olist);
+            if (otherAnchor != NULL) {
+                // remove both anchors from each others fellows list
+                olist = oldAnchor->getAttr("fellows");
+                ObjectList::iterator it = find(olist.begin(), olist.end(), otherAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                oldAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                it = find(olist.begin(), olist.end(), oldAnchor);
+                if (it != olist.end()) {
+                    olist.erase(it);
+                }
+                otherAnchor->setAttr("fellows", olist);
+            }            
+        }
+        if (newAnchor != NULL) {
+            ObjectList olist = newAnchor->getAttr("wires");
+            olist.push_back(this);
+            newAnchor->setAttr("wires", olist);
+            if (otherAnchor != NULL) {
+                // add both anchors to each others fellows list
+                olist = newAnchor->getAttr("fellows");
+                olist.push_back(otherAnchor);
+                newAnchor->setAttr("fellows", olist);
+                olist = otherAnchor->getAttr("fellows");
+                olist.push_back(newAnchor);
+                otherAnchor->setAttr("fellows", olist);
+            }
+        }
+    }
+
+    BOOT_REGISTER_START
+        BootRegister(new Wire(), "ot_wire");
+    BOOT_REGISTER_END
+
+} // namespace enigma

Copied: trunk/src/others/Wire.hh (from rev 1204, trunk/src/others/WireControl.hh)
===================================================================
--- trunk/src/others/WireControl.hh	2008-07-02 22:27:58 UTC (rev 1204)
+++ trunk/src/others/Wire.hh	2008-07-04 22:39:36 UTC (rev 1210)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef WIRE_HH_INCLUDED
+#define WIRE_HH_INCLUDED
+
+#include "others/Other.hh"
+#include "display.hh"
+#include "stones.hh"
+
+/* -------------------- Other -------------------- */
+
+
+namespace enigma {
+    
+    class Wire : public Other {
+        CLONEOBJ(Wire)
+
+    public:
+        Wire();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
+        virtual Value getAttr(const std::string &key) const;
+        
+        // Other interface
+        virtual void postAddition();
+        virtual void preRemoval();
+        virtual void tick(double dt);
+        
+    private:
+        Stone * anchor1;
+        Stone * anchor2;
+        display::RubberHandle model;
+        
+        void switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor);
+    };
+
+} // namespace enigma
+
+#endif

Deleted: trunk/src/others/WireControl.cc
===================================================================
--- trunk/src/others/WireControl.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/others/WireControl.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -1,116 +0,0 @@
-/*
- * Copyright (C) 2008 Ronald Lamprecht
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *  
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
- *
- */
-
-#include "others/WireControl.hh"
-#include "errors.hh"
-#include "main.hh"
-#include "world.hh"
-
-namespace enigma {
-    WireControl::WireControl() {
-    }
-    
-    std::string WireControl::getClass() const {
-        return "ot_wirecontrol";
-    }
-
-    void WireControl::setAttr(const std::string &key, const Value &val) {
-        if (key == "anchor1") {
-            Stone *old = anchor1;
-            anchor1 = dynamic_cast<Stone *>((Object *)val);
-            ASSERT(anchor1 != NULL, XLevelRuntime, "WireControl: 'anchor1' is no stone");
-            ASSERT(anchor1 != anchor2, XLevelRuntime, "WireControl: 'anchor1' is identical to 'anchor2'");
-            switchAnchor(old, anchor1, anchor2);
-        } else if (key == "anchor2") {
-            Stone * old = anchor2;
-            anchor2 = dynamic_cast<Stone *>((Object *)val);
-            ASSERT(anchor2 != NULL, XLevelRuntime, "WireControl: 'anchor2' is no stone");
-            ASSERT(anchor2 != anchor1, XLevelRuntime, "WireControl: 'anchor1' is identical to 'anchor2'");
-            switchAnchor(old, anchor2, anchor1);
-        }
-        Other::setAttr(key, val);
-    }
-    
-    Value WireControl::getAttr(const std::string &key) const {
-        if (key == "anchor1") {
-            return anchor1;
-        } else if (key == "anchor2") {
-            return anchor2;
-        }
-        return Other::getAttr(key);
-    }
-    
-    void WireControl::postAddition() {
-        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 200, 50, 150);    // purple
-    }
-    
-    void WireControl::preRemoval() {
-        model.kill();
-        switchAnchor(anchor1, NULL, anchor2);
-        switchAnchor(anchor2, NULL, anchor1);        
-    }
-    
-    void WireControl::tick(double dt) {  // TODO maybe we should let the stones inform the wires on every move
-        model.update_first(anchor1->getOwnerPos().center());
-        model.update_second(anchor2->getOwnerPos().center());
-    }
-    
-    
-    void WireControl::switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor) {
-        if (oldAnchor != NULL) {
-            ObjectList olist = oldAnchor->getAttr("wires");
-            olist.remove(this);
-            oldAnchor->setAttr("wires", olist);
-            if (otherAnchor != NULL) {
-                // remove both anchors from each others fellows list
-                olist = oldAnchor->getAttr("fellows");
-                ObjectList::iterator it = find(olist.begin(), olist.end(), otherAnchor);
-                if (it != olist.end()) {
-                    olist.erase(it);
-                }
-                oldAnchor->setAttr("fellows", olist);
-                olist = otherAnchor->getAttr("fellows");
-                it = find(olist.begin(), olist.end(), oldAnchor);
-                if (it != olist.end()) {
-                    olist.erase(it);
-                }
-                otherAnchor->setAttr("fellows", olist);
-            }            
-        }
-        if (newAnchor != NULL) {
-            ObjectList olist = newAnchor->getAttr("wires");
-            olist.push_back(this);
-            newAnchor->setAttr("wires", olist);
-            if (otherAnchor != NULL) {
-                // add both anchors to each others fellows list
-                olist = newAnchor->getAttr("fellows");
-                olist.push_back(otherAnchor);
-                newAnchor->setAttr("fellows", olist);
-                olist = otherAnchor->getAttr("fellows");
-                olist.push_back(newAnchor);
-                otherAnchor->setAttr("fellows", olist);
-            }
-        }
-    }
-
-    BOOT_REGISTER_START
-        BootRegister(new WireControl(), "ot_wirecontrol");
-    BOOT_REGISTER_END
-
-} // namespace enigma

Deleted: trunk/src/others/WireControl.hh
===================================================================
--- trunk/src/others/WireControl.hh	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/others/WireControl.hh	2008-07-04 22:39:36 UTC (rev 1210)
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2008 Ronald Lamprecht
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *  
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
- *
- */
-#ifndef WIRECONTROL_HH_INCLUDED
-#define WIRECONTROL_HH_INCLUDED
-
-#include "others/Other.hh"
-#include "display.hh"
-#include "stones.hh"
-
-/* -------------------- Other -------------------- */
-
-
-namespace enigma {
-    
-    class WireControl : public Other {
-        CLONEOBJ(WireControl)
-
-    public:
-        WireControl();
-        
-        // Object interface
-        virtual std::string getClass() const;
-        virtual void setAttr(const std::string &key, const Value &val);
-        virtual Value getAttr(const std::string &key) const;
-        
-        // Other interface
-        virtual void postAddition();
-        virtual void preRemoval();
-        virtual void tick(double dt);
-        
-    private:
-        Stone * anchor1;
-        Stone * anchor2;
-        display::RubberHandle model;
-        
-        void switchAnchor(Object *oldAnchor, Object *newAnchor, Object *otherAnchor);
-    };
-
-} // namespace enigma
-
-#endif

Modified: trunk/src/ox_magnum.cc
===================================================================
--- trunk/src/ox_magnum.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/ox_magnum.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -172,7 +172,7 @@
     "st_fourswitch",            // OxydMagnum stone 0x2f (Level 89 and 92)
     "st_key",                   // OxydMagnum stone 0x30
     "st_floppy",                // OxydMagnum stone 0x31
-    "st-knight",                // OxydMagnum stone 0x32
+    "st_knight",                // OxydMagnum stone 0x32
     "st_fourswitch",            // OxydMagnum stone 0x33 (Level 51 and 100)
     "st_death",                 // OxydMagnum stone 0x34
     "st_death_invisible",       // OxydMagnum stone 0x35

Modified: trunk/src/ox_oxyd1.cc
===================================================================
--- trunk/src/ox_oxyd1.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/ox_oxyd1.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -202,7 +202,7 @@
     "st_fourswitch",            // Oxyd1 stone 0x2f
     "st_key",                   // Oxyd1 stone 0x30
     "st_floppy",                // Oxyd1 stone 0x31
-    "st-knight",                // Oxyd1 stone 0x32
+    "st_knight",                // Oxyd1 stone 0x32
     0,                          // Oxyd1 stone 0x33 oscillator (properties set in oxyd.cc)
     "st_death",                 // Oxyd1 stone 0x34
     "st_death_invisible",       // Oxyd1 stone 0x35

Modified: trunk/src/stones/BoulderStone.cc
===================================================================
--- trunk/src/stones/BoulderStone.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/stones/BoulderStone.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -158,6 +158,7 @@
             setDir(impulse.dir);  // activate
         }
         move_stone(impulse.dir);  // due to rotator and impulsestone
+        propagateImpulse(impulse);
     }
 
     Direction BoulderStone::getDir() const {

Added: trunk/src/stones/KnightStone.cc
===================================================================
--- trunk/src/stones/KnightStone.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/stones/KnightStone.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -0,0 +1,77 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "stones/KnightStone.hh"
+
+#include "client.hh"
+//#include "main.hh"
+#include "nls.hh"
+#include "player.hh"
+
+namespace enigma {
+
+    KnightStone::KnightStone() : Stone() {
+    }
+    
+    std::string KnightStone::getClass() const {
+        return "st_knight";
+    }
+
+    int KnightStone::maxState() const {
+        return 4;  // dir representing state
+    }
+
+    void KnightStone::setState(int extState) {
+        // no write access
+    }
+     
+    void KnightStone::init_model()  {
+        set_model(ecl::strf("st-knight%d", state + 1));
+    }
+    
+    StoneResponse KnightStone::collision_response(const StoneContact &) {
+        return (state == maxState()) ? STONE_PASS : STONE_REBOUND;
+    }
+    
+    void KnightStone::actor_hit(const StoneContact &sc) {
+        if (state != maxState()) {
+            if (player::WieldedItemIs(sc.actor, "it_sword")) {
+                state += 1;
+                if (state == maxState()) {
+                    client::Msg_ShowText(N_("All right, we'll call it a draw"), false, 4.0);
+                }
+                init_model();
+            } else {
+                SendMessage(sc.actor, "shatter");
+            }
+        }
+    }
+    
+    bool KnightStone::is_floating() const {
+         return state == maxState();
+    }
+
+    DEF_TRAITSM(KnightStone, "st_knight", st_knight, MOVABLE_PERSISTENT);
+    
+    BOOT_REGISTER_START
+        BootRegister(new KnightStone(), "st_knight");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/stones/KnightStone.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/KnightStone.hh
===================================================================
--- trunk/src/stones/KnightStone.hh	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/stones/KnightStone.hh	2008-07-04 22:39:36 UTC (rev 1210)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef KNIGHTSTONE_HH
+#define KNIGHTSTONE_HH
+
+#include "stones.hh"
+#include "stones_internal.hh"
+
+namespace enigma {
+
+    /** 
+     * 
+     * 
+     */
+    class KnightStone : public Stone {
+         CLONEOBJ(KnightStone);
+         DECL_TRAITS;
+    private:
+        enum iState {
+        };
+
+    public:
+        KnightStone();
+
+        // Object interface
+        virtual std::string getClass() const;
+        
+        // StateObject interface
+        virtual int maxState() const;
+        virtual void setState(int extState);
+
+        // GridObject interface
+        virtual void init_model();
+        
+        // Stone interface
+        virtual StoneResponse collision_response(const StoneContact &sc);
+        virtual void actor_hit(const StoneContact &sc);
+        virtual bool is_floating() const;
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/stones/KnightStone.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/stones/LightPassengerStone.cc
===================================================================
--- trunk/src/stones/LightPassengerStone.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/stones/LightPassengerStone.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -170,8 +170,10 @@
     void LightPassengerStone::on_impulse(const Impulse& impulse) {
         Actor *a = dynamic_cast<Actor*>(impulse.sender);
         if (a == NULL && ((objFlags & OBJBIT_LIGHTNEWDIRS) == NODIRBIT || state == OFF 
-                || server::GameCompatibility != GAMET_ENIGMA))
+                || server::GameCompatibility != GAMET_ENIGMA)) {
             move_stone(impulse.dir);
+            propagateImpulse(impulse);
+        }
     }
     
     void LightPassengerStone::alarm() {

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-04 20:23:28 UTC (rev 1209)
+++ trunk/src/stones_simple.cc	2008-07-04 22:39:36 UTC (rev 1210)
@@ -1758,45 +1758,6 @@
     };
 }
 
-
-/* -------------------- Knight stone -------------------- */
-namespace
-{
-    class Knight : public Stone {
-        CLONEOBJ(Knight);
-        DECL_TRAITS;
-
-        int subtype;
-        enum {MIN_SUBTYPE=1, MAX_SUBTYPE=5};
-
-        StoneResponse collision_response(const StoneContact &) {
-            return (subtype == MAX_SUBTYPE) ? STONE_PASS : STONE_REBOUND;
-        }
-        void actor_hit(const StoneContact &sc)
-        {
-            if (subtype != MAX_SUBTYPE) {
-                if (player::WieldedItemIs (sc.actor, "it_sword")) {
-                    subtype += 1;
-                    if (subtype == MAX_SUBTYPE) {
-                        client::Msg_ShowText ("All right, we'll call it a draw", false, 4.0);
-		    }
-                    init_model();
-                } else {
-                    SendMessage(sc.actor, "shatter");
-                }
-            }
-        }
-        void init_model() {
-            set_model(ecl::strf("st-knight%d", subtype));
-        }
-        bool is_floating() const { return subtype == MAX_SUBTYPE; }
-    public:
-        Knight() : subtype (MIN_SUBTYPE) {}
-    };
-    DEF_TRAITSM(Knight, "st-knight", st_knight, MOVABLE_BREAKABLE);
-}
-
-
 /* -------------------- Fire breakable stones -------------------- */
 
 /* These stones mimic the behaviour of the plain-looking stones in
@@ -1932,7 +1893,6 @@
     Register(new Grate2);
     Register(new Grate3);
     Register(new InvisibleMagic);
-    Register(new Knight);
     Register(new LaserBreakable);
     Register(new MagicStone);
     Register(new Stone_break("st-stone_break"));



From ral at mail.berlios.de  Sat Jul  5 01:02:16 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sat, 5 Jul 2008 01:02:16 +0200
Subject: [Enigma-game-svn] r1211 - team_levelpacks/team_test_new_api
Message-ID: <200807042302.m64N2GVs025373@sheep.berlios.de>

Author: ral
Date: 2008-07-05 01:02:02 +0200 (Sat, 05 Jul 2008)
New Revision: 1211

Modified:
   team_levelpacks/team_test_new_api/ralT037_1.xml
   team_levelpacks/team_test_new_api/ralT050_1.xml
   team_levelpacks/team_test_new_api/ralT051_1.xml
   team_levelpacks/team_test_new_api/ralT053_1.xml
   team_levelpacks/team_test_new_api/ralT054_1.xml
Log:
Test Level new API:
- level updates for object renamings


Modified: team_levelpacks/team_test_new_api/ralT037_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT037_1.xml	2008-07-04 22:39:36 UTC (rev 1210)
+++ team_levelpacks/team_test_new_api/ralT037_1.xml	2008-07-04 23:02:02 UTC (rev 1211)
@@ -22,11 +22,11 @@
 ti["~"] = {"fl-water"}
 ti["s"] = {"st-shogun", "him"}
 ti["w"] = {"st-wood", "you"}
-ti["r"] = {"it-rubberband", target="you", length=4}
+ti["r"] = {"it_rubberband", anchor2="you", length=4}
 ti["S"] = {"st_switch", target="killwood"}
 ti["T"] = {"st-turnstile"}
 ti["t"] = {"st-turnstile-n","it"}
-ti["R"] = {"it-rubberband", target="it", length=4}
+ti["R"] = {"it_rubberband", anchor2="it", length=4}
 ti["p"] = {"st-swap", "you"}
 ti["m"] = {"it_magnet_on", strength=-40}
 ti["1"] = {"#ac-blackball", "me"}

Modified: team_levelpacks/team_test_new_api/ralT050_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT050_1.xml	2008-07-04 22:39:36 UTC (rev 1210)
+++ team_levelpacks/team_test_new_api/ralT050_1.xml	2008-07-04 23:02:02 UTC (rev 1211)
@@ -32,7 +32,10 @@
 
 ti["1"] = {"#ac-blackball"} 
 
+ti["s"] = {"it_sword"}
+ti["K"] = {"st_knight"}
 
+
 ti["w"] = {"it-magicwand"}
 ti["c"] = {"st_chess_black"}
 ti["3"] = {"#ac-blackball", player=DEFAULT, controllers=0}
@@ -46,7 +49,7 @@
 "A                  a",
 "A    C       D     a",
 "   3                ",
-"c    w              ",
+"c    w       s KK   ",
 "   4                ",
 "                    ",
 "                    ",

Modified: team_levelpacks/team_test_new_api/ralT051_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT051_1.xml	2008-07-04 22:39:36 UTC (rev 1210)
+++ team_levelpacks/team_test_new_api/ralT051_1.xml	2008-07-04 23:02:02 UTC (rev 1211)
@@ -43,13 +43,14 @@
 ti["F"] = {"st_fourswitch", target="mymir", action="orientate"}
 ti["G"] = {"it_trigger", target="mymir", action="signal"}
 ti["g"] = {"it_trigger", target="mymir", action_1="turn", action_0="turnback"}
+ti["i"] = {"st-stoneimpulse_movable"}
 
 ti["1"] = {"#ac-blackball"} 
 
 w, h = wo(ti, " ", {
 "         s         l",
 "                    ",
-"      S             ",
+"      S        i    ",
 "    T               ",
 "          B  s t    ",
 "                    ",

Modified: team_levelpacks/team_test_new_api/ralT053_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-04 22:39:36 UTC (rev 1210)
+++ team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-04 23:02:02 UTC (rev 1211)
@@ -26,6 +26,7 @@
 ti["s"] = {"st_scissors"}
 ti["S"] = {"st-swap"}
 ti["r"] = {"st_rubberband"}
+ti["R"] = {"it_rubberband", anchor2="a3", length=3, strength=50, threshold=1.5}
 
 ti["1"] = ti["y"] .. {"#ac-blackball", "a1"} 
 ti["2"] = ti["y"] .. {"#ac-whiteball", "a2"} 
@@ -37,8 +38,8 @@
 "                    ",
 "     1              ",
 "             2      ",
+"RR                  ",
 "                    ",
-"                    ",
 "        3       S   ",
 "            w      ",
 "                    ",

Modified: team_levelpacks/team_test_new_api/ralT054_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-04 22:39:36 UTC (rev 1210)
+++ team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-04 23:02:02 UTC (rev 1211)
@@ -79,16 +79,16 @@
 })
 
 
-wo:add({"ot_wirecontrol", anchor1="w%1", anchor2="b%1"})
-wo:add({"ot_wirecontrol", anchor1="w%2", anchor2="w%3"})
-wo:add({"ot_wirecontrol", anchor1="w%2", anchor2="b%2"})
-wo:add({"ot_wirecontrol", anchor1="w%4", anchor2="rock"})
-wo:add({"ot_wirecontrol", anchor1="w%5", anchor2="impulse"})
-wo:add({"ot_wirecontrol", anchor1="w%6", anchor2="boulder"})
-wo:add({"ot_wirecontrol", anchor1="w%7", anchor2="lp"})
-wo:add({"ot_wirecontrol", anchor1="rotcw", anchor2="rotccw"})
-wo:add({"ot_wirecontrol", anchor1="w%8", anchor2="rubber"})
-wo:add({"ot_wirecontrol", anchor1="w%9", anchor2="pull"})
+wo:add({"ot_wire", anchor1="w%1", anchor2="b%1"})
+wo:add({"ot_wire", anchor1="w%2", anchor2="w%3"})
+wo:add({"ot_wire", anchor1="w%2", anchor2="b%2"})
+wo:add({"ot_wire", anchor1="w%4", anchor2="rock"})
+wo:add({"ot_wire", anchor1="w%5", anchor2="impulse"})
+wo:add({"ot_wire", anchor1="w%6", anchor2="boulder"})
+wo:add({"ot_wire", anchor1="w%7", anchor2="lp"})
+wo:add({"ot_wire", anchor1="rotcw", anchor2="rotccw"})
+wo:add({"ot_wire", anchor1="w%8", anchor2="rubber"})
+wo:add({"ot_wire", anchor1="w%9", anchor2="pull"})
 
   ]]></el:luamain>
     <el:i18n>



From ral at mail.berlios.de  Sat Jul  5 16:41:03 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 5 Jul 2008 16:41:03 +0200
Subject: [Enigma-game-svn] r1212 - trunk/src
Message-ID: <200807051441.m65Ef3Up007644@sheep.berlios.de>

Author: ral
Date: 2008-07-05 16:41:02 +0200 (Sat, 05 Jul 2008)
New Revision: 1212

Modified:
   trunk/src/lua.cc
Log:
Trunk 1.1: new API reengineering
- allow anonymous table as object declarations in resolver return statements
- avoid unintentional actor object naming by offset position value usage


Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-07-04 23:02:02 UTC (rev 1211)
+++ trunk/src/lua.cc	2008-07-05 14:41:02 UTC (rev 1212)
@@ -1075,7 +1075,7 @@
 static int pushNewTile(lua_State *L, int numArgs, std::string key="") {
     // numArgs 1 or 2 of type (table|tile)
     int *udata;
-    udata=(int *)lua_newuserdata(L,sizeof(int));   // position user object
+    udata=(int *)lua_newuserdata(L,sizeof(int));   // user object
     *udata = 1;
     
     lua_newtable(L);  // individual metatable copy
@@ -1125,7 +1125,7 @@
                 obj->setAttrChecked(key, to_value(L, -2));
             }
          } else if (lua_tointeger(L, -1) == 2) {  // second entry without a string key is taken as name
-             if (lua_isstring(L, -2))
+             if (!lua_isnumber(L, -2) && lua_isstring(L, -2))
                  NameObject(obj, lua_tostring(L, -2));
          }
          lua_pop(L, 2);  // remove copy key + value, leave original key for loop
@@ -1803,6 +1803,10 @@
     int yi = round_down<int>(y);
     Object *obj = NULL;
     
+    if (!lua_istable(L, -1)) {
+        throwLuaError(L, ecl::strf("World: object set of wrong type '%s'", lua_typename(L, -1)).c_str());
+        return 0;
+    }
     if (lua_objlen(L, -1) == 0) {  // empty table as set nothing operation
         return 0;
     }
@@ -1982,7 +1986,11 @@
                 key.c_str(), j, i).c_str());
         return 0;
     }
-    setObjectByTile(L, j, i, onlyFloors);
+    if (lua_istable(L, -1))
+        setObjectByTable(L, j, i, onlyFloors);
+    else
+        setObjectByTile(L, j, i, onlyFloors);
+
     lua_pop(L, 5);  // tile, y, x, key, resolver
 
     if (GetFloor(GridPos(j, i)) == NULL) {
@@ -1997,7 +2005,11 @@
             throwLuaError(L, ecl::strf("World init undefined default tile at %d, %d",  j, i).c_str());
             return 0;
         }
-        setObjectByTile(L, j, i, true);   // limit to floor set
+        if (lua_istable(L, -1))
+            setObjectByTable(L, j, i, true);
+        else
+            setObjectByTile(L, j, i, true);   // limit to floor set
+            
         lua_pop(L, 5);  // default tile
         if (GetFloor(GridPos(j, i)) == NULL) {
             throwLuaError(L, ecl::strf("World no floor at %d, %d", j, i).c_str());



From ral at mail.berlios.de  Sun Jul  6 16:19:55 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 6 Jul 2008 16:19:55 +0200
Subject: [Enigma-game-svn] r1213 - trunk/src
Message-ID: <200807061419.m66EJtfe021343@sheep.berlios.de>

Author: ral
Date: 2008-07-06 16:19:54 +0200 (Sun, 06 Jul 2008)
New Revision: 1213

Modified:
   trunk/src/stones.cc
   trunk/src/stones_simple.cc
Log:
Trunk 1.1: new API reengineering
- fix crash problem in OXYD1 mode in case of falling woods
- let woods fall on level border, too (just in Enigma mode)

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-07-05 14:41:02 UTC (rev 1212)
+++ trunk/src/stones.cc	2008-07-06 14:19:54 UTC (rev 1213)
@@ -101,8 +101,11 @@
 
 void Stone::on_impulse(const Impulse& impulse) {
     if (is_movable()) {
-        move_stone(impulse.dir);
-        propagateImpulse(impulse);
+        int id = getId();
+        move_stone(impulse.dir);    // may kill the stone!
+        
+        if (Object::getObject(id) != NULL)   // not killed?
+            propagateImpulse(impulse);
     }
 }
 

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-05 14:41:02 UTC (rev 1212)
+++ trunk/src/stones_simple.cc	2008-07-06 14:19:54 UTC (rev 1213)
@@ -1008,7 +1008,7 @@
 
         void maybe_fall_or_stopfire() {
             GridPos p = get_pos();
-            if (IsLevelBorder(p))
+            if (server::GameCompatibility != GAMET_ENIGMA && IsLevelBorder(p))
                 return;
             if (Floor *fl = GetFloor(p)) {
                 const string &k = fl->get_kind();
@@ -1040,7 +1040,7 @@
             if (server::GameCompatibility == GAMET_OXYD1)
                 maybe_fall_or_stopfire();
         }
-
+        
         // other oxyds versions: fall everytime the floor changes
         void on_floor_change() {
             if (server::GameCompatibility != GAMET_OXYD1)



From ral at mail.berlios.de  Sun Jul  6 22:16:23 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 6 Jul 2008 22:16:23 +0200
Subject: [Enigma-game-svn] r1214 - in trunk/src: . others
Message-ID: <200807062016.m66KGNpL028208@sheep.berlios.de>

Author: ral
Date: 2008-07-06 22:16:16 +0200 (Sun, 06 Jul 2008)
New Revision: 1214

Modified:
   trunk/src/others/Rubberband.cc
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering
- Rubberband: min/max support
  length limits that are handled in the physics engine


Modified: trunk/src/others/Rubberband.cc
===================================================================
--- trunk/src/others/Rubberband.cc	2008-07-06 14:19:54 UTC (rev 1213)
+++ trunk/src/others/Rubberband.cc	2008-07-06 20:16:16 UTC (rev 1214)
@@ -18,6 +18,7 @@
  */
 
 #include "others/Rubberband.hh"
+#include "actors.hh"
 #include "errors.hh"
 #include "main.hh"
 #include "world.hh"
@@ -61,10 +62,10 @@
             ASSERT(innerThreshold >= 0, XLevelRuntime, "Rubberband: inner threshold is negative");
         } else if (key == "max") {
             maxLength = val;
-            ASSERT(minLength >= 0, XLevelRuntime, "Rubberband: max length is negative");
+            ASSERT(maxLength >= 0, XLevelRuntime, "Rubberband: max length is negative");
         } else if (key == "min") {
             minLength = val;
-            ASSERT(maxLength >= 0, XLevelRuntime, "Rubberband: min length is negative");
+            ASSERT(minLength >= 0, XLevelRuntime, "Rubberband: min length is negative");
         }
         Other::setAttr(key, val);
     }
@@ -104,34 +105,87 @@
     }
     
     void Rubberband::applyForces(double dt) {
+        const double eps = 0.02;  // epsilon distant limit for contacts
         ecl::V2 v = posAnchor2() - anchor1->get_pos();
-        double vv = ecl::length(v);
+        double len = ecl::length(v);
         ecl::V2 force;
         
-        if (vv == 0) {
-            force = V2(0, 0);
-        } else if (maxLength > 0 && vv > maxLength) {
+        if (minLength + eps <= len && (len <= maxLength -eps || maxLength == 0)) {
+            if (len == 0) {
+                force = V2(0, 0);
+            } else if (len > outerThreshold) {
+                force = v * strength * (len - outerThreshold)/len;
+            } else if (len < innerThreshold) {
+                force = v * strength * (len - innerThreshold)/len;
+            }
+        
             ActorInfo *ai = anchor1->get_actorinfo();
+            ai->force += force;
+            if (!(objFlags & OBJBIT_STONE)) {
+                ai = anchor2.ac->get_actorinfo();
+                ai->force -= force;
+            }
+                
+        } else if (objFlags & OBJBIT_STONE) {
+            ActorInfo *ai = anchor1->get_actorinfo();
             ecl::V2 vn = normalize(v);
-            double av = ai->vel * vn;
-            if (av > -0.05) 
-                av = -0.05;
-                
-            force = - 1 * av * vn / dt * ai->mass;
-            force /= 6;
-        } else if (minLength > 0 && vv < minLength) {
+            bool isMax = (len > maxLength - eps);
+            bool isMin = (len < minLength + eps);
+
+            // neutralize other force componentes in rubber direction
+            double force1 = vn * ai->force;
+            if ((!isMin && (force1 > 0)) || (!isMax && (force1 < 0)))
+                force1 = 0;
+            ai->force -= force1 * vn;
             
-        } else if (vv < innerThreshold) {
-            force = v * strength * (vv - innerThreshold)/vv;
-            force /= 6;
-        } else if (vv > outerThreshold) {
-            force = v * strength * (vv - outerThreshold)/vv;
-            force /= 6;
+            double relspeed = ai->vel * vn;   // positive for shrinking dist
+            if (!isMin && (relspeed > 0) || !isMax && (relspeed < 0))
+                relspeed = 0;
+            force = - 1.8 * relspeed * vn / dt * ai->mass;  // 0.9 factor as damping
+            ai->collforce += force;
+//            Log << "Rubber stone force "<< force1 << "  " <<relspeed<< "\n";
+        } else {
+            // two actors bouncing on min/max limits
+            ActorInfo *ai1 = anchor1->get_actorinfo();
+            ActorInfo *ai2 = anchor2.ac->get_actorinfo();
+            ecl::V2 vn = normalize(v);
+            double mass = ai1->mass + ai2->mass;
+            bool isMax = (len > maxLength - eps);
+            bool isMin = (len < minLength + eps);
+            bool isBoth = isMax && isMin;
+            if (isBoth) {
+                isMax = (len > (maxLength - minLength)/2);
+                isMin = !isMax; 
+            }
+            
+            // redistribute other force components in rubber direction according 
+            // to the mass of actors to move the complex but to avoid length change
+            
+            // component of other forces in rubber direction
+            double force1 = vn * ai1->force;
+            double force2 = vn * ai2->force;
+            
+            // limit to min/max affected forces
+            if ((!isMin && (force1 > 0)) || (!isMax && (force1 < 0)))
+                force1 = 0;
+            if ((!isMin && (force2 < 0)) || (!isMax && (force2 > 0)))
+                force2 = 0;
+            ai1->force += (-force1 + (force1 + force2) * (ai1->mass)/mass) * vn;
+            ai2->force += (-force2 + (force1 + force2) * (ai2->mass)/mass) * vn;
+            
+            // bounce if min/max rules are violated
+            double relspeed = vn * (ai2->vel - ai1->vel);  // speed of band extension
+            double dmu = 2 * ai1->mass * ai2->mass / (ai1->mass + ai2->mass);
+
+            if (isMax && (relspeed < 0) || isMin && (relspeed >0))
+                relspeed = 0;
+            force = (dmu * relspeed / dt) * vn;
+            force = force * 0.9;   // damping for wrong friction calculation
+//            Log << "Rubber force " << force1 <<  "  " << force2 << "  relspeed  " << relspeed  << " both " << isBoth << "\n";
+            ai1->collforce += force;
+            ai2->collforce -= force;
         }
-        
-        anchor1->add_force(force);
-        if (!(objFlags & OBJBIT_STONE))
-            anchor2.ac->add_force(-force);
+
     }
     
     ecl::V2 Rubberband::posAnchor2() {

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-06 14:19:54 UTC (rev 1213)
+++ trunk/src/world.cc	2008-07-06 20:16:16 UTC (rev 1214)
@@ -1248,6 +1248,10 @@
             ai.contacts_count = 0;
         }
         
+        for (RubberbandList::iterator rit = rubberbands.begin(); rit != rubberbands.end(); ++rit) {
+            (*rit)->applyForces(dt);
+        }
+        
         handle_actor_contacts();
         for (unsigned i=0; i<nactors; ++i) {
             Actor     *a  = actorlist[i];
@@ -1271,9 +1275,6 @@
             a->move();         // 'move' nevertheless, to pick up items etc
             a->think(dtime); 
         }
-        for (RubberbandList::iterator rit = rubberbands.begin(); rit != rubberbands.end(); ++rit) {
-            (*rit)->applyForces(dt);
-        }    
 
         rest_time -= dt;
     }



From ral at mail.berlios.de  Sun Jul  6 22:33:16 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 6 Jul 2008 22:33:16 +0200
Subject: [Enigma-game-svn] r1215 - team_levelpacks/team_test_new_api
Message-ID: <200807062033.m66KXG2R029527@sheep.berlios.de>

Author: ral
Date: 2008-07-06 22:33:09 +0200 (Sun, 06 Jul 2008)
New Revision: 1215

Added:
   team_levelpacks/team_test_new_api/ralT055_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT053_1.xml
Log:
Test Level new API:
- level update rubberband - min max tests
- add test level for wood, block, firebreak, plain_move


Modified: team_levelpacks/team_test_new_api/ralT053_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-06 20:16:16 UTC (rev 1214)
+++ team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-06 20:33:09 UTC (rev 1215)
@@ -27,6 +27,9 @@
 ti["S"] = {"st-swap"}
 ti["r"] = {"st_rubberband"}
 ti["R"] = {"it_rubberband", anchor2="a3", length=3, strength=50, threshold=1.5}
+ti["p"] = {"it_rubberband", anchor2="a2", length=3, strength=10, threshold=2.5, max=4, min=4}
+ti["P"] = {"it_rubberband", anchor2="a2", length=3, strength=10, threshold=2.5, max=5, min=2}
+ti["Q"] = {"it_rubberband", anchor2="w", length=3, strength=10, threshold=2.5, max=5, min=2}
 
 ti["1"] = ti["y"] .. {"#ac-blackball", "a1"} 
 ti["2"] = ti["y"] .. {"#ac-whiteball", "a2"} 
@@ -35,23 +38,24 @@
 w, h = wo(ti, " ", {
 "       r  r  r      ",
 "                    ",
+"    1               ",
 "                    ",
-"     1              ",
 "             2      ",
-"RR                  ",
+"R                   ",
+"p                   ",
+"P       3       S   ",
+"Q           w      ",
 "                    ",
-"        3       S   ",
-"            w      ",
-"                    ",
-"               #    ",
+"         s     #    ",
 "          ~~        ",
 "s         ~~.       "
 })
 
 --wo:add({"ot_rubberband", anchor1="a1", anchor2="w", length=2, strength=80, threshold=0, max=2.4})
---wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=1, strength=8000, threshold=0, max=1})
-wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=4, strength=10, threshold=2})
-wo:add({"ot_rubberband", anchor1="a3", anchor2="w", length=3, strength=20})
+--wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=4, strength=10, threshold=2})
+--wo:add({"ot_rubberband", anchor1="a1", anchor2="a2", length=3, strength=10, threshold=2, max=5, min=5})
+--wo:add({"ot_rubberband", anchor1="a3", anchor2="w", length=3, strength=20})
+wo:add({"ot_rubberband", anchor1="a1", anchor2="w", length=3, strength=10, threshold=2, max=4, min=4})
 
 
   ]]></el:luamain>

Added: team_levelpacks/team_test_new_api/ralT055_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT055_1.xml	2008-07-06 20:16:16 UTC (rev 1214)
+++ team_levelpacks/team_test_new_api/ralT055_1.xml	2008-07-06 20:33:09 UTC (rev 1215)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Wood new API" el:subtitle="" el:id="20080705ral337"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["~"] = {"fl-water"}
+ti["."] = {"fl-abyss"}
+
+ti["w"] = {"st-wood"}
+ti["b"] = {"st-block"}
+ti["f"] = {"st-firebreak_move"}
+ti["p"] = {"st-plain_move"}
+
+ti["s"] = {"st_switch", target="flood"}
+
+ti["W"] = ti["~"] .. {"st-wood"}
+ti["B"] = ti["~"] .. {"st-block"}
+ti["F"] = ti["~"] .. {"st-firebreak_move"}
+ti["P"] = ti["~"] .. {"st-plain_move"}
+
+ti["1"] = {"#ac-blackball"} 
+
+
+w, h = wo(ti, " ", {
+"   ~~~              ",
+" w ~~~ w       w .  ",
+" b ~~~ b 1     b .  ",
+" f ~~~ f       f .  ",
+" p ~~~ p       p .  ",
+" s ~~~           .  ",
+"   ~~~           .  ",
+"   ~~W              ",
+"   ~~B              ",
+"   ~~F              ",
+"   ~~P              ",
+"   ~~~              ",
+"                    "
+})
+
+function flood(value, sender)
+    for i = 1, 4 do
+        wo[sender - i*po(0,1)] = {"fl-water"}
+    end
+end
+  ]]></el:luamain>
+   <el:i18n>
+     <el:string el:key="title">
+       <el:english el:translate="false"/>
+     </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT055_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From andreasl at mail.berlios.de  Sun Jul  6 23:44:30 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Sun, 6 Jul 2008 23:44:30 +0200
Subject: [Enigma-game-svn] r1216 - in trunk/data: gfx/flags25x15 levels/lib
Message-ID: <200807062144.m66LiUHj003720@sheep.berlios.de>

Author: andreasl
Date: 2008-07-06 23:44:27 +0200 (Sun, 06 Jul 2008)
New Revision: 1216

Modified:
   trunk/data/gfx/flags25x15/by-shaded.png
   trunk/data/gfx/flags25x15/ua-shaded.png
   trunk/data/levels/lib/libluatools.xml
Log:
Trunk:
 - Add shaded flags for Ukrainian and Belarussian.
 - New libluatools functions:
    - print_table
    - cubic_polynomial
    - random_vector
 - Small fix in libluatools.concat_maps_vertically


Modified: trunk/data/gfx/flags25x15/by-shaded.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx/flags25x15/ua-shaded.png
===================================================================
(Binary files differ)

Modified: trunk/data/levels/lib/libluatools.xml
===================================================================
--- trunk/data/levels/lib/libluatools.xml	2008-07-06 20:33:09 UTC (rev 1215)
+++ trunk/data/levels/lib/libluatools.xml	2008-07-06 21:44:27 UTC (rev 1216)
@@ -87,6 +87,50 @@
   end
 end
 
+-- print_table uses the print command to print all
+-- entries of a table, one table per line.
+-- It should be used for debug reasons only.
+-- PREFIX can be a string to be put in front of each
+-- line of the output, in case you need to distinguish
+-- several outputs from each other.
+-- print_table is recursive, i.e. a table with table
+-- as entries will call print_table again. To avoid
+-- infinite loops, DEPTH is used as additional argument.
+-- Don't use it in levels. If you want to suppress
+-- the recursive function, use DEPTH = -1.
+function luatools.print_table(t, prefix, depth)
+  if type(t) ~= "table" then
+    print("print_table: Argument is of type "..type(t)..", not table.")
+    return
+  end
+  for key, value in pairs(t) do
+    local key_s
+    if type(key) == "string" then
+      key_s = "\"" .. key .. "\""
+    elseif type(key) == "number" then
+      key_s = key
+    else
+      key_s = "<" .. type(key) .. ">"
+    end
+    if type(value) == "number" then
+      print(prefix .. "|" .. key_s .. " = " .. value)
+    elseif type(value) == "string" then
+      print(prefix .. "|" .. key_s .. " = \"" .. value .. "\"")
+    elseif type(value) == "table" then
+      if depth < 5 then
+        print(prefix .. "|" .. key_s .. " = |")
+        luatools.print_table(value,
+            prefix .. "|" .. string.rep(" ", string.len(key_s)),
+            (depth or 0) + 1)
+      else
+        print(prefix .. "|" .. key_s .. " = | ...")
+      end
+    else
+      print(prefix .. "|" .. key_s .. " of type " .. type(value))
+    end
+  end
+end
+
 ---------------------------------------------------------------------
 --  ADVANCED  POSITION  HANDLING  AND  CALCULATIONS
 ---------------------------------------------------------------------
@@ -194,6 +238,55 @@
   return result
 end
 
+-- Return a table of all combinations of DEPTH entries,
+-- each of which is chosen from DIGITS.
+-- Example: luatools.combinations(3, {7, 8, "a"}) will return
+--   { {7,7,7}, {7,7,8}, {7,7,"a"}, {7,8,7}, {7,8,8}, {7,8,"a"},
+--     {7,"a",7}, {7,"a",8}, {7,"a","a"}, {8,7,7}, ... }
+-- Mathematically, it builds the leafs of an #DIGITS-ary tree
+-- of depth DEPTH.
+function luatools.combinations(depth, digits)
+  local all_combinations = {{}}
+  for _ = 1, depth do
+    local next_step = {}
+    for _, old_combination in pairs(all_combinations) do
+      for _, new_digit in pairs(digits) do
+        local new_combination = luatools.deep_copy(old_combination)
+        table.insert(new_combination, new_digit)
+        table.insert(next, new_combination)
+      end
+    end
+    all_combinations = next_step
+  end
+  return all_combinations
+end
+
+-- cubic_polynomial returns the result of the
+-- following polynomial with coefficients in A:
+-- a[10]*y*y*y + a[9]*x*y*y + a[8]*x*x*y + a[7]*x*x*x
+--   + a[6]*y*y + a[5]*x*y + a[4]*x*x + a[3]*y + a[2]*x + a[1]
+-- You can use luatools.random_vector(10, ...) and
+-- a modulo operation to easily form a random
+-- pattern of a floor, or choose the coefficients
+-- to your own liking. Entries in A which are not
+-- numbers are considered zero.
+function luatools.cubic_polynomial(a, x, y)
+  if type(a) ~= "table" then
+    error("cubic_polynomial: First argument not a table (" .. type(a)
+          .. " instead).")
+  end
+  if (type(x) ~= "number") or (type(y) ~= "number") then
+    error("cubic_polynomial: Second or third argument not a number.")
+  end
+  return   (a[10] or 0)*y*y*y + (a[9] or 0)*x*y*y + (a[8] or 0)*x*x*y
+         + (a[7] or 0)*x*x*x + (a[6] or 0)*y*y + (a[5] or 0)*x*y
+         + (a[4] or 0)*x*x + (a[3] or 0)*y + (a[2] or 0)*x + (a[1] or 0)
+end
+
+---------------------------------------------------------------------
+--  PERMUTATIONS  AND  RANDOM  NUMBERS
+---------------------------------------------------------------------
+
 -- Return a random permutation of n elements.
 -- This function outputs a table with integer entries between
 -- 1 and n at positions 1 to n.
@@ -223,27 +316,20 @@
   return sequence2
 end
 
--- Return a table of all combinations of DEPTH entries,
--- each of which is chosen from DIGITS.
--- Example: luatools.combinations(3, {7, 8, "a"}) will return
---   { {7,7,7}, {7,7,8}, {7,7,"a"}, {7,8,7}, {7,8,8}, {7,8,"a"},
---     {7,"a",7}, {7,"a",8}, {7,"a","a"}, {8,7,7}, ... }
--- Mathematically, it builds the leafs of an #DIGITS-ary tree
--- of depth DEPTH.
-function luatools.combinations(depth, digits)
-  local all_combinations = {{}}
-  for _ = 1, depth do
-    local next_step = {}
-    for _, old_combination in pairs(all_combinations) do
-      for _, new_digit in pairs(digits) do
-        local new_combination = luatools.deep_copy(old_combination)
-        table.insert(new_combination, new_digit)
-        table.insert(next, new_combination)
-      end
-    end
-    all_combinations = next_step
+-- Return a table with NUMBER random entries.
+-- Additional arguments like with math.random.
+function luatools.random_vector(number, ...)
+  if type(number) ~= "number" then
+    error("random_vector: First argument not a number ("..type(number).." instead).")
   end
-  return all_combinations
+  if (number < 0) or (number ~= math.ceil(number)) then
+    error("random_vector: First argument out of range ("..number..").")
+  end
+  local result = {}
+  for j = 1, number do
+    result[j] = math.random(...)
+  end
+  return result
 end
 
 ---------------------------------------------------------------------
@@ -377,7 +463,8 @@
   for y = 1, height do
     result[y] = ""
     for j, map in pairs(maps) do
-      result[y] = result[y] .. map[y] .. string.rep(" ", lengths[j] - string.len(map[y])) 
+      result[y] = result[y] .. (map[y] or "")
+                    .. string.rep(" ", lengths[j] - string.len(map[y] or "")) 
     end
   end
   return result



From raoul at mail.berlios.de  Mon Jul  7 15:47:56 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Mon, 7 Jul 2008 15:47:56 +0200
Subject: [Enigma-game-svn] r1217 - team_levelpacks/team_test_new_api
Message-ID: <200807071347.m67DluQo015343@sheep.berlios.de>

Author: raoul
Date: 2008-07-07 15:47:56 +0200 (Mon, 07 Jul 2008)
New Revision: 1217

Added:
   team_levelpacks/team_test_new_api/raoulT05_1.xml
Log:
-> Testlevel for general strip items


Added: team_levelpacks/team_test_new_api/raoulT05_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-06 21:44:27 UTC (rev 1216)
+++ team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-07 13:47:56 UTC (rev 1217)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Testlevel Strips" el:subtitle="" el:id="raoult05"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Raoul Bourquin" el:email="raoul at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Roual Bourquin</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+ti[" "] = {"fl-swamp"}
+ti["A"] = {"#ac-blackball"}
+
+ti["a"] = {"it_strip"}
+
+ti["b"] = {"it_strip_w"}
+ti["c"] = {"it_strip_s"}
+ti["d"] = {"it_strip_e"}
+ti["e"] = {"it_strip_n"}
+
+ti["f"] = {"it_strip_sw"}
+ti["g"] = {"it_strip_ew"}
+ti["h"] = {"it_strip_es"}
+ti["i"] = {"it_strip_nw"}
+ti["j"] = {"it_strip_ns"}
+ti["k"] = {"it_strip_ne"}
+
+ti["m"] = {"it_strip_esw"}
+ti["n"] = {"it_strip_nsw"}
+ti["o"] = {"it_strip_new"}
+ti["p"] = {"it_strip_nes"}
+
+ti["q"] = {"it_strip_nesw"}
+
+w, h = wo(ti, " ", {
+"                    ",
+"        c           ",
+"       dqb          ",
+"        e           ",
+"                    ",
+"       hgf        A ",
+"       jaj          ",
+"       kgi          ",
+"                    ",
+"       hmf          ",
+"       pqn          ",
+"       koi          ",
+"                    "
+})
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: team_levelpacks/team_test_new_api/raoulT05_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native



From raoul at mail.berlios.de  Mon Jul  7 15:50:05 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Mon, 7 Jul 2008 15:50:05 +0200
Subject: [Enigma-game-svn] r1218 - in trunk/data: . gfx32 gfx40 gfx48 gfx64
Message-ID: <200807071350.m67Do5Cu015721@sheep.berlios.de>

Author: raoul
Date: 2008-07-07 15:50:04 +0200 (Mon, 07 Jul 2008)
New Revision: 1218

Added:
   trunk/data/gfx32/it_strip.png
   trunk/data/gfx40/it_strip.png
   trunk/data/gfx48/it_strip.png
   trunk/data/gfx64/it_strip.png
Modified:
   trunk/data/models-2d.lua
Log:
-> First gfx for general strip items


Added: trunk/data/gfx32/it_strip.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx32/it_strip.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/data/gfx40/it_strip.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx40/it_strip.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/data/gfx48/it_strip.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx48/it_strip.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/data/gfx64/it_strip.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx64/it_strip.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2008-07-07 13:47:56 UTC (rev 1217)
+++ trunk/data/models-2d.lua	2008-07-07 13:50:04 UTC (rev 1218)
@@ -495,6 +495,12 @@
     DefTiles("it-yinyang", {"it-yinyang", "it-yanying"})
 end
 
+-- it_strip --
+do
+    DefSubimages("it_strip", {modelname="it_strip",w=4,h=4})
+end
+
+
 ----------------------------------------
 -- Animated Items and Item Animations --
 ----------------------------------------



From ral at mail.berlios.de  Mon Jul  7 23:24:11 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Mon, 7 Jul 2008 23:24:11 +0200
Subject: [Enigma-game-svn] r1219 - in trunk: data/schemas src
Message-ID: <200807072124.m67LOBop031343@sheep.berlios.de>

Author: ral
Date: 2008-07-07 23:24:10 +0200 (Mon, 07 Jul 2008)
New Revision: 1219

Modified:
   trunk/data/schemas/objects.xml
   trunk/src/items.cc
   trunk/src/lua.cc
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering
- add checkerboard attribute for stones and items
- fix disposal of unused checkerboard objects
- autonaming of objects: switch from linear to O(1) random based algorithm
- fix kill method of groups to support Other
- fix disposal of Other: do unname
- it_rubberband:
  - allow nearest Object syntax "@@" for attribute "anchor2" to get the
    dynamic nearest anchor.
  - performAction on succesfull activation
Note:
- You can no longer rely on autonamed objects like "myname#" to receive
  consecutive numbers according to their row by row appearence in the map.
  User autotile resolvers for addressing single instances.

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-07 13:50:04 UTC (rev 1218)
+++ trunk/data/schemas/objects.xml	2008-07-07 21:24:10 UTC (rev 1219)
@@ -11,6 +11,7 @@
     <attr name="color" type="int" default="nil" min="0" max="1" rw="rw"/>
     <attr name="connections" type="string" default="nil" rw="rw"/>
     <attr name="counterclock" type="bool" default="false" rw="rw"/>
+    <attr name="checkerboard" type="int" default="nil" rw="rw"/>
     <attr name="destination" type="tokens" default="nil" rw="rw"/>
     <attr name="faces" type="string" default="nil" rw="rw"/>
     <attr name="fellows" type="group" default="nil" rw="r"/>
@@ -90,6 +91,7 @@
   <zoo>
     <object name="" abstract="true" states="2">
       <attr name="action"/>
+      <attr name="checkerboard"/>
       <attr name="inverse"/>
       <attr name="name"/>
       <attr name="nopaction"/>

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-07 13:50:04 UTC (rev 1218)
+++ trunk/src/items.cc	2008-07-07 21:24:10 UTC (rev 1219)
@@ -4193,11 +4193,13 @@
         // TODO: MultiplayerGame: Defaulttarget is second actor!
 
         // Get actor or stone with the name, given in "connect_to":
-        Object *anchor2 = getAttr("anchor2");
+        ObjectList ol = getAttr("anchor2").getObjectList(a);
         
         // Target does NOT exist, Drop Item
-        if (anchor2 == NULL)
+        if (ol.size() == 0)
             return ITEM_DROP;
+
+        Object *anchor2 = ol.front();
             
         // The mode attribute "scissor" defines, if when using an it-rubberband,
         // other rubberbands to the actor will be cut of or not, true means they will. false is default.
@@ -4218,6 +4220,7 @@
             obj->setAttr("max", getAttr("max"));
             obj->setAttr("min", getAttr("min"));
             AddOther(dynamic_cast<Other *>(obj));
+            performAction(true);
         }
 
         return ITEM_KILL;

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-07-07 13:50:04 UTC (rev 1218)
+++ trunk/src/lua.cc	2008-07-07 21:24:10 UTC (rev 1219)
@@ -1214,6 +1214,9 @@
     if (obj) {   // ignore not existing object
         GridObject *gobj;
         switch (obj->getObjectType()) {
+            case Object::OTHER :
+                KillOther(dynamic_cast<Other *>(obj));
+                break;
             case Object::FLOOR :
                 gobj = dynamic_cast<GridObject*>(obj);
                 KillFloor(gobj->get_pos());
@@ -1326,9 +1329,9 @@
         catch (const XLevelRuntime &e) {
             throwLuaError (L, e.what());
         }
-        catch (...) {
-            throwLuaError (L, "uncaught exception");
-        }
+//        catch (...) {
+//            throwLuaError (L, "uncaught exception x");
+//        }
     }
     push_value(L, answer);
     return 1;
@@ -1850,20 +1853,38 @@
     switch (obj->getObjectType()) {
         case Object::FLOOR :
             if (Value odd = obj->getAttr("checkerboard")) {
-                if ((xi+yi)%2 != (int)odd)
+                if ((xi+yi)%2 != (int)odd) {
+                    DisposeObject(obj);
                     break;
+                }
             }
             SetFloor(GridPos(xi,yi), dynamic_cast<Floor *>(obj));
             break;
         case Object::STONE :
-            if (!onlyFloors)
+            if (!onlyFloors) {
+                if (Value odd = obj->getAttr("checkerboard")) {
+                    if ((xi+yi)%2 != (int)odd) {
+                        DisposeObject(obj);
+                        break;
+                    }
+                }
                 SetStone(GridPos(xi,yi), dynamic_cast<Stone *>(obj));
-            else
+            } else {
                 DisposeObject(obj);
+            }
             break;
         case Object::ITEM  :
-            if (!onlyFloors)
+            if (!onlyFloors) {
+                if (Value odd = obj->getAttr("checkerboard")) {
+                    if ((xi+yi)%2 != (int)odd) {
+                        DisposeObject(obj);
+                        break;
+                    }
+                }
                 SetItem(GridPos(xi,yi), dynamic_cast<Item *>(obj));
+            } else {
+                DisposeObject(obj);
+            }
             break;
         case Object::ACTOR :
             if (!onlyFloors) {

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-07 13:50:04 UTC (rev 1218)
+++ trunk/src/world.cc	2008-07-07 21:24:10 UTC (rev 1219)
@@ -310,7 +310,8 @@
     if (name.size() > 0 && name[name.size() - 1] == '#') {
         // auto name object with a unique name
         int i;
-        for (i = 1; get_named(name + ecl::strf("%d",i)) != NULL; i++);
+//        for (i = 1; get_named(name + ecl::strf("%d",i)) != NULL; i++);
+        for (i = IntegerRand(1,999999); get_named(name + ecl::strf("%d",i)) != NULL; i = IntegerRand(1,999999));
         unique_name = name + ecl::strf("%d",i);
     }
     m_objnames.insert(unique_name, obj); // [name] = obj;
@@ -1884,7 +1885,7 @@
                 level->rubberbands.erase(j);
             }
         }
-        o->dispose();
+        DisposeObject(o);
     }
 }
 



From ral at mail.berlios.de  Mon Jul  7 23:59:49 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Mon, 7 Jul 2008 23:59:49 +0200
Subject: [Enigma-game-svn] r1220 - in trunk/src: . others
Message-ID: <200807072159.m67LxnIx002207@sheep.berlios.de>

Author: ral
Date: 2008-07-07 23:59:49 +0200 (Mon, 07 Jul 2008)
New Revision: 1220

Modified:
   trunk/src/items.cc
   trunk/src/others/Rubberband.cc
Log:
Trunk 1.1: new API reengineering
- Rubberband: min/max support
  improve damping on mutliple connected rubberbands
- it_strip: fix covered area


Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-07 21:24:10 UTC (rev 1219)
+++ trunk/src/items.cc	2008-07-07 21:59:49 UTC (rev 1220)
@@ -3957,9 +3957,9 @@
         DirectionBits cbits = getConnections();
         
         return (((fabs(pos[1] - ycenter) <= MAXDIST) 
-                && (((pos[0] <= xcenter) && (cbits & WESTBIT)) || ((pos[0] >= xcenter) && (cbits & EASTBIT))))
+                && (((pos[0] <= xcenter + MAXDIST) && (cbits & WESTBIT)) || ((pos[0] >= xcenter - MAXDIST) && (cbits & EASTBIT))))
                 || ((fabs(pos[0] - xcenter) <= MAXDIST) 
-                && (((pos[1] <= ycenter) && (cbits & NORTHBIT)) || ((pos[1] >= ycenter) && (cbits & SOUTHBIT)))))
+                && (((pos[1] <= ycenter + MAXDIST) && (cbits & NORTHBIT)) || ((pos[1] >= ycenter - MAXDIST) && (cbits & SOUTHBIT)))))
                 ? true : false;
     }
         

Modified: trunk/src/others/Rubberband.cc
===================================================================
--- trunk/src/others/Rubberband.cc	2008-07-07 21:24:10 UTC (rev 1219)
+++ trunk/src/others/Rubberband.cc	2008-07-07 21:59:49 UTC (rev 1220)
@@ -131,6 +131,8 @@
             ecl::V2 vn = normalize(v);
             bool isMax = (len > maxLength - eps);
             bool isMin = (len < minLength + eps);
+            ObjectList rl = anchor1->getAttr("rubbers");
+            int numRubbers =rl.size();
 
             // neutralize other force componentes in rubber direction
             double force1 = vn * ai->force;
@@ -141,7 +143,7 @@
             double relspeed = ai->vel * vn;   // positive for shrinking dist
             if (!isMin && (relspeed > 0) || !isMax && (relspeed < 0))
                 relspeed = 0;
-            force = - 1.8 * relspeed * vn / dt * ai->mass;  // 0.9 factor as damping
+            force = - (1 + 0.8 / numRubbers) * relspeed * vn / dt * ai->mass;  // damping for inverse friction and multiconnections
             ai->collforce += force;
 //            Log << "Rubber stone force "<< force1 << "  " <<relspeed<< "\n";
         } else {
@@ -157,6 +159,9 @@
                 isMax = (len > (maxLength - minLength)/2);
                 isMin = !isMax; 
             }
+            ObjectList rl1 = anchor1->getAttr("rubbers");
+            ObjectList rl2 = anchor2.ac->getAttr("rubbers");
+            int numRubbers = rl1.size() + rl2.size() - 1;
             
             // redistribute other force components in rubber direction according 
             // to the mass of actors to move the complex but to avoid length change
@@ -180,7 +185,7 @@
             if (isMax && (relspeed < 0) || isMin && (relspeed >0))
                 relspeed = 0;
             force = (dmu * relspeed / dt) * vn;
-            force = force * 0.9;   // damping for wrong friction calculation
+            force = force * (0.5 + 0.4 / numRubbers);   // damping for inverse friction and multicollision
 //            Log << "Rubber force " << force1 <<  "  " << force2 << "  relspeed  " << relspeed  << " both " << isBoth << "\n";
             ai1->collforce += force;
             ai2->collforce -= force;



From raoul at mail.berlios.de  Tue Jul  8 00:02:35 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Tue, 8 Jul 2008 00:02:35 +0200
Subject: [Enigma-game-svn] r1221 - in trunk: data src
Message-ID: <200807072202.m67M2ZUV002692@sheep.berlios.de>

Author: raoul
Date: 2008-07-08 00:02:34 +0200 (Tue, 08 Jul 2008)
New Revision: 1221

Modified:
   trunk/data/models-2d.lua
   trunk/data/models.lua
   trunk/src/items.cc
Log:
-> DefSubimages(...) with new option for the value of the first modelindex
-> Final gfx/model fix for general strip items



Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2008-07-07 21:59:49 UTC (rev 1220)
+++ trunk/data/models-2d.lua	2008-07-07 22:02:34 UTC (rev 1221)
@@ -497,10 +497,10 @@
 
 -- it_strip --
 do
-    DefSubimages("it_strip", {modelname="it_strip",w=4,h=4})
+    DefSubimages("it_strip", {modelname="it_strip", w=4, h=4, startindex=0})
+    DefAlias("it_strip", "it_strip0")
 end
 
-
 ----------------------------------------
 -- Animated Items and Item Animations --
 ----------------------------------------

Modified: trunk/data/models.lua
===================================================================
--- trunk/data/models.lua	2008-07-07 21:59:49 UTC (rev 1220)
+++ trunk/data/models.lua	2008-07-07 22:02:34 UTC (rev 1221)
@@ -100,10 +100,9 @@
     local yoff = opts.yoff or 0
     local modelname = opts.modelname or name
     local padding = options.padding or 0
-
-    local imagelist={}
-    local cnt = 1
-    local r=ecl.Rect:new(0,0,0,0)
+    local cnt = options.startindex or 1
+    local imagelist = {}
+    local r = ecl.Rect:new(0,0,0,0)
     for x=1,w do
         for y=1,h do
             r.x,r.y,r.w,r.h = imgw*(x-1),imgh*(y-1),imgw,imgh

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-07 21:59:49 UTC (rev 1220)
+++ trunk/src/items.cc	2008-07-07 22:02:34 UTC (rev 1221)
@@ -3937,8 +3937,7 @@
     }
     
     std::string StripItem::getModelName() const {
-//        return getClass();
-        return "st_bluesand";
+        return getClass();
     }
     
     void StripItem::init_model() {



From ral at mail.berlios.de  Tue Jul  8 01:18:51 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 8 Jul 2008 01:18:51 +0200
Subject: [Enigma-game-svn] r1222 - in trunk: data data/schemas src
Message-ID: <200807072318.m67NIp94030426@sheep.berlios.de>

Author: ral
Date: 2008-07-08 01:18:50 +0200 (Tue, 08 Jul 2008)
New Revision: 1222

Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/items.cc
   trunk/src/ox_magnum.cc
   trunk/src/ox_oxyd1.cc
   trunk/src/ox_peroxyd.cc
Log:
Trunk 1.1: new API reengineering
- it_strip: fix center object, too
  - add object xml declaration
- remap old it-vstrip,it-hstrip to it_strip
  - remove old code


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/data/api1init.lua	2008-07-07 23:18:50 UTC (rev 1222)
@@ -63,6 +63,8 @@
     it_magnet_on = "it-magnet-on",
     it_magnet_off = "it-magnet-off",
     it_rubberband = "it-rubberband",
+    it_strip_ew = "it-hstrip",
+    it_strip_ns = "it-vstrip",
     it_sword = "it-sword",
     it_trap = "it-abyss",
     it_trigger = "it-trigger",

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/data/schemas/objects.xml	2008-07-07 23:18:50 UTC (rev 1222)
@@ -176,6 +176,54 @@
       <attr name="min"/>
       <attr name="scissor"/>
     </object>
+    <object name="it_strip">
+      <attr name="connections"/>
+    </object>
+    <object name="it_strip_w">
+      <attr name="connections" value="w"/>
+    </object>
+    <object name="it_strip_s">
+      <attr name="connections" value="s"/>
+    </object>
+    <object name="it_strip_sw">
+      <attr name="connections" value="sw"/>
+    </object>
+    <object name="it_strip_e">
+      <attr name="connections" value="e"/>
+    </object>
+    <object name="it_strip_ew">
+      <attr name="connections" value="ew"/>
+    </object>
+    <object name="it_strip_es">
+      <attr name="connections" value="es"/>
+    </object>
+    <object name="it_strip_esw">
+      <attr name="connections" value="esw"/>
+    </object>
+    <object name="it_strip_n">
+      <attr name="connections" value="n"/>
+    </object>
+    <object name="it_strip_nw">
+      <attr name="connections" value="nw"/>
+    </object>
+    <object name="it_strip_ns">
+      <attr name="connections" value="ns"/>
+    </object>
+    <object name="it_strip_nsw">
+      <attr name="connections" value="nsw"/>
+    </object>
+    <object name="it_strip_ne">
+      <attr name="connections" value="ne"/>
+    </object>
+    <object name="it_strip_new">
+      <attr name="connections" value="new"/>
+    </object>
+    <object name="it_strip_nes">
+      <attr name="connections" value="nes"/>
+    </object>
+    <object name="it_strip_nesw">
+      <attr name="connections" value="nesw"/>
+    </object>
     <object name="it_sword"/>
     <object name="it_sword_new" init="true"/>
     <object name="it_trigger">
@@ -222,13 +270,6 @@
       <attr name="state" value="1"/>
     </object>
     <object name="it_wrench"/>
-    <object name="st" abstract="true"/>
-    <object name="st_clusterstone" abstract="true">
-      <attr name="cluster"/>
-      <attr name="connections"/>
-      <attr name="faces"/>
-      <msg name="_model_reanimated"/>
-    </object>
     <object name="ot" abstract="true">
     </object>
     <object name="ot_rubberband">
@@ -244,6 +285,13 @@
       <attr name="anchor1"/>
       <attr name="anchor2"/>
     </object>
+    <object name="st" abstract="true"/>
+    <object name="st_clusterstone" abstract="true">
+      <attr name="cluster"/>
+      <attr name="connections"/>
+      <attr name="faces"/>
+      <msg name="_model_reanimated"/>
+    </object>
     <object name="st" abstract="true">
       <attr name="movable" rw="r"/>
       <attr name="fellows"/>

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/src/items.cc	2008-07-07 23:18:50 UTC (rev 1222)
@@ -3955,8 +3955,8 @@
         double xcenter = get_pos().x + 0.5;
         DirectionBits cbits = getConnections();
         
-        return (((fabs(pos[1] - ycenter) <= MAXDIST) 
-                && (((pos[0] <= xcenter + MAXDIST) && (cbits & WESTBIT)) || ((pos[0] >= xcenter - MAXDIST) && (cbits & EASTBIT))))
+        return (((fabs(pos[1] - ycenter) <= MAXDIST) && ((fabs(pos[0] - xcenter) <= MAXDIST)  ||
+                   ((pos[0] <= xcenter + MAXDIST) && (cbits & WESTBIT)) || ((pos[0] >= xcenter - MAXDIST) && (cbits & EASTBIT))))
                 || ((fabs(pos[0] - xcenter) <= MAXDIST) 
                 && (((pos[1] <= ycenter + MAXDIST) && (cbits & NORTHBIT)) || ((pos[1] >= ycenter - MAXDIST) && (cbits & SOUTHBIT)))))
                 ? true : false;
@@ -3985,45 +3985,11 @@
         {"it_strip_nesw",  it_strip_nesw,  itf_static}
     };
 
-/* -------------------- HStrip and VStrip -------------------- */
+
+/* -------------------- it-surprise -------------------- */
 namespace
 {
-    class HStrip : public Item {
-        CLONEOBJ(HStrip);
-        DECL_TRAITS;
-    public:
-        HStrip() {
-        }
-        bool covers_floor(ecl::V2 pos) const {
-            if (GridPos(pos) != get_pos())
-                return false;
 
-            const double MAXDIST = 6.0/32;
-            double ycenter = get_pos().y + 0.5;
-            return (fabs(pos[1] - ycenter) > MAXDIST) ? false : true;
-        }
-    };
-    DEF_TRAITSF(HStrip, "it-hstrip", it_hstrip, itf_static);
-
-    class VStrip : public Item {
-        CLONEOBJ(VStrip);
-        DECL_TRAITS;
-    public:
-        VStrip() {
-        }
-        bool covers_floor(ecl::V2 pos) const {
-            if (GridPos(pos) != get_pos())
-                return false;
-
-            const double MAXDIST = 5.0/32;
-            double xcenter = get_pos().x + 0.5;
-            return (fabs(pos[0] - xcenter) > MAXDIST) ? false : true;
-        }
-    };
-    DEF_TRAITSF(VStrip, "it-vstrip", it_vstrip, itf_static);
-
-/* -------------------- it-surprise -------------------- */
-
     class SurpriseItem : public Item {
         CLONEOBJ(SurpriseItem);
         DECL_TRAITS;
@@ -4271,7 +4237,6 @@
     Register ("it_hammer_new", new Hammer(true));
     RegisterItem (new Hill);
     RegisterItem (new Hollow);
-    RegisterItem (new HStrip);
     RegisterItem (new Trap);
     RegisterItem (new Key);
     RegisterItem (new Landmine);
@@ -4313,7 +4278,6 @@
     Register ("it_vortex", new Vortex(true));
     RegisterItem (new Vortex(false));
     RegisterItem (new Vortex(true));
-    RegisterItem (new VStrip);
     RegisterItem (new Weight);
     RegisterItem (new WhiteBomb);
     RegisterItem (new Wrench);

Modified: trunk/src/ox_magnum.cc
===================================================================
--- trunk/src/ox_magnum.cc	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/src/ox_magnum.cc	2008-07-07 23:18:50 UTC (rev 1222)
@@ -348,8 +348,8 @@
     ITEMSPEC(it_tinyhill),      // OxydMagnum item 0x31
     ITEMSPEC(it_hollow),        // OxydMagnum item 0x32
     ITEMSPEC(it_tinyhollow),    // OxydMagnum item 0x33
-    ITEMSPEC(it_vstrip),        // OxydMagnum item 0x34
-    ITEMSPEC(it_hstrip),        // OxydMagnum item 0x35
+    ITEMSPEC(it_strip_ns),      // OxydMagnum item 0x34
+    ITEMSPEC(it_strip_ew),      // OxydMagnum item 0x35
     ITEMSPEC(it_springboard),   // OxydMagnum item 0x36
     ITEMSPEC(it_MISSING),       // OxydMagnum item 0x37
     ITEMSPEC(it_bridge_oxyd),   // OxydMagnum item 0x38

Modified: trunk/src/ox_oxyd1.cc
===================================================================
--- trunk/src/ox_oxyd1.cc	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/src/ox_oxyd1.cc	2008-07-07 23:18:50 UTC (rev 1222)
@@ -362,8 +362,8 @@
     ITEMSPEC(it_tinyhill),                // 0x31
     ITEMSPEC(it_hollow),                  // 0x32
     ITEMSPEC(it_tinyhollow),              // 0x33
-    ITEMSPEC(it_vstrip),                  // 0x34
-    ITEMSPEC(it_hstrip),                  // 0x35
+    ITEMSPEC(it_strip_ns),                // 0x34
+    ITEMSPEC(it_strip_ew),                // 0x35
     ITEMSPEC(it_springboard),             // 0x36
     ITEMSPEC(it_bridge_oxyd),             // 0x37 bridge active
     ITEMSPEC(it_bridge_oxyd),             // 0x38 bridge inactive

Modified: trunk/src/ox_peroxyd.cc
===================================================================
--- trunk/src/ox_peroxyd.cc	2008-07-07 22:02:34 UTC (rev 1221)
+++ trunk/src/ox_peroxyd.cc	2008-07-07 23:18:50 UTC (rev 1222)
@@ -437,8 +437,8 @@
     ITEMSPEC(it_tinyhill),                // 0x31
     ITEMSPEC(it_hollow),                  // 0x32
     ITEMSPEC(it_tinyhollow),              // 0x33
-    ITEMSPEC(it_vstrip),                  // 0x34
-    ITEMSPEC(it_hstrip),                  // 0x35
+    ITEMSPEC(it_strip_ns),                // 0x34
+    ITEMSPEC(it_strip_ew),                // 0x35
     ITEMSPEC(it_springboard),             // 0x36
     ITEMSPEC(it_MISSING),                 // 0x37
     ITEMSPEC(it_bridge_oxyd),             // 0x38



From andreasl at mail.berlios.de  Tue Jul  8 01:52:27 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Tue, 8 Jul 2008 01:52:27 +0200
Subject: [Enigma-game-svn] r1223 - team_levelpacks/team_test_new_api
Message-ID: <200807072352.m67NqR8A007318@sheep.berlios.de>

Author: andreasl
Date: 2008-07-08 01:52:25 +0200 (Tue, 08 Jul 2008)
New Revision: 1223

Added:
   team_levelpacks/team_test_new_api/andreasT02_1.xml
Log:
Test Level new API:
 - Test level for map handling functions
   in libluatools.


Added: team_levelpacks/team_test_new_api/andreasT02_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/andreasT02_1.xml	2008-07-07 23:18:50 UTC (rev 1222)
+++ team_levelpacks/team_test_new_api/andreasT02_1.xml	2008-07-07 23:52:25 UTC (rev 1223)
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Map Handling Luatools" el:subtitle="" el:id="maphandling_andreas"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Andreas Lochmann" el:email=""/>
+      <el:copyright>Copyright ? 2008 Andreas Lochmann</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libluatools" el:id="lib/libluatools" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+wo["ConserveLevel"] = true
+
+ti["  "] = {"fl-sahara"}
+ti["A "] = {"fl-leaves"}
+ti["B "] = {"fl-swamp"}
+ti["C "] = {"fl-metal"}
+ti["D "] = {"fl-black"}
+ti["E "] = {"fl-inverse"}
+ti["F "] = {"fl-rough-blue"}
+ti["G "] = {"fl-rough"}
+ti["H "] = {"fl-floor_001"}
+
+ti[" @"] = {"#ac-blackball"}
+ti[" d"] = {"st_death"}
+ti[" 1"] = {"it_wrench"}
+
+floor = {
+"                    ",
+"         CCCC  DDDD ",
+"         CCCC  DDDD ",
+"                    ",
+"   AAAA  BBBB  EEEE ",
+"   AAAA  BBBB  EEEE ",
+"                    ",
+"   FFFF  GGGG  HHHH ",
+"   FFFF  GGGG  HHHH ",
+"                    ",
+"                    ",
+"                    ",
+"                    "}
+
+rest = {
+"                    ",
+"                1   ",
+"         d      1   ",
+"                1   ",
+"                1   ",
+"     @          1   ",
+"          d     1   ",
+"                1   ",
+"                1   ",
+"                1   ",
+"           d    1",
+"                1   ",
+"                    "}
+
+new_map = luatools.fuse_map_layers(floor, rest)
+
+luatools.print_map(floor, "|")
+print("")
+luatools.print_map(rest, "|")
+print("")
+luatools.print_map(new_map, "|")
+print("")
+
+layers = luatools.split_map_layers(2, new_map)
+
+for _, layer in pairs(layers) do
+  luatools.print_map(layer, "|")
+  print("")
+end
+
+concatted = luatools.concat_maps_vertically(floor, rest)
+luatools.print_map(concatted, "|")
+print("")
+
+w, h = wo(res.composer(ti), "  ", new_map)
+
+  ]]></el:luamain>
+    <el:i18n>
+     <el:string el:key="title">
+       <el:english el:translate="false"/>
+     </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+



From ral at mail.berlios.de  Tue Jul  8 23:25:03 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 8 Jul 2008 23:25:03 +0200
Subject: [Enigma-game-svn] r1224 - in trunk: data data/schemas src
	src/others src/stones
Message-ID: <200807082125.m68LP3Tq014086@sheep.berlios.de>

Author: ral
Date: 2008-07-08 23:25:02 +0200 (Tue, 08 Jul 2008)
New Revision: 1224

Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/d_engine.hh
   trunk/src/display.cc
   trunk/src/display.hh
   trunk/src/items.cc
   trunk/src/others/Rubberband.cc
   trunk/src/others/Wire.cc
   trunk/src/others/Wire.hh
   trunk/src/stones/ScissorsStone.cc
Log:
Trunk 1.1: new API reengineering
- support thick lines for rubberbands and wires
- change st_scissors action value from false to true
- it_rubberband: 
  - transfer identity to ot_rubberband
  - let ot_rubberband perform action on behalf of it_rubberband

Note:
- currently both rubberbands and wires are configured thick for test purposes
- Wire.cc has an outcommented line for an alternative color for test purposes

Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/data/api1init.lua	2008-07-08 21:25:02 UTC (rev 1224)
@@ -260,6 +260,10 @@
         return enigma._MakeObject("st_mirror_slab_e")
     elseif name == "st-3mirror" then
         return enigma._MakeObject("st_mirror_triangle_s")
+    elseif name == "st-scissors" then
+        local obj = enigma._MakeObject("st_scissors")
+        enigma._SetAttrib(obj, "inverse", true)
+        return obj
     end
     
     newname = RenamingObjectsOld2New[name]

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/data/schemas/objects.xml	2008-07-08 21:25:02 UTC (rev 1224)
@@ -280,6 +280,7 @@
       <attr name="threshold"/>
       <attr name="max"/>
       <attr name="min"/>
+      <msg name="_performaction"/>
     </object>
     <object name="ot_wire">
       <attr name="anchor1"/>

Modified: trunk/src/d_engine.hh
===================================================================
--- trunk/src/d_engine.hh	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/d_engine.hh	2008-07-08 21:25:02 UTC (rev 1224)
@@ -296,9 +296,10 @@
         V2 start, end;
         V2 oldstart, oldend;
         unsigned short r,g,b;
+        bool thick;
 
-        Line(const V2 &s, const V2 &e, unsigned short rc, unsigned short gc, unsigned short bc) :
-                start (s), end (e), r (rc), g (gc), b (bc) {
+        Line(const V2 &s, const V2 &e, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick) :
+                start (s), end (e), r (rc), g (gc), b (bc), thick (isThick) {
         }
         Line() {}
     };
@@ -316,7 +317,7 @@
         {}
         void draw_onepass (ecl::GC &gc);
 
-        RubberHandle add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc);
+        RubberHandle add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick);
         void set_startpoint (unsigned id, const V2 &p1);
         void set_endpoint (unsigned id, const V2 &p2);
         void kill_line (unsigned id);
@@ -354,7 +355,7 @@
         SpriteHandle add_effect (const V2& pos, Model *m, bool isDispensible = false);
         SpriteHandle add_sprite (const V2 &pos, Model *m);
 
-        RubberHandle add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc);
+        RubberHandle add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick);
 
         void new_world (int w, int h);
         void redraw();

Modified: trunk/src/display.cc
===================================================================
--- trunk/src/display.cc	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/display.cc	2008-07-08 21:25:02 UTC (rev 1224)
@@ -1081,6 +1081,11 @@
 
         set_color(gc, i->second.r, i->second.g, i->second.b, 255);
         line (gc, x1, y1, x2, y2);
+        if (i->second.thick) {
+            line (gc, x1-1, y1, x2-1, y2);
+            line (gc, x1, y1-1, x2, y2-1);
+            line (gc, x1-1, y1-1, x2-1, y2-1);
+        }
     }
 }
 
@@ -1140,9 +1145,9 @@
     }
 }
 
-RubberHandle DL_Lines::add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc)
+RubberHandle DL_Lines::add_line (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick)
 {
-    m_rubbers[m_id] = Line(p1, p2, rc, gc, bc);
+    m_rubbers[m_id] = Line(p1, p2, rc, gc, bc, isThick);
     mark_redraw_line (m_rubbers[m_id]);
     return RubberHandle(this, m_id++);
 }
@@ -1876,9 +1881,9 @@
 
 
 RubberHandle
-CommonDisplay::add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc)
+CommonDisplay::add_line (V2 p1, V2 p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick)
 {
-    return line_layer->add_line (p1, p2, rc, gc, bc);
+    return line_layer->add_line (p1, p2, rc, gc, bc, isThick);
 }
 
 SpriteHandle
@@ -2227,8 +2232,8 @@
 }
 
 RubberHandle
-display::AddRubber (const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc) {
-    return gamedpy->add_line(p1, p2, rc, gc, bc);
+display::AddRubber(const V2 &p1, const V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick) {
+    return gamedpy->add_line(p1, p2, rc, gc, bc, isThick);
 }
 
 void display::SetTextSpeed(int newspeed) {

Modified: trunk/src/display.hh
===================================================================
--- trunk/src/display.hh	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/display.hh	2008-07-08 21:25:02 UTC (rev 1224)
@@ -189,7 +189,7 @@
         unsigned id;
     };
 
-    RubberHandle AddRubber (const ecl::V2 &p1, const ecl::V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc);
+    RubberHandle AddRubber (const ecl::V2 &p1, const ecl::V2 &p2, unsigned short rc, unsigned short gc, unsigned short bc, bool isThick);
 }
 
 

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/items.cc	2008-07-08 21:25:02 UTC (rev 1224)
@@ -4185,7 +4185,8 @@
             obj->setAttr("max", getAttr("max"));
             obj->setAttr("min", getAttr("min"));
             AddOther(dynamic_cast<Other *>(obj));
-            performAction(true);
+            transferIdentity(obj);
+            SendMessage(obj, "_performaction");
         }
 
         return ITEM_KILL;

Modified: trunk/src/others/Rubberband.cc
===================================================================
--- trunk/src/others/Rubberband.cc	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/others/Rubberband.cc	2008-07-08 21:25:02 UTC (rev 1224)
@@ -90,7 +90,7 @@
     }
     
     void Rubberband::postAddition() {
-        model = display::AddRubber(anchor1->get_pos(), posAnchor2(), 240, 140, 20);  // orange
+        model = display::AddRubber(anchor1->get_pos(), posAnchor2(), 240, 140, 20, true);  // orange
     }
     
     void Rubberband::preRemoval() {

Modified: trunk/src/others/Wire.cc
===================================================================
--- trunk/src/others/Wire.cc	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/others/Wire.cc	2008-07-08 21:25:02 UTC (rev 1224)
@@ -56,8 +56,17 @@
         return Other::getAttr(key);
     }
     
+    Value Wire::message(const Message &m) {
+        if (m.message == "_performaction") {
+            performAction(true);
+            return Value();
+        }
+        return Other::message(m);
+    }
+
     void Wire::postAddition() {
-        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 200, 50, 150);    // purple
+//        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 100, 255, 30, true);    // lime
+        model = display::AddRubber(anchor1->getOwnerPos().center(), anchor2->getOwnerPos().center(), 200, 50, 150, true);    // purple
     }
     
     void Wire::preRemoval() {

Modified: trunk/src/others/Wire.hh
===================================================================
--- trunk/src/others/Wire.hh	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/others/Wire.hh	2008-07-08 21:25:02 UTC (rev 1224)
@@ -38,6 +38,7 @@
         virtual std::string getClass() const;
         virtual void setAttr(const std::string &key, const Value &val);
         virtual Value getAttr(const std::string &key) const;
+        virtual Value message(const Message &m);
         
         // Other interface
         virtual void postAddition();

Modified: trunk/src/stones/ScissorsStone.cc
===================================================================
--- trunk/src/stones/ScissorsStone.cc	2008-07-07 23:52:25 UTC (rev 1223)
+++ trunk/src/stones/ScissorsStone.cc	2008-07-08 21:25:02 UTC (rev 1224)
@@ -41,7 +41,7 @@
         sound_event("scissors");
         set_anim("st-scissors-snip");
         if (SendMessage(sc.actor, "disconnect").to_bool())
-            performAction(false);
+            performAction(true);
     }
 
     DEF_TRAITS(ScissorsStone, "st_scissors", st_scissors);



From ral at mail.berlios.de  Tue Jul  8 23:43:26 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 8 Jul 2008 23:43:26 +0200
Subject: [Enigma-game-svn] r1225 - in trunk: data src src/stones
Message-ID: <200807082143.m68LhQcr016021@sheep.berlios.de>

Author: ral
Date: 2008-07-08 23:43:25 +0200 (Tue, 08 Jul 2008)
New Revision: 1225

Modified:
   trunk/data/api1init.lua
   trunk/data/models-2d.lua
   trunk/src/items.cc
   trunk/src/stones/BoulderStone.cc
   trunk/src/stones/ChessStone.cc
   trunk/src/stones/RubberbandStone.cc
   trunk/src/stones_complex.cc
   trunk/src/stones_simple.cc
Log:
Trunk 1.1: new API reengineering
- rename it-magicwand to it_magicwand


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/data/api1init.lua	2008-07-08 21:43:25 UTC (rev 1225)
@@ -59,6 +59,7 @@
     it_glasses_broken = "it-glasses-broken",
     it_hammer = "it-hammer",
     it_landmine = "it-landmine",
+    it_magicwand = "it-magicwand",
     it_magnet = "it-magnet",
     it_magnet_on = "it-magnet-on",
     it_magnet_off = "it-magnet-off",

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/data/models-2d.lua	2008-07-08 21:43:25 UTC (rev 1225)
@@ -402,8 +402,6 @@
         "it-flagwhite",
         "it-hill",
         "it-hollow",
-        "it-hstrip",
-        "it-magicwand",
         "it-odometer",
         "it-pencil",
         "it-pin",
@@ -416,7 +414,6 @@
         "it-surprise",
         "it-tinyhill",
         "it-tinyhollow",
-        "it-vstrip",
         "it-weight",
         "it-whitebomb"
     }
@@ -436,6 +433,7 @@
     DefImage("it_hammer", {filename="it-hammer"})
     DefImage("it_key", {filename="it-key"})
     DefImage("it_landmine", {filename="it-landmine"})
+    DefImage("it_magicwand", {filename="it-magicwand"})
     DefImage("it_rubberband", {filename="it-rubberband"})
     DefImage("it_sword", {filename="it-sword"})
     DefImage("it_umbrella", {filename="it-umbrella"})

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/items.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -187,7 +187,7 @@
 
 namespace
 {
-    DEF_ITEM(MagicWand, "it-magicwand", it_magicwand);
+    DEF_ITEM(MagicWand, "it_magicwand", it_magicwand);
     DEF_ITEM(Floppy,    "it_floppy", it_floppy);
     DEF_ITEM(Key,       "it_key", it_key);
     DEF_ITEM(Odometer,  "it-odometer", it_odometer);

Modified: trunk/src/stones/BoulderStone.cc
===================================================================
--- trunk/src/stones/BoulderStone.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/stones/BoulderStone.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -126,7 +126,7 @@
         if (state == FALLING)
             return;
 
-        if (player::WieldedItemIs (sc.actor, "it-magicwand")) {
+        if (player::WieldedItemIs (sc.actor, "it_magicwand")) {
             setDir(reverse(getDir()));
         }
     }
@@ -168,7 +168,7 @@
     void BoulderStone::setDir(Direction d) {
         if (d != getDir() && (state != FALLING)) {
             Object::setAttr("orientation", d);
-            state = ACTIVE;   // if turned by it-magicwand -> allow triggering
+            state = ACTIVE;   // if turned by it_magicwand -> allow triggering
             triggerObstacle(getDir(), true);
             init_model();
         }

Modified: trunk/src/stones/ChessStone.cc
===================================================================
--- trunk/src/stones/ChessStone.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/stones/ChessStone.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -119,7 +119,7 @@
 
     void ChessStone::actor_hit(const StoneContact &sc) {
          Value accolor = sc.actor->getAttr("color");
-         if (player::WieldedItemIs (sc.actor, "it-magicwand")) {
+         if (player::WieldedItemIs (sc.actor, "it_magicwand")) {
              sound_event ("stonepaint");
              set_color(1 - (int)getAttr("color"));
              // If not IDLE, color will be set next time IDLE is set.

Modified: trunk/src/stones/RubberbandStone.cc
===================================================================
--- trunk/src/stones/RubberbandStone.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/stones/RubberbandStone.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -67,7 +67,7 @@
 
     void RubberbandStone::on_impulse (const Impulse& impulse) {
         Actor *a = dynamic_cast<Actor *>(impulse.sender);
-        if (a && player::WieldedItemIs (a, "it-magicwand")) {
+        if (a && player::WieldedItemIs (a, "it_magicwand")) {
             move_stone(impulse.dir);
             propagateImpulse(impulse);
         }

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/stones_complex.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -349,7 +349,7 @@
     Direction o=get_orientation();
 
     if (has_dir(contact_faces(sc), o)) {
-        if (player::WieldedItemIs (sc.actor, "it-magicwand")) {
+        if (player::WieldedItemIs (sc.actor, "it_magicwand")) {
             set_orientation(reverse(o));
             init_model();
         }
@@ -915,7 +915,7 @@
         bool    actor_with_wand = false;
 
         if (Actor *ac = dynamic_cast<Actor*>(impulse.sender)) 
-            actor_with_wand = player::WieldedItemIs (ac, "it-magicwand");
+            actor_with_wand = player::WieldedItemIs (ac, "it_magicwand");
 
         maybe_move_cluster(c, is_complete, actor_with_wand, impulse.dir);
     }
@@ -1062,7 +1062,7 @@
     else {
         // Not Oxyd 1
 
-        bool has_magic_wand = player::WieldedItemIs (sc.actor, "it-magicwand");
+        bool has_magic_wand = player::WieldedItemIs (sc.actor, "it_magicwand");
 
         // 1) Try to start explosion of complete cluster
         if (has_magic_wand && explode_complete_cluster())
@@ -1705,7 +1705,7 @@
                 notify_state(oldstate); // restart anim if it was animated before move
 
                 Actor *hitman = dynamic_cast<Actor*>(impulse.sender);
-                if (hitman && player::WieldedItemIs (hitman, "it-magicwand")) {
+                if (hitman && player::WieldedItemIs (hitman, "it_magicwand")) {
                     return;     // do not change state to PULSING
                 }
             }

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-08 21:25:02 UTC (rev 1224)
+++ trunk/src/stones_simple.cc	2008-07-08 21:43:25 UTC (rev 1225)
@@ -830,7 +830,7 @@
         BrickMagic() : Stone("st-brick_magic") {}
     private:
         void actor_hit(const StoneContact &sc) {
-            if (player::WieldedItemIs (sc.actor, "it-magicwand")) {
+            if (player::WieldedItemIs (sc.actor, "it_magicwand")) {
                 sound_event ("stonepaint");
                 ReplaceStone (get_pos(), MakeStone("st-glass"));
             }
@@ -961,7 +961,7 @@
 
         void actor_hit(const StoneContact &sc) {
             if (state == INVISIBLE) {
-                if (player::WieldedItemIs (sc.actor, "it-magicwand")) {
+                if (player::WieldedItemIs (sc.actor, "it_magicwand")) {
                     sound_event ("stonepaint");
                     state = STONE;
                     set_model("st-greenbrown");
@@ -1492,7 +1492,7 @@
         YinYangStone3() : YinYangStone("st-yinyang3") {}
     private:
         void actor_hit(const StoneContact &sc) {
-            if (player::WieldedItemIs (sc.actor, "it-magicwand") ||
+            if (player::WieldedItemIs (sc.actor, "it_magicwand") ||
                 player::WieldedItemIs (sc.actor, "it_brush"))
             {
                 Value color = sc.actor->getAttr("color");



From ral at mail.berlios.de  Wed Jul  9 00:30:17 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Wed, 9 Jul 2008 00:30:17 +0200
Subject: [Enigma-game-svn] r1226 - team_levelpacks/team_test_new_api
Message-ID: <200807082230.m68MUHeu020751@sheep.berlios.de>

Author: ral
Date: 2008-07-09 00:29:59 +0200 (Wed, 09 Jul 2008)
New Revision: 1226

Modified:
   team_levelpacks/team_test_new_api/ralT014_1.xml
   team_levelpacks/team_test_new_api/ralT016_1.xml
   team_levelpacks/team_test_new_api/ralT019_1.xml
   team_levelpacks/team_test_new_api/ralT021_1.xml
   team_levelpacks/team_test_new_api/ralT025_1.xml
   team_levelpacks/team_test_new_api/ralT027_1.xml
   team_levelpacks/team_test_new_api/ralT028_1.xml
   team_levelpacks/team_test_new_api/ralT033_1.xml
   team_levelpacks/team_test_new_api/ralT035_1.xml
   team_levelpacks/team_test_new_api/ralT042_1.xml
   team_levelpacks/team_test_new_api/ralT050_1.xml
   team_levelpacks/team_test_new_api/ralT051_1.xml
   team_levelpacks/team_test_new_api/ralT053_1.xml
   team_levelpacks/team_test_new_api/ralT054_1.xml
   team_levelpacks/team_test_new_api/raoulT05_1.xml
Log:
Test Level new API:
- level updates for object renamings


Modified: team_levelpacks/team_test_new_api/ralT014_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT014_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT014_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -22,26 +22,27 @@
 
 ti[" "] = {"fl-sahara"}
 ti["."] = ti({"fl-rough-blue", checkerboard=0}) .. {"fl-rough-red", checkerboard=1}
-ti["c"] = ti[" "] .. {"it-cherry", name="cherry#"}
-ti["5"] = ti[" "] .. {"it_coin_m", name="money", target={"otto", "emil*"}}
-ti["S"] = ti[" "] .. {"st_coinslot"}
-ti["m"] = ti[" "] .. {"#ac-blackball"}
+ti["*"] = ti({"st_chess_black", checkerboard=0}) .. {"st_chess_white", checkerboard=1}
+ti["c"] = {"it-cherry", name="cherry#"}
+ti["5"] = {"it_coin_m", name="money", target={"otto", "emil*"}}
+ti["S"] = {"st_coinslot"}
+ti["m"] = {"#ac-blackball"}
 ti["x"] = {"fl-rough-blue"} .. {"it-banana"} .. ti({"ac-bug", 0.7})
 ti["y"] = (ti({"fl-rough-blue"}) .. {"it-banana"}) .. {"ac-bug", name="buggy"}
-ti["s"] = ti[" "] .. {"st_switch", action="callback", target="doit"}
-ti["b"] = ti[" "] .. {"st_blocker", name="blocker"}
-ti["d"] = ti[" "] .. {"st-door_b", name="door#"}
-ti["h"] = ti[" "] .. {"st_chess_black", name="chess#"}
-ti["o"] = ti[" "] .. {"st_oxyd"}
-ti["B"] = ti[" "] .. {"it-bag"}
-ti["T"] = ti[" "] .. {"st-thief"}
+ti["s"] = {"st_switch", action="callback", target="doit"}
+ti["b"] = {"st_blocker", name="blocker"}
+ti["d"] = {"st-door_b", name="door#"}
+ti["h"] = {"st_chess_black", name="chess#"}
+ti["o"] = {"st_oxyd"}
+ti["B"] = {"it-bag"}
+ti["T"] = {"st-thief"}
 ti["t"] = {"fl-thief"}
 
 w, h = wo(ti, " ", {
+"** ***              ",
+"***      ",                  -- oops a line too short
+"* m          5    BB",
 "                    ",
-"         ",                  -- oops a line too short
-"  m          5    BB",
-"                    ",
 "  c          S    d ",
 "  c     x         d ",
 "  c         h     d ",
@@ -53,7 +54,7 @@
 "o o o      ........."
 })
 
-wo[{w-2, h-2}] = {"it-magicwand"}
+wo[{w-2, h-2}] = {"it_magicwand"}
 p1 = po(12.3, 3.2)
 p2 = p1:grid()
 wo[p2] = {"ac-bug"}

Modified: team_levelpacks/team_test_new_api/ralT016_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT016_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT016_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -31,8 +31,8 @@
 ti["p"] = {"st_polarswitch"}
 ti["E"] = {"st_laser_e", state = ON}
 ti["e"] = {"st_laser_n", state = ON}
-ti["m"] = {"st-pmirror", movable=1, transparent=true, orientation=2}
-ti["w"] = {"it-magicwand"}
+ti["m"] = {"st_mirror", movable=true, transparent=true, orientation=1}
+ti["w"] = {"it_magicwand"}
 ti["V"] = {"st-volcano_inactive"}
 ti["I"] = {"st-stoneimpulse"}
 ti["i"] = {"st-stoneimpulse_movable"}

Modified: team_levelpacks/team_test_new_api/ralT019_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT019_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT019_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -26,8 +26,8 @@
 ti["P"] = {"st_oxyd", name="p#"}
 ti["Q"] = {"st_oxyd", name="q#"}
 ti["R"] = {"st_oxyd", name="r#"}
-ti["S"] = {"st_oxyd", name="s#"}
-ti["T"] = {"st_oxyd", name="t#"}
+ti["S"] = {"st_oxyd", name="s#1"}
+ti["T"] = {"st_oxyd", name="t#1"}
 ti["1"] = {"#ac-blackball"}
 
 w, h = wo(ti, " ", {

Modified: team_levelpacks/team_test_new_api/ralT021_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT021_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT021_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -26,7 +26,7 @@
 ti["B"] = {"it_vortex", name="v2", destination="v3"}
 ti["C"] = {"it_vortex", name="v3", destination={"v1","v2","v4"}}
 ti["D"] = {"it_vortex", name="v4", destination=po(3.1,7.7)}
-ti["R"] = {"st-rubberband"}
+ti["R"] = {"st_rubberband"}
 ti["W"] = {"st-wood"}
 ti["S"] = {"st_switch", target="autoclose"}
 

Modified: team_levelpacks/team_test_new_api/ralT025_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT025_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT025_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -20,37 +20,37 @@
 wo["ConserveLevel"] = true
 
 ti[" "] = {"fl-sahara"}
-ti["#"] = ti[" "] .. {"st-rock1"}
-ti["y"] = ti[" "] .. {"it-magicwand"}
+ti["#"] = {"st-rock1"}
+ti["y"] = {"it_magicwand"}
 
-ti["s"] = ti[" "] .. {"st_switch", name="swo#", state=1}
-ti["S"] = ti[" "] .. {"st_switch", name="sw#"}
-ti["T"] = ti[" "] .. {"st_switch", name="swt#"}
-ti["D"] = ti[" "] .. {"st-door-v", name="do#"}
-ti["R"] = ti[" "] .. {"st_boulder_n", name="boulder"}
-ti["L"] = ti[" "] .. {"st_laserswitch", target="door1", action="signal"}
+ti["s"] = {"st_switch", name="swo#", state=1}
+ti["S"] = {"st_switch", name="sw#"}
+ti["T"] = {"st_switch", name="swt#"}
+ti["D"] = {"st-door-v", name="do#"}
+ti["R"] = {"st_boulder_n", name="boulder"}
+ti["L"] = {"st_laserswitch", target="door1", action="signal"}
 
-ti["f"] = ti[" "] .. {"st_fourswitch", target="swo#1", action="signal"}
-ti["F"] = ti[" "] .. {"st_fourswitch", target="sw#1", action="signal", inverse=true}
-ti["g"] = ti[" "] .. {"st_fourswitch", name="fourstate", target_3="swt#1", target_2="swt#2", target_1="swt#3", target_0="swt#4", action="signal"}
-ti["G"] = ti[" "] .. {"st_fourswitch", target="boulder", action="orientate"}
+ti["f"] = {"st_fourswitch", target="swo#1", action="signal"}
+ti["F"] = {"st_fourswitch", target="sw#1", action="signal", inverse=true}
+ti["g"] = {"st_fourswitch", name="fourstate", target_3="swt#1", target_2="swt#2", target_1="swt#3", target_0="swt#4", action="signal"}
+ti["G"] = {"st_fourswitch", target="boulder", action="orientate"}
 
-ti["h"] = ti[" "] .. {"st_fourswitch", name="f#"}
-ti["u"] = ti[" "] .. {"st_switch", target="f#1", action="signal"}
-ti["U"] = ti[" "] .. {"st_switch", target="f#2", action="toggle"}
+ti["h"] = {"st_fourswitch", name="f#"}
+ti["u"] = {"st_switch", target="f#1", action="signal"}
+ti["U"] = {"st_switch", target="f#2", action="toggle"}
 
 -- the bolder on fourswitch trigger will work after the reengineering of boulder
-ti["B"] = ti[" "] .. {"st_boulder_w"}
-ti["W"] = ti[" "] .. {"st-wood"}
+ti["B"] = {"st_boulder_w"}
+ti["W"] = {"st-wood"}
 
 
 -- 4 switches to set state of fourswitch that switches 4 others
-ti["t"] = ti[" "] .. {"st_switch", target="setstate"}
+ti["t"] = {"st_switch", target="setstate"}
 
-ti["H"] = ti[" "] .. {"st_fourswitch", counterclock=true, name="anticlock"}
+ti["H"] = {"st_fourswitch", counterclock=true, name="anticlock"}
 
 
-ti["1"] = ti[" "] .. {"#ac-blackball"}
+ti["1"] = {"#ac-blackball"}
 
 w, h = wo(ti, " ", {
 "            f  s    ",

Modified: team_levelpacks/team_test_new_api/ralT027_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT027_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT027_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -20,27 +20,27 @@
 wo["ConserveLevel"] = true
 
 ti[" "] = {"fl-sahara"}
-ti["b"] = ti[" "] .. {"it_blocker"}
-ti["n"] = ti[" "] .. {"it_blocker_new"}
-ti["B"] = ti[" "] .. {"st_blocker"}
-ti["N"] = ti[" "] .. {"st_blocker_new"}
+ti["b"] = {"it_blocker"}
+ti["n"] = {"it_blocker_new"}
+ti["B"] = {"st_blocker"}
+ti["N"] = {"st_blocker_new"}
 
-ti["W"] = ti[" "] .. {"st_boulder_w"}
+ti["W"] = {"st_boulder_w"}
 ti["w"] = ti["n"] .. {"st_boulder_w"}
 ti["v"] = ti["b"] .. {"st_boulder_w"}
-ti["E"] = ti[" "] .. {"st_boulder_e"}
+ti["E"] = {"st_boulder_e"}
 
-ti["a"] = ti[" "] .. {"it_blocker", autoclose=true}
-ti["A"] = ti[" "] .. {"st_blocker", target="laser", action="toggle"}
-ti["L"] = ti[" "] .. {"st_laser_s", "laser"}
+ti["a"] = {"it_blocker", autoclose=true}
+ti["A"] = {"st_blocker", target="laser", action="toggle"}
+ti["L"] = {"st_laser_s", "laser"}
 
-ti["S"] = ti[" "] .. {"st_switch", target="blocker"}
-ti["s"] = ti[" "] .. {"it_blocker", "blocker"}
-ti["H"] = ti[" "] .. {"st-wood"}
+ti["S"] = {"st_switch", target="blocker"}
+ti["s"] = {"it_blocker", "blocker"}
+ti["H"] = {"st-wood"}
 
 
 
-ti["1"] = (ti[" "] .. {"#ac-blackball"}) .. {"it-magicwand"}
+ti["1"] = (ti[" "] .. {"#ac-blackball"}) .. {"it_magicwand"}
 
 w, h = wo(ti, " ", {
 "                    ",

Modified: team_levelpacks/team_test_new_api/ralT028_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT028_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT028_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -39,7 +39,7 @@
 ti["s"] = {"st-swap"}
 ti["X"] = {"st_switch", target="o#1", action="shuffle"}
 ti["Y"] = {"st_switch", target="o#1", action="closeall"}
-ti["1"] = (ti[" "] .. {"it-magicwand"}) .. {"#ac-blackball"}
+ti["1"] = (ti[" "] .. {"it_magicwand"}) .. {"#ac-blackball"}
 
 ti["w"] = {"st_switch", target="Laser#7", action="toggle"}
 ti["f"] = {"st-fart"}

Modified: team_levelpacks/team_test_new_api/ralT033_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT033_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT033_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -35,7 +35,7 @@
 ti["I"] = {"st_switch", target="iskind"}
 
 
-ti["1"] = ti({"it-magicwand"}) .. {"#ac-blackball"}
+ti["1"] = ti({"it_magicwand"}) .. {"#ac-blackball"}
 
 
 w, h = wo(ti, " ", {

Modified: team_levelpacks/team_test_new_api/ralT035_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT035_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT035_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -31,7 +31,7 @@
 
 -- sample of registry of a world lib function and its usage
 function hurra(world, pos)
-    world[pos] = {"it-magicwand"}
+    world[pos] = {"it_magicwand"}
 end
 
 wo:_register("hurra", hurra)

Modified: team_levelpacks/team_test_new_api/ralT042_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT042_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT042_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -44,7 +44,7 @@
 ti["i"] = {"st-stoneimpulse_movable"}
 ti["w"] = {"st-wood"}
 ti["h"] = {"it_hammer"}
-ti["m"] = {"it-magicwand"}
+ti["m"] = {"it_magicwand"}
 ti["b"] = {"it_brush"}
 ti["p"] = {"it-pencil"}
 

Modified: team_levelpacks/team_test_new_api/ralT050_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT050_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT050_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -34,9 +34,10 @@
 
 ti["s"] = {"it_sword"}
 ti["K"] = {"st_knight"}
+ti["L"] = {"st_laser_e", state=ON}
 
 
-ti["w"] = {"it-magicwand"}
+ti["w"] = {"it_magicwand"}
 ti["c"] = {"st_chess_black"}
 ti["3"] = {"#ac-blackball", player=DEFAULT, controllers=0}
 ti["4"] = {"#ac-whiteball", player=DEFAULT, controllers=0}
@@ -49,8 +50,8 @@
 "A                  a",
 "A    C       D     a",
 "   3                ",
-"c    w       s KK   ",
-"   4                ",
+"c    w       s L K  ",
+"   4             K  ",
 "                    ",
 "                    ",
 "                    ",
@@ -60,9 +61,9 @@
 
   ]]></el:luamain>
     <el:i18n>
-	 <el:string el:key="title">
-	   <el:english el:translate="false"/>
-	 </el:string>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
    </el:i18n>
   </el:protected>
 </el:level>

Modified: team_levelpacks/team_test_new_api/ralT051_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT051_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT051_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -21,7 +21,7 @@
 ti["B"] = {"st-brownie"}
 ti["b"] = {"st_boulder_n"}
 ti["W"] = {"it_wrench"}
-ti["w"] = {"it-magicwand"}
+ti["w"] = {"it_magicwand"}
 
 ti["M"] = {"st_mirror", "mymir", flavor="triangle", transparent=true}
 ti["m"] = {"st_mirror", flavor="triangle", counterclock=true}

Modified: team_levelpacks/team_test_new_api/ralT053_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT053_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -30,15 +30,17 @@
 ti["p"] = {"it_rubberband", anchor2="a2", length=3, strength=10, threshold=2.5, max=4, min=4}
 ti["P"] = {"it_rubberband", anchor2="a2", length=3, strength=10, threshold=2.5, max=5, min=2}
 ti["Q"] = {"it_rubberband", anchor2="w", length=3, strength=10, threshold=2.5, max=5, min=2}
+ti["q"] = {"it_rubberband", anchor2="@@s#*", length=3, strength=10, threshold=2.5}
 
 ti["1"] = ti["y"] .. {"#ac-blackball", "a1"} 
 ti["2"] = ti["y"] .. {"#ac-whiteball", "a2"} 
 ti["3"] = {"#ac-horse", "a3"} 
+ti["*"] = {"#ac-whiteball-small", "s#", controllers=0} 
 
 w, h = wo(ti, " ", {
-"       r  r  r      ",
+"*      r  r  r     *",
 "                    ",
-"    1               ",
+"qq  1               ",
 "                    ",
 "             2      ",
 "R                   ",
@@ -48,7 +50,7 @@
 "                    ",
 "         s     #    ",
 "          ~~        ",
-"s         ~~.       "
+"s         ~~.      *"
 })
 
 --wo:add({"ot_rubberband", anchor1="a1", anchor2="w", length=2, strength=80, threshold=0, max=2.4})

Modified: team_levelpacks/team_test_new_api/ralT054_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/ralT054_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -23,7 +23,7 @@
 ti["~"] = {"fl-water"}
 
 ti["p"] = {"it-puller-w"}
-ti["m"] = {"it-magicwand"}
+ti["m"] = {"it_magicwand"}
 ti["t"] = {"it_wrench"}
 
 ti["w"] = {"st-wood"}

Modified: team_levelpacks/team_test_new_api/raoulT05_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-08 21:43:25 UTC (rev 1225)
+++ team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-08 22:29:59 UTC (rev 1226)
@@ -16,7 +16,6 @@
     </el:info>
     <el:luamain><![CDATA[
 ti[" "] = {"fl-swamp"}
-ti["A"] = {"#ac-blackball"}
 
 ti["a"] = {"it_strip"}
 
@@ -39,14 +38,18 @@
 
 ti["q"] = {"it_strip_nesw"}
 
+ti["w"] = {"st-wood"}
+
+ti["A"] = {"#ac-blackball"} .. ti["a"]
+
 w, h = wo(ti, " ", {
 "                    ",
 "        c           ",
 "       dqb          ",
 "        e           ",
-"                    ",
-"       hgf        A ",
-"       jaj          ",
+"                w   ",
+"       hgf     wAw  ",
+"       jaj      w   ",
 "       kgi          ",
 "                    ",
 "       hmf          ",



From andreasl at mail.berlios.de  Thu Jul 10 01:05:39 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Thu, 10 Jul 2008 01:05:39 +0200
Subject: [Enigma-game-svn] r1227 - in feature_branches/hp_lotm: images/lotm
	input/lotm
Message-ID: <200807092305.m69N5dxG013982@sheep.berlios.de>

Author: andreasl
Date: 2008-07-10 01:05:22 +0200 (Thu, 10 Jul 2008)
New Revision: 1227

Added:
   feature_branches/hp_lotm/images/lotm/lotm_200807.png
   feature_branches/hp_lotm/images/lotm/lotm_200807_a.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_b.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_c.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_d.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_e.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_f.jpg
   feature_branches/hp_lotm/images/lotm/lotm_200807_g.png
   feature_branches/hp_lotm/input/lotm/lotm_200807.html
Modified:
   feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
Log:
LotM Feature branch:
 - English version of LotM 7/08
Todo:
 - Current LotM-ratings and history
 - Gamer's comment(s)
 - German and Russian translations
   (maybe Ludmian has a Russian original
   of his text?)
 - Proofread, Validation
Note:
 - At least one comment will probably be
   added to the article.


Added: feature_branches/hp_lotm/images/lotm/lotm_200807.png
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_a.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_a.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_b.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_b.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_c.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_c.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_d.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_d.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_e.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_e.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_f.jpg
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_f.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/images/lotm/lotm_200807_g.png
===================================================================
(Binary files differ)


Property changes on: feature_branches/hp_lotm/images/lotm/lotm_200807_g.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: feature_branches/hp_lotm/input/lotm/lotm_200807.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-08 22:29:59 UTC (rev 1226)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-09 23:05:22 UTC (rev 1227)
@@ -0,0 +1,534 @@
+<div class="lotm">
+$$lotm_header$$
+
+  <h3 class="lotm">
+    <span class="date">July 2008: </span>
+    &quot;Gods of Enigma II&quot; by moonpearl
+  </h3>
+
+<p>
+Hi, little ball. I see you've changed a lot. You look tired and worn out, your
+once black and shiny surface is dusty and scratched. But I do recognize you.
+I've seen you. You've been to a lot of places. You've explored the most remote
+corners of the multiple worlds of Enigma a countless number of times. You've
+explored simple one-screeners and walked on the grounds of the most vast and
+'Elaborate' worlds. You've wandered in the magnificent rooms of the fabulous
+Temple of Gold and strayed into dusty, gloomy long abandoned places, where
+virtually every step could be your last one. 
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_g.png" alt="Level of the Month" border="0">
+<div class="imagetitle">Enigma V # 69</div>
+</div>
+
+<table cellpadding="0" cellspacing="1" class="statistics">
+<caption class="normalcaption">Some records of April 2008</caption>
+<colgroup>
+    <col width="80">
+    <tr><td class="num">2:08</td>
+        <td class="left">Moneymaker</td></tr>
+    <tr><td class="num">2:18</td>
+        <td class="left">Stupid</td></tr>
+    <tr><td class="num">2:54</td>
+        <td class="left">dev0</td></tr>
+    <tr><td class="num">3:47</td>
+        <td class="left">ryujun</td></tr>
+    <tr><td class="num">3:51</td>
+        <td class="left">daydreamer</td></tr>
+    <tr><td class="num">4:10</td>
+        <td class="left">Ronald</td></tr>
+    <tr><td class="num">4:17</td>
+        <td class="left">Craven</td></tr>
+    <tr><td class="num">4:27</td>
+        <td class="left">Taztunes</td></tr>
+    <tr><td class="num">4:30</td>
+        <td class="left">Django</td></tr>
+    <tr><td class="num">4:31</td>
+        <td class="left">Ludmian</td></tr>
+    <tr><td class="num">4:36</td>
+        <td class="left">Alex</td></tr>
+    <tr><td class="num">4:47</td>
+        <td class="left">Safalra</td></tr>
+    <tr><td class="num">5:08</td>
+        <td class="left">JuSt</td></tr>
+    <tr><td class="num">5:12</td>
+        <td class="left">U-Punkt</td></tr>
+    <tr><td class="num">5:30</td>
+        <td class="left">dpl</td></tr>
+    <tr><td class="num">5:57</td>
+        <td class="left">shoki</td></tr>
+    <tr><td class="num">6:18</td>
+        <td class="left">HuB34</td></tr>
+    <tr><td class="num">7:04</td>
+        <td class="left">Malla</td></tr>
+    <tr><td class="num">7:06</td>
+        <td class="left">Hans-HD</td></tr>
+    <tr><td class="num">7:39</td>
+        <td class="left">Lukas</td></tr>
+    <tr><td class="num">8:00</td>
+        <td class="left">Kosby</td></tr>
+    <tr><td class="num">8:22</td>
+        <td class="left">Gorn</td></tr>
+    <tr><td class="num">9:57</td>
+        <td class="left">para_doks</td></tr>
+    <tr><td class="num">10:01</td>
+        <td class="left">Daisy</td></tr>
+    <tr><td class="num">10:18</td>
+        <td class="left">ABS</td></tr>
+    <tr><td class="num">10:51</td>
+        <td class="left">Ale</td></tr>
+    <tr><td class="num">11:16</td>
+        <td class="left">serpent+Tobias</td></tr>
+    <tr><td class="num">12:59</td>
+        <td class="left">Andy</td></tr>
+    <tr><td class="num">13:30</td>
+        <td class="left">Iceshark7</td></tr>
+    <tr><td class="num">15:28</td>
+        <td class="left">Tarim</td></tr>
+    <tr><td class="num">15:30</td>
+        <td class="left">Freshman</td></tr>
+    <tr><td class="num">15:43</td>
+        <td class="left">biotopa</td></tr>
+    <tr><td class="num">17:13</td>
+        <td class="left">mrduke</td></tr>
+    <tr><td class="num">17:20</td>
+        <td class="left">fabian</td></tr>
+    <tr><td class="num">23:03</td>
+        <td class="left">mecke</td></tr>
+    <col width="160">
+</colgroup>
+</table>
+
+<p>
+You flew through abysses protected by nothing but an umbrella and carefully
+stepped on slippery sheets of ice. You've walked among the thieves of Enigma,
+miserable creatures whose only desire in their life is to rob someone of his
+items, even the most unnecessary ones, and among the bones of the long dead
+adventurers who now want nothing else but to increase their numbers and will
+snatch anyone who comes near them. 
+</p>
+
+<p>
+You've been a Sisyphus who struggled to carry the unconscious body of your
+fellow traveler on the steepest slopes and a Zeus who tried to drive your
+companion to the oxyds, frightening him with lightnings from a magic box you had
+found somewhere on your travels (a good friend you are). 
+</p>
+
+<p>
+But now you have gone TOO FAR. You have ventured into the very heart of Enigma,
+into the place no mortal (or immortal, for that matter) is allowed even to
+approach. You have come to the place where the old gods of Enigma dwell, the
+supreme beings who created the Universe of Enigma millions of years ago and now
+rule all of its worlds. As half forgotten legends say, once there was a time
+when they walked on the grounds of the multiple worlds of Enigma, and any marble
+could seek their advice and protection. But even if there is a grain of truth in
+those old tales, those times are long gone. Long ago they left the worlds of
+Enigma, offended by the marbles who misused their good disposition, and now they
+rule Enigma, unseen to mortal marbles. 
+</p>
+
+<p>
+Their names were long forgotten, and their very existence is doubted by some
+marble heretics (1), but they do exist. They dwell in their own world that no
+marble is allowed to approach, and from this world they silently rule the
+universe of Enigma and the fate of all marbles. And most of all, they guard
+their precious Oxyds, the fathers of all Oxyds, the ideas of Oxyds, that gave
+birth to all the other oxyds in the multiple worlds of Enigma. Many courageous
+marbles have embarked on a journey, dreaming of stealing them, but none has ever
+come back. None, except you.</p>
+
+<p>
+Yes, I remember you venturing here once. The gods
+wreaked their wrath on you, using against you the power of the Four Elements of
+Enigma, but then, impressed by your courage, dexterity and intelligence, they
+allowed you to leave unscathed.
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_e.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Strange colours, weird shapes</div>
+</div>
+
+<p>
+But you didn't learn this lesson and came here
+once more. Remember, their kindness is not infinite. This time they won't leave
+you alive.  You find yourself in a dark and gloomy place with strange shapes and
+colours. You realize at once that those shapes and colours were not meant for
+the eyes of mortal marbles. Slowly you regain your consciousness. You step
+carefully. Every step here could send you falling into the infinite abyss of the
+world of the gods of Enigma. As if to mock you, the gods left around hints for
+you, as well as extralives. As if they were sure that you won't be able to leave
+this place even with such help. Slowly, you move to the first entrance and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<p>
+What kind of place is this? It doesn't look so gloomy around anymore. You look
+around one more time. Yes, there are no fatal abysses here. The bright walls
+around you somehow make you feel secure, and the sand under you surface crunches
+cheerfully. You remember these walls and this sand. You remember this sound.
+That's how the sand was crunching on those long nights when you walked on the
+beach with your friend Anna Whiteball, and the walls here are the walls of her
+nice tidy little house. Anna&hellip; Where is she now? Is she thinking of him? For some
+moments you allow your thoughts, so sad and so pleasant, to take control over
+you. Have the gods of Enigma and their laughter, that made you feel as if icy
+fingers are touching your heart, been just a dream? Is this Anna's house? Have
+you simply fallen asleep here? 
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_b.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Have the gods taken this place from my memory</div>
+</div>
+
+<p>
+But the document in your inventory shatters all those pleasant thoughts. No, you
+are still in the world of the gods of Enigma, and now you have to find their
+bloody hammer. Carefully, you count the dynamite sticks at your disposal. You
+have to use them with care. Just one dynamite stick put at the wrong place, and
+you are stuck forever in this room, without any hope to find the Holy Hammer
+anymore. But at last you do it! You find the Holy Hammer that, if the old
+legends were true, still remembers being held by Jacob the Builder, who used it
+to create more worlds than a marble can count. Hurriedly, you break the
+remaining walls, snatch the Holy Oxyd, and run back to the place where you found
+the Hammer. And then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<p>
+Again you are in the same weird place. You feel that your inventory has somehow
+become rather heavy. The Hammer! You run to the wall and break it. Behind it you
+find another passage&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_d.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Nobody seems to have<br> been here for ages</div>
+</div>
+
+<p>
+Oh, what a depressing place! You thought that there cannot be a nastier place
+than the one you just came from, but this&hellip; It looks like no one has stepped on
+this ground for millions of years. This place is so cold&hellip; So empty&hellip;  So
+desolate&hellip; The bridges between the platforms here are so old and insecure that
+you wouldn't dare to cross them more than once, and even that fills your sole
+with unease. Thankfully, there are some old rotten wooden blocks here. They will
+allow you to build new bridges, even if they are just a little more secure than
+the old ones are. But there are too few of them, so you have to be careful. You
+move one of them to the abyss, then another, and then&hellip; What's this?! Try one
+more time!!!!!!! Did you really hear a mad inhuman laughter or are you
+hallucinating? You know what has to be done. You have done it many times, though
+you never really liked it. You take an extralife from your inventory and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<p>
+Again this very place&hellip; Now you have to plan everything even more carefully. It
+seems like an eternity had passed until you found out how to get to the seed,
+carefully checking that there are no mistakes in your plan, and then&hellip; One block
+to the abyss, then another, then another, until finally&hellip; So, this is the very
+famous Holy Seed from which all other seeds and blocks have come? It looks like
+any other seed you've seen on your long journeys. But you don't pause to think
+it over. Hastily you snatch the Oxyd and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<p>
+Again you are in the same weird place where the entrances to the rooms which
+hold the Four Holy Items are. You grow a block to make your way to the third
+entrance, and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_c.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">I can fly, my frie-e-ends</div>
+</div>
+
+<p>
+It's so cold here. But unlike the previous place, the frosty air here is somehow
+refreshing. It's like a clear cold night somewhere in the mountains. You find
+yourself on a white shiny platform. Around you can't see anything but similar
+platforms. The fresh night air and the calm shining of the platforms fill your
+soul with tranquility. Your way lies to the Holy Spring that, according to the
+legends, the gods used to look at the newly created worlds from above. You
+slowly breath in and&hellip; W-z-h-h-h-h&hellip;  One platform. W-z-h-h-h-h&hellip;  Another one.
+W-z-h-h-h-h&hellip;  One more&hellip; Here it is! The fabled Spring! You jump a few more
+times, snatch the Holy Oxyd, return to the place where you found the Spring and
+then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<p>
+Again this weird place. But this time you see something new. What is it? Oh, no!
+ANNA! She lies unconscious on the other side of the abyss behind a wall of
+blocks. You need to talk to her. But how can you do this? You need the last Holy
+Item. You jump one more time and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip; 
+</p>
+
+<p>
+Have the gods borrowed this beach from your memory? Anna and you&hellip; But there's no
+time for pleasant memories. You have to find the Holy Ying Yang Symbol that
+would allow you to talk to her at a distance. You make a step and then&hellip;
+</p>
+
+<p>
+Ouch!
+</p>
+
+<p>
+What's this? You find yourself in that dark weird place again, and there's one
+extralife less in your inventory. You jump again and then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_a.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Fighting the dead</div>
+</div>
+
+<p>
+The beach again. But now you are careful. You realize that the gods set the
+bones of the adventurers of the past who came here to steal their Oxyds to guard
+this place, and far away you see their ghosts barring your way to the Ying Yang
+symbol. You need two items, one to see the bones under the sand, and the other
+to fight the ghostly warriors. You don't have them, but luckily there's a laser
+here, and there's no one in the world of marbles better at transformation than
+you. Carefully you move to the Oxyd, trying not to touch the bones, then to the
+line of warriors. A few movements with a sword and the way to the Holy Ying Yang
+is free. Then&hellip;
+</p>
+
+<p>
+Down, down, down&hellip; 
+</p>
+
+<p>
+Again the Place of Entrances&hellip; You take the Ying Yang symbol and whisper, &quot;Anna!
+Anna! Can you hear me?&quot; A slight movement at a distance&hellip; &quot;Anna! Please, touch
+one of the blocks, so that I could get past them.&quot; A slight movement again, and
+one of the blocks suddenly turns black. The way is free! Never taking your eyes
+off Anna, you jump and&hellip;
+</p>
+
+
+<h4>The idea came to me while playing Hexen II</h4>
+
+<i>
+We're very happy that we were finally able to get in contact with moonpearl
+again, and obviously she was quite happy as well &hellip;</i>
+</p>
+
+<div class="quote">
+Gotta write a word, now. I can do it. Despite my fingertips trembling over
+the keyboard, I can do it. Gotta talk about the making of &quot;Four Elemental
+Tests&quot; (or &quot;Gods of Enigma&quot;, or whatever you like to name it). I
+don't know what to say. I don't know where to start. So I guess I should start
+from the beginning.
+</div>
+
+<div class="quote">
+I was no more than 7 or 8 years old when I took my first steps into the
+world of Oxyd. I remember hurrying to finish hard landscapes because I had
+to go to school. I remember being stuck at the 11th landscape for ages,
+before I was offered the Oxyd book for my ninth birthday. I remember crying
+and bashing the old Atari's dusty mouse when I made a wrong step.
+</div>
+
+<div class="quote">
+I am now 22, and I've been through all Oxyd. I solved that damned 100th
+landscape at the age of 16, under the eyes of my German penpal. I've been
+through nearly all Oxyd magnum! as well&mdash;never solved the last landscape.
+:( I've also given a try to Per.Oxyd and Oxyd Extra!, though I liked the two
+of them less than the previous titles&mdash;although the graphics were enhanced,
+they cruelly lacked the colors which made the world of Oxyd bright and
+wonderful.
+</div>
+
+<div class="quote">
+I thought it was the end of the adventure. I thought I had seen it all and I
+would never get to share my passion of Oxyd with other people. And then I
+found Enigma. I don't remember exactly how it happened, but I definitely
+recall the sparkles in my eyes at that time. I was thrilled to see such a
+perfect adaptation, which totally preserved the spirit of my old pal Oxyd.
+So, first, I would like to thank Enigma's developers deeply, for not only
+giving me the occasion to contribute (modestly) to their work, but also to
+return to my childhood's favourite hobby.
+</div>
+
+<div class="quote">
+To my further delight, a level editor was featured with the game. It was a
+real opportunity for me to give shape to the Oxyd landscapes I used to draw
+in my old exercise-books&mdash;normal children draw people and houses and
+flowers, but I preferred Oxyd landscapes. ;) And so did I. I used
+BlackBallEd to write a bunch of landscapes, most of which look too &quot;mundane&quot;
+to me. I mean by that, most ideas have already been used in former
+landscapes, and it's really hard to come up with something brand new.
+However, I was determined to find a both fun and atypic concept. I gave much
+thought to what a friend of mine once said: &quot;How can you identify yourself
+as a marble? What is your reason to be, your goal in life, aside from
+solving puzzles?&quot;. And that's how I started to make up some kind of
+storyline where the player would get to embody the saviour of a world ruined
+by evil deities, thus travelling through wrecked landscapes with lots of
+cracks, falls and breakable stones&hellip;
+</div>
+
+<div class="quote">
+The very idea of the Four Elemental Tests came to me while playing Hexen II
+&mdash;yes, play up to the third episode, and you'll see. ;) I meant to build a
+landscape which would require all of the player's skills to solve&mdash;that is
+to say, swiftness, intelligence, dexterity and patience. Each of the four
+tests is mildly difficult, but the real challenge lies in succeding in all of
+them at once. To be honest I tried the landscape many times to make sure it
+was possible, but I've been through it only a very few times. So I thought
+it would be fine for the rest of the community, who seemed to enjoy very
+challenging landscapes. ;)
+</div>
+
+<div class="quote">
+I don't know how I came to write a second episode, but I do remember that I
+wanted to try something different. While the first one was merely a linear
+adventure, I wanted to make for the second one four separate quests to
+&quot;unlock&quot; the path in the very first screen. I also decided to change the
+content of the tests, but I had to keep them in association with their
+respective elements. What I'm quite proud of is that I've managed to stick
+to the four elements, while mixing the tests&mdash;thus, the Fire Quest includes
+intelligence, the Earth Quest dexterity&hellip;
+</div>
+
+<div class="quote">
+That was three years ago. And a few days ago I found an e-mail from Harry
+among all the spam in my mailbox. :s At first I thought it was a joke. How
+could an old landscape of mine be voted level of the month? Then Harry
+pointed out that my work had also been awarded 2007's best level series.
+And, well&hellip;
+</div>
+
+<div class="quote">
+IT'S JUST TOO MUCH FOR ME!!!
+</div>
+
+<div class="quote">
+;)
+</div>
+
+<div class="quote">
+No, seriously, I haven't won an Oscar yet, but it means very much to me to
+be praised as a level designer. The little girl moving the mouse carefully
+with her right hand, while sucking her left thumb, has grown into someone
+with the power to create. Maybe it's the reason why I made a landscape
+requiring all the talents at once to defy the gods&hellip;
+</div>
+
+<div class="quote">
+Anyway, I'll finish this (long) article with good news for my fan club. ;)
+Indeed, the &quot;Four Elemental Tests&quot; are not an isolated work. The two
+landscapes were actually designed as steps of a whole trip through four
+realms&mdash;each associated with an element, as you can guess. I intended to
+make several &quot;Four Elemental Tests&quot;, which would appear at regular
+intervals, just like meditation landscapes. A few other landscapes of the
+series are already available, and all of your positive feedback gives me the
+urge to work on it again. Hopefully, I can design as much as possible of the
+series until the end of year. I'll try to keep in touch and give news this
+summer.
+</div>
+
+<div class="quote">
+Thanks for reading my article.
+</div>
+
+<div class="quote">
+Thanks for playing my landscapes.
+</div>
+
+<div class="quote">
+Thanks for loving them.
+</div>
+
+<div class="author">moonpearl</div>
+
+<p>
+<i>moonpearl, thanks for creating them for us. And your idea to embed the level
+into a full storyline has since been used by many other authors as well, with
+resounding success, like in the case of &quot;The Aztec Temple&quot; and lots of
+levels in our next release of Enigma. We all look forward to your next levels!
+:-)</i>
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_f.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">The last jump</div>
+</div>
+
+<p>
+Down, down, down&hellip; 
+</p>
+
+<p>
+They say that the abysses in the world of gods are
+infinite, and you can be falling into one for a million years without seeing the
+bottom. You've always wondered if it's true. Now you'll be able to find it out!
+</p>
+
+<p>
+BWA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA!!!!!!!!
+</p>
+
+<p>
+(1) According to an apocrypha found by the legendary adventurer called
+Moneymaker under a chameleon stone when he was exploring an unintended shortcut,
+the names of at least some of those gods were Daniel, Andreas, Ronald and Raoul.
+But the authenticity of that document is still being widely disputed in the
+learned marble circles. 
+</p>
+
+<p><i>Ludmian Sedai</i></p>
+
+<p>Dear reader, we have a constant need for articles from you about Enigma's
+great levels. Please, send us any articles, even comments, you write to:</p>
+<pre>
+<a href="mailto:enigma-devel at nongnu.org">enigma-devel at nongnu.org</a>
+</pre>
+<p>We're particularly interested in articles about the following levels:
+</p>
+<ul>
+<li>&quot;Plan Ahead&quot; by Jacob Scott</li>
+<li>&quot;River of Challenges&quot; by Lukas Sch&uuml;ller</li>
+<li>&quot;Procrustes&quot; by Andreas Lochmann</li>
+</ul>
+<p>Many thanks in advance, only your help can keep the LotM alive!</p>
+
+<p><i>Your Enigma Team</i></p>
+
+</div>

Modified: feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-07-08 22:29:59 UTC (rev 1226)
+++ feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-07-09 23:05:22 UTC (rev 1227)
@@ -139,6 +139,15 @@
   position_num   = "3066"
 }
 
+lotm_archive_data[16] = {
+  date           = { month = 7, year = 2008 },
+  chronological  = 16,
+  name           = "Gods of Enigma II",
+  author         = "moonpearl",
+  position       = "V/69",
+  position_num   = "5069"
+}
+
 -- LotM variable data
 -- format: Level Title, current_rating, current_votes, additional text
 
@@ -156,7 +165,8 @@
 lotm_rating(      "Psycho Pushing",  8.18,  11,  "")
 lotm_rating(  "Turnstiles for Two",  9.00,   5,  "")
 lotm_rating(     "Pleasure Garden",  8.43,  14,  "")
-lotm_rating(      "Block its way!",  8.00,  16,  "<b>(newcomer)</b>")
+lotm_rating(      "Block its way!",  8.00,  16,  "")
+lotm_rating(   "Gods of Enigma II",  8.31,  16,  "<b>(newcomer)</b>")
 
 -- Don't forget to adjust the archive dates:
 



From andreasl at mail.berlios.de  Thu Jul 10 02:24:11 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Thu, 10 Jul 2008 02:24:11 +0200
Subject: [Enigma-game-svn] r1228 - feature_branches/hp_lotm/input/lotm
Message-ID: <200807100024.m6A0OBN4003381@sheep.berlios.de>

Author: andreasl
Date: 2008-07-10 02:24:09 +0200 (Thu, 10 Jul 2008)
New Revision: 1228

Modified:
   feature_branches/hp_lotm/input/lotm/lotm_200807.html
Log:
LotM Feature branch:
 - Add two gamer's comments.
Todo:
 - See prior commit.
   Note that the English article now is complete.


Modified: feature_branches/hp_lotm/input/lotm/lotm_200807.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-09 23:05:22 UTC (rev 1227)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-10 00:24:09 UTC (rev 1228)
@@ -167,7 +167,62 @@
 Down, down, down&hellip;
 </p>
 
+<h4>&quot;Back to the starting room&quot;</h4>
+
+<div class="quote">Actually the level starts off quite harmlessly, a path with just one
+possible exit. Alright, nothing ventured nothing gained. Let's get going
+then, down along this oneway-street.</div>
+
+<div class="quote">Room 1: Many dynamites and many breakable stones. It can't be that
+difficult&hellip; Boom, boom, boom&hellip; Hmm&hellip; No, it doesn't seem to work this
+way&hellip; So it's first top and then bottom, or what else?</div>
+
+<div class="quote">Finally I've got the hammer and plunge into the hole in the ground. Back
+again at the starting point. Fortunately a second possibility to exit
+this room presents itself to me, and luckily the oxydstones seem to have
+been arranged in pairs.</div>
+
+<div class="quote">Room 2: Oh dear!&hellip; Many cracked floors, but also enough wooden stones
+to build bridges. Really enough? Well, if only I could keep from always
+choosing the wrong way or falling down into the abyss, there should be enough
+of them. But thanks to the Gods, there's this one seed, which might
+serve as a substitute (or should it be used somewhere else?).</div>
+
+<div class="quote">Back to the starting room I came to realize that my second guess had
+been the right one&hellip;</div>
+
+<div class="quote">Room 3: Oh Gods, have mercy! I really hate this spring-hopping-across-the-abyss, 
+especially on slippery floors. Either I'm too fast and overshoot the mark, 
+or I'm too slow. How good to have some extra-lifes available about this time. 
+I was in urgent need of them.</div>
+
+<div class="quote">Back to the starting room. Now it's about time to bring up the white
+marble. A yin-yang would come in handy now&hellip;</div>
+
+<div class="quote">Room 4: Ah, there it is! And some easy challenge at last. The knights
+don't impress me much, I've got the hammer and there's a laser nearby.
+Great!</div>
+
+<div class="quote">Errr!?&hellip; I've died! Why? Ah, invisible death-stones, how mean! If only
+I had some glasses. But there was some way to make them of your own
+accord, wasn't it?</div>
+
+<div class="quote">Finally I've reached the goal, conquered the yin-yang and opened up all
+oxyds.</div>
+
+<div class="quote">All in all an excellent level, which consists of all the things, that
+make Enigma such an exciting game (at least to me): strategy, dexterity
+- and the possibility to transform objects.</div>
+
+<div class="quote">Thanks to the Gods of Enigma and congratulations to Moonpearl!</div>
+
+<div class="author">JuSt</div>
+
 <p>
+Down, down, down&hellip;
+</p>
+
+<p>
 What kind of place is this? It doesn't look so gloomy around anymore. You look
 around one more time. Yes, there are no fatal abysses here. The bright walls
 around you somehow make you feel secure, and the sand under you surface crunches
@@ -283,7 +338,38 @@
 Down, down, down&hellip;
 </p>
 
+<h4>It produces an attraction that I can not resist&mdash;I even don't want to.</h4>
+
+<div class="quote">When I got to the third room for the first time I thought: &quot;Oh no!&quot;. To
+me this damned &quot;hopping&quot; is a horrible thing. Usually that means: solve
+the level once, then leave for good. It really took me quite some
+attempts to finally reach the fourth room with my last ball and then &hellip;</div> 
+
+<div class="quote">You know what happens then. Well, some attempts later I succeeded in
+solving the level at last. As I said before usually it's &quot;Once is
+enough!&quot; for me in such cases. Yet what does &quot;usually&quot; mean? Somehow
+something attracted me to challenge the Gods over and over again. By the
+way, I never had to regret it, and I enjoyed it with increasing enthusiasm.</div>
+
+<div class="quote">What was and what is the reason for me, to play (and keep on playing)
+&quot;Gods of Enigma II&quot; again and again? First, there's the procedure how to
+play it: it's linear, but always brings you back to the starting point.
+And secondly, there's the contrast between the different rooms,
+concerning both the visual and the technical aspects. In my opinion the
+combination of these two aspects produces an attraction that I can not
+resist&mdash;I even don't want to.</div>
+
+<div class="quote">However, the third room isn't my favourite one (it will probably
+never be), but it isn't that naaaasty anymore as it seemed to me the
+first time.  :-)</div>
+
+<div class="author">dev0</div>
+
 <p>
+Down, down, down&hellip;
+</p>
+
+<p>
 Again this weird place. But this time you see something new. What is it? Oh, no!
 ANNA! She lies unconscious on the other side of the abyss behind a wall of
 blocks. You need to talk to her. But how can you do this? You need the last Holy



From ral at mail.berlios.de  Thu Jul 10 14:07:08 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Thu, 10 Jul 2008 14:07:08 +0200
Subject: [Enigma-game-svn] r1229 - trunk/src
Message-ID: <200807101207.m6AC78Fe010267@sheep.berlios.de>

Author: ral
Date: 2008-07-10 14:07:07 +0200 (Thu, 10 Jul 2008)
New Revision: 1229

Modified:
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering
- Window Stone:
  - fix possibility for actors to tunnel windows in 3 edges
  - fix no collision mode skipping of Boarderstone collisions.

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-10 00:24:09 UTC (rev 1228)
+++ trunk/src/world.cc	2008-07-10 12:07:07 UTC (rev 1229)
@@ -862,7 +862,7 @@
 void World::find_contact_with_window(Actor *a, GridPos p, StoneContact &c0, StoneContact &c1,
         DirectionBits winFacesActorStone) {
     if (winFacesActorStone != NODIRBIT) {
-        // as the actor cannot contact opposite face at the same time
+        // as the actor cannot contact two opposite faces at the same time
         // we reuse the contact structure for optimization
         if (winFacesActorStone&WESTBIT) 
             find_contact_with_stone(a, p, c0, WESTBIT);
@@ -899,6 +899,8 @@
     GridPos g = GridPos(round_down<int>(ai.pos[0]), round_down<int>(ai.pos[1]));
     double x = ai.pos[0];
     double y = ai.pos[1];
+    bool noCollisions = server::NoCollisions  && 
+                (a->get_traits().id_mask & (1<<ac_whiteball | 1<<ac_blackball | 1<<ac_meditation));
     
     // info about a Window stone on the Gridpos of the actor that may cause
     // contacts within the grid
@@ -917,6 +919,8 @@
         // upper grid part
         if (x - g.x < re) {
             // upper left edge
+            if (!noCollisions)   // just Borderstone collisions are needed for no collisions!
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (c1.is_contact)
                 // inner west window contact - just look for north adjacent stone contact 
                 find_contact_with_stone(a, GridPos(g.x, g.y - 1), c0, winFacesActorStone);
@@ -933,7 +937,8 @@
             }
         } else if (-x + (g.x + 1) < re) {
             // upper right edge
-            find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (c1.is_contact)
                 // inner east window contact - just look for north adjacent stone contact 
                 find_contact_with_stone(a, GridPos(g.x, g.y - 1), c0, winFacesActorStone);
@@ -950,7 +955,8 @@
             }
         } else {
             // upper middle part
-            find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (!c2.is_contact)
                 // only hit adjacent stone if no inner window is in front
                 find_contact_with_stone(a, GridPos(g.x, g.y - 1), c0, winFacesActorStone);
@@ -958,6 +964,8 @@
     } else if (-y + (g.y +1) < re) {
         // lower grid part
         if (x - g.x < re) {
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             // lower left edge
             if (c1.is_contact)
                 // inner west window contact - just look for south adjacent stone contact 
@@ -975,6 +983,8 @@
             }
         } else if (-x + (g.x + 1) < re) {
             // lower right edge
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (c1.is_contact)
                 // inner east window contact - just look for south adjacent stone contact 
                 find_contact_with_stone(a, GridPos(g.x, g.y + 1), c0, winFacesActorStone);
@@ -991,7 +1001,8 @@
             }
         } else {
             // lower middle part
-            find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (!c2.is_contact)
                 // only hit adjacent stone if no inner window is in front
                 find_contact_with_stone(a, GridPos(g.x, g.y + 1), c0, winFacesActorStone);
@@ -1000,19 +1011,22 @@
         // middle grid part
         if (x - g.x < re) {
             // left middle part
-            find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (!c1.is_contact)
                 // only hit adjacent stone if no inner window is in front
                 find_contact_with_stone(a, GridPos(g.x - 1, g.y), c0, winFacesActorStone);
         } else if (-x + (g.x + 1) < re) {
             // right middle part
-            find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c1, c2, winFacesActorStone);
             if (!c1.is_contact)
                 // only hit adjacent stone if no inner window is in front
                 find_contact_with_stone(a, GridPos(g.x + 1, g.y), c0, winFacesActorStone);
         } else {
             // actor in center of grid - just inner window contacts
-            find_contact_with_window(a, GridPos(g.x, g.y), c0, c1, winFacesActorStone);
+            if (!noCollisions)
+                find_contact_with_window(a, GridPos(g.x, g.y), c0, c1, winFacesActorStone);
         }
     }
 }



From raoul at mail.berlios.de  Thu Jul 10 14:42:39 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Thu, 10 Jul 2008 14:42:39 +0200
Subject: [Enigma-game-svn] r1230 - team_levelpacks/team_test_new_api
Message-ID: <200807101242.m6ACgdcE013382@sheep.berlios.de>

Author: raoul
Date: 2008-07-10 14:42:39 +0200 (Thu, 10 Jul 2008)
New Revision: 1230

Modified:
   team_levelpacks/team_test_new_api/raoulT05_1.xml
Log:
-> Updates strip item test level


Modified: team_levelpacks/team_test_new_api/raoulT05_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-10 12:07:07 UTC (rev 1229)
+++ team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-10 12:42:39 UTC (rev 1230)
@@ -3,9 +3,9 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Testlevel Strips" el:subtitle="" el:id="raoult05"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="experimental"/>
       <el:author  el:name="Raoul Bourquin" el:email="raoul at users.berlios.de"/>
-      <el:copyright>Copyright ? 2008 Roual Bourquin</el:copyright>
+      <el:copyright>Copyright ? 2008 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
       </el:compatibility>
@@ -39,23 +39,24 @@
 ti["q"] = {"it_strip_nesw"}
 
 ti["w"] = {"st-wood"}
+ti["v"] = {"st-plain_move"}
 
 ti["A"] = {"#ac-blackball"} .. ti["a"]
 
 w, h = wo(ti, " ", {
-"                    ",
-"        c           ",
-"       dqb          ",
-"        e           ",
-"                w   ",
-"       hgf     wAw  ",
-"       jaj      w   ",
-"       kgi          ",
-"                    ",
-"       hmf          ",
-"       pqn          ",
-"       koi          ",
-"                    "
+"hggggggwgggggvgggwww",
+"j c   wcw   vcv  wAw",
+"jdqb wdqbw vdqbv www",
+"j e   wew   vev    j",
+"j    wwwww vvvvv   j",
+"jhgf whgfw vhgfv   j",
+"jjaj wjajw vjajv   j",
+"jkgi wkgiw vkgiv   j",
+"j    wwwww vvvvv   j",
+"jhmf whmfw vhmfv   j",
+"jpqn wpqnw vpqnv   j",
+"jkoi wkoiw vkoiv   j",
+"kggggwwwwwgvvvvvgggi"
 })
   ]]></el:luamain>
     <el:i18n>



From andreasl at mail.berlios.de  Fri Jul 11 03:14:03 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Fri, 11 Jul 2008 03:14:03 +0200
Subject: [Enigma-game-svn] r1231 - in feature_branches/hp_lotm: images/lotm
	input/lotm
Message-ID: <200807110114.m6B1E3AK015312@sheep.berlios.de>

Author: andreasl
Date: 2008-07-11 03:13:59 +0200 (Fri, 11 Jul 2008)
New Revision: 1231

Modified:
   feature_branches/hp_lotm/images/lotm/lotm-history.png
   feature_branches/hp_lotm/input/lotm/lotm_200807.html
   feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
Log:
LotM Feature branch:
 - Add current level ratings and history.
 - Add newer high scores for current LotM 7/08


Modified: feature_branches/hp_lotm/images/lotm/lotm-history.png
===================================================================
(Binary files differ)

Modified: feature_branches/hp_lotm/input/lotm/lotm_200807.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-10 12:42:39 UTC (rev 1230)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-11 01:13:59 UTC (rev 1231)
@@ -23,19 +23,21 @@
 </div>
 
 <table cellpadding="0" cellspacing="1" class="statistics">
-<caption class="normalcaption">Some records of April 2008</caption>
+<caption class="normalcaption">Some records of June 2008</caption>
 <colgroup>
     <col width="80">
+    <col width="160">
+</colgroup>
     <tr><td class="num">2:08</td>
         <td class="left">Moneymaker</td></tr>
     <tr><td class="num">2:18</td>
         <td class="left">Stupid</td></tr>
     <tr><td class="num">2:54</td>
         <td class="left">dev0</td></tr>
+    <tr><td class="num">3:18</td>
+        <td class="left">daydreamer</td></tr>
     <tr><td class="num">3:47</td>
         <td class="left">ryujun</td></tr>
-    <tr><td class="num">3:51</td>
-        <td class="left">daydreamer</td></tr>
     <tr><td class="num">4:10</td>
         <td class="left">Ronald</td></tr>
     <tr><td class="num">4:17</td>
@@ -74,6 +76,8 @@
         <td class="left">para_doks</td></tr>
     <tr><td class="num">10:01</td>
         <td class="left">Daisy</td></tr>
+    <tr><td class="num">10:03</td>
+        <td class="left">AlephD</td></tr>
     <tr><td class="num">10:18</td>
         <td class="left">ABS</td></tr>
     <tr><td class="num">10:51</td>
@@ -96,8 +100,6 @@
         <td class="left">fabian</td></tr>
     <tr><td class="num">23:03</td>
         <td class="left">mecke</td></tr>
-    <col width="160">
-</colgroup>
 </table>
 
 <p>

Modified: feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-07-10 12:42:39 UTC (rev 1230)
+++ feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-07-11 01:13:59 UTC (rev 1231)
@@ -151,26 +151,26 @@
 -- LotM variable data
 -- format: Level Title, current_rating, current_votes, additional text
 
-lotm_rating(    "Island Labyrinth",  9.31,  13,  "")
-lotm_rating(  "Pneumatic Delivery",  8.19,  16,  "")
+lotm_rating(    "Island Labyrinth",  9.31,  13,  "(1 down)")
+lotm_rating(  "Pneumatic Delivery",  8.19,  16,  "(1 up)")
 lotm_rating(    "The Aztec Temple",  9.00,  11,  "")
-lotm_rating("Labyrinth of Puzzles",  8.82,  17,  "")
-lotm_rating(           "Elaborate",  8.50,  10,  "")
+lotm_rating("Labyrinth of Puzzles",  8.82,  17,  "(1 up)")
+lotm_rating(           "Elaborate",  8.64,  11,  "(2 up)")
 lotm_rating(             "Houdini",  9.28,   8,  "")
-lotm_rating(           "Tool Time",  8.52,  21,  "")
+lotm_rating(           "Tool Time",  8.17,  23,  "(5 down)")
 lotm_rating(         "Quadropolis",  9.20,  10,  "")
-lotm_rating(      "Big Adventures",  8.42,  24,  "")
-lotm_rating(      "Temple of Gold",  9.29,   7,  "")
-lotm_rating(      "Puzzle Puzzles",  8.83,   6,  "")
-lotm_rating(      "Psycho Pushing",  8.18,  11,  "")
+lotm_rating(      "Big Adventures",  8.42,  24,  "(1 up)")
+lotm_rating(      "Temple of Gold",  9.38,   8,  "(1 up)")
+lotm_rating(      "Puzzle Puzzles",  8.63,   8,  "(2 down)")
+lotm_rating(      "Psycho Pushing",  8.18,  11,  "(1 up)")
 lotm_rating(  "Turnstiles for Two",  9.00,   5,  "")
-lotm_rating(     "Pleasure Garden",  8.43,  14,  "")
-lotm_rating(      "Block its way!",  8.00,  16,  "")
-lotm_rating(   "Gods of Enigma II",  8.31,  16,  "<b>(newcomer)</b>")
+lotm_rating(     "Pleasure Garden",  8.43,  14,  "(1 up)")
+lotm_rating(      "Block its way!",  8.00,  17,  "")
+lotm_rating(   "Gods of Enigma II",  8.35,  17,  "<b>(newcomer)</b>")
 
 -- Don't forget to adjust the archive dates:
 
-lotm_archive_data_from = { month = 5, year = 2008 }
+lotm_archive_data_from = { month = 6, year = 2008 }
 
 lotm_current = lotm_archive_data[table.getn(lotm_archive_data)]
 



From ged at mail.berlios.de  Sat Jul 12 10:02:03 2008
From: ged at mail.berlios.de (ged at mail.berlios.de)
Date: Sat, 12 Jul 2008 10:02:03 +0200
Subject: [Enigma-game-svn] r1232 - feature_branches/hp_lotm/input/lotm
Message-ID: <200807120802.m6C8232O016599@sheep.berlios.de>

Author: ged
Date: 2008-07-12 10:01:54 +0200 (Sat, 12 Jul 2008)
New Revision: 1232

Added:
   feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html
Log:
Homepage (feature_branches):
- Added Russian translation of lotm_200807 (Translated by Ludmian Sedai, I'm only commit it. Thanks, Ludmian.)

Added: feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html	2008-07-11 01:13:59 UTC (rev 1231)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html	2008-07-12 08:01:54 UTC (rev 1232)
@@ -0,0 +1,653 @@
+<div class="lotm">
+$$lotm_header$$
+
+  <h3 class="lotm">
+    <span class="date">???? 2008: </span>
+    &quot;Gods of Enigma II&quot; ?? moonpearl
+  </h3>
+
+<p>
+??????????, ?????. ??? ?? ?? ?????????. ?? ????????? ???????? ?
+???????????, ???? ???????????, ??????? ?????? ? ?????????, ???????
+????? ? ??????????. ?? ???-???? ? ????? ????. ? ???? ??? ????????.
+?? ????? ??? ???????. ?????????? ?????????? ??? ?? ?????????? ?????
+?????????? ?????? ?????????????? ????? ??????. ?? ?????? ???????
+????????????? ? ???????????? ?? ?????????? ???????? ???????????
+???????. ?? ?????? ?? ?????????????? ?????? ???????????? ????? ??????
+? ??????? ? ???????, ???????, ????? ????????? ?????, ??? ?????? ????
+??? ??? ????????? ?????????.
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_g.png" alt="Level of the Month" border="0">
+<div class="imagetitle">Enigma V # 69</div>
+</div>
+
+<table cellpadding="0" cellspacing="1" class="statistics">
+<caption class="normalcaption">????????? ??????? ???? 2008</caption>
+<colgroup>
+    <col width="80">
+    <col width="160">
+</colgroup>
+    <tr><td class="num">2:08</td>
+        <td class="left">Moneymaker</td></tr>
+    <tr><td class="num">2:18</td>
+        <td class="left">Stupid</td></tr>
+    <tr><td class="num">2:54</td>
+        <td class="left">dev0</td></tr>
+    <tr><td class="num">3:18</td>
+        <td class="left">daydreamer</td></tr>
+    <tr><td class="num">3:47</td>
+        <td class="left">ryujun</td></tr>
+    <tr><td class="num">4:10</td>
+        <td class="left">Ronald</td></tr>
+    <tr><td class="num">4:17</td>
+        <td class="left">Craven</td></tr>
+    <tr><td class="num">4:27</td>
+        <td class="left">Taztunes</td></tr>
+    <tr><td class="num">4:30</td>
+        <td class="left">Django</td></tr>
+    <tr><td class="num">4:31</td>
+        <td class="left">Ludmian</td></tr>
+    <tr><td class="num">4:36</td>
+        <td class="left">Alex</td></tr>
+    <tr><td class="num">4:47</td>
+        <td class="left">Safalra</td></tr>
+    <tr><td class="num">5:08</td>
+        <td class="left">JuSt</td></tr>
+    <tr><td class="num">5:12</td>
+        <td class="left">U-Punkt</td></tr>
+    <tr><td class="num">5:30</td>
+        <td class="left">dpl</td></tr>
+    <tr><td class="num">5:57</td>
+        <td class="left">shoki</td></tr>
+    <tr><td class="num">6:18</td>
+        <td class="left">HuB34</td></tr>
+    <tr><td class="num">7:04</td>
+        <td class="left">Malla</td></tr>
+    <tr><td class="num">7:06</td>
+        <td class="left">Hans-HD</td></tr>
+    <tr><td class="num">7:39</td>
+        <td class="left">Lukas</td></tr>
+    <tr><td class="num">8:00</td>
+        <td class="left">Kosby</td></tr>
+    <tr><td class="num">8:22</td>
+        <td class="left">Gorn</td></tr>
+    <tr><td class="num">9:57</td>
+        <td class="left">para_doks</td></tr>
+    <tr><td class="num">10:01</td>
+        <td class="left">Daisy</td></tr>
+    <tr><td class="num">10:03</td>
+        <td class="left">AlephD</td></tr>
+    <tr><td class="num">10:18</td>
+        <td class="left">ABS</td></tr>
+    <tr><td class="num">10:51</td>
+        <td class="left">Ale</td></tr>
+    <tr><td class="num">11:16</td>
+        <td class="left">serpent+Tobias</td></tr>
+    <tr><td class="num">12:59</td>
+        <td class="left">Andy</td></tr>
+    <tr><td class="num">13:30</td>
+        <td class="left">Iceshark7</td></tr>
+    <tr><td class="num">15:28</td>
+        <td class="left">Tarim</td></tr>
+    <tr><td class="num">15:30</td>
+        <td class="left">Freshman</td></tr>
+    <tr><td class="num">15:43</td>
+        <td class="left">biotopa</td></tr>
+    <tr><td class="num">17:13</td>
+        <td class="left">mrduke</td></tr>
+    <tr><td class="num">17:20</td>
+        <td class="left">fabian</td></tr>
+    <tr><td class="num">23:03</td>
+        <td class="left">mecke</td></tr>
+</table>
+
+<p>
+?? ????????? ????? ????????, ????????? ???? ?????? ??????
+??? ????????????,  ? ????????? ?????? ?? ?????????? ????.
+?? ?????? ????? ????? ??????, ?????????? ????????, ? ???????
+?????? ?? ???????? ??????? ? ?????, ????? ??? ??????? ?
+?????????? ???? ???????? ?????-?????? ????????, ???? ?????
+???????????, ? ????? ?????? ????? ???????? ????????????????,
+??????? ?????? ????? ???? ?????? ?????? - ????????? ???? ????
+- ? ??????? ??????, ??? ???????? ? ??? ??????? ??????.
+</p>
+
+<p>
+?? ??? ??????? ? ????? ?????????????? ???? ?????? ????????? ??
+?????? ???????,  ? ??? ?????? ? ??????? ??????? ?????? ?????????
+? ???????, ????? ?????? ?? ?????????? ?????, ??????? ?? ?????
+???-?? ?? ????? ????? ?????????? (??????? ?? ?? ????, ?????? ???????).
+</p>
+
+<p>
+?? ?? ???? ??? ?? ????? ??????? ??????. ?? ?????? ? ????? ??????
+??????, ? ?? ?????, ? ???????? ?? ?????? ????????? (???, ???????, ?
+????????????) ?? ????????? ???? ????????????. ?? ?????? ????,
+??? ??????? ??????? ???? ??????, ?????? ????????, ??????? ???????
+????????? ?????? ???????? ??? ????? ? ?????? ?????? ????? ?? ??????.
+??? ?????????? ??????????? ???????, ??????-????? ??? ??????? ??
+????????? ?????????????? ????? ?????? ? ????? ????? ??? ????????????
+?? ?? ?????? ????? ? ??????????. ?? ???? ???? ? ???? ?????? ???????
+???? ???? ??????? ??????, ??? ??????? ????? ??????. ??????-????? ????
+???????? ???? ??????, ???????????? ???, ??? ?????? ?????????????? ??
+?????????????, ? ?????? ??? ?????? ???????, ????????? ??? ????????
+???????.
+</p>
+
+<p>
+?? ????? ???? ????? ??????, ? ???? ?? ????????????? ????????????
+???????? ?????????? ????????-????????? (1), ?? ???-???? ??? ??????????.
+??? ??????? ? ????? ??????????? ????, ? ???????? ?? ?????????
+???????????? ?? ?????? ??????, ? ?? ????? ???? ??? ??????? ?????????
+????????? ?????? ? ??????? ???? ???????. ? ? ?????? ??????? ???
+???????? ???? ??????????? ??????, ????????? ??????, ???? ???????,
+??????? ???? ????? ???? ?????? ??????? ? ?????????????? ????? ??????.
+?????? ???????? ?????? ???????????? ? ????, ?? ?? ???? ?? ??? ??
+???????? ?????. ?? ????... ?????? ??...</p>
+
+<p>
+??, ? ?????, ??? ??????? ?? ????????? ???? ??????????. ????
+???????? ?? ???? ???? ??????, ????????? ?????? ???? ??? ????
+??????? ?????? ??????, ?? ?????, ?????????? ????? ???????,
+????????? ? ????, ??? ????????? ???? ???? ??????????.
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_e.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">???????? ?????, ?????????????? ?????????</div>
+</div>
+
+<p>
+?? ?? ?? ?????? ???? ???? ? ????? ?????? ????. ?????, ?? ???????
+?? ???????????. ?? ???? ??? ??? ?? ???????? ???? ???? ?????? ?????.
+?? ??????, ??? ???????? ? ?????? ??????? ?????, ??? ??? ????? ?
+????????? ????? ?????????????? ? ??????. ?? ????? ?????????, ???
+??? ????? ? ????????? ?? ???? ????????????? ??? ???? ???????? ???????.
+?????????? ? ???? ???????????? ????????. ?? ????????? ????????.
+?????? ??? ????? ????? ????????? ???? ? ????? ? ?????????? ??????
+???? ????? ??????. ??? ?? ? ????????, ???? ???????? ?????? ?????????
+??? ????, ?????? ? ??????????????? ???????. ?????? ??? ???????,
+??? ?? ?? ?????? ?????? ???? ? ???? ???????. ?? ????? ?? ???????????
+?? ??????? ?????, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<h4>&quot;????? ? ??????&quot;</h4>
+
+<div class="quote">??????-?? ?????? ?????? ???????? ??????????:
+???? ?????? ? ????? ????????? ???????. ?????, ??? ?? ???????,
+??? ?? ???? ???????????. ????????? ???????? ?? ???? ?????????????
+?????.</div>
+
+<div class="quote">??????? 1: ????? ?????????? ????? ? ???????? ??????.
+??????, ?????? ???????? ????? ???&hellip; ???, ???, ???&hellip; ?-?-?-?-?&hellip;
+???, ??? ?? ?????????&hellip; ??????, ??????? ?????, ????? ????, ??? ????</div>
+
+<div class="quote">???????, ? ????????? ??????? ? ??????? ? ????????? ? ????.
+????? ?????? ??????. ? ???????, ? ???? ?????????? ??? ???? ???????????
+????? ?? ???????. ??????, ??? ?????? ?????, ??????, ??????????? ???????.</div>
+
+<div class="quote">??????? 2: ???? ???!&hellip; ??????? ?????????? ????????,
+??????????? ?????????, ?? ????? ?????????? ?????????? ?????? ???
+????????? ??????. ? ??????? ??????????? ??, ???? ?????? ? ?????? ???
+????? ??????? ?????????? ???????????, ? ??? ??????? ?? ????????? ?
+????????, ?? ?????? ??? ??????. ?? ????? ?????, ??? ??? ???? ??? ???
+???????, ?? ???????? ????? ????????? ??? ???? ???? (???, ?????, ???
+????? ???????????? ???-?? ????).</div>
+
+<div class="quote">? ???????? ? ????????? ??????? ? ?????, ??? ???
+?????? ????????????? ???? ??????&hellip;</div>
+
+<div class="quote">??????? 3: ?, ????, ??????????! ? ?? ???????
+?? ???? ??? ?????? ????? ????????, ???????? ?? ????????? ?????????.
+? ???? ?????? ??????? ??????, ???? ????????????. ??????, ??? ??????
+? ???? ???? ?????????????? ?????. ??? ??? ????? ???????????.</div>
+
+<div class="quote">????? ?????? ??????. ?????? ?????? ???? ???????????
+? ?????? ??????. ??? ?? ?? ??????? ?????? ???-??&hellip;</div>
+
+<div class="quote">??????? 4: ?, ??? ??! ? ???????-?? ??? ?????????
+??????? ???????. ?????? ??? ?? ???????, ? ???? ???? ?????, ? ?????
+???? ?????. ???????!</div>
+
+<div class="quote">?-?-?-?!?&hellip; ? ?????! ??????? ?? ???, ?????? ??,
+????????? ???????????? ?????. ??? ?????! ???? ?? ?????? ? ???? ????
+????. ?? ?? ???? ????? ??????? ??????, ????</div>
+
+<div class="quote">??????? ? ?????? ????, ??????? ?????? ???-?? ?
+?????? ??? ??????.</div>
+
+<div class="quote">? ?????, ??? ???????? ???????, ??? ???? ???, ???
+?????? Enigma ????? ????????????? ????? (?? ??????? ????, ??? ????):
+?????????, ???????? - ? ??????????? ?????????? ???????.</div>
+
+<div class="quote">??????? ????? ??????, ? ??? ???????????? Moonpearl!</div>
+
+<div class="author">JuSt</div>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<p>
+??? ??? ?? ?????? ?????? ??? ?? ??? ??????. ?? ??????????????
+??? ???. ??, ????? ??? ???????? ??????? ?????????. ????? ?????
+?????? ???? ???? ???????? ????????????, ? ????? ??? ?????
+???????????? ?????? ???????. ?? ??????? ??? ????? ? ???? ?????.
+?? ??????? ???? ????. ??? ??????? ????? ??????? ????????, ?????
+?? ????? ?? ????? ?? ????? ????????, ????????? ????? ????????,
+? ????? ?????? ???? - ??? ????? ?? ????????? ????????? ??????.
+????&hellip; ??? ??? ??????? ?????? ?? ? ???? ?? ????????? ??
+??????? ???????? ??? ?????, ????????? ????????? ?? ??????
+????????????, ????? ???????? ? ????? ????????. ?????, ????
+?????? ? ?? ????, ???????? ???????? ????????? ???? ??????,
+???? ?????? ????? ?????, ??? ??? ????? ?????, ?? ??????
+?????? ??????
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_b.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">????????, ???? ????? ??? ????? ? ???? ?? ??????</div>
+</div>
+
+<p>
+?? ???????? ? ????? ????????? ??????? ????? ???? ???? ???????? ??????.
+???, ?? ??? ??? ? ???? ????? ??????, ? ?????? ???? ????? ????? ??
+????????? ???????. ?? ??????????? ?????????????? ?????????? ?????,
+??????????? ? ????? ????????????. ???????????? ?? ????? ?????????????.
+????? ???? ?????????? ????? ? ???????????? ????? - ? ?? ?????? ???????
+? ???? ??????? ??? ??????? ????? ????? ????????? ?????. ?? ???????, ????
+??? ???????! ?? ????????? ????????? ?????, ???????, ???? ?????? ???????
+????????, ??? ??? ??????, ??? ??? ?????? ? ????? ???? ?????????, ?????????
+? ??? ??????? ?????? ?????, ??? ????? ?????? ?????????. ?? ?????????
+?????????? ?????????? ?????, ???????? ????????? ????? ? ????? ??????
+????, ??? ?? ????? ?????. ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<p>
+????? ??? ?????? ?????. ?? ??????????, ??? ???? ????????? ????????
+?????????. ?????! ?? ?????? ? ????? ? ?????????? ??. ?? ??? ?? ??????
+??? ???? ??????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_d.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">??????, ????? ??????<br> ?? ???? ????? ????????</div>
+</div>
+
+<p>
+????? ????????? ?????! ?? ?????, ??? ?????, ??????? ??? ??, ??? ?? ??????
+??? ???, ?????? ?? ????? ????????????, ?? ???&hellip; ??????, ????? ????????
+??? ?? ??????? ????? ????. ????? ??? ???????&hellip; ??? ?????&hellip;  ???
+???????&hellip; ????? ????? ??????????? ????? ????? ?????? ? ?????????,
+??? ?? ?? ?? ????????? ?????? ?? ??? ?????? ?????? ????, ? ???? ???? ??? - ?
+????????? ??????????????. ? ???????, ????? ???? ????????? ??????
+?????????? ??????. ? ?? ??????? ?? ??????? ????????? ????? ?????,
+????? ???? ??? ????? ???? ??????? ????? ?????????, ??? ??????. ?? ??
+??????? ????, ??? ??? ?? ?????? ???? ?????????. ?? ??????????? ????
+?? ??? ? ????????, ????? ??? ????, ? ???&hellip; ?? ??? ????! ???????? ???
+???!!!!!!! ?? ? ??????? ?????? ???? ???????? ?????????????? ????, ??? ????
+??? ?????? ??????????? ?? ??????, ??? ????? ??????. ?? ????? ??? ???
+????? ???, ???? ???? ??????? ??? ?? ?????????. ?? ?????? ?? ?????? ?????????
+?????????????? ????? ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<p>
+????? ??? ?????&hellip; ?????? ???? ???? ??? ???????????? ??? ?????
+?????????. ????????, ?????? ????????, ???? ?? ?????????, ??? ?????????
+?? ??????, ??????????? ??? ????????????, ????? ?????????, ??? ? ?????
+????? ??? ??????, ? ?????&hellip; ???? ???? ? ????????, ????? ??? ????,
+? ??? ????, ???? ???????&hellip; ??? ??? ? ???? ?? ????? ??????????
+????????? ????, ??????? ???? ?????? ???? ?????? ??????? ? ???????
+??? ???????? ???? ? ???? ??? ????? ?????? ????, ??????? ??????????
+???? ?? ????? ?? ????? ????? ?????? ??????????. ?? ?? ?? ??????? ?????
+?? ??????????? ????? ?????. ?? ????????? ???????? ?????, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<p>
+????? ??? ???????? ?????, ??? ????????? ????? ? ??????? ? ????????
+?????????? ??????????. ?? ??????????? ???? ????, ????? ?????????
+?? ???????? ?????, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_c.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">I can fly, my frie-e-ends</div>
+</div>
+
+<p>
+????? ??? ???????&hellip; ?? ? ??????? ?? ??????????? ?????, ????????
+?????? ????? ????????? ?? ???? ?????????. ?????? ?? ????? ????????
+????? ?????????? ???-?????? ? ?????. ?? ?????? ?? ????? ???????
+?????????. ?????? ?? ?? ?????? ?????? ????? ????? ?? ????????.
+?????? ?????? ?????? ? ????????? ?????? ???????? ????????? ????
+???? ????????????. ???? ???? ????? ? ????????? ???????, ???????,
+???? ?????? ????????, ???? ????????????, ????? ??????? ? ??????
+?????? ??? ??????????? ????. ?? ???????? ????????? ? ????? ???????
+?&hellip; ?-?-?-?-?&hellip;  ???? ?????????. ?-?-?-?-?&hellip;  ??????.
+?-?-?-?-?&hellip;  ??????&hellip; ??? ???! ??????????? ???????! ??
+???????? ??? ????????? ???, ???????? ????????? ?????, ?????????????
+????, ??? ?? ????? ???????, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<h4>?????????? ????? ?????? ? ?? ???? &mdash; ?? ? ?? ???? &mdash; ??????????????.</h4>
+
+<div class="quote">????? ? ? ?????? ??? ????? ? ?????? ???????, ? ???????:
+&quot;?, ???!&quot;. ??????? ?? ???? ??? ????????? &quot;??????&quot;.
+?????? ??? ????????: ???? ??????? ???? ???, ? ????? ???????????? ??????
+? ???. ??? ????????????? ?????? ???????, ?????, ???????, ????????? ??
+????????? ???????, ? ? ???? ????????? ????????? ?????, ? ????? &hellip;</div> 
+
+<div class="quote">?? ??????, ??? ????????? ?????. ????????? ??????? ??????
+???, ???????, ??????? ?????? ???????. ??? ? ??? ????????, ?????? ? ?????
+??????? ? ?????? ????: &quot;?????? ???? ??????????!&quot;. ?? ??? ??????
+&quot;??????&quot;? ???-?? ?????????? ???? ??????? ????? ????? ????? ?
+?????. ? ??????, ? ?? ???? ?? ??????? ?? ????, ?? ???????? ??? ?????????
+?????? ?????????.</div>
+
+<div class="quote">??? ??? ?? ????????? (? ?? ??? ??? ??????) ???????? ????,
+??? ? ????????? ?????? ? &quot;Gods of Enigma II&quot; ????? ? ?????? ??-??????, ??? ??? ??? ????: ???? ????????, ?? ?? ?????? ????????????? ? ??????. ? ??-??????, ??? ???????? ????? ?????????? ?????????, ??? ? ???, ??? ???????? ??????????, ??? ? ? ???, ??? ???????? ??????????? ????????. ?? ????? ??????, ?????????? ???? ???? ???????? ??????? ??????????, ???????? ? ?? ???? &mdash; ?? ? ?? ???? &mdash; ??????????????.</div>
+
+<div class="quote">?????? ?????? ??????? ?? ???????? ???? ??????? (?,
+????????, ??????? ??? ?? ??????), ?? ??? ? ?? ????? ??-?-?-??????, ???
+??? ?????????? ?? ?????? ??????. :-)</div>
+
+<div class="author">dev0</div>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<p>
+????? ??? ???????? ?????. ?? ?? ???? ??? ?? ?????? ????? ???-?? ???.
+??? ???? ?, ???! ????! ??? ????? ??? ???????? ?? ???????????????
+??????? ???????? ?? ???????? ??????. ????? ?????????? ? ???. ?? ???
+??? ???????? ???? ????? ????????? ????????? ???????. ?? ????????
+??? ???, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip; 
+</p>
+
+<p>
+??????? ???? ????? ???? ???? ? ???? ?? ??????? ???? ? ??&hellip;
+?? ?? ????? ??? ???????? ????????????. ????? ????? ?????????
+?????? ???-??,  ??????? ???????? ???? ???????? ? ??? ?? ??????????.
+?? ??????? ??? ?&hellip;
+</p>
+
+<p>
+??!
+</p>
+
+<p>
+??? ???? ?? ????? ???????? ? ???? ???????? ??????? ?????, ? ? ?????
+????????? ????? ?? ???? ????? ??????. ?? ????? ????????, ? ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip;
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_a.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">???????? ? ??????????</div>
+</div>
+
+<p>
+????? ????. ?? ?? ???? ??? ?? ?????????. ?? ?????????, ??? ????
+????????? ???????? ??? ????? ????? ???????????????? ????????,
+????????? ????, ????? ??????? ?? ??????, ? ??????? ?? ??????
+???????? ???? ????????????????, ??????? ??????????? ???? ????
+? ??????? ???-??. ???? ????? ??? ????????, ???? - ????? ??????????
+????? ??? ????? ?????, ? ?????? - ????? ??????? ?????????? ??????.
+? ???? ??? ???? ?????????, ??, ? ???????, ????? ???? ?????, ? ?? ????
+???? ??????? ??? ??????, ????? ????????? ? ?????????????, ??? ??.
+?? ????????? ????? ? ???????, ???????? ?? ????????????? ?? ??????,
+????? - ? ??????. ????????? ?????? ????? - ? ???? ? ??????????
+??????? ???-?? ????????. ?????&hellip;
+</p>
+
+<p>
+????, ????, ????&hellip; 
+</p>
+
+<p>
+????? ???????? ??????&hellip; ?? ?????? ???-?? ? ???????:
+&quot;????! ????! ?? ???? ????????&quot; ??????? ?? ?????????
+?????? ????????&hellip; &quot;????! ??????????, ????????? ?? ??????
+?? ??????, ????? ? ???? ?????? ???? ??????.&quot; ????? ??? ????????
+????????, ? ???? ?? ?????? ????? ???????????? ? ?????? ????. ????
+????????! ?? ??????? ?????? ?? ????, ?? ???????? ?&hellip;
+</p>
+
+
+<h4>???? ?????? ?????? ??? ? ??????, ????? ? ?????? ? Hexen II</h4>
+
+<i>
+?? ????? ?????????, ??? ??? ??????? ????? ????????? ? moonpearl, ?
+??????, ??? ??? ???? ????????? &hellip;</i>
+</p>
+
+<div class="quote">
+?????? ??? ????? ???-?????? ????????. ??? ?, ? ????. ???? ? ???? ?
+?????? ?????? ?????? ??? ???????????, ?? ? ????. ????? ??????????,
+??? ??????????? &quot;????????? ???????? ????????&quot; (???
+&quot;???? ??????&quot;, ????????? ??? ??????). ?? ????, ??? ???????.
+?? ????, ? ???? ??????. ?????, ??? ????? ?????? ???????.
+</div>
+
+<div class="quote">
+??? ???? ??? 7-8, ?? ??????, ????? ? ??????? ???? ?????? ????
+? ???? ???? Oxyd. ? ?????, ??? ? ?????? ???????? ?????? ???????
+??????, ?????? ??? ??? ????? ???? ???? ? ?????. ? ?????, ??? ?????
+???????? ?? ????? ?????? ???????????? ???????, ???? ??? ?? ????????
+????? ? ?????? Oxyd ?? ??? ??????? ???? ????????. ? ?????, ??? ?
+??????? ? ???? ???????????? ?????? ??????? Atari ? ????, ????? ?
+?????? ???????? ???.
+</div>
+
+<div class="quote">
+?????? ??? 22, ? ? ?????? ???? Oxyd. ? ?????? ???? ????????? ?????
+???????, ????? ??? ???? 16, ?? ?????? ? ????? ????????? ????? ??
+?????????. ? ?????? ????? ???? Oxyd magnum! &mdash; ?? ?? ?????
+???????? &mdash; ?? ?????? ?????? ????????? ???????. :( ? ?????
+???????????? ?  Per.Oxyd ? Oxyd Extra!, ?? ??? ??? ??????????? ??????,
+??? ?? ??????????????? &mdash; ???? ??? ? ???? ????? ???????????
+???????, ?? ??????????????? ?? ??????? ??????, ??????? ?????? ???
+Oxyd ????? ????? ? ????????.
+</div>
+
+<div class="quote">
+? ??????, ??? ??? ????? ???????????. ? ??????, ??? ??? ??? ??????,
+? ??? ??????? ?? ??????? ????????? ??? ??????? ? ???? Oxyd ? ???????
+??????. ? ????? ? ????? Enigma. ? ?? ????? ?????, ??? ??? ?????????,
+?? ? ????????? ?????, ??? ?????????? ? ???? ?????. ? ???? ????????
+???? ?????? ????? ??????????? ?????????, ??????? ?????????
+????????? ??? ????? ??????? ????? Oxyd. ??? ??? ??????? ? ??????
+?? ???????? ????????????? ????????????? Enigma, ?? ?????? ?? ??,
+??? ??? ???? ??? ??????????? ?????? ???? ???????? ????? ? ?? ??????,
+?? ????? ? ?? ??, ??? ??? ??????? ??? ??????? ??????? ????? ???????.
+</div>
+
+<div class="quote">
+? ??? ??????? ???? ???????, ? ???? ?????????? ???????? ???????.
+??? ???? ??? ???? ???????? ??????????? ??????????? ?????? Oxyd,
+??????? ? ???????? ? ????? ?????? ????????? &mdash; ?????????? ????
+?????? ??????????, ?????? ? ?????, ? ? ???????? ?????? ??? Oxyd.;)
+? ??????????????? ???? ????????????. ? ??????? BlackBallEd ?
+?????????? ????????? ???????, ??????????? ?? ??????? ????????
+??? ??????? &quot;??????????&quot;. ? ???? ? ????, ??????????? ????
+??? ???? ???????????? ? ???????????? ???????, ? ????????? ???-??
+????????????? ????? ????? ??????. ?????? ? ???? ????? ?????????
+????? ?? ?????? ??????????, ?? ? ????????? ????? ????. ? ????? ??????
+??? ???, ??? ??????? ?????? ???? ??? ????: &quot;? ?????? ??? ????
+???????? ????? ? ???? ????? ?????????????, ???? ???? ? ?????, ?????
+????, ????? ?????? ????????????&quot;. ??? ? ?????? ??????????? ??????
+???? ???????, ??? ?????? ???????? ????? ?? ???? ???? ????????? ????,
+???????????? ???????? ??????????, ? ??? ???, ?????????????, ????????
+????????????? ?? ????????? ? ?????? ?????????? ? ?????????,
+?????????? ? ????????? ???????&hellip;
+</div>
+
+<div class="quote">
+???? ???? ?????????  ???????? ???????? ?????? ?? ???, ????? ? ?????? ? Hexen II
+&mdash; ??????? ?? ???????? ??????, ? ?? ???????. ;) ? ?????? ??????? ???????,
+??? ??????? ???????? ?? ?????? ??????????? ?? ??? ??? ??????????? &mdash;
+????????, ?????????????????, ???????? ? ????????. ?????? ?? ??????? ?????????
+? ???? ???????, ?? ????????? ????????? ??????? ? ???, ????? ?????? ?? ??? ??
+???? ???. ?????????? ??????, ? ???????? ?????? ??????? ????? ???, ?????
+?????????, ??? ??? ????????, ?? ???? ????????? ??? ??? ??????? ??? ??????.
+??? ??? ? ????????, ??? ??? ????? ??????????? ?? ??? ???????? ??????????,
+????????, ??????, ???????? ??????? ??????. ;)
+</div>
+
+<div class="quote">
+? ?? ????, ??? ??? ?????? ? ?????? ???? ?????? ?????, ?? ? ?????, ??? ???
+???????? ??????????? ???-?? ?????. ???? ?????? ????? ???? ????????
+????????????, ?? ??? ?????? ????? ? ?????? ??????? ?????? ?????????
+??????, ?????? ?? ??????? ???????? ?? ????? ???? ?? ?????? ??????. ?
+????? ?????? ???????? ?????????? ?????????, ?? ??? ????? ???? ?????????
+????? ???? ????????? ? ???????????????? ????????. ? ??????? ???, ??? ???
+??????? ????????? ?????????? ?? ????????, ? ?? ?? ????? ????????? ?????????:
+???, ????????? ????? ??????? ?????????????????, ????????? ?????? &mdash; ????????&hellip;
+</div>
+
+<div class="quote">
+??? ???? ??? ???? ?????. ? ????????? ???? ????? ? ?????????? ?????? ??
+????? ? ????? ????? ????? ???? ?????. ??????? ? ????????, ??? ??? ?????.
+????? ??????? ??? ?????? ??????? ??? ????? ??????? ??????? ?????
+????? ????? ??????? ??? ???????? ?? ??, ??? ??? ?????? ???? ?????????
+??????? ??? ?????? ????? ??????? 2007 ????. ??, ??? ??? ????? ???????&hellip;
+</div>
+
+<div class="quote">
+??? ???? ??? ??????? ??????? ?????!!!
+</div>
+
+<div class="quote">
+;)
+</div>
+
+<div class="quote">
+???, ????????, ? ??? ?? ???????? "??????", ?? ??? ???? ???????????
+????? ?????? ??? ????, ??? ???? ??????? ??? ????????? ???????.
+????????? ???????, ??????? ????????? ??????????? ????? ??????
+?????, ??????? ??????? ????? ????? ???? ? ???, ????? ?????????,
+?????????? ???????????? ???????. ????????, ??????? ? ????????
+???????, ? ??????? ????????? ??? ??????????? ?????, ????? ?????
+??????? ???? ?????&hellip;
+</div>
+
+<div class="quote">
+???, ? ???????? ??? (???????) ??????. ?? ??????? ??????? ??????? ???
+????? ???-?????. ;) ?? ????? ???? &quot;????????? ???????? ???????? &quot;
+&mdash; ??? ?? ????????? ??????. ??? ??? ?????? ???? ???????? ??? ???????
+?????? ???????????, ?????? ?? ??????? ????????????? ? ????? ?? ??????,
+??? ?? ?????? ??????????. ? ?????? ??????? ????????? &quot;?????????
+???????? ????????&quot;, ??????? ?????????? ?? ? ???? ????? ??????
+?????????, ??? ??????? ??? ?????????. ????????? ??????? ???? ????? ???
+??????, ? ???? ????????????? ??????? ???? ??? ?????? ??????????
+??????. ???????, ?? ????? ???? ? ????? ??????? ??? ????? ??????? ?????
+?????. ????????? ???????????? ? ???? ??????? ? ???????? ??????? ???? ?????.
+</div>
+
+<div class="quote">
+???????, ??? ?????? ??? ??????.
+</div>
+
+<div class="quote">
+???????, ??? ?????? ? ??? ??????.
+</div>
+
+<div class="quote">
+???????, ??? ???????? ??.
+</div>
+
+<div class="author">moonpearl</div>
+
+<p>
+<i>moonpearl, ???????, ??? ??????? ?? ??? ???. ? ???? ???? ???????????
+??????????? ?????? ??? ??????????? ????????????? ?????? ????????
+???? ? ??? ??? ??????? ???????????? ??????? ??????? ????????, ???,
+????????, ? ?????? &quot;The Aztec Temple&quot; ? ?????? ??????? ?
+????????? ?????? Enigma. ?? ??? ? ??????????? ???? ?????
+????????? ???????! :-)</i>
+</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_f.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">????????? ??????</div>
+</div>
+
+<p>
+????, ????, ????&hellip; 
+</p>
+
+<p>
+???????, ???????? ? ???? ????? ??????????, ? ???? ????? ??????
+??????? ???, ??? ? ?? ?????? ???. ???? ?????? ???? ?????????,
+?????? ?? ???. ?????? ?? ??????? ??? ??????!
+</p>
+
+<p>
+??-??-??-??-??-??-??-??-??-??-??-??-??!!!!!!!!
+</p>
+
+<p>
+1) ??? ?????? ???????, ????????? ??????????? ???????????????? Moneymaker'??
+??? ?????? ??????????, ????? ?? ?????????? ????????????????? ???????
+???????? ????, ????? ?? ??????? ???? ????????? ????? ?????? &mdash; Daniel,
+Andreas, Ronald ? Raoul. ?? ??????????? ????? ????????? ??? ??? ??????
+??????????? ? ?????? ?????? ???????.
+</p>
+
+<p><i>Ludmian Sedai</i></p>
+
+<p>????????? ????????, ??? ?????? ????? ???? ?????? ? ??????? ??????? Enigma.
+?????????? ?????????? ??? ????? ??????, ??? ???? ???????????, ??????? ?? ???????? ?? ?????????? ??????:</p>
+<pre>
+<a href="mailto:enigma-devel at nongnu.org">enigma-devel at nongnu.org</a>
+</pre>
+<p>? ?????????, ??? ?????????? ?????? ? ????????? ???????:
+</p>
+<ul>
+<li>&quot;Plan Ahead&quot; ?? Jacob Scott</li>
+<li>&quot;River of Challenges&quot; ?? Lukas Sch&uuml;ller</li>
+<li>&quot;Procrustes&quot; ?? Andreas Lochmann</li>
+</ul>
+<p>??????? ??????? ???????, ?????? ???? ?????? ????? ????????? ??!</p>
+
+<p><i>???? ??????? Enigma</i></p>
+
+</div>


Property changes on: feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html
___________________________________________________________________
Name: svn:eol-style
   + native



From ral at mail.berlios.de  Sat Jul 12 18:37:29 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 12 Jul 2008 18:37:29 +0200
Subject: [Enigma-game-svn] r1233 - in trunk: data/schemas src
Message-ID: <200807121637.m6CGbTiM003468@sheep.berlios.de>

Author: ral
Date: 2008-07-12 18:37:18 +0200 (Sat, 12 Jul 2008)
New Revision: 1233

Modified:
   trunk/data/schemas/objects.xml
   trunk/src/actors.hh
   trunk/src/items.cc
   trunk/src/items.hh
   trunk/src/world.cc
   trunk/src/world_internal.hh
Log:
Trunk 1.1: new API reengineering
- improve numerical stability of physical engine:
  calculate friction according to final velocity to avoid friction pumping
  energy into the system on collision handling what is critical on jammed
  or two rubberband fixed actors.
- allow floor covering items to support own friction and mousefactor values:
  - it_strip: add attributes friction, mousefactor


Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/data/schemas/objects.xml	2008-07-12 16:37:18 UTC (rev 1233)
@@ -34,6 +34,7 @@
     <attr name="loop" type="bool" default="true" rw="rw"/>
     <attr name="max" type="double" default="0" rw="rw"/>
     <attr name="min" type="double" default="0" rw="rw"/>
+    <attr name="mousefactor" type="double" default="nil" rw="rw"/>
     <attr name="movable" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
     <attr name="nopaction" type="bool" default="false" rw="rw"/>
@@ -178,6 +179,8 @@
     </object>
     <object name="it_strip">
       <attr name="connections"/>
+      <attr name="friction"/>
+      <attr name="mousefactor"/>
     </object>
     <object name="it_strip_w">
       <attr name="connections" value="w"/>

Modified: trunk/src/actors.hh
===================================================================
--- trunk/src/actors.hh	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/src/actors.hh	2008-07-12 16:37:18 UTC (rev 1233)
@@ -90,6 +90,7 @@
 //        ecl::V2 oldpos;		// Backup position for enter/leave notification
         ecl::V2 force;		// Force used during tick
         ecl::V2 collforce;
+        double  friction;       // friction on the current position
         
         // 2 sets of contacts - one for the current tick, one for the last tick
         Contact contacts_a[MAX_CONTACTS];

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/src/items.cc	2008-07-12 16:37:18 UTC (rev 1233)
@@ -142,7 +142,14 @@
         GridObject::processLight(d);
 }
 
+double Item::getFriction(ecl::V2 pos, double defaultFriction) {
+    return defaultFriction;
+}
 
+ecl::V2 Item::calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce) {
+    return floorForce;
+}
+
 void Item::on_drop (Actor * /*a*/) {
 }
 
@@ -3899,6 +3906,8 @@
                 
         // Items interface
         virtual bool covers_floor(ecl::V2 pos) const;
+        virtual double getFriction(ecl::V2 pos, double defaultFriction);
+        virtual ecl::V2 calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce);
         
     private:
         int traitsIdx() const;
@@ -3961,6 +3970,22 @@
                 && (((pos[1] <= ycenter + MAXDIST) && (cbits & NORTHBIT)) || ((pos[1] >= ycenter - MAXDIST) && (cbits & SOUTHBIT)))))
                 ? true : false;
     }
+    
+    double StripItem::getFriction(ecl::V2 pos, double defaultFriction) {
+        Value v = getAttr("friction");
+        if (v && covers_floor(pos))
+            return v;
+        else
+            return defaultFriction;
+    }
+    
+    ecl::V2 StripItem::calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce) {
+        Value v = getAttr("mousefactor");
+        if (v && covers_floor(a->get_pos()))
+            return mouseForce * (double)v ;
+        else
+            return floorForce;        
+    }
         
     int StripItem::traitsIdx() const {
         return getConnections();

Modified: trunk/src/items.hh
===================================================================
--- trunk/src/items.hh	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/src/items.hh	2008-07-12 16:37:18 UTC (rev 1233)
@@ -190,7 +190,9 @@
         /* ---------- Virtual functions ---------- */
         const char *get_kind() const;
         void init_model();
-        void processLight(Direction d);
+        virtual void processLight(Direction d);
+        virtual double getFriction(ecl::V2 pos, double defaultFriction);
+        virtual ecl::V2 calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce);
 
         /* ---------- Item interface ---------- */
 

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/src/world.cc	2008-07-12 16:37:18 UTC (rev 1233)
@@ -460,10 +460,10 @@
 #define M_PI 3.1415926535
 #endif
 
-void World::add_mouseforce (Actor *a, Floor *floor, V2 &mforce)
+ecl::V2 World::drunkenMouseforce(Actor *a, V2 &mforce)
 {
+    V2 f = mforce;
     if (a->get_controllers() != 0) {
-        V2 f = floor->process_mouseforce(a, m_mouseforce.get_force(a));
         if (a->is_drunken()) {
             // rotate mouse force by random angle
             double maxangle = M_PI * 0.7;
@@ -471,8 +471,8 @@
             f = V2(f[0]*cos(angle) - f[1]*sin(angle),
                    f[0]*sin(angle) + f[1]*cos(angle));
         }
-        mforce += f;
     }
+    return f;
 }
 
 /*! Calculate the total force on an actor A at time TIME.  The
@@ -480,9 +480,10 @@
   that the position and velocity entries in ActorInfo will be updated
   only after a *successful* time step, so they cannot be used
   here.] */
-V2 World::get_local_force (Actor *a)
-{
+V2 World::get_local_force (Actor *a) {
     V2 f;
+    V2 m;
+    double friction = 0;
 
     if (a->is_on_floor()) {
         if (Floor *floor = a->m_actorinfo.field->floor) {
@@ -490,30 +491,29 @@
             f += flatForce;
 
             // Mouse force
-            add_mouseforce (a, floor, f);
-
+            if (a->get_controllers() != 0) {
+                m = floor->process_mouseforce(a, m_mouseforce.get_force(a));
+            }
             // Friction
-            double friction = floor->get_friction();
-            if (a->has_spikes())
-                friction += 7.0;
+            friction = floor->get_friction();
 
-            V2 v = a->get_vel();
-            double vv=length(v);
-            if (vv > 0) {
-                V2 frictionf = v * (server::FrictionFactor*friction);
-                frictionf /= vv;
-                frictionf *= pow(vv, 0.8);
-                f -= frictionf;
-            }
-
+            // Floor force
             floor->add_force(a, f);
         }
 
-        if (Item *item = a->m_actorinfo.field->item) 
+        if (Item *item = a->m_actorinfo.field->item) {
+            friction = item->getFriction(a->get_pos(), friction);
+            if (a->get_controllers() != 0) {
+                m = item->calcMouseforce(a, m_mouseforce.get_force(a), m);
+            }
             item->add_force(a, f);
+        }
     }
+    
+    a->m_actorinfo.friction = friction;
+    f += drunkenMouseforce(a, m);
 
-    return f;
+    return f + m;
 }
 
 /* Global forces are calculated less often than local ones, namely
@@ -1323,7 +1323,26 @@
     double q = length(ai.vel) / MAXVEL;
     if (q > 1)
         ai.vel /= q;
+        
+    // Friction influence
+    double friction = server::FrictionFactor * ai.friction; 
+    if (a->has_spikes())
+        friction += 7.0 * server::FrictionFactor;
 
+    double vv=length(ai.vel);
+    if (vv > 0) {
+        V2 frictionf = ai.vel * friction;
+        frictionf /= vv;
+        frictionf *= pow(vv, 0.8);
+        ai.vel -= dtime * frictionf / ai.mass;
+        if (friction  < 0) {  // inverse, accelerating friction
+            // Limit to maximum velocity again
+            double q = length(ai.vel) / MAXVEL;
+            if (q > 1)
+                ai.vel /= q;
+        }
+    }
+
     ai.pos += dtime * ai.vel;
     // avoid actors outside of world
     if (ai.pos[0] < 0) ai.pos[0] = 0.0;

Modified: trunk/src/world_internal.hh
===================================================================
--- trunk/src/world_internal.hh	2008-07-12 08:01:54 UTC (rev 1232)
+++ trunk/src/world_internal.hh	2008-07-12 16:37:18 UTC (rev 1233)
@@ -271,7 +271,7 @@
 
         /* ---------- Private methods ---------- */
 
-        void add_mouseforce (Actor *a, Floor *floor, V2 &mforce);
+        ecl::V2 drunkenMouseforce(Actor *a, V2 &mforce);
         V2 get_local_force (Actor *a);
         V2 get_global_force (Actor *a);
 



From raoul at mail.berlios.de  Sat Jul 12 23:44:13 2008
From: raoul at mail.berlios.de (raoul at mail.berlios.de)
Date: Sat, 12 Jul 2008 23:44:13 +0200
Subject: [Enigma-game-svn] r1234 - feature_branches/hp_lotm/input/lotm
Message-ID: <200807122144.m6CLiDhs023073@sheep.berlios.de>

Author: raoul
Date: 2008-07-12 23:44:05 +0200 (Sat, 12 Jul 2008)
New Revision: 1234

Added:
   feature_branches/hp_lotm/input/lotm/lotm_200807_de.html
Modified:
   feature_branches/hp_lotm/input/lotm/lotm_200807.html
   feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html
Log:
-> Added german translation from Harry
-> Added english fixes from Harry and me
-> Fixed russian translation, it's now valid html



Modified: feature_branches/hp_lotm/input/lotm/lotm_200807.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-12 16:37:18 UTC (rev 1233)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807.html	2008-07-12 21:44:05 UTC (rev 1234)
@@ -114,7 +114,7 @@
 <p>
 You've been a Sisyphus who struggled to carry the unconscious body of your
 fellow traveler on the steepest slopes and a Zeus who tried to drive your
-companion to the oxyds, frightening him with lightnings from a magic box you had
+companion to the oxyds, frightening him with lightning bolts from a magic box you had
 found somewhere on your travels (a good friend you are). 
 </p>
 
@@ -156,72 +156,76 @@
 <p>
 But you didn't learn this lesson and came here
 once more. Remember, their kindness is not infinite. This time they won't leave
-you alive.  You find yourself in a dark and gloomy place with strange shapes and
+you alive.
+</p>
+
+<p>
+You find yourself in a dark and gloomy place with strange shapes and
 colours. You realize at once that those shapes and colours were not meant for
 the eyes of mortal marbles. Slowly you regain your consciousness. You step
 carefully. Every step here could send you falling into the infinite abyss of the
 world of the gods of Enigma. As if to mock you, the gods left around hints for
-you, as well as extralives. As if they were sure that you won't be able to leave
-this place even with such help. Slowly, you move to the first entrance and then&hellip;
+you, as well as extra lives. As if they were sure that you won't be able to leave
+this place even with such help. Slowly, you move to the first entrance and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <h4>&quot;Back to the starting room&quot;</h4>
 
 <div class="quote">Actually the level starts off quite harmlessly, a path with just one
 possible exit. Alright, nothing ventured nothing gained. Let's get going
-then, down along this oneway-street.</div>
+then, down along this one-way-street.</div>
 
-<div class="quote">Room 1: Many dynamites and many breakable stones. It can't be that
-difficult&hellip; Boom, boom, boom&hellip; Hmm&hellip; No, it doesn't seem to work this
-way&hellip; So it's first top and then bottom, or what else?</div>
+<div class="quote">Room 1: Many dynamite sticks and many breakable stones. It can't be that
+difficult &hellip; Boom, boom, boom &hellip; Hmm &hellip; No, it doesn't seem to work this
+way &hellip; So it's first top and then bottom, or what else?</div>
 
 <div class="quote">Finally I've got the hammer and plunge into the hole in the ground. Back
 again at the starting point. Fortunately a second possibility to exit
 this room presents itself to me, and luckily the oxydstones seem to have
 been arranged in pairs.</div>
 
-<div class="quote">Room 2: Oh dear!&hellip; Many cracked floors, but also enough wooden stones
+<div class="quote">Room 2: Oh dear! &hellip; Many cracks on the floor, but also enough wooden stones
 to build bridges. Really enough? Well, if only I could keep from always
 choosing the wrong way or falling down into the abyss, there should be enough
 of them. But thanks to the Gods, there's this one seed, which might
 serve as a substitute (or should it be used somewhere else?).</div>
 
 <div class="quote">Back to the starting room I came to realize that my second guess had
-been the right one&hellip;</div>
+been the right one &hellip;</div>
 
 <div class="quote">Room 3: Oh Gods, have mercy! I really hate this spring-hopping-across-the-abyss, 
 especially on slippery floors. Either I'm too fast and overshoot the mark, 
-or I'm too slow. How good to have some extra-lifes available about this time. 
+or I'm too slow. How good to have some extra lives available about this time. 
 I was in urgent need of them.</div>
 
 <div class="quote">Back to the starting room. Now it's about time to bring up the white
-marble. A yin-yang would come in handy now&hellip;</div>
+marble. A yin-yang would come in handy &hellip;</div>
 
-<div class="quote">Room 4: Ah, there it is! And some easy challenge at last. The knights
+<div class="quote">Room 4: Ah, there it is! And an easy challenge at last. The knights
 don't impress me much, I've got the hammer and there's a laser nearby.
 Great!</div>
 
-<div class="quote">Errr!?&hellip; I've died! Why? Ah, invisible death-stones, how mean! If only
-I had some glasses. But there was some way to make them of your own
-accord, wasn't it?</div>
+<div class="quote">Errr!? &hellip; I've died! Why? Ah, invisible death-stones, how nasty! If only
+I had some glasses. But there's a way to make them of your own
+accord, isn't there?</div>
 
 <div class="quote">Finally I've reached the goal, conquered the yin-yang and opened up all
-oxyds.</div>
+the oxyds.</div>
 
-<div class="quote">All in all an excellent level, which consists of all the things, that
-make Enigma such an exciting game (at least to me): strategy, dexterity
-- and the possibility to transform objects.</div>
+<div class="quote">All in all an excellent level, which consists of all the elements, that
+make Enigma such an exciting game (at least to me): strategy, dexterity&mdash;and the 
+possibility to transform objects.</div>
 
 <div class="quote">Thanks to the Gods of Enigma and congratulations to Moonpearl!</div>
 
 <div class="author">JuSt</div>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <p>
@@ -231,7 +235,7 @@
 cheerfully. You remember these walls and this sand. You remember this sound.
 That's how the sand was crunching on those long nights when you walked on the
 beach with your friend Anna Whiteball, and the walls here are the walls of her
-nice tidy little house. Anna&hellip; Where is she now? Is she thinking of him? For some
+nice tidy little house. Anna &hellip; Where is she now? Is she thinking of him? For some
 moments you allow your thoughts, so sad and so pleasant, to take control over
 you. Have the gods of Enigma and their laughter, that made you feel as if icy
 fingers are touching your heart, been just a dream? Is this Anna's house? Have
@@ -240,7 +244,7 @@
 
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200807_b.jpg" alt="Level of the Month" border="0">
-<div class="imagetitle">Have the gods taken this place from my memory</div>
+<div class="imagetitle">Have the gods taken this place from my memory?</div>
 </div>
 
 <p>
@@ -253,21 +257,21 @@
 legends were true, still remembers being held by Jacob the Builder, who used it
 to create more worlds than a marble can count. Hurriedly, you break the
 remaining walls, snatch the Holy Oxyd, and run back to the place where you found
-the Hammer. And then&hellip;
+the Hammer. And then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <p>
 Again you are in the same weird place. You feel that your inventory has somehow
 become rather heavy. The Hammer! You run to the wall and break it. Behind it you
-find another passage&hellip;
+find another passage &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <div class="lotmpic">
@@ -277,45 +281,45 @@
 
 <p>
 Oh, what a depressing place! You thought that there cannot be a nastier place
-than the one you just came from, but this&hellip; It looks like no one has stepped on
-this ground for millions of years. This place is so cold&hellip; So empty&hellip;  So
-desolate&hellip; The bridges between the platforms here are so old and insecure that
+than the one you just came from, but this &hellip; It looks like no one has stepped on
+this ground for millions of years. This place is so cold &hellip; So empty &hellip; So
+desolate &hellip; The bridges between the platforms here are so old and insecure that
 you wouldn't dare to cross them more than once, and even that fills your sole
 with unease. Thankfully, there are some old rotten wooden blocks here. They will
 allow you to build new bridges, even if they are just a little more secure than
 the old ones are. But there are too few of them, so you have to be careful. You
-move one of them to the abyss, then another, and then&hellip; What's this?! Try one
+move one of them to the abyss, then another, and then &hellip; What's this?! Try one
 more time!!!!!!! Did you really hear a mad inhuman laughter or are you
 hallucinating? You know what has to be done. You have done it many times, though
-you never really liked it. You take an extralife from your inventory and then&hellip;
+you never really liked it. You take an extra life from your inventory and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <p>
-Again this very place&hellip; Now you have to plan everything even more carefully. It
+Again this very place &hellip; Now you have to plan everything even more carefully. It
 seems like an eternity had passed until you found out how to get to the seed,
-carefully checking that there are no mistakes in your plan, and then&hellip; One block
-to the abyss, then another, then another, until finally&hellip; So, this is the very
+carefully checking that there are no mistakes in your plan, and then &hellip; One block
+to the abyss, then another, then another, until finally &hellip; So, this is the very
 famous Holy Seed from which all other seeds and blocks have come? It looks like
 any other seed you've seen on your long journeys. But you don't pause to think
-it over. Hastily you snatch the Oxyd and then&hellip;
+it over. Hastily you snatch the Oxyd and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <p>
 Again you are in the same weird place where the entrances to the rooms which
 hold the Four Holy Items are. You grow a block to make your way to the third
-entrance, and then&hellip;
+entrance, and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <div class="lotmpic">
@@ -330,28 +334,28 @@
 platforms. The fresh night air and the calm shining of the platforms fill your
 soul with tranquility. Your way lies to the Holy Spring that, according to the
 legends, the gods used to look at the newly created worlds from above. You
-slowly breath in and&hellip; W-z-h-h-h-h&hellip;  One platform. W-z-h-h-h-h&hellip;  Another one.
-W-z-h-h-h-h&hellip;  One more&hellip; Here it is! The fabled Spring! You jump a few more
+slowly breath in and &hellip; W-z-h-h-h-h &hellip; One platform. W-z-h-h-h-h &hellip; Another one.
+W-z-h-h-h-h &hellip; One more &hellip; Here it is! The fabled Spring! You jump a few more
 times, snatch the Holy Oxyd, return to the place where you found the Spring and
-then&hellip;
+then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
-<h4>It produces an attraction that I can not resist&mdash;I even don't want to.</h4>
+<h4>&quot;It produces an attraction that I can not resist&mdash;and I don't want to&quot;</h4>
 
 <div class="quote">When I got to the third room for the first time I thought: &quot;Oh no!&quot;. To
 me this damned &quot;hopping&quot; is a horrible thing. Usually that means: solve
-the level once, then leave for good. It really took me quite some
+the level once, then leave for good. It really took me quite a few
 attempts to finally reach the fourth room with my last ball and then &hellip;</div> 
 
 <div class="quote">You know what happens then. Well, some attempts later I succeeded in
 solving the level at last. As I said before usually it's &quot;Once is
 enough!&quot; for me in such cases. Yet what does &quot;usually&quot; mean? Somehow
 something attracted me to challenge the Gods over and over again. By the
-way, I never had to regret it, and I enjoyed it with increasing enthusiasm.</div>
+way, I never regretted it, and I enjoyed it with increasing enthusiasm.</div>
 
 <div class="quote">What was and what is the reason for me, to play (and keep on playing)
 &quot;Gods of Enigma II&quot; again and again? First, there's the procedure how to
@@ -359,33 +363,33 @@
 And secondly, there's the contrast between the different rooms,
 concerning both the visual and the technical aspects. In my opinion the
 combination of these two aspects produces an attraction that I can not
-resist&mdash;I even don't want to.</div>
+resist&mdash;and I don't want to.</div>
 
 <div class="quote">However, the third room isn't my favourite one (it will probably
 never be), but it isn't that naaaasty anymore as it seemed to me the
-first time.  :-)</div>
+first time. :-) </div>
 
 <div class="author">dev0</div>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <p>
 Again this weird place. But this time you see something new. What is it? Oh, no!
 ANNA! She lies unconscious on the other side of the abyss behind a wall of
 blocks. You need to talk to her. But how can you do this? You need the last Holy
-Item. You jump one more time and then&hellip;
+Item. You jump one more time and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip; 
+Down, down, down &hellip; 
 </p>
 
 <p>
-Have the gods borrowed this beach from your memory? Anna and you&hellip; But there's no
+Have the gods borrowed this beach from your memory? Anna and you &hellip; But there's no
 time for pleasant memories. You have to find the Holy Ying Yang Symbol that
-would allow you to talk to her at a distance. You make a step and then&hellip;
+would allow you to talk to her at a distance. You make a step and then &hellip;
 </p>
 
 <p>
@@ -394,11 +398,11 @@
 
 <p>
 What's this? You find yourself in that dark weird place again, and there's one
-extralife less in your inventory. You jump again and then&hellip;
+extralife less in your inventory. You jump again and then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip;
+Down, down, down &hellip;
 </p>
 
 <div class="lotmpic">
@@ -415,159 +419,127 @@
 here, and there's no one in the world of marbles better at transformation than
 you. Carefully you move to the Oxyd, trying not to touch the bones, then to the
 line of warriors. A few movements with a sword and the way to the Holy Ying Yang
-is free. Then&hellip;
+is free. Then &hellip;
 </p>
 
 <p>
-Down, down, down&hellip; 
+Down, down, down &hellip; 
 </p>
 
 <p>
-Again the Place of Entrances&hellip; You take the Ying Yang symbol and whisper, &quot;Anna!
-Anna! Can you hear me?&quot; A slight movement at a distance&hellip; &quot;Anna! Please, touch
-one of the blocks, so that I could get past them.&quot; A slight movement again, and
+Again the Place of Entrances &hellip; You take the Ying Yang symbol and whisper, &quot;Anna!
+Anna! Can you hear me?&quot; A slight movement at a distance &hellip; &quot;Anna! Please, touch
+one of the blocks, so that I can get past them.&quot; A slight movement again, and
 one of the blocks suddenly turns black. The way is free! Never taking your eyes
-off Anna, you jump and&hellip;
+off Anna, you jump and &hellip;
 </p>
 
 
 <h4>The idea came to me while playing Hexen II</h4>
 
-<i>
+<p><i>
 We're very happy that we were finally able to get in contact with moonpearl
-again, and obviously she was quite happy as well &hellip;</i>
-</p>
+again, and obviously she was quite happy as well &hellip;
+</i></p>
 
-<div class="quote">
-Gotta write a word, now. I can do it. Despite my fingertips trembling over
+<div class="quote">Gotta write a word, now. I can do it. Despite my fingertips trembling over
 the keyboard, I can do it. Gotta talk about the making of &quot;Four Elemental
-Tests&quot; (or &quot;Gods of Enigma&quot;, or whatever you like to name it). I
-don't know what to say. I don't know where to start. So I guess I should start
-from the beginning.
-</div>
+Tests&quot; (or &quot;Gods of Enigma&quot;, or whatever you like to name it). I don't know
+what to say. I don't know where to start. So I guess I should start from the
+beginning.</div>
 
-<div class="quote">
-I was no more than 7 or 8 years old when I took my first steps into the
+<div class="quote">I was no more than 7 or 8 years old when I took my first steps into the
 world of Oxyd. I remember hurrying to finish hard landscapes because I had
 to go to school. I remember being stuck at the 11th landscape for ages,
 before I was offered the Oxyd book for my ninth birthday. I remember crying
-and bashing the old Atari's dusty mouse when I made a wrong step.
-</div>
+and bashing the old Atari's dusty mouse when I made a wrong step.</div>
 
-<div class="quote">
-I am now 22, and I've been through all Oxyd. I solved that damned 100th
+<div class="quote">I am now 22, and I've been through all Oxyd. I solved that damned 100th
 landscape at the age of 16, under the eyes of my German penpal. I've been
-through nearly all Oxyd magnum! as well&mdash;never solved the last landscape.
-:( I've also given a try to Per.Oxyd and Oxyd Extra!, though I liked the two
-of them less than the previous titles&mdash;although the graphics were enhanced,
+through nearly all &quot;Oxyd magnum!&quot; as well &mdash; never solved the last landscape.
+ :( I've also given a try to &quot;Per.Oxyd&quot; and &quot;Oxyd Extra!&quot;, though I liked the two
+of them less than the previous titles &mdash; although the graphics were enhanced,
 they cruelly lacked the colors which made the world of Oxyd bright and
-wonderful.
-</div>
+wonderful.</div>
 
-<div class="quote">
-I thought it was the end of the adventure. I thought I had seen it all and I
+<div class="quote">I thought it was the end of the adventure. I thought I had seen it all and I
 would never get to share my passion of Oxyd with other people. And then I
 found Enigma. I don't remember exactly how it happened, but I definitely
 recall the sparkles in my eyes at that time. I was thrilled to see such a
 perfect adaptation, which totally preserved the spirit of my old pal Oxyd.
 So, first, I would like to thank Enigma's developers deeply, for not only
 giving me the occasion to contribute (modestly) to their work, but also to
-return to my childhood's favourite hobby.
-</div>
+return to my childhood's favourite hobby.</div>
 
-<div class="quote">
-To my further delight, a level editor was featured with the game. It was a
+<div class="quote">To my further delight, a level editor was featured with the game. It was a
 real opportunity for me to give shape to the Oxyd landscapes I used to draw
-in my old exercise-books&mdash;normal children draw people and houses and
+in my old exercise-books &mdash; normal children draw people and houses and
 flowers, but I preferred Oxyd landscapes. ;) And so did I. I used
 BlackBallEd to write a bunch of landscapes, most of which look too &quot;mundane&quot;
 to me. I mean by that, most ideas have already been used in former
 landscapes, and it's really hard to come up with something brand new.
-However, I was determined to find a both fun and atypic concept. I gave much
+However, I was determined to find a both fun and atypical concept. I gave much
 thought to what a friend of mine once said: &quot;How can you identify yourself
 as a marble? What is your reason to be, your goal in life, aside from
 solving puzzles?&quot;. And that's how I started to make up some kind of
 storyline where the player would get to embody the saviour of a world ruined
 by evil deities, thus travelling through wrecked landscapes with lots of
-cracks, falls and breakable stones&hellip;
-</div>
+cracks, falls and breakable stones &hellip;</div>
 
-<div class="quote">
-The very idea of the Four Elemental Tests came to me while playing Hexen II
-&mdash;yes, play up to the third episode, and you'll see. ;) I meant to build a
-landscape which would require all of the player's skills to solve&mdash;that is
+<div class="quote">The very idea of the &quot;Four Elemental Tests&quot; came to me while playing Hexen II
+&mdash; yes, play up to the third episode, and you'll see. ;) I meant to build a
+landscape which would require all of the player's skills to solve &mdash; that is
 to say, swiftness, intelligence, dexterity and patience. Each of the four
 tests is mildly difficult, but the real challenge lies in succeding in all of
 them at once. To be honest I tried the landscape many times to make sure it
 was possible, but I've been through it only a very few times. So I thought
-it would be fine for the rest of the community, who seemed to enjoy very
-challenging landscapes. ;)
-</div>
+it would be fine for the rest of the community, which seems to enjoy very
+challenging landscapes. ;) </div>
 
-<div class="quote">
-I don't know how I came to write a second episode, but I do remember that I
+<div class="quote">I don't know how I came to write a second episode, but I do remember that I
 wanted to try something different. While the first one was merely a linear
 adventure, I wanted to make for the second one four separate quests to
 &quot;unlock&quot; the path in the very first screen. I also decided to change the
 content of the tests, but I had to keep them in association with their
 respective elements. What I'm quite proud of is that I've managed to stick
-to the four elements, while mixing the tests&mdash;thus, the Fire Quest includes
-intelligence, the Earth Quest dexterity&hellip;
-</div>
+to the four elements, while mixing the tests &mdash; thus, the Fire Quest includes
+intelligence, the Earth Quest dexterity &hellip;</div>
 
-<div class="quote">
-That was three years ago. And a few days ago I found an e-mail from Harry
+<div class="quote">That was three years ago. And a few days ago I found an e-mail from Harry
 among all the spam in my mailbox. :s At first I thought it was a joke. How
 could an old landscape of mine be voted level of the month? Then Harry
 pointed out that my work had also been awarded 2007's best level series.
-And, well&hellip;
-</div>
+And, well &hellip;</div>
 
-<div class="quote">
-IT'S JUST TOO MUCH FOR ME!!!
-</div>
+<div class="quote">IT'S JUST TOO MUCH FOR ME!!! ;) </div>
 
-<div class="quote">
-;)
-</div>
-
-<div class="quote">
-No, seriously, I haven't won an Oscar yet, but it means very much to me to
+<div class="quote">No, seriously, I haven't won an Oscar yet, but it means very much to me to
 be praised as a level designer. The little girl moving the mouse carefully
 with her right hand, while sucking her left thumb, has grown into someone
 with the power to create. Maybe it's the reason why I made a landscape
-requiring all the talents at once to defy the gods&hellip;
-</div>
+requiring all the talents at once to defy the gods &hellip;</div>
 
-<div class="quote">
-Anyway, I'll finish this (long) article with good news for my fan club. ;)
+<div class="quote">Anyway, I'll finish this (long) article with good news for my fan club. ;) 
 Indeed, the &quot;Four Elemental Tests&quot; are not an isolated work. The two
 landscapes were actually designed as steps of a whole trip through four
-realms&mdash;each associated with an element, as you can guess. I intended to
+realms &mdash; each associated with an element, as you can guess. I intended to
 make several &quot;Four Elemental Tests&quot;, which would appear at regular
 intervals, just like meditation landscapes. A few other landscapes of the
 series are already available, and all of your positive feedback gives me the
 urge to work on it again. Hopefully, I can design as much as possible of the
 series until the end of year. I'll try to keep in touch and give news this
-summer.
-</div>
+summer.</div>
 
-<div class="quote">
-Thanks for reading my article.
-</div>
+<div class="quote">Thanks for reading my article.</div>
 
-<div class="quote">
-Thanks for playing my landscapes.
-</div>
+<div class="quote">Thanks for playing my landscapes.</div>
 
-<div class="quote">
-Thanks for loving them.
-</div>
+<div class="quote">Thanks for loving them.</div>
 
-<div class="author">moonpearl</div>
+<div class="author">Moonpearl</div>
 
 <p>
-<i>moonpearl, thanks for creating them for us. And your idea to embed the level
+<i>Moonpearl, thanks for creating them for us. And your idea to embed the level
 into a full storyline has since been used by many other authors as well, with
 resounding success, like in the case of &quot;The Aztec Temple&quot; and lots of
 levels in our next release of Enigma. We all look forward to your next levels!
@@ -580,7 +552,7 @@
 </div>
 
 <p>
-Down, down, down&hellip; 
+Down, down, down &hellip; 
 </p>
 
 <p>

Added: feature_branches/hp_lotm/input/lotm/lotm_200807_de.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807_de.html	2008-07-12 16:37:18 UTC (rev 1233)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807_de.html	2008-07-12 21:44:05 UTC (rev 1234)
@@ -0,0 +1,302 @@
+<div class="lotm">
+$$lotm_header$$
+
+  <h3 class="lotm">
+    <span class="date">Juli 2008: </span>
+    &quot;Gods Of Enigma II&quot; von moonpearl
+  </h3>
+
+<p>Hallo, kleine Kugel. Du hast dich ziemlich ver&auml;ndert. Du siehst m&uuml;de und ersch&ouml;pft aus. Dein einst schwarz schimmernder Lack ist verstaubt und zerkratzt. Aber ich erkenne dich wieder. Ich habe deinen Weg verfolgt. Du bist an Hunderten und Aberhunderten verschiedener Orte gewesen. Du hast die entlegendsten Winkel der mannigfaltigen Welten Enigmas unz&auml;hlige Male erforscht. Du hast einfache One-Screener erkundet und die unendlichen Weiten der Elaborate Welten durchstreift. Du bist in den pr&auml;chtigen Hallen des sagenumwobenen Goldenen Tempels umhergewandelt und hast dich an d&uuml;stere Orte verirrt, vor langer Zeit verlassen und nun dicht mit Staub bedeckt, an denen praktisch jeder Schritt dein letzter sein kann.</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_g.png" alt="Level of the Month" border="0">
+<div class="imagetitle">Enigma V # 69</div>
+</div>
+
+<table cellpadding="0" cellspacing="1" class="statistics">
+<caption class="normalcaption">Einige Rekorde vom Juni 2008:</caption>
+<colgroup>
+    <col width="80">
+    <col width="160">
+</colgroup>
+    <tr><td class="num">2:08</td>
+        <td class="left">Moneymaker</td></tr>
+    <tr><td class="num">2:18</td>
+        <td class="left">Stupid</td></tr>
+    <tr><td class="num">2:54</td>
+        <td class="left">dev0</td></tr>
+    <tr><td class="num">3:18</td>
+        <td class="left">daydreamer</td></tr>
+    <tr><td class="num">3:47</td>
+        <td class="left">ryujun</td></tr>
+    <tr><td class="num">4:10</td>
+        <td class="left">Ronald</td></tr>
+    <tr><td class="num">4:17</td>
+        <td class="left">Craven</td></tr>
+    <tr><td class="num">4:27</td>
+        <td class="left">Taztunes</td></tr>
+    <tr><td class="num">4:30</td>
+        <td class="left">Django</td></tr>
+    <tr><td class="num">4:31</td>
+        <td class="left">Ludmian</td></tr>
+    <tr><td class="num">4:36</td>
+        <td class="left">Alex</td></tr>
+    <tr><td class="num">4:47</td>
+        <td class="left">Safalra</td></tr>
+    <tr><td class="num">5:08</td>
+        <td class="left">JuSt</td></tr>
+    <tr><td class="num">5:12</td>
+        <td class="left">U-Punkt</td></tr>
+    <tr><td class="num">5:30</td>
+        <td class="left">dpl</td></tr>
+    <tr><td class="num">5:57</td>
+        <td class="left">shoki</td></tr>
+    <tr><td class="num">6:18</td>
+        <td class="left">HuB34</td></tr>
+    <tr><td class="num">7:04</td>
+        <td class="left">Malla</td></tr>
+    <tr><td class="num">7:06</td>
+        <td class="left">Hans-HD</td></tr>
+    <tr><td class="num">7:39</td>
+        <td class="left">Lukas</td></tr>
+    <tr><td class="num">8:00</td>
+        <td class="left">Kosby</td></tr>
+    <tr><td class="num">8:22</td>
+        <td class="left">Gorn</td></tr>
+    <tr><td class="num">9:57</td>
+        <td class="left">para_doks</td></tr>
+    <tr><td class="num">10:01</td>
+        <td class="left">Daisy</td></tr>
+    <tr><td class="num">10:03</td>
+        <td class="left">AlephD</td></tr>
+    <tr><td class="num">10:18</td>
+        <td class="left">ABS</td></tr>
+    <tr><td class="num">10:51</td>
+        <td class="left">Ale</td></tr>
+    <tr><td class="num">11:16</td>
+        <td class="left">serpent+Tobias</td></tr>
+    <tr><td class="num">12:59</td>
+        <td class="left">Andy</td></tr>
+    <tr><td class="num">13:30</td>
+        <td class="left">Iceshark7</td></tr>
+    <tr><td class="num">15:28</td>
+        <td class="left">Tarim</td></tr>
+    <tr><td class="num">15:30</td>
+        <td class="left">Freshman</td></tr>
+    <tr><td class="num">15:43</td>
+        <td class="left">biotopa</td></tr>
+    <tr><td class="num">17:13</td>
+        <td class="left">mrduke</td></tr>
+    <tr><td class="num">17:20</td>
+        <td class="left">fabian</td></tr>
+    <tr><td class="num">23:03</td>
+        <td class="left">mecke</td></tr>
+</table>
+
+<p>Du bist &uuml;ber Abgr&uuml;nde geflogen, mit nichts als einem Regenschirm als Schutz, und bist mit &auml;usserster Vorsicht &uuml;ber rutschige Eisfl&auml;chen gerollt. Du bist mitten unter die Diebe Enigmas geraten, erb&auml;rmliche Kreaturen, deren einzige Daseinsfreude darin besteht, arglose Murmeln um ihr letztes Hab und Gut zu bringen, und sei es noch so wertlos. Du bist in Labyrinthen aus den &Uuml;berresten l&auml;ngst verblichener Abenteurer umhergewandert, deren rastlose Seelen danach lechzen, alles Lebendige, was ihnen zu nahe kommt, zu packen und zu sich her&uuml;berzuziehen, und so die Zahl der Ihren best&auml;ndig zu vermehren.</p>
+
+<p>Du warst ein Sysiphos, der sich abgem&uuml;ht hat, den K&ouml;rper seines bewusstlosen Reisegef&auml;hrten die steilsten H&auml;nge hinaufzutragen, und du warst ein Zeus, der seinen Begleiter zu den Oxydsteinen getrieben hat, indem er ihm mit Blitzschl&auml;gen aus einem magischen Gef&auml;&szlig;, gefunden irgendwo auf deinen Reisen, Todes&auml;ngste eingejagt hat. Du bist wahrlich ein guter Freund.</p>
+
+<p>Aber nun bist du ZU WEIT gegangen. Du hast dich in das Innerste Enigmas vorgewagt, an einen Ort, dem sich auch nur anzun&auml;hern, keinem Sterblichen gestattet ist (oder Unsterblichen in diesem Fall). Du bist zu der Wohnst&auml;tte der alten G&ouml;tter Enigmas gelangt, diesen h&ouml;chsten Wesenheiten, die vor vielen Millionen Jahren das Universum von Enigma erschaffen haben, und die nun &uuml;ber alle Welten darin herrschen. Wie schon fast vergessene Legenden &uuml;berliefern, wandelten sie einst mitten unter uns in den vielf&auml;ltigen Welten Enigmas umher, und jede Murmel konnte ihren Rat und Schutz erbitten. Aber selbst wenn ein Funken Wahrheit in diesen alten Geschichten stecken sollte, diese Zeiten sind l&auml;ngst vergangen. Schon vor langer Zeit haben sie sich aus den irdischen Gefilden Enigmas zur&uuml;ckgezogen, tief in ihrem Stolz verletzt durch Murmeln, die ihre Gro&szlig;z&uuml;gigkeit schamlos ausgenutzt hatten, und nun regieren sie &uuml;ber Enigma, ohn!
 e dass sie von sterblichen Murmeln wahrgenommen werden k&ouml;nnen.</p>
+
+<p>Ihre Namen sind seit langem vergessen, und selbst ihre Existenz wird von einigen Murmel-Heretikern angezweifelt (1), aber sie existieren. Sie leben in ihrer eigenen Welt, der sich keine Murmel n&auml;hern darf, und von dieser Welt aus bestimmen sie in aller Stille die Geschehnisse im Enigma-Universum, und die Geschicke aller Murmeln. Aber vor allem wachen sie dort &uuml;ber ihre unermesslich kostbaren Ur-Oxyds, die Ur-Ahnen aller Oxyds, Oxyd-Prototypen, von denen alle anderen Oxyds in den vielf&auml;ltigen Welten Enigmas abstammen.</p>
+
+<p>Viele wagemutige Murmeln haben sich auf die Reise gemacht, von dem Traum besessen, zumindest einen dieser Sch&auml;tze in ihren Besitz zu bringen - zur&uuml;ckgekehrt ist keine. Keine, bis auf dich. Ja, ich erinnere mich daran, dass du dich schon einmal hierher gewagt hast. Die G&ouml;tter haben dich mit ihrem Zorn bestraft, und die Kr&auml;fte der vier Elemente Enigmas auf dich losgelassen. Aber dann, beeindruckt von deinem Mut, deiner Geschicklichkeit und deiner Intelligenz, haben sie dir die Gnade gew&auml;hrt, noch einmal ungeschoren davonzukommen. Aber du scheinst nichts aus dieser Lektion gelernt zu haben, dass du dich abermals hierher traust. Bedenke, der Gro&szlig;mut der G&ouml;tter ist nicht grenzenlos. Doch dieses Mal werden sie dein Leben nicht verschonen.</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_e.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Fremdartige Farben, unheimliche Formen</div>
+</div>
+
+<p>Du findest dich an einem dunklen und d&uuml;steren Ort wieder, umgeben von fremdartigen Formen und Farben. Dir ist sofort klar, dass diese Formen und Farben nicht dazu bestimmt sind, von den Augen sterblicher Murmeln erblickt zu werden. Langsam erlangst du das Bewusstsein wieder. Behutsamen Schrittes machst du dich auf den Weg. Jeder Fehltritt hier wird unweigerlich den Sturz in die unergr&uuml;ndlichen Tiefen der Welt von Enigmas G&ouml;ttern zur Folge haben. Als ob sie dich verspotten wollten, haben die G&ouml;tter Schriftst&uuml;cke mit Hinweisen f&uuml;r dich bereitgelegt, ebenso wie einige Extra-Leben. Als ob sie sich ihrer Sache ganz sicher w&auml;ren, dass es selbst mit solcher Hilfe kein Entkommen von diesem Ort f&uuml;r dich gibt. Langsam gehst du weiter zum ersten Ausgang, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<h4>&quot;Zur&uuml;ck zum Anfangsraum&quot;</h4>
+
+<div class="quote">Eigentlich f&auml;ngt das Ganze ja harmlos an: ein Pfad mit einem einzigen m&ouml;glichen Ausgang. Also gut, frisch ans Werk, auf geht's und ab durch die Einbahnstra&szlig;e.</div>
+
+<div class="quote">Raum 1: Viele Dynamitstangen und viele zu sprengende Steine, das kann ja so schwer nicht sein &hellip; Bumm, bumm, bumm &hellip;  Hmmm &hellip;  Nein, so geht es nicht &hellip;  Also doch erst oben und dann unten, oder wie?</div>
+
+<div class="quote">Endlich habe ich den Hammer und st&uuml;rze mich in den Ausgang, nur um wieder am Startpunkt anzukommen. Erfreulicherweise er&ouml;ffnet sich jetzt jedoch auch ein zweiter Ausgang, und ich kann gl&uuml;cklicherweise feststellen, dass die Oxydsteine offenbar fest angeordnet sind.</div>
+
+<div class="quote">Raum 2: Oh weh &hellip; Viele l&ouml;chrige B&ouml;den, aber auch genug Holzsteine zum Br&uuml;ckenbau. Genug? Nun ja, wenn man nicht dauernd den falschen Weg w&auml;hlt oder abst&uuml;rzt, dann m&uuml;ssten sie eigentlich ausreichen. Aber den G&ouml;ttern sei Dank, da ist ja noch ein Seed, der kann ja als Ersatz dienen (oder sollte ich den wo anders brauchen??).</div>
+
+<div class="quote">Zur&uuml;ck aus dem Raum kam die Erkenntnis, dass er doch wo anders gebraucht wird &hellip;</div>
+
+<div class="quote">Raum 3: Erbarmen, ich hasse dieses &quot;mit_Feder_&uuml;ber_Abgr&uuml;nde_Gehoppse&quot;, noch dazu auch diesem rutschigen Untergrund. Entweder ich bin zu schnell und schie&szlig;e &uuml;ber das Ziel hinaus, oder ich bin zu langsam. Wie gut, dass ich zu diesem Zeitpunkt schon mehrere Extraleben hatte, die waren hier dringend von N&ouml;ten.</div>
+
+<div class="quote">Zur&uuml;ck im Startpunkt. Jetzt wird es langsam Zeit, die wei&szlig;e Kugel ins Spiel zu bringen. Dazu w&auml;re ein Ying-Yang recht n&uuml;tzlich &hellip;</div>
+
+<div class="quote">Raum 4: Ah, Ying-Yang in Sicht und endlich mal was einfaches. Die Ritter machen keinen grossen Eindruck, wozu hab ich denn einen Hammer, und auch ein Laser ist da, prima.</div>
+
+<div class="quote">&Auml;hhhh..  warum bin ich jetzt tot? Unsichtbare Totenkopfsteine, ach wie gemein. Wenn ich bloss eine Brille h&auml;tte! Aber da gab es doch eine M&ouml;glichkeit sich eine selbst zu machen, oder?</div>
+
+<div class="quote">Endlich am Ziel, Yin-Yang erobert, und alle Oxyds ge&ouml;ffnet!</div>
+
+<div class="quote">Alles in allem ein gelungener Level, der alles was Enigma (zumindest f&uuml;r mich) so spannend macht, vereint: Strategie, Geschicklichkeit und die M&ouml;glichkeiten der Umwandlung von Objekten.</div>
+
+<div class="quote">Danke an Enigmas G&ouml;tter und Gl&uuml;ckwunsch an Moonpearl!</div>
+
+<div class="author">JuSt</div>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Was ist dies hier f&uuml;r ein Ort? Die Umgebung macht keinen so d&uuml;steren Eindruck mehr. Du schaust dich noch einmal um. Ja, hier scheint es keine dieser verh&auml;ngnisvollen Abgr&uuml;nde zu geben. Die hellen W&auml;nde ringsumher vermitteln dir ein Gef&uuml;hl von Sicherheit, und das Knirschen des Sandes unter deinen Rundungen klingt aufmunternd. Du erinnerst dich an diese W&auml;nde und an diesen Sand. Du erinnerst dich an das Ger&auml;usch. Genauso hat es geklungen als du damals in diesen langen hei&szlig;en Sommern&auml;chten mit deiner geliebten Anna Whiteball den Strand entlanggerollt bist, und die W&auml;nde hier erinnern dich an die W&auml;nde in ihrem gem&uuml;tlichen kleinen Haus. Anna. Wo sie jetzt nur sein mag? Denkt sie noch an dich? F&uuml;r einige Momente l&auml;sst du dich von diesen Erinnerungen &uuml;berw&auml;ltigen, so traurig und doch so wohlig. Waren die G&ouml;tter Enigmas und ihr Gel&auml;chter, und diese Gef&uuml;hl als w&uuml;rde etwas mi!
 t eisigen Klauen dein Herz umklammern, etwa nichts als ein Traum? Ist dies hier Annas Haus? Bist du nicht einfach nur dort eingeschlafen, und erwachst nun aus einem Traum?</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_b.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Haben die G&ouml;tter diesen Ort <br> aus meinen Erinnerungen erschaffen?</div>
+</div>
+
+<p>Aber das Dokument in deiner Tasche macht all diese sch&ouml;nen Vorstellungen zunichte. Nein, du befindest dich immer noch in der Welt der G&ouml;tter Enigmas, und du musst dich auf die Suche nach diesem verfluchten Hammer machen. Sorgf&auml;ltig z&auml;hlst du die Dynamitstangen, die dir zur Verf&uuml;gung stehen. Eines ist gewiss, du musst mit &auml;u&szlig;erster Genauigkeit und Vorsicht zu Werke gehen. Auch nur eine Sprengung an der falschen Stelle, und du kannst alle Hoffnungen begraben, den Heiligen Hammer jemals zu finden, und du wirst bis ans Ende aller Zeiten als Gefangener in diesem Raum verweilen m&uuml;ssen. Aber zu guter Letzt gelingt dir das Unm&ouml;gliche: der Heilige Hammer ist dein! Wenn wahr ist, was alte Legenden besagen, dann hat ihn einstmals schon Jakob der Baumeister in den H&auml;nden gehalten, und damit mehr Welten aus dem Gestein g&ouml;ttlicher Ideen gehauen, als eine Murmel z&auml;hlen kann. Hastig zertr&uuml;mmerst du die verbliebenen Mauern!
 , ergreifst das Heilige Oxyd und eilst zur&uuml;ck an die Stelle, wo du den Hammer gefunden hast. Und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Und wieder bist du an diesem unheimlichen Ort. Dein Gep&auml;ck f&uuml;hlt sich schwer an. Du tastest in deine Taschen. Nat&uuml;rlich, der Hammer! Du eilst hin&uuml;ber zum Gem&auml;uer und zertr&uuml;mmerst es. Dahinter offenbart sich dir ein weiterer Durchgang &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_d.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Hier scheint seit ewigen Zeiten<br>keine Murmelseele mehr gewesen zu sein</div>
+</div>
+
+<p>Oh, was f&uuml;r ein depremierender Ort! Du dachtest, dass es keine &uuml;blere Gegend geben kann als diejenige, welche du gerade verlassen hast, aber dies hier &hellip; Es macht den Eindruck, als h&auml;tte seit Millionen von Jahren niemand mehr diesen Raum betreten. Hier ist es so kalt &hellip; So leer &hellip; So desolat &hellip; Die Br&uuml;cken zwischen den einzelnen Inseln hier sind so alt und br&uuml;chig, dass man es nicht wagen kann, sie mehr als einmal zu benutzen, und selbst diese Vorstellung bereitet dir Unbehagen. Aber, den G&ouml;ttern Enigmas sei Dank, es gibt auch einige alte und ein wenig morsche Holzbl&ouml;cke hier. Diese lassen sich als Baumaterial f&uuml;r neue Br&uuml;cken verwenden, auch wenn diese nur unwesentlich sicherer sein werden als die alten. Aber es gibt so wenige davon, dass man &auml;u&szlig;erst sparsam damit umgehen muss. Du schiebst den ersten Holzblock in den Abgrund, dann einen zweiten, und dann &hellip; Was ist das?! &hellip; Versu!
 ch's noch einmal!!!!!!! Ist dieses irrsinnige unmenschliche Gel&auml;chter, das du da vernimmst, Wirklichkeit oder beginnst du schon zu halluzinieren?! Doch du wei&szlig;t nur zu gut, was jetzt getan werden muss. Du warst schon oft gezwungen es zu tun, obwohl du dich niemals wirklich mit diesem Ritual anfreunden konntest. Du holst eines der Extra-Leben aus deiner Tasche und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Und schon wieder dieser unheimliche Ort &hellip; Diesmal wirst du alles mit erheblich gr&ouml;&szlig;erer Sorgfalt planen m&uuml;ssen. Du hast das Gef&uuml;hl, als sei eine Ewigkeit vergangen, bis dir auf einmal klar wird, wie du zu dem Heiligen Samen gelangen kannst. Diesmal darf es keinen Fehler in deinem Plan geben. Und dann &hellip; Der erste Block wandert in den Abgrund, dann der n&auml;chste, dann noch einer, bis schlie&szlig;lich &hellip; So, dies ist er also, der sagenumwobene Heilge Samen, von dem alle anderen Samen und Holzb&ouml;cke in allen Welten Enigmas abstammen? Er sieht genauso aus wie jeder andere Samen auch, den du auf deinen langen Reisen erblickt hast. Aber jetzt ist keine Zeit f&uuml;r philosophische Betrachtungen. Hastig ergreifst du das Oxyd, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Und ein weiteres Mal findest du dich an diesem schauerlichen Ort wieder, an dem sich die Eing&auml;nge zu den R&auml;umen befinden, an denen die Vier Heiligen Gegenst&auml;nde aufbewahrt werden. Du pflanzst den Heiligen Samen an der vorgesehenen Stelle und baust aus dem wie &uuml;blich in erstaunlicher Schnelligkeit gewachsenen Holzstein eine Br&uuml;cke zum Eingang in den dritten Raum, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_c.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Meine Freunde, ich kann flie-ie-ie-gen!</div>
+</div>
+
+<p>Es ist so kalt hier. Aber im Gegensatz zur modrigen Luft des vorigen Raumes ist die frostige Atemluft an diesem Ort irgendwie erfrischend. Sie schmeckt wie Gebirgsluft in einer k&uuml;hlen klaren Nacht. Du befindest dich auf einer wei&szlig; schimmernden Insel. Soweit deine Blicke reichen, gibt es hier nichts anderes zu sehen als &auml;hnliche Inseln. Die k&uuml;hle Nachtluft und das sanfte Schimmern der Inseln erf&uuml;llen dein Herz mit Frieden. Vor dir liegt der Weg zur Heiligen Sprungfeder, mit deren Hilfe sich der Legende nach die G&ouml;tter in die H&ouml;hen katapultiert haben, um die neu von ihnen erschaffenen Welten von oben herab betrachten zu k&ouml;nnen. Du atmest langsam und tief ein, und &hellip; W-z-h-h-h-h? Die erste Plattform. W-z-h-h-h-h? Die n&auml;chste. W-z-h-h-h-h? Und noch eine? Hier ist sie! Die legend&auml;re G&ouml;tterfeder! Du springst mit einigen S&auml;tzen zum Heiligen Oxyd, und dann wieder zur&uuml;ck zu der Stelle, an der du die Feder gef!
 unden hast, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<h4>Es erzeugt eine Spannung, der ich mich einfach nicht entziehen kann und will</h4>
+
+<div class="quote">Als ich das erste Mal in den dritten Raum kam, dachte ich: &quot;Oh nein!&quot;. Dieses &quot;Rumgeh&uuml;pfe&quot; ist mir n&auml;mlich ein Graus. Das bedeutet normalerweise: den Level einmal l&ouml;sen und dann: &quot;Auf Nimmer-Wiedersehen!&quot;. Tats&auml;chlich brauchte ich dann auch eine ganze Reihe an Versuchen, um endlich mit der letzten Murmel in den vierten Raum zu gelangen und dann dort [..] Ihr wisst schon was dann.</div>
+
+<div class="quote">Na ja, sp&auml;ter habe ich es doch noch geschafft. Wie gesagt, normalerweise bedeutet das f&uuml;r mich: &quot;Einmal und nie wieder&quot;. Aber was ist schon normal? Denn irgendwie war da noch etwas, was mich immer wieder verleitet hat, die G&ouml;tter erneut herauszufordern. Wohlgemerkt, ich habe es nie bereut, sondern vielmehr mit zunehmender Begeisterung genossen.</div>
+
+<div class="quote">Was war und ist der Grund, der mich &quot;Gods of Enigma II&quot; immer wieder spielen lie&szlig; bzw. l&auml;sst? Zuerst einmal der Ablauf, zwar linear, aber wiederholt zum Ausgangspunkt zur&uuml;ckkehrend. Dann der Kontrast zwischen den einzelnen R&auml;umen, sowohl optischer als auch technischer Art. Die Kombination dieser beiden Aspekte erzeugt meines Erachtens eine Spannung, der ich mich einfach nicht entziehen konnte und wollte.</div>
+
+<div class="quote">Zwar ist der dritte Raum nicht gerade mein Favorit (wird es wohl auch nie werden), aber soooo schlimm ist er nun auch nicht. :-)</div>
+
+<div class="author">dev0</div>
+
+<p>Wieder dieser unheimliche Ort. Doch etwas hat sich ver&auml;ndert. Du siehst etwas, das zuvor nicht dagewesen war. Was ist das? Anna? Anna?! Um Himmels willen! ANNA! Sie liegt auf der anderen Seite des Abgrundes hinter einer Steinwand regungslos am Boden. Du musst mit ihr reden. Aber wie, wie soll das gehen? Du ben&ouml;tigst den vierten und letzten Heiligen Gegenstand. Einmal mehr benutzt du die Heilige Feder, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Haben die G&ouml;tter diesen Strand deinem Ged&auml;chtnis entnommen? Anna und du &hellip; Aber jetzt ist nicht der geeignete Zeitpunkt, um in s&uuml;&szlig;en Erinnerungen zu schwelgen. Du musst das Heilige Yin Yang Symbol ausfindig machen, mit dessen Hilfe du auch &uuml;ber gro&szlig;e Entfernungen hinweg mit Anna Kontakt aufnehmen kannst. Du machst einen Schritt nach vorne, und dann &hellip; 
+
+<p>Autsch!</p> 
+
+<p>Was war das? Du findest dich einmal mehr an diesem dunklen und unheimlichen Ort wieder, mit einem Extra-Leben weniger in der Tasche. Also, auf ein Neues. Ein weiterer Sprung &uuml;ber den Abgrund, und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_a.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Der Kampf mit den Untoten</div>
+</div>
+
+<p>Du bist wieder am Strand. Und diesmal bist du etwas vorsichtiger. Du erkennst, dass an diesem Ort der Weg ges&auml;umt ist mit den todbringenden Skeletten jener Abenteurer, die einst hier eingedrungen waren, um der Heiligen Oxyds habhaft zu werden. Und weit in der Ferne kannst du ihre Geister erblicken, eng aneinander gereiht versperren sie den Zugang zum Yin Yang Symbol. Zwei Gegenst&auml;nde sind erforderlich, um ans Ziel gelangen zu k&ouml;nnen. Einer, um die im Sand vergrabenen Skelette sehen zu k&ouml;nnen, und ein anderer, um diese Geistkrieger zu bek&auml;mpfen. Keiner von beiden befindet sich in deinem Besitz, aber zum Gl&uuml;ck ist hier ein Laser, und in der Welt der Murmeln gibt es keinen begnadeteren Transformationsmagier als dich. Mit &auml;u&szlig;erster Vorsicht bewegst du dich Richtung Oxyd, immer darauf bedacht nicht mit einem der Skelette in Ber&uuml;hrung zu kommen, und dann weiter zu der Reihe von Geistkriegern, die reglos dein Kommen erwarten. Ein pa!
 ar Schwerthiebe sp&auml;ter ist der Weg zum Heiligen Yin Yang frei. Und dann &hellip;</p>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Und wieder bist du an der St&auml;tte mit den vier Ausg&auml;ngen &hellip; Du nimmst das Yin Yang Symbol und fl&uuml;sterst hinein: &quot;Anna! Anna! Kannst du mich h&ouml;ren?&quot; Du kannst den Hauch einer Bewegung auf der anderen Seite erkennen &hellip; &quot;Anna! Bitte ber&uuml;hre einen der wei&szlig;en Steine, damit ich auf die andere Seite zu dir gelangen kann.&quot; Wieder eine leichte Bewegung, und einer der wei&szlig;en Steine wird mit einem Mal schwarz. Der Weg ist frei. Ohne deine Augen von Anna abwenden zu k&ouml;nnen, setzt du zum letzten Sprung an und &hellip;</p>
+
+<h4>Auf die Idee bin ich beim Spielen von Hexen II gekommen</h4>
+
+<p><i>
+Wir sind sehr gl&uuml;cklich dar&uuml;ber, dass wir es letztendlich doch geschafft haben, 
+den Kontakt mit Moonpearl wieder herzustellen, und es sieht ganz so aus, als ob 
+es ihr genauso ergeht &hellip;</i>
+</p>
+
+<div class="quote">Ich soll also etwas schreiben. Jetzt. Ich schaff' das schon. Meine Finger zittern zwar ganz sch&ouml;n &uuml;ber der Tastatur, aber ich bekomm' das schon hin. &Uuml;ber die Entstehung von &quot;Four Elemental Tests&quot; soll ich also berichten (oder &quot;Gods of Enigma&quot; oder wie auch immer ihr ihn sonst so nennen m&ouml;gt). Ich wei&szlig; nicht, wo ich anfangen soll. Also denk' ich, es ist am besten, wenn ich ganz am Anfang beginne.</div>
+
+<div class="quote">Ich war etwa 7 oder 8 Jahre alt, als ich meine ersten Schritte in der Welt von Oxyd unternahm. Ich kann mich noch gut daran erinnern, dass ich mich morgens ziemlich beeilen musste, etwas schwierigere Landschaften zu l&ouml;sen, um nicht zu sp&auml;t zur Schule zu kommen. Und ich kann mich daran erinnern, dass ich f&uuml;r ewige Zeiten an der 11ten Landschaft h&auml;ngengeblieben bin, bis ich dann endlich zu meinem 9ten Geburtstag das Oxyd Buch geschenkt bekam. Und ich erinnere mich nur zu gut, wie ich vor Wut geschrien und mit der etwas verstaubten Maus des etwas betagten Ataris auf die Tischplatte gehauen habe, wenn ich mal wieder einen falschen Schritt gemacht hatte.</div>
+
+<div class="quote">Mittlerweile bin ich 22, und ich habe alle Oxydlevel durchgespielt. Im Alter von 16 Jahren hab' ich's endlich geschafft, diese verflixte Landschaft 100 zu l&ouml;sen, im Beisein meines deutschen Brieffreundes. Ich habe fast alle Landschaften von &quot;Oxyd magnum!&quot; hinbekommen - bis auf die letzte. :( Ich hab' danach auch &quot;Per.Oxyd&quot; und &quot;Oxyd Extra!&quot; ausprobiert, obwohl ich sagen muss, dass mir diese zwei nicht mehr so gut gefallen haben, wie ihre beiden Vorg&auml;nger - zwar waren die Grafiken deutlich verbessert worden, aber es mangelte ihnen an den Farben, welche die Welt von Oxyd so hell und wundervoll gemacht hatten.</div>
+
+<div class="quote">Ich dachte, dass w&auml;re das Ende des Abenteuers. Ich dachte, dass war's, und ich w&uuml;rde niemals die Chance bekommen, meine Leidenschaft f&uuml;r Oxyd mit anderen teilen zu d&uuml;rfen. Und dann hab' ich Enigma entdeckt. Ich weiss nicht mehr genau wie's passiert ist, aber ich kann mich definitiv noch daran erinnern, dass meine Augen damals vor Freude Funken verspr&uuml;ht haben. Ich war einfach hingerissen davon, eine so perfekte Bearbeitung von Oxyd zu sehen, die in vollkommener Weise die Stimmung meines Spielgef&auml;hrten aus fr&uuml;hen Kindheitstagen eingefangen hatte. Daher m&ouml;chte ich mich zu allererst aus tiefstem Herzen bei den Entwicklern von Enigma bedanken, nicht nur daf&uuml;r dass sie mir die Gelegenheit gegeben haben, (im Rahmen meiner bescheidenen M&ouml;glichkeiten) etwas zu ihrem Werk beitragen zu d&uuml;rfen, sondern auch daf&uuml;r, mich wieder dem Lieblingshobby meiner Kindheit zuwenden zu k&ouml;nnen.</div>
+
+<div class="quote">Zu meiner weiteren Freude war ein Leveleditor Bestandteil des Spiels. Das war endlich die richtige Gelegenheit, den Oxydlandschaften Gestalt zu geben, die ich fr&uuml;her so gerne in meine Schulhefte gemalt habe - normale Kinder malen Menschen und H&auml;user und Blumen, aber ich mochte Oxydlandschaften lieber. ;) Also hab ich mich ans Werk gemacht. Ich habe mit Hilfe von BlackBallEd einen ganzen Haufen Landschaften entworfen, aber die meisten davon kommen mir irgenwie &quot;mond&auml;n&quot; vor. Ich will damit sagen, dass die meisten Ideen schon in fr&uuml;heren Landschafteren verwendet worden waren, und es ist ganz sch&ouml;n schwierig, mit irgend etwas vollkommen Neuem aufwarten zu k&ouml;nnen. Wie auch immer, ich war entschlossen dazu, ein Konzept zu entwickeln, dass ungew&ouml;hnlich sein, aber auch Spa&szlig; machen sollte. Ich musste lange daran denken, was ein Freund von mir einmal gesagt hatte: &quot;Wie kannst du dich nur mit einer Murmel ident!
 ifizieren? Hat das Leben keinen anderen Sinn mehr f&uuml;r dich? Gibt es keine anderen Ziele als R&auml;tsel zu l&ouml;sen?&quot; Und so kam es also, dass ich anfing so etwas wie eine Geschichte zusammenzustellen, in welcher der Spieler den Retter einer von b&ouml;sartigen Gottheiten zerst&ouml;rten Welt verk&ouml;rpern soll, und dabei durch verw&uuml;stete Landschaften reisen muss, mit Spalten und Rissen, tiefen Abgr&uuml;nden und zerbrechlichen Steinen &hellip;</div>
+
+<div class="quote">Die Grundidee zu den &quot;Four Elemental Tests&quot; kam mir beim Spielen von Hexen II - ja, spielt's mal durch bis zur dritten Episode, dann werdet ihr sehen, was ich meine. ;) Ich hatte vor, eine Landschaft zu bauen, bei welcher der Spieler gefordert sein sollte, alle seine F&auml;higkeiten unter Beweis stellen zu m&uuml;ssen, um sie l&ouml;sen zu k&ouml;nnen - das heisst genau gesagt: Schnelligkeit, Intelligenz, Geschicklichkeit und Geduld. Jeder der vier Tests ist nur m&auml;&szlig;ig schwierig, aber die wahre Herausforderung liegt darin, sie alle vier in einem Versuch zu bew&auml;ltigen. Um ehrlich zu sein, ich hab's unz&auml;hlige Male probiert die Landschaft durchzuspielen, um sicher zu stellen, dass sie auch l&ouml;sbar ist, aber gelungen ist mir das nur ganz selten. Also hab' ich angenommen, das es bestimmt genau das Richtige f&uuml;r den Rest der Gemeinschaft ist, dem besonders schwierige Landschaften besonders viel Spass zu machen scheint.  ;)!
  </div>
+
+<div class="quote">Ich wei&szlig; nicht mehr genau, wie ich auf die Idee kam, eine zweite Episode zu schreiben, aber ich kann mich daran erinnern, dass ich etwas Anderes ausprobieren wollte. W&auml;hrend die erste lediglich ein lineares Abenteuer war, hatte ich vor, f&uuml;r die zweite Episode vier separate Quests zu entwerfen, um den Pfad im allerersten Raum frei zu machen. Au&szlig;erdem beschloss ich, den Inhalt der vier Tests zu ver&auml;ndern, aber ich musste darauf achten, die Assoziation mit den jeweiligen Elementen beizubehalten. Worauf ich ziemlich stolz bin ist, dass es mir gelungen ist, beim Mixen der einzelnen Tests nicht mit den vier Elementen durcheinander zu geraten - im Feuer-Quest ist also Intelligenz gefragt, im Erd-Quest Geschicklichkeit &hellip;</div>
+
+<div class="quote">Mittlerweile sind drei Jahre vergangen. Vor ein paar Tagen hab' ich unter all dem Spam in meiner Mailbox eine Mail von Harry entdeckt. Zuerst dachte ich, das w&auml;re ein Scherz. Wie sollte eine alte Landschaft von mir zum Level des Monats gew&auml;hlt worden sein? Dann hat Harry noch darauf hingewiesen, dass mein Werk zudem 2007 den Preis als beste Level-Serie gewonnen hat. Und, Himmel, was soll ich sagen &hellip;</div>
+
+<div class="quote">DAS IST ECHT ZU VIEL F&Uuml;R MICH!!!</div>
+
+<div class="quote">;)</div>
+
+<div class="quote">Nein, ganz im Ernst, ich habe zwar bisher noch keinen Oskar gewonnen, aber als Level Designer ausgezeichnet zu werden, bedeutet mir wirklich sehr viel. Das kleine M&auml;dchen, das die Maus behutsam mit der rechten Hand umhergeschoben hat, w&auml;hrend sie am linken Daumen genuckelt hat, ist zu jemandem mit Schaffenskraft herangewachsen. Mag sein, dass dies der Grund daf&uuml;r ist, dass ich eine Landschaft erschaffen habe, in der alle Talente auf einmal erforderlich sind, um die G&ouml;tter herauszufordern &hellip;</div>
+
+<div class="quote">Wie dem auch sei, ich beende diesen (doch ziemlich lang gewordenen) Beitrag mit einer guten Nachricht f&uuml;r meinen &quot;Fanclub&quot; ;) In der Tat sind die &quot;Four Elemental Tests&quot; kein isoliertes Werk. Die beiden Landschaften waren eigentlich als Etappen einer Reise durch vier Reiche angelegt - jedes mit einem der vier Elemente verkn&uuml;pft, wie ihr euch sicher schon denken k???nnt. Ich hatte geplant, mehrere dieser &quot;Four Elemental Tests&quot; zu gestalten, die dann in bestimmten Intervallen erscheinen sollten, &auml;hnlich wie Meditatioslandschaften. Ein paar dieser Landschaften habe ich bereits fertiggestellt, und all dieser positive Feed-back spornt mich an, die Arbeit daran wieder aufzunehmen. Ich hoffe, dass ich bis zum Jahresende soviel wie nur irgend m&ouml;glich von der Serie gestalten kann. Ich versuche, in Kontakt zu bleiben, und noch diesen Sommer weitere Neuigkeiten pr&auml;sentieren zu k&ouml;nnen.</div>
+
+<div class="quote">Danke, dass ihr diesen Beitrag gelesen habt.</div>
+
+<div class="quote">Danke, dass ihr meine Landschaften gespielt habt.</div>
+
+<div class="quote">Danke, dass ihr sie m&ouml;gt.</div>
+
+<div class="author">Moonpearl</div>
+
+<p><i>
+Und wir bedanken uns bei dir, Moonpearl, dass du sie f&uuml;r uns geschaffen hast. 
+Deine Idee, eine Landschaft mit einer Geschichte als Leitmotiv zu versehen, 
+ist seitdem auch von zahlreichen anderen Autoren aufgegriffen worden, mit widerhallendem
+Erfolg wie zum Beispiel bei &quot;The Aztec Temple&quot; und bei vielen anderen 
+Leveln, die mit der n&auml;chsten Ausgabe von Enigma erscheinen werden. Und wir freuen uns alle schon
+auf deine kommenden Level!  :-)
+</i></p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200807_f.jpg" alt="Level of the Month" border="0">
+<div class="imagetitle">Der letzte Sprung</div>
+</div>
+
+<p>Hinab, hinab, hinab &hellip;</p>
+
+<p>Man erz&auml;hlt sich, die Abgr&uuml;nde in der Welt der G&ouml;tter seien unergr&uuml;ndlich, und dass man eine Million Jahre fallen k&ouml;nne, ohne den Boden zu erreichen. Du hast dich immer gefragt, ob an diesen Erz&auml;hlungen etwas Wahres ist. Nun hast du die Gelegenheit es herauszufinden.</p>
+
+<p>BWA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA-HA!!!!!!!!</p>
+
+<p>(1) Laut einem alten Schriftst&uuml;ck, das der legend&auml;re Abenteurer Moneymaker unter einem Cham&auml;leon-Stein entdeckt hat, als er einen unbeabsichtigte Abk&uuml;rzung untersuchte, waren die Namen zumindest einiger dieser G&ouml;tter Daniel, Andreas, Ronald und Raoul. Aber die Authentizit&auml;t dieses Dokuments wird immer noch weltweit in den Kreisen gelehrter Murmeln disputiert.</p>
+
+<p><i>Ludmian Sedai</i></p>
+
+<p>Liebe Leserin, lieber Leser, wir haben ein st&auml;ndiges Bed&uuml;rfnis nach
+Ihren Artikeln &uuml;ber Enigmas gro&szlig;e Levels. Bitte, schicken Sie uns
+jeden Artikel, sogar Kommentare, die Sie geschrieben haben, an:</p>
+<pre>
+<a href="mailto:enigma-devel at nongnu.org">enigma-devel at nongnu.org</a>
+</pre>
+<p>Wir sind besonders interessiert an Artikeln &uuml;ber die folgenden Levels:
+</p>
+<ul>
+<li>&quot;Plan Ahead&quot; von Jacob Scott</li>
+<li>&quot;River of Challenges&quot; von Lukas Sch&uuml;ller</li>
+<li>&quot;Procrustes&quot; von Andreas Lochmann</li>
+</ul>
+<p>Vielen Dank im voraus, nur Ihre Mithilfe kann den LdM am Leben erhalten!
+</p>
+<p><i>Ihr Enigma-Team</i></p>
+
+</div>


Property changes on: feature_branches/hp_lotm/input/lotm/lotm_200807_de.html
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html	2008-07-12 16:37:18 UTC (rev 1233)
+++ feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html	2008-07-12 21:44:05 UTC (rev 1234)
@@ -454,6 +454,7 @@
 
 <h4>???? ?????? ?????? ??? ? ??????, ????? ? ?????? ? Hexen II</h4>
 
+<p>
 <i>
 ?? ????? ?????????, ??? ??? ??????? ????? ????????? ? moonpearl, ?
 ??????, ??? ??? ???? ????????? &hellip;</i>



From raoul at mail.berlios.de  Sun Jul 13 13:57:32 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Sun, 13 Jul 2008 13:57:32 +0200
Subject: [Enigma-game-svn] r1235 - team_levelpacks/team_test_new_api
Message-ID: <200807131157.m6DBvW4L013424@sheep.berlios.de>

Author: raoul
Date: 2008-07-13 13:57:32 +0200 (Sun, 13 Jul 2008)
New Revision: 1235

Added:
   team_levelpacks/team_test_new_api/raoulT06_1.xml
Modified:
   team_levelpacks/team_test_new_api/raoulT05_1.xml
Log:
-> Testlevel for strips with friction on fl-space


Modified: team_levelpacks/team_test_new_api/raoulT05_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-12 21:44:05 UTC (rev 1234)
+++ team_levelpacks/team_test_new_api/raoulT05_1.xml	2008-07-13 11:57:32 UTC (rev 1235)
@@ -2,7 +2,7 @@
 <el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
   <el:protected>
     <el:info el:type="level">
-      <el:identity el:title="Testlevel Strips" el:subtitle="" el:id="raoult05"/>
+      <el:identity el:title="Test Strips" el:subtitle="" el:id="raoult05"/>
       <el:version el:score="1" el:release="1" el:revision="2" el:status="experimental"/>
       <el:author  el:name="Raoul Bourquin" el:email="raoul at users.berlios.de"/>
       <el:copyright>Copyright ? 2008 Raoul Bourquin</el:copyright>

Added: team_levelpacks/team_test_new_api/raoulT06_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT06_1.xml	2008-07-12 21:44:05 UTC (rev 1234)
+++ team_levelpacks/team_test_new_api/raoulT06_1.xml	2008-07-13 11:57:32 UTC (rev 1235)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Spacestrips" el:subtitle="" el:id="raoult06"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Raoul Bourquin" el:email="raoul at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Raoul Bourquin</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+ti[" "] = {"fl-space"}
+ti["*"] = {"fl-wood"}
+
+ti["a"] = {"it_strip", friction=1, mousefactor=1}
+
+ti["b"] = {"it_strip_w", friction=1, mousefactor=1}
+ti["c"] = {"it_strip_s", friction=1, mousefactor=1}
+ti["d"] = {"it_strip_e", friction=1, mousefactor=1}
+ti["e"] = {"it_strip_n", friction=1, mousefactor=1}
+
+ti["f"] = {"it_strip_sw", friction=1, mousefactor=1}
+ti["g"] = {"it_strip_ew", friction=1, mousefactor=1}
+ti["h"] = {"it_strip_es", friction=1, mousefactor=1}
+ti["i"] = {"it_strip_nw", friction=1, mousefactor=1}
+ti["j"] = {"it_strip_ns", friction=1, mousefactor=1}
+ti["k"] = {"it_strip_ne", friction=1, mousefactor=1}
+
+ti["m"] = {"it_strip_esw", friction=1, mousefactor=1}
+ti["n"] = {"it_strip_nsw", friction=1, mousefactor=1}
+ti["o"] = {"it_strip_new", friction=1, mousefactor=1}
+ti["p"] = {"it_strip_nes", friction=1, mousefactor=1}
+
+ti["q"] = {"it_strip_nesw", friction=1, mousefactor=1}
+
+ti["w"] = {"st-wood"}
+ti["v"] = {"st-plain_move"}
+
+ti["A"] = {"#ac-blackball"} .. ti["*"]
+
+w, h = wo(ti, " ", {
+"hggggggggggggggggggf",
+"j  c     c     c  Aj",
+"j dqb   dqb   dqb  j",
+"j  e     e     e   j",
+"j                  j",
+"j hgf   hgf   hgf  j",
+"j jaj   jaj   jaj  j",
+"j kgi   kgi   kgi  j",
+"j                  j",
+"j hmf   hmf   hmf  j",
+"j pqn   pqn   pqn  j",
+"j koi   koi   koi  j",
+"kggggggggggggggggggi"
+})
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: team_levelpacks/team_test_new_api/raoulT06_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native



From andreasl at mail.berlios.de  Sun Jul 13 22:30:34 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Sun, 13 Jul 2008 22:30:34 +0200
Subject: [Enigma-game-svn] r1236 - in homepage: images/lotm input/lotm
Message-ID: <200807132030.m6DKUYov004210@sheep.berlios.de>

Author: andreasl
Date: 2008-07-13 22:30:05 +0200 (Sun, 13 Jul 2008)
New Revision: 1236

Added:
   homepage/images/lotm/lotm_200807.png
   homepage/images/lotm/lotm_200807_a.jpg
   homepage/images/lotm/lotm_200807_b.jpg
   homepage/images/lotm/lotm_200807_c.jpg
   homepage/images/lotm/lotm_200807_d.jpg
   homepage/images/lotm/lotm_200807_e.jpg
   homepage/images/lotm/lotm_200807_f.jpg
   homepage/images/lotm/lotm_200807_g.png
   homepage/input/lotm/lotm_200807.html
   homepage/input/lotm/lotm_200807_de.html
   homepage/input/lotm/lotm_200807_ru.html
Modified:
   homepage/images/lotm/lotm-history.png
   homepage/input/lotm/lotm_archive_data.lua
Log:
Homepage:
 - Merged LotM-feature branch back to homepage.
Todo:
 - Upload


Modified: homepage/images/lotm/lotm-history.png
===================================================================
(Binary files differ)

Copied: homepage/images/lotm/lotm_200807.png (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807.png)

Copied: homepage/images/lotm/lotm_200807_a.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_a.jpg)

Copied: homepage/images/lotm/lotm_200807_b.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_b.jpg)

Copied: homepage/images/lotm/lotm_200807_c.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_c.jpg)

Copied: homepage/images/lotm/lotm_200807_d.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_d.jpg)

Copied: homepage/images/lotm/lotm_200807_e.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_e.jpg)

Copied: homepage/images/lotm/lotm_200807_f.jpg (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_f.jpg)

Copied: homepage/images/lotm/lotm_200807_g.png (from rev 1235, feature_branches/hp_lotm/images/lotm/lotm_200807_g.png)

Copied: homepage/input/lotm/lotm_200807.html (from rev 1235, feature_branches/hp_lotm/input/lotm/lotm_200807.html)

Copied: homepage/input/lotm/lotm_200807_de.html (from rev 1235, feature_branches/hp_lotm/input/lotm/lotm_200807_de.html)

Copied: homepage/input/lotm/lotm_200807_ru.html (from rev 1235, feature_branches/hp_lotm/input/lotm/lotm_200807_ru.html)

Modified: homepage/input/lotm/lotm_archive_data.lua
===================================================================
--- homepage/input/lotm/lotm_archive_data.lua	2008-07-13 11:57:32 UTC (rev 1235)
+++ homepage/input/lotm/lotm_archive_data.lua	2008-07-13 20:30:05 UTC (rev 1236)
@@ -139,28 +139,38 @@
   position_num   = "3066"
 }
 
+lotm_archive_data[16] = {
+  date           = { month = 7, year = 2008 },
+  chronological  = 16,
+  name           = "Gods of Enigma II",
+  author         = "moonpearl",
+  position       = "V/69",
+  position_num   = "5069"
+}
+
 -- LotM variable data
 -- format: Level Title, current_rating, current_votes, additional text
 
-lotm_rating(    "Island Labyrinth",  9.31,  13,  "")
-lotm_rating(  "Pneumatic Delivery",  8.19,  16,  "")
+lotm_rating(    "Island Labyrinth",  9.31,  13,  "(1 down)")
+lotm_rating(  "Pneumatic Delivery",  8.19,  16,  "(1 up)")
 lotm_rating(    "The Aztec Temple",  9.00,  11,  "")
-lotm_rating("Labyrinth of Puzzles",  8.82,  17,  "")
-lotm_rating(           "Elaborate",  8.50,  10,  "")
+lotm_rating("Labyrinth of Puzzles",  8.82,  17,  "(1 up)")
+lotm_rating(           "Elaborate",  8.64,  11,  "(2 up)")
 lotm_rating(             "Houdini",  9.28,   8,  "")
-lotm_rating(           "Tool Time",  8.52,  21,  "")
+lotm_rating(           "Tool Time",  8.17,  23,  "(5 down)")
 lotm_rating(         "Quadropolis",  9.20,  10,  "")
-lotm_rating(      "Big Adventures",  8.42,  24,  "")
-lotm_rating(      "Temple of Gold",  9.29,   7,  "")
-lotm_rating(      "Puzzle Puzzles",  8.83,   6,  "")
-lotm_rating(      "Psycho Pushing",  8.18,  11,  "")
+lotm_rating(      "Big Adventures",  8.42,  24,  "(1 up)")
+lotm_rating(      "Temple of Gold",  9.38,   8,  "(1 up)")
+lotm_rating(      "Puzzle Puzzles",  8.63,   8,  "(2 down)")
+lotm_rating(      "Psycho Pushing",  8.18,  11,  "(1 up)")
 lotm_rating(  "Turnstiles for Two",  9.00,   5,  "")
-lotm_rating(     "Pleasure Garden",  8.43,  14,  "")
-lotm_rating(      "Block its way!",  8.00,  16,  "<b>(newcomer)</b>")
+lotm_rating(     "Pleasure Garden",  8.43,  14,  "(1 up)")
+lotm_rating(      "Block its way!",  8.00,  17,  "")
+lotm_rating(   "Gods of Enigma II",  8.35,  17,  "<b>(newcomer)</b>")
 
 -- Don't forget to adjust the archive dates:
 
-lotm_archive_data_from = { month = 5, year = 2008 }
+lotm_archive_data_from = { month = 6, year = 2008 }
 
 lotm_current = lotm_archive_data[table.getn(lotm_archive_data)]
 



From raoul at mail.berlios.de  Mon Jul 14 15:27:02 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Mon, 14 Jul 2008 15:27:02 +0200
Subject: [Enigma-game-svn] r1237 - trunk/doc/reference
Message-ID: <200807141327.m6EDR2dc015640@sheep.berlios.de>

Author: raoul
Date: 2008-07-14 15:27:01 +0200 (Mon, 14 Jul 2008)
New Revision: 1237

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
-> Fixed ref manual for pdf generation



Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2008-07-13 20:30:05 UTC (rev 1236)
+++ trunk/doc/reference/enigma-ref.texi	2008-07-14 13:27:01 UTC (rev 1237)
@@ -3862,14 +3862,13 @@
 
 @table @asis
 @item @b{Type:} @ @ number
- at item @b{Values:} @ @ 
+ at item @b{Values:} @ @ ?
 @item @b{Default:} @ @ factor - @code{nil}, xx, yy - @code{1}, xy, yx - @code{0}
 By default no hit factor is applied. The hit matrix is the neutral one.
 @item @b{Access:} @ @ read/write
 @item @b{Support:} @ @ by some stones
 @end table
 
-
 @node Common Messages
 @section Common Messages
 
@@ -4981,8 +4980,8 @@
 A vortex in state @samp{CLOSED}.
 @end table
 
-
 @end table
+ at end table
 
 @c ----------------- Wormhole Item -------------------- 
 @node it_wormhole
@@ -5009,31 +5008,26 @@
 destination.
 
 @table @asis
+
 @item @b{Attributes:}
 
 @table @asis
 @item @b{state}, @ @ @i{values}: @code{ON}, @code{OFF}; @ @ @i{default}: @code{OFF} @ @ @xref{state}
 The current force state - @samp{ON} for a force applying wormholes, @samp{OFF}
 for force neutral wormholes.
-
 @item @b{destination}, @ @ @i{values}: tokens or position; @ @ @i{default}: @code{nil} @ @ @xref{destination}
 The destination of the teleport given by an object or a position.
-
 @item @b{range} @ @ @i{values}: float number greater or equal 0; @ @ @i{default}: @code{10.0} @ @ @xref{WormholeRange}
 The distance up to which the wormhole applies forces to actors.
-
 @item @b{strength} @ @ @i{values}: float number; @ @ @i{default}: @code{+30.0} @ @ @xref{WormholeStrength}
 A scalar factor for the wormhole force. Positive numbers are attracting forces
 where as negative numbers are repelling forces.
- at end table
-
 @item @b{scissor}, @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{true}
 Rubberband cutting behaviour on teleporting.
-
 @item @b{interval} @ @ @i{values}: float number greater or equal 0; @ @ @i{default}: @code{0.0}
 The latency time after a teleport during which no further teleports take place.
+ at end table
 
-
 @item @b{Messages:}
 
 @table @asis
@@ -5642,14 +5636,15 @@
 @ref{it_extralife} can be configured not to show invisible actorimpulse stones.
 
 @table @asis
- at item @b{Attributes:}
 
+ at item @b{Attributes:}
 @table @asis
 @item @b{state}, @ @ @i{values}: @code{ON}, @code{OFF}; @ @ @i{default}: @code{OFF}; @i{access}: @code{read only}  @ @ @xref{state}
 Current activity state of the death stone. A stone is usually activated by
 a hitting actor.
 @item @b{invisible} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 Invisible death stones show only when hit by an actor or been toggled by a message.
+ at end table
 
 @item @b{Messages:}
 @table @asis
@@ -5661,7 +5656,6 @@
 @item @b{Action:} none
 
 @item @b{Variants:}
-
 @table @asis
 @item @b{st_death}: invisible = @code{false}
 @item @b{st_death_invisible}: invisible = @code{true}
@@ -5971,7 +5965,7 @@
 
 with @samp{base} the value of the @samp{interval}-attribute,
 @samp{floor_friction} the friction of the floor below the light passenger,
-and @floor{floor_gradient} the parallel part of the force of the floor,
+and @samp{floor_gradient} the parallel part of the force of the floor,
 i.e., the sum of gradient-force and @code{force_x/y}-attributes.
 
 The light passenger can be switched on and off by messages (see below), and 
@@ -6895,7 +6889,7 @@
 ti[" "] = @{"fl_plank"@}
 ti["c"] = @{"it_crack3", brittleness=0@}
 ti["^"] = @{"st_oneway_n"@}
-ti["1"] = @{"ac_marble_black", 0, 0.5}
+ti["1"] = @{"ac_marble_black", 0, 0.5@}
 
 ti["x"] = @{"st_oxyd", "island#"@}
 ti["y"] = @{"st_oxyd", "left#"@}
@@ -7260,7 +7254,7 @@
 "         ~~......p..",
 "         ~~.........",
 "         ~~........."
-})
+@})
 @end example
 
 Note that in this example we can use @samp{p} as key as well as superkey. This
@@ -7422,7 +7416,7 @@
 @example
 ti["F"] = @{"st_floppy", target="@@door#*"@}
 ti["B"] = @{"st_blocker", name="door#"@}
-wo{ti, " ", {
+wo@{ti, " ", @{
 "       B            ",
 "       FB#####FB####",
 "       # F    B     ",
@@ -7442,7 +7436,7 @@
 ti["B"] = @{"st_blocker", name="doorA#"@}
 ti["f"] = @{"st_floppy", target="@@doorB#*"@}
 ti["b"] = @{"st_blocker", name="doorB#"@}
-wo{ti, " ", {
+wo@{ti, " ", @{
 "       b            ",
 "       fB#####fb####",
 "       # F    B     ",
@@ -7567,6 +7561,7 @@
 The key string that should be resolved
 @item @i{x}, @i{y}
 The position of the tile.
+ at end table
 
 @item @b{Details:}
 Based on the given parameters, the key, the position, the resolver parameters
@@ -7629,7 +7624,8 @@
     end
     return tile
 end
- at end
+ at end example
+ at end table
 
 @node Resolver Finalizer
 @subsection Resolver Finalizer
@@ -10142,7 +10138,7 @@
 @item on
 as usual
 @item target, action
-As usual
+as usual
 @end table
 
 @strong{Messages}



From ral at mail.berlios.de  Tue Jul 15 00:54:47 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Tue, 15 Jul 2008 00:54:47 +0200
Subject: [Enigma-game-svn] r1238 - team_levelpacks/team_test_new_api
Message-ID: <200807142254.m6EMslHw032216@sheep.berlios.de>

Author: ral
Date: 2008-07-15 00:54:29 +0200 (Tue, 15 Jul 2008)
New Revision: 1238

Added:
   team_levelpacks/team_test_new_api/ralT057_1.xml
Modified:
   team_levelpacks/team_test_new_api/andreasT01_1.xml
   team_levelpacks/team_test_new_api/andreasT02_1.xml
   team_levelpacks/team_test_new_api/raoulT04_1.xml
   team_levelpacks/team_test_new_api/raoulT05_1.xml
   team_levelpacks/team_test_new_api/raoulT06_1.xml
Log:
Test Level new API:
- level svn properties updates 
- new test level for turnstile


Property changes on: team_levelpacks/team_test_new_api/andreasT01_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native


Property changes on: team_levelpacks/team_test_new_api/andreasT02_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Added: team_levelpacks/team_test_new_api/ralT057_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT057_1.xml	2008-07-14 13:27:01 UTC (rev 1237)
+++ team_levelpacks/team_test_new_api/ralT057_1.xml	2008-07-14 22:54:29 UTC (rev 1238)
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Turnstile new API" el:subtitle="" el:id="20080713ral612"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["y"] = {"it-yinyang"}
+ti["m"] = {"it_wrench"}
+
+
+ti["R"] = {"st_turnstile_red"}
+ti["G"] = {"st_turnstile_green"}
+ti["n"] = {"st_turnstilearm_n"}
+ti["e"] = {"st_turnstilearm_e"}
+ti["s"] = {"st_turnstilearm_s"}
+ti["w"] = {"st_turnstilearm_w"}
+
+ti["B"] = {"st-brownie"}
+ti["O"] = {"st_rotator_cw", movable=true}
+ti["I"] = {"st-stoneimpulse_movable"}
+
+ti["N"] = {"st_turnstilearm_n","arm"}
+ti["S"] = {"st_scissors"}
+ti["r"] = {"it_rubberband", anchor2="arm"}
+
+ti["E"] = {"st_turnstilearm_e","east"}
+ti["b"] = {"st-brownie", "brownie"}
+
+ti["a"] = {"st_turnstilearm_n","couple1"}
+ti["A"] = {"st_turnstilearm_n","couple2"}
+
+ti["T"] = {"st_turnstile_red", "turnsensor"}
+ti["t"] = {"it_sensor", target="turnsensor", action="turn"}
+
+ti["U"] = {"st_turnstile_green", "signaltrigger"}
+ti["u"] = {"it_trigger", target="signaltrigger", action="signal"}
+
+ti["c"] = {"st_turnstilearm_n","singlearm"}
+ti["C"] = {"st_fourswitch", target="singlearm", action="orientate"}
+
+ti["V"] = {"st_turnstile_green", "receiver"}
+ti["v"] = {"st_turnstile_green", target ="receiver", action="signal"}
+
+ti["W"] = {"st_turnstile_red", "orientationTurnstile"}
+ti["F"] = {"st_fourswitch", "orientationFourswitch"}
+ti["f"] = {"st_switch", target="doSync"}
+
+ti["h"] = {"it-tinyhollow"}
+ti["H"] = {"it-hollow"}
+
+
+ti["1"] = ti["y"] .. {"#ac-blackball"}
+ti["2"] = ti["y"] .. {"#ac-whiteball"}
+ti["3"] = {"#ac-whiteball-small", controllers=0}
+
+w, h = wo(ti, " ", {
+"                    ",
+"    nesw     nesw   ",
+"          N         ",
+"          r       O ",
+"     R    S   G     ",
+"                  I ",
+"  b  E    B         ",
+"          m    333  ",
+"       1   2        ",
+"   a           n    ",
+"   Re    A    wTe t ",
+"   s    wGe         ",
+"               n    ",
+" c  C         wUe u ",
+"                    ",
+"     n      n   n   ",
+"Ff   W      ve  Ve  ",
+"            s   s   ",
+"   H                ",
+"    Ge              ",
+"       3        Ge  ",
+"   h   3       n3   ",
+"    Ge 3            ",
+"                    ",
+"                    "
+})
+
+wo:add({"ot_wire", anchor1="east", anchor2="brownie"})
+wo:add({"ot_wire", anchor1="couple1", anchor2="couple2"})
+
+function doSync(value, sender)
+    no["orientationFourswitch"]["state"]=no["orientationTurnstile"]["orientation"]
+end
+  ]]></el:luamain>
+    <el:i18n>
+     <el:string el:key="title">
+       <el:english el:translate="false"/>
+     </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT057_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Modified: team_levelpacks/team_test_new_api/raoulT04_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT04_1.xml	2008-07-14 13:27:01 UTC (rev 1237)
+++ team_levelpacks/team_test_new_api/raoulT04_1.xml	2008-07-14 22:54:29 UTC (rev 1238)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Test Coinslot new API" el:subtitle="" el:id="testcoinswitch_raoul"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 1007 $" el:status="experimental"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
       <el:author  el:name="Raoul Bourquin" el:email="raoul at users.berlios.de"/>
       <el:copyright>Copyright ? 2008 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>


Property changes on: team_levelpacks/team_test_new_api/raoulT04_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: team_levelpacks/team_test_new_api/raoulT05_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision


Property changes on: team_levelpacks/team_test_new_api/raoulT06_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision



From ral at mail.berlios.de  Tue Jul 15 01:01:37 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 15 Jul 2008 01:01:37 +0200
Subject: [Enigma-game-svn] r1239 - in trunk: data data/schemas src src/stones
Message-ID: <200807142301.m6EN1b4a007339@sheep.berlios.de>

Author: ral
Date: 2008-07-15 01:01:33 +0200 (Tue, 15 Jul 2008)
New Revision: 1239

Added:
   trunk/src/stones/Turnstile.cc
   trunk/src/stones/Turnstile.hh
Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/GridObject.cc
   trunk/src/Makefile.am
   trunk/src/ox_extra.cc
   trunk/src/ox_magnum.cc
   trunk/src/ox_peroxyd.cc
   trunk/src/stones.hh
   trunk/src/stones_complex.cc
Log:
Trunk 1.1: new API reengineering Turnstile
- rename st-turnstile to st_turnstile_red
- rename st-turnstile-green to st_turnstile_green
- rename st-turnstile-n,e,s,w to st_turnstilearm_n,e,s,w
- keep identity of turnstilearm objects on rotation:
  attached rubbbands and wires will remain
- st_turnstilearm supports:
  - attributes state/orientation, connections
  - message orientate
- st_turnstile supports:
  - attributes counterclock, orientation, flavor (values "green","red")
  - messages signal, turn, turnback
- wire feature: turnstile arms propagate wire impulses if they are
  rotated attached to pivot even if they are not impulsed themselves
- warping - actor position within grid if "kept" as good as possible:
  - relative grid position of actor is rotated as well
  - an actor once warped by turnstile keeps warping on further turns
  - multiple actors warped at once will not sit on top of each other
  - all actors will fall into tiny hollows after a warp


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/data/api1init.lua	2008-07-14 23:01:33 UTC (rev 1239)
@@ -182,6 +182,12 @@
     st_switch_black = "st-switch_black",
     st_switch_white = "st-switch_white",
     st_timer = "st-timer",
+    st_turnstile_red = "st-turnstile",
+    st_turnstile_green = "st-turnstile-green",
+    st_turnstilearm_n = "st-turnstile-n",
+    st_turnstilearm_e = "st-turnstile-e",
+    st_turnstilearm_s = "st-turnstile-s",
+    st_turnstilearm_w = "st-turnstile-w",
     st_window = "st-window"
 }
 

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/data/schemas/objects.xml	2008-07-14 23:01:33 UTC (rev 1239)
@@ -682,6 +682,39 @@
       <msg name="off"/>
       <msg name="signal"/>
     </object>
+    <object name="st_turnstile">
+      <attr name="counterclock"/>
+      <attr name="flavor"/>
+      <attr name="orientation"/>
+      <attr name="state" max="0"/>
+      <msg name="signal"/>
+      <msg name="turn"/>
+      <msg name="turnback"/>
+    </object>
+    <object name="st_turnstile_red">
+      <attr name="flavor" value="red"/>
+    </object>
+    <object name="st_turnstile_green">
+      <attr name="flavor" value="green"/>
+    </object>
+    <object name="st_turnstilearm">
+      <attr name="state" max="3"/>
+      <attr name="connections"/>
+      <attr name="orientation"/>
+      <msg name="orientate"/>
+    </object>
+    <object name="st_turnstilearm_n">
+      <attr name="state" value="3"/>
+    </object>
+    <object name="st_turnstilearm_e">
+      <attr name="state" value="2"/>
+    </object>
+    <object name="st_turnstilearm_s">
+      <attr name="state" value="1"/>
+    </object>
+    <object name="st_turnstilearm_w">
+      <attr name="state" value="0"/>
+    </object>
     <object name="st_window">
       <attr name="faces" default="s"/>
       <attr name="scratches"/>

Modified: trunk/src/GridObject.cc
===================================================================
--- trunk/src/GridObject.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/GridObject.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -150,7 +150,8 @@
     
     void GridObject::setState(int extState) {
         StateObject::setState(extState);
-        init_model();
+        if (isDisplayable())
+            init_model();
     }
     
     std::string GridObject::getModelName() const {

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/Makefile.am	2008-07-14 23:01:33 UTC (rev 1239)
@@ -251,6 +251,8 @@
 	stones/Switch.hh	\
 	stones/TimerStone.cc	\
 	stones/TimerStone.hh	\
+	stones/Turnstile.cc	\
+	stones/Turnstile.hh	\
 	stones/WindowStone.cc	\
 	stones/WindowStone.hh
 

Modified: trunk/src/ox_extra.cc
===================================================================
--- trunk/src/ox_extra.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/ox_extra.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -280,11 +280,11 @@
     UNUSED,              // OxydExtra stone 0x9b
     UNUSED,              // OxydExtra stone 0x9c
     UNUSED,              // OxydExtra stone 0x9d
-    "st-turnstile",      // OxydExtra stone 0x9e
-    "st-turnstile-n",    // OxydExtra stone 0x9f
-    "st-turnstile-s",    // OxydExtra stone 0xa0
-    "st-turnstile-w",    // OxydExtra stone 0xa1
-    "st-turnstile-e",    // OxydExtra stone 0xa2
+    "st_turnstile_red",  // OxydExtra stone 0x9e
+    "st_turnstilearm_n", // OxydExtra stone 0x9f
+    "st_turnstilearm_s", // OxydExtra stone 0xa0
+    "st_turnstilearm_w", // OxydExtra stone 0xa1
+    "st_turnstilearm_e", // OxydExtra stone 0xa2
     UNUSED,              // OxydExtra stone 0xa3
     "st_laserflop_on",   // OxydExtra stone 0xa4
     UNUSED,              // OxydExtra stone 0xa5

Modified: trunk/src/ox_magnum.cc
===================================================================
--- trunk/src/ox_magnum.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/ox_magnum.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -276,11 +276,11 @@
     "st-chargeminus",           // OxydMagnum stone 0x97
     "st-chargezero",            // OxydMagnum stone 0x98
     0,                          // OxydMagnum stone 0x99 (common was 'st-blocker')(Level 121 ?)(in normal Oxyd Magnum Levels unused!)
-    "st-turnstile",             // OxydMagnum stone 0x9a
-    "st-turnstile-n",           // OxydMagnum stone 0x9b
-    "st-turnstile-s",           // OxydMagnum stone 0x9c
-    "st-turnstile-w",           // OxydMagnum stone 0x9d
-    "st-turnstile-e",           // OxydMagnum stone 0x9e
+    "st_turnstile_red",         // OxydMagnum stone 0x9a
+    "st_turnstilearm_n",        // OxydMagnum stone 0x9b
+    "st_turnstilearm_s",        // OxydMagnum stone 0x9c
+    "st_turnstilearm_w",        // OxydMagnum stone 0x9d
+    "st_turnstilearm_e",        // OxydMagnum stone 0x9e
     UNUSED,                     // OxydMagnum stone 0x9f
     UNUSED,                     // OxydMagnum stone 0xa0
     UNUSED,                     // OxydMagnum stone 0xa1

Modified: trunk/src/ox_peroxyd.cc
===================================================================
--- trunk/src/ox_peroxyd.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/ox_peroxyd.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -352,11 +352,11 @@
     "st-metal_hole",            // PerOxyd stone 0x9b
     "st-stone1",                // PerOxyd stone 0x9c
     "st-fart",                  // PerOxyd stone 0x9d
-    "st-turnstile",             // PerOxyd stone 0x9e
-    "st-turnstile-n",           // PerOxyd stone 0x9f
-    "st-turnstile-s",           // PerOxyd stone 0xa0
-    "st-turnstile-w",           // PerOxyd stone 0xa1
-    "st-turnstile-e",           // PerOxyd stone 0xa2
+    "st_turnstile_red",         // PerOxyd stone 0x9e
+    "st_turnstilearm_n",        // PerOxyd stone 0x9f
+    "st_turnstilearm_s",        // PerOxyd stone 0xa0
+    "st_turnstilearm_w",        // PerOxyd stone 0xa1
+    "st_turnstilearm_e",        // PerOxyd stone 0xa2
     UNUSED,                     // PerOxyd stone 0xa3
     "st_laserflop_on",        // PerOxyd stone 0xa4 laserswitch on
     UNUSED,                     // PerOxyd stone 0xa5

Added: trunk/src/stones/Turnstile.cc
===================================================================
--- trunk/src/stones/Turnstile.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/stones/Turnstile.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -0,0 +1,472 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ * Copyright (C) 2008 Andreas Lochmann
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "stones/Turnstile.hh"
+#include "actors.hh"
+#include "errors.hh"
+//#include "main.hh"
+#include "player.hh"
+#include "world.hh"
+#include <vector>
+
+namespace enigma {
+
+    TurnstilePivot::TurnstilePivot(std::string flavor) : Stone () {
+        setAttr("flavor", flavor);
+        setAttr("orientation", NORTH);
+    }
+
+    std::string TurnstilePivot::getClass() const {
+        return "st_turnstile";
+    }
+        
+    void TurnstilePivot::setAttr(const string& key, const Value &val) {
+        if (key == "flavor") {
+            ASSERT((val.to_string() == "red" || val.to_string() == "green"), XLevelRuntime, 
+                    ("Turnstile unknown flavor: " + val.to_string()).c_str());
+            Stone::setAttr(key, val);
+            if (isDisplayable())
+                init_model();
+        } else
+            Stone::setAttr(key, val);
+    }
+    
+    Value TurnstilePivot::message(const Message &m) {
+        if (m.message == "signal") {               // turn , turnback
+            if (isDisplayable())
+                rotate(m.value == 0, NULL, NULL);
+            return Value();
+        } else if ((m.message == "turn" || m.message == "turnback")) {
+            rotate((m.message == "turn" && !getAttr("counterclock").to_bool() || 
+                    m.message == "turnback" && getAttr("counterclock").to_bool()), NULL, NULL);
+            return Value();
+        }
+        return Stone::message(m);
+    }
+    
+    int TurnstilePivot::maxState() const {
+        return 0;
+    }
+    
+    void TurnstilePivot::setState(int extState) {
+        // ignore all state settings
+    }
+
+    void TurnstilePivot::init_model() {
+        set_model(std::string("red") == getAttr("flavor").to_string() ? "st-turnstile" : "st-turnstile-green");
+    }
+    
+
+    void TurnstilePivot::animcb() {
+        state = IDLE;
+        init_model();
+    }
+    
+    DirectionBits TurnstilePivot::arms_present() const {
+        int arms = NODIRBIT;
+        GridPos p = get_pos();
+        for (Direction dir = WEST; dir != NODIR; dir = next(dir)) {
+            if (TurnstileArm * ta = dynamic_cast<TurnstileArm *>(GetStone(move(p, dir)))) {
+                if (ta->getAttr("state") == dir)
+                    arms |= to_bits(dir);
+            }
+        }
+        return (DirectionBits)arms;
+    }
+    
+    bool TurnstilePivot::no_stone(int xoff, int yoff) const {
+        GridPos p = get_pos();
+        p.x += xoff;
+        p.y += yoff;
+        return (NULL == GetStone(p));
+    }
+
+    bool TurnstilePivot::rotate(bool clockwise, Object *impulse_sender, TurnstileArm *initiator) {
+        if (state == ROTATING || !isDisplayable())
+            return false;
+    
+        DirectionBits arms = arms_present();
+        bool can_rotate = true;
+    
+        if (clockwise)  {
+            if (arms & NORTHBIT) {
+                can_rotate &= no_stone(+1,-1);
+                if (! (arms & EASTBIT)) can_rotate &= no_stone(+1,0);
+            }
+            if (arms & WESTBIT) {
+                can_rotate &= no_stone(-1,-1);
+                if (! (arms & NORTHBIT)) can_rotate &= no_stone(0,-1);
+            }
+            if (arms & SOUTHBIT) {
+                can_rotate &= no_stone(-1,+1);
+                if (! (arms & WESTBIT)) can_rotate &= no_stone(-1,0);
+            }
+            if (arms & EASTBIT) {
+                can_rotate &= no_stone(+1,+1);
+                if (! (arms & SOUTHBIT)) can_rotate &= no_stone(0,+1);
+            }
+        }
+        else {
+            if (arms & NORTHBIT) {
+                can_rotate &= no_stone(-1,-1);
+                if (! (arms & WESTBIT)) can_rotate &= no_stone(-1,0);
+            }
+            if (arms & WESTBIT) {
+                can_rotate &= no_stone(-1,+1);
+                if (! (arms & SOUTHBIT)) can_rotate &= no_stone(0,+1);
+            }
+            if (arms & SOUTHBIT) {
+                can_rotate &= no_stone(+1,+1);
+                if (! (arms & EASTBIT)) can_rotate &= no_stone(+1,0);
+            }
+            if (arms & EASTBIT) {
+                can_rotate &= no_stone(+1,-1);
+                if (! (arms & NORTHBIT)) can_rotate &= no_stone(0,-1);
+            }
+        }
+    
+        if (can_rotate) {
+            sound_event (clockwise ? "turnstileright" : "turnstileleft");
+            sound_event("movesmall");
+    
+            state = ROTATING;
+            set_anim(ecl::strf("st-turnstile%s-anim", (std::string("red") == getAttr("flavor").to_string()) ? "" : "-green"));
+            rotate_arms(arms, clockwise);
+            handleActorsAndItems(clockwise, impulse_sender);
+            
+            Direction dir = to_direction(getAttr("orientation"));
+            dir = clockwise ? rotate_cw(dir) : rotate_ccw(dir);
+            Stone::setAttr("orientation", dir);
+            
+            for (Direction dir = WEST; dir != NODIR; dir = next(dir)) {
+                if (TurnstileArm * ta = dynamic_cast<TurnstileArm *>(GetStone(move(get_pos(), dir)))) {
+                    if (ta != initiator) {
+                        Impulse rotationImpulse(this, ta->get_pos(), dir, false);
+                        ta->propagateImpulse(rotationImpulse);
+                    }
+                }
+            }
+    
+            performAction(!clockwise);
+            server::IncMoveCounter();
+        }
+        return can_rotate;
+    }
+
+    void TurnstilePivot::rotate_arms(DirectionBits arms, bool clockwise) {
+        GridPos p = get_pos();
+    
+        Object * n = (arms & NORTHBIT) ? YieldStone(move (p, NORTH)) : NULL;
+        Object * e = (arms & EASTBIT)  ? YieldStone(move (p, EAST))  : NULL;
+        Object * s = (arms & SOUTHBIT) ? YieldStone(move (p, SOUTH)) : NULL;
+        Object * w = (arms & WESTBIT)  ? YieldStone(move (p, WEST))  : NULL;
+            
+        if (clockwise) {
+            if (arms & NORTHBIT) setArm(n, EAST);
+            if (arms & EASTBIT)  setArm(e, SOUTH);
+            if (arms & SOUTHBIT) setArm(s, WEST);
+            if (arms & WESTBIT)  setArm(w, NORTH);
+        }
+        else {
+            if (arms & NORTHBIT) setArm(n, WEST);
+            if (arms & EASTBIT)  setArm(e, NORTH);
+            if (arms & SOUTHBIT) setArm(s, EAST);
+            if (arms & WESTBIT)  setArm(w, SOUTH);
+        }
+    }
+    
+    void TurnstilePivot::setArm(Object * obj, Direction dir) {
+        GridPos newp = move(get_pos(), dir);
+        Stone * st = dynamic_cast<Stone *>(obj);
+        SetStone(newp, st);
+        obj->setAttr("state", dir);
+    
+        if (Item *it = GetItem(newp))
+            it->on_stonehit(st);
+    }
+   
+    bool TurnstilePivot::calc_arm_seen(bool cw, DirectionBits arms, int field) {
+        // for each field calculate whether an arm has passed by, first
+        // counterclockwise and then clockwise:
+        const DirectionBits neededArm[2][8] = {
+            {WESTBIT, NORTHBIT, NORTHBIT, EASTBIT, EASTBIT, SOUTHBIT, SOUTHBIT, WESTBIT},
+            {NORTHBIT, NORTHBIT, EASTBIT, EASTBIT, SOUTHBIT, SOUTHBIT, WESTBIT, WESTBIT}
+        };
+        return (arms & neededArm[cw][field]) != 0;
+    }
+
+    void TurnstilePivot::handleActorsAndItems(bool clockwise, Object *impulse_sender) {
+        const int to_index[3][3] = { // (read this transposed)
+            { 0, 7, 6 }, // x == 0
+            { 1,-1, 5 }, // x == 1
+            { 2, 3, 4 }  // x == 2
+        };
+        const int to_x[8] = { -1, 0, 1, 1, 1, 0, -1, -1 };
+        const int to_y[8] = { -1, -1, -1, 0, 1, 1, 1, 0 };
+    
+        bool arm_seen[8];
+        DirectionBits arms = arms_present(); // Note: already the rotated state
+        for (int i = 0; i<8; ++i)
+            arm_seen[i] = calc_arm_seen(clockwise, arms, i);
+    
+        // ---------- Handle items in range ----------
+        GridPos pv_pos = get_pos();
+        for (int i = 0; i<8; ++i) 
+            if (arm_seen[i]) {
+                GridPos item_pos(pv_pos.x+to_x[i], pv_pos.y+to_y[i]);
+                if (Item *it = GetItem(item_pos)) { 
+                    if (it->get_traits().id == it_laserbeam)
+                        KillItem(item_pos); 
+                    else
+                        it->on_stonehit(this); // hit with pivot (shouldn't matter)
+                }
+            }
+    
+        // ---------- Handle actors in range ----------
+        std::vector<Actor*> actorsInRange;
+    
+        // tested range is sqrt(sqr(1.5)+sqr(1.5)) 
+        if (!GetActorsInRange(pv_pos.center(), 2.124, actorsInRange))
+            return;
+    
+        std::vector<Actor*>::iterator iter = actorsInRange.begin(), end = actorsInRange.end();
+        for (; iter != end; ++iter) {
+            Actor *ac = *iter;
+            const V2 &ac_center = ac->get_pos();
+            GridPos   ac_pos(ac_center);
+            int dx  = ac_pos.x-pv_pos.x;
+            int dy  = ac_pos.y-pv_pos.y;
+    
+            // ignore if actor is not inside the turnstile square or is not
+            // in distance of the the rotating arms
+            if ((dx<-1 || dx>1 || dy<-1 || dy>1) || 
+                    (length(ac->get_pos() - pv_pos.center()) > 1.58114 + ac->get_actorinfo()->radius))
+                continue;
+    
+            int idx_source = to_index[dx+1][dy+1];
+            if (idx_source == -1) 
+                continue;       // actor inside pivot -- should not happen
+    
+            const int rot_index[4][8] = {
+                // The warp-destinations for actors. Why different destinations
+                // for oxyd/non-oxyd-type turnstiles? Imagine the actor on position
+                // 1 (North of pivot), the turnstile rotates anticlockwise. Then
+                // a green turnstile-arm, if at all, would push the actor one field
+                // to the left (position 0). Now assume it's a red turnstile. If the
+                // actor is to be warped, it has to be the one that activated the
+                // turnstile. Yet it is on position 1, in principle not able to
+                // hit an arm. But it can, if it hits fast enough on the edge of
+                // pivot and left arm. In this case, the actor should be handled
+                // as if on position 1, thus warping to 6.
+                { 6,  0, 0,  2, 2,  4, 4,  6 }, // anticlockwise
+                { 2,  2, 4,  4, 6,  6, 0,  0 }, // clockwise
+                { 6,  6, 0,  0, 2,  2, 4,  4 }, // anticlockwise (oxyd-compatible)
+                { 2,  4, 4,  6, 6,  0, 0,  2 }, // clockwise (oxyd-compatible)
+            };
+    
+            bool compatible = std::string("red") == getAttr("flavor").to_string();   // oxyd compatibility
+            int  idx_target = rot_index[clockwise+2*compatible][idx_source]; // destination index
+            bool do_warp = false; // move the actor along with the turnstile?
+    
+            if (compatible) {
+                // Move only the actor that hit the turnstile in Oxyd mode
+                do_warp = (ac == dynamic_cast<Actor*>(impulse_sender));
+                if (!do_warp && arm_seen[idx_source])
+                    SendMessage(ac, "shatter"); // hit by an arm
+            } else { // green turnstile
+                // move all actors only if pushed by an arm
+                do_warp = arm_seen[idx_source];
+            }
+    
+            if (!do_warp) 
+                continue;
+    
+            // Pushing an actor out of the level results in a shatter (no warp) instead
+            GridPos ac_target_pos(pv_pos.x+to_x[idx_target], pv_pos.y+to_y[idx_target]);
+    
+            if(!IsInsideLevel(ac_target_pos)) {
+                SendMessage(ac, "shatter");
+                continue;
+            }
+
+            // Keep the actors rotated position within grid, but ensure that
+            // - actors once warped keep warping on further turnstile turns
+            // - small marbles end up in meditation hollows  
+            ecl::V2 offset = ac->get_pos() - ac->get_gridpos().center();
+            if (ecl::length(offset) > 0.5 - ac->get_actorinfo()->radius)
+                offset =  (0.5 - ac->get_actorinfo()->radius) * ecl::normalize(offset);
+            WarpActor(ac, ac_target_pos.x + 0.5 + (clockwise ? -offset[1] : offset[1]),
+                     ac_target_pos.y + 0.5 + (clockwise ? offset[0] : -offset[0]), false);
+    
+            if (Stone *st = GetStone(ac_target_pos)) {
+    
+                // destination is blocked
+    
+                TurnstileArm *arm = dynamic_cast<TurnstileArm*>(st);
+                if (arm && !compatible) { // if blocking stone is turnstile arm -> hit it!
+                    const int impulse_dir[2][8] = {
+                        // anticlockwise
+                        { SOUTHBIT|WESTBIT, WESTBIT, NORTHBIT|WESTBIT, NORTHBIT,
+                          NORTHBIT|EASTBIT, EASTBIT, SOUTHBIT|EASTBIT, SOUTHBIT },
+                        // clockwise
+                        { NORTHBIT|EASTBIT, EASTBIT, SOUTHBIT|EASTBIT, SOUTHBIT,
+                          SOUTHBIT|WESTBIT, WESTBIT, NORTHBIT|WESTBIT, NORTHBIT }
+                    };
+    
+                    DirectionBits possible_impulses =
+                        static_cast<DirectionBits>(impulse_dir[clockwise][idx_target]);
+    
+                    for (int d = 0; d<4; ++d) 
+                        if (has_dir(possible_impulses, Direction(d))) 
+                            ac->send_impulse(ac_target_pos, Direction(d));
+    
+    //                 if (GetStone(ac_target_pos) == 0)  // arm disappeared
+    //                     break;
+                }
+            }
+        }
+    }
+
+    int TurnstilePivot::traitsIdx() const {
+        return (std::string("red") == getAttr("flavor").to_string()) ? 0 : 1;
+    }
+    
+    StoneTraits TurnstilePivot::traits[2] = {
+        {"st_turnstile_red", st_turnstile_red, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
+        {"st_turnstile_green", st_turnstile_green, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
+    };
+    
+
+
+    TurnstileArm::TurnstileArm(Direction dir) : Stone () {
+        state = dir;
+    }
+
+    std::string TurnstileArm::getClass() const {
+        return "st_turnstilearm";
+    }
+        
+    void TurnstileArm::setAttr(const string& key, const Value &val) {
+        if (key == "orientation") {                // TODO connections support
+            setState(val);
+        } else if (key == "connections") {
+            GridObject::setAttr(key, val);
+            DirectionBits db = (DirectionBits)(int)getAttr("$connections");
+            switch (db) {
+                case WESTBIT :
+                    state = WEST; break;
+                case SOUTHBIT :
+                    state = SOUTH; break;
+                case EASTBIT :
+                    state = EAST; break;
+                case NORTHBIT :
+                    state = NORTH; break;
+                default :
+                    ASSERT(false, XLevelRuntime, ("Turnstile set attribute 'connections' with illegal value '" 
+                            + val.to_string() + "'").c_str());
+            }
+        } else
+            Stone::setAttr(key, val);
+    }
+    
+    Value TurnstileArm::getAttr(const std::string &key) const {
+        if (key == "orientation") {
+            return state;
+        } else if (key == "connections") {
+            static const char *sfx[] = { "w", "s", "e", "n" };
+            return sfx[state];
+        } else
+            return Stone::getAttr(key);
+    }
+    
+    Value TurnstileArm::message(const Message &m) {
+        if (m.message == "orientate") {
+            setAttr("state", m.value);    // do check min, max limits
+        }
+        return Stone::message(m);
+    }
+    
+    int TurnstileArm::maxState() const {
+        return NORTH;
+    }
+    
+    void TurnstileArm::init_model() {
+        set_model(ecl::strf("st-turnstile%s", to_suffix((Direction)state).c_str()));
+    }
+    
+    void TurnstileArm::on_impulse(const Impulse& impulse) {
+        enum Action { ROTL, ROTR, stay };
+        static Action actions[4][4] = {
+            { stay, ROTL, stay, ROTR }, // west arm
+            { ROTR, stay, ROTL, stay }, // south arm
+            { stay, ROTR, stay, ROTL }, // east arm
+            { ROTL, stay, ROTR, stay }  // north arm
+        };
+        
+        int id = getId();
+        TurnstilePivot *pivot = getPivot();
+    
+        if (pivot != NULL) {
+            Action a = actions[state][impulse.dir];
+            if (a != stay) {
+                bool clockwise = (a == ROTR);
+                Actor *actor = dynamic_cast<Actor*>(impulse.sender);
+                Log << "Turnstile impulse " << get_id(pivot) << " - "<<st_turnstile_green <<"\n";
+                if (get_id(pivot) == st_turnstile_green && actor != NULL &&
+                        player::WieldedItemIs(actor, "it_wrench")) {
+                    Log << "Turnstile Wand\n";
+                    clockwise = !clockwise;
+                }
+                pivot->rotate(clockwise, impulse.sender, this); // ROTR is clockwise
+            }
+        }
+        else {
+            // Move arms not attached to a pivot individually
+            move_stone(impulse.dir);
+        }
+        
+        if (Object::getObject(id) != NULL)   // not killed?
+            propagateImpulse(impulse);
+    }
+
+    TurnstilePivot *TurnstileArm::getPivot() {
+        return dynamic_cast<TurnstilePivot *>(GetStone(move(get_pos(), reverse((Direction)state))));
+    }
+    
+    StoneTraits TurnstileArm::traits[4] = {
+        {"st_turnstilearm_w", st_turnstilearm_w, stf_none, material_stone, 1.0, MOVABLE_IRREGULAR},
+        {"st_turnstilearm_s", st_turnstilearm_s, stf_none, material_stone, 1.0, MOVABLE_IRREGULAR},
+        {"st_turnstilearm_e", st_turnstilearm_e, stf_none, material_stone, 1.0, MOVABLE_IRREGULAR},
+        {"st_turnstilearm_n", st_turnstilearm_n, stf_none, material_stone, 1.0, MOVABLE_IRREGULAR},
+    };
+    
+    BOOT_REGISTER_START
+        BootRegister(new TurnstilePivot("red"),  "st_turnstile_red");
+        BootRegister(new TurnstilePivot("green"),  "st_turnstile_green");
+        BootRegister(new TurnstileArm(WEST),  "st_turnstilearm_w");
+        BootRegister(new TurnstileArm(SOUTH), "st_turnstilearm_s");
+        BootRegister(new TurnstileArm(EAST),  "st_turnstilearm_e");
+        BootRegister(new TurnstileArm(NORTH), "st_turnstilearm_n");
+    BOOT_REGISTER_END
+
+
+} // namespace enigma
+


Property changes on: trunk/src/stones/Turnstile.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/Turnstile.hh
===================================================================
--- trunk/src/stones/Turnstile.hh	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/stones/Turnstile.hh	2008-07-14 23:01:33 UTC (rev 1239)
@@ -0,0 +1,107 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef TURNSTILE_HH
+#define TURNSTILE_HH
+
+#include "stones.hh"
+
+#include "stones_internal.hh"
+
+namespace enigma {
+
+    class TurnstileArm;
+
+    /** 
+     * 
+     */
+    class TurnstilePivot : public Stone {
+        CLONEOBJ(TurnstilePivot);
+        DECL_TRAITS_ARRAY(2, traitsIdx());
+    private:
+        enum iState {
+            IDLE,     ///< 
+            ROTATING  ///< 
+        };
+        
+    public:
+        TurnstilePivot(std::string flavor);
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const string& key, const Value &val);
+        virtual Value message(const Message &m);
+        
+        // StateObject interface
+        virtual int maxState() const;
+        virtual void setState(int extState);
+
+        // GridObject interface
+        virtual void init_model();
+        
+        // ModelCallback interface
+        virtual void animcb();
+        
+        // Stone interface
+//        virtual void actor_hit(const StoneContact &sc);
+        
+        bool rotate(bool clockwise, Object *impulse_sender, TurnstileArm *initiator);
+        int traitsIdx() const;
+    private:
+        DirectionBits arms_present() const;
+        bool no_stone(int xoff, int yoff) const;
+        void rotate_arms(DirectionBits arms, bool clockwise);
+        void setArm(Object * obj, Direction dir);
+        bool calc_arm_seen(bool cw, DirectionBits arms, int field);
+        void handleActorsAndItems(bool clockwise, Object *impulse_sender);
+    };
+
+    
+    /** 
+     * 
+     */
+    class TurnstileArm : public Stone {
+        CLONEOBJ(TurnstileArm);
+        DECL_TRAITS_ARRAY(4, state);
+        
+    public:
+        TurnstileArm(Direction dir);
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const string& key, const Value &val);
+        virtual Value getAttr(const std::string &key) const;
+        virtual Value message(const Message &m);
+        
+        // StateObject interface
+        virtual int maxState() const;
+
+        // GridObject interface
+        virtual void init_model();
+        
+        // Stone interface
+        virtual void on_impulse(const Impulse& impulse);
+        
+    private:
+        TurnstilePivot *getPivot();
+    };
+    
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/stones/Turnstile.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/stones.hh
===================================================================
--- trunk/src/stones.hh	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/stones.hh	2008-07-14 23:01:33 UTC (rev 1239)
@@ -94,12 +94,12 @@
         st_swap,
         st_switch,
         st_thief,
-        st_turnstile,
-        st_turnstile_e,
+        st_turnstile_red,
         st_turnstile_green,
-        st_turnstile_n,
-        st_turnstile_s,
-        st_turnstile_w,
+        st_turnstilearm_w,
+        st_turnstilearm_s,
+        st_turnstilearm_e,
+        st_turnstilearm_n,
         st_volcano,
         st_white1,
         st_white2,

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-07-14 22:54:29 UTC (rev 1238)
+++ trunk/src/stones_complex.cc	2008-07-14 23:01:33 UTC (rev 1239)
@@ -1728,470 +1728,6 @@
 }
 
 
-/* -------------------- Turnstiles -------------------- */
-namespace
-{
-    class Turnstile_Arm;
-
-    /*
-    ** The stone at the center of a turnstile
-    */
-    class Turnstile_Pivot_Base : public Stone {
-    public:
-        Turnstile_Pivot_Base();
-
-    protected:
-        bool rotate(bool clockwise, Object *impulse_sender);
-
-        friend class Turnstile_Arm; // uses rotate
-
-    private:
-        // Object interface
-        virtual Value message(const Message &m);
-        virtual void animcb();
-
-        // Private methods
-        DirectionBits arms_present() const;
-        bool          no_stone (int xoff, int yoff) const;
-        void set_arm (Direction dir);
-        void remove_arms (DirectionBits arms);
-        void rotate_arms (DirectionBits arms, bool clockwise);
-        void handleActorsAndItems(bool clockwise, Object *impulse_sender);
-
-        // Turnstile_Pivot_Base interface
-        virtual const char *model() const    = 0;
-        virtual const char *anim() const     = 0;
-        virtual bool oxyd_compatible() const = 0;
-
-        // Variables
-        bool active;
-    };
-
-    class Turnstile_Pivot : public Turnstile_Pivot_Base {
-        CLONEOBJ(Turnstile_Pivot);
-        DECL_TRAITS;
-    public:
-        Turnstile_Pivot() {}
-
-        const char *model() const { return "st-turnstile"; }
-        const char *anim() const  { return "st-turnstile-anim"; }
-        bool oxyd_compatible() const { return true; }
-    };
-    DEF_TRAITS(Turnstile_Pivot, "st-turnstile", st_turnstile);
-
-    class Turnstile_Pivot_Green : public Turnstile_Pivot_Base {
-        CLONEOBJ(Turnstile_Pivot_Green);
-        DECL_TRAITS;
-    public:
-        Turnstile_Pivot_Green() {}
-
-        const char *model() const { return "st-turnstile-green"; }
-        const char *anim() const  { return "st-turnstile-green-anim"; }
-        bool oxyd_compatible() const { return false; }
-    };
-    DEF_TRAITS(Turnstile_Pivot_Green, "st-turnstile-green", st_turnstile_green);    
-
-    /*
-    ** The base class for any of the four arms of the turnstile
-    */
-    class Turnstile_Arm : public Stone {
-        virtual Direction get_dir() const = 0;
-
-        void actor_hit(const StoneContact &sc);
-        void on_impulse(const Impulse& impulse);
-
-        Turnstile_Pivot_Base *get_pivot() {
-            Stone *st = GetStone (move (get_pos(), reverse(get_dir())));
-            return dynamic_cast<Turnstile_Pivot_Base*>(st);
-        }
-
-    protected:
-        Turnstile_Arm() {}
-    };
-
-    class Turnstile_N : public Turnstile_Arm {
-        CLONEOBJ(Turnstile_N);
-        DECL_TRAITS;
-    public:
-        Turnstile_N() {}
-        Direction get_dir () const { return NORTH; }
-    };
-    DEF_TRAITSM(Turnstile_N, "st-turnstile-n", st_turnstile_n, MOVABLE_IRREGULAR);
-    
-    class Turnstile_S : public Turnstile_Arm {
-        CLONEOBJ(Turnstile_S);
-        DECL_TRAITS;
-        Direction get_dir () const { return SOUTH; }
-    public:
-        Turnstile_S() {}
-    };
-    DEF_TRAITSM(Turnstile_S, "st-turnstile-s", st_turnstile_s, MOVABLE_IRREGULAR);
-
-    class Turnstile_E : public Turnstile_Arm {
-        CLONEOBJ(Turnstile_E);
-        DECL_TRAITS;
-        Direction get_dir () const { return EAST; }
-    public:
-        Turnstile_E() {}
-    };
-    DEF_TRAITSM(Turnstile_E, "st-turnstile-e", st_turnstile_e, MOVABLE_IRREGULAR);
-
-    class Turnstile_W : public Turnstile_Arm {
-        CLONEOBJ(Turnstile_W);
-        DECL_TRAITS;
-        Direction get_dir () const { return WEST; }
-    public:
-        Turnstile_W() {}
-    };
-    DEF_TRAITSM(Turnstile_W, "st-turnstile-w", st_turnstile_w, MOVABLE_IRREGULAR);
-}
-
-
-/* -------------------- Turnstile_Arm -------------------- */
-
-void Turnstile_Arm::on_impulse(const Impulse& impulse) {
-    enum Action { ROTL, ROTR, stay };
-    static Action actions[4][4] = {
-        { stay, ROTL, stay, ROTR }, // west arm
-        { ROTR, stay, ROTL, stay }, // south arm
-        { stay, ROTR, stay, ROTL }, // east arm
-        { ROTL, stay, ROTR, stay }  // north arm
-    };
-
-    Turnstile_Pivot_Base *pivot = get_pivot();
-
-    if (pivot) {
-        Action a = actions[get_dir()][impulse.dir];
-        if (a != stay) {
-            bool clockwise = (a == ROTR);
-            Actor *a = dynamic_cast<Actor*>(impulse.sender);
-            if ((pivot->get_traits().id == st_turnstile_green) && a != NULL &&
-                    player::WieldedItemIs(a, "it_wrench"))
-                clockwise = !clockwise;
-            pivot->rotate(clockwise, impulse.sender); // ROTR is clockwise
-        }
-    }
-    else {
-        // Move arms not attached to a pivot individually
-        move_stone(impulse.dir);
-    }
-}
-
-void Turnstile_Arm::actor_hit(const StoneContact &sc) 
-{
-    maybe_push_stone(sc);
-}
-
-// --------------------------------------------
-//      Turnstile_Pivot_Base implementation
-// --------------------------------------------
-
-Turnstile_Pivot_Base::Turnstile_Pivot_Base()
-: active (false)
-{}
-
-void Turnstile_Pivot_Base::animcb() 
-{ 
-    set_model(model()); 
-    active = false;
-}
-
-Value Turnstile_Pivot_Base::message(const Message &m)
-{
-    if (m.message == "signal") {
-        int val = m.value;
-        if (val == 1)
-            rotate(false, 0);
-        else
-            rotate(true, 0);
-        return Value();
-    }
-    return Stone::message(m);
-}
-
-
-DirectionBits
-Turnstile_Pivot_Base::arms_present() const
-{
-    DirectionBits arms = NODIRBIT;
-    GridPos p = get_pos();
-    if (dynamic_cast<Turnstile_N*>(GetStone(move(p, NORTH))))
-        ecl::set_flags (arms, NORTHBIT);
-    if (dynamic_cast<Turnstile_S*>(GetStone(move(p, SOUTH))))
-        ecl::set_flags (arms, SOUTHBIT);
-    if (dynamic_cast<Turnstile_E*>(GetStone(move(p, EAST))))
-        ecl::set_flags (arms, EASTBIT);
-    if (dynamic_cast<Turnstile_W*>(GetStone(move(p, WEST))))
-        ecl::set_flags (arms, WESTBIT);
-    return arms;
-}
-
-bool Turnstile_Pivot_Base::no_stone (int xoff, int yoff) const {
-    GridPos p = get_pos();
-    p.x += xoff;
-    p.y += yoff;
-    return (0 == GetStone(p));
-}
-
-void Turnstile_Pivot_Base::remove_arms (DirectionBits arms) {
-    GridPos p = get_pos();
-    if (arms & NORTHBIT) KillStone (move (p, NORTH));
-    if (arms & EASTBIT) KillStone (move (p, EAST));
-    if (arms & SOUTHBIT) KillStone (move (p, SOUTH));
-    if (arms & WESTBIT) KillStone (move (p, WEST));
-}
-
-void Turnstile_Pivot_Base::rotate_arms (DirectionBits arms, bool clockwise) {
-    GridPos p = get_pos();
-
-//    RBI_vector Nrubs;
-//    RBI_vector Erubs;
-//    RBI_vector Srubs;
-//    RBI_vector Wrubs;
-
-//    if (arms & NORTHBIT) GiveRubberBands(GetStone(move (p, NORTH)), Nrubs);
-//    if (arms & EASTBIT) GiveRubberBands(GetStone(move (p, EAST)), Erubs);
-//    if (arms & SOUTHBIT) GiveRubberBands(GetStone(move (p, SOUTH)), Srubs);
-//    if (arms & WESTBIT) GiveRubberBands(GetStone(move (p, WEST)), Wrubs);
-
-    remove_arms(arms);
-
-    if (clockwise) {
-	if (arms & NORTHBIT) set_arm(EAST);
-	if (arms & EASTBIT)  set_arm(SOUTH);
-	if (arms & SOUTHBIT) set_arm(WEST);
-	if (arms & WESTBIT)  set_arm(NORTH);
-    }
-    else {
-	if (arms & NORTHBIT) set_arm(WEST);
-	if (arms & EASTBIT)  set_arm(NORTH);
-	if (arms & SOUTHBIT) set_arm(EAST);
-	if (arms & WESTBIT)  set_arm(SOUTH);
-    }
-}
-
-void Turnstile_Pivot_Base::set_arm (Direction dir) {
-    const char *names[4] = { "st-turnstile-w", "st-turnstile-s",
-                             "st-turnstile-e", "st-turnstile-n" };
-    Stone   *st   = MakeStone(names[dir]);
-    GridPos  newp = move(get_pos(), dir);
-    SetStone (newp, st);
-
-    if (Item *it = GetItem(newp))
-        it->on_stonehit(st);
-
-//    if (!rubs.empty())
-//	for (RBI_vector::iterator i = rubs.begin(); i != rubs.end(); ++i)
-//	    AddRubberBand (i->act, st, i->data);
-}
-
-bool Turnstile_Pivot_Base::rotate(bool clockwise, Object *impulse_sender) {
-    if (active)
-        return false;
-
-    DirectionBits arms       = arms_present();
-    bool          can_rotate = true;
-
-    if (clockwise)  {
-        if (arms & NORTHBIT) {
-            can_rotate &= no_stone(+1,-1);
-            if (! (arms & EASTBIT)) can_rotate &= no_stone(+1,0);
-        }
-        if (arms & WESTBIT) {
-            can_rotate &= no_stone(-1,-1);
-            if (! (arms & NORTHBIT)) can_rotate &= no_stone(0,-1);
-        }
-        if (arms & SOUTHBIT) {
-            can_rotate &= no_stone(-1,+1);
-            if (! (arms & WESTBIT)) can_rotate &= no_stone(-1,0);
-        }
-        if (arms & EASTBIT) {
-            can_rotate &= no_stone(+1,+1);
-            if (! (arms & SOUTHBIT)) can_rotate &= no_stone(0,+1);
-        }
-    }
-    else {
-        if (arms & NORTHBIT) {
-            can_rotate &= no_stone(-1,-1);
-            if (! (arms & WESTBIT)) can_rotate &= no_stone(-1,0);
-        }
-        if (arms & WESTBIT) {
-            can_rotate &= no_stone(-1,+1);
-            if (! (arms & SOUTHBIT)) can_rotate &= no_stone(0,+1);
-        }
-        if (arms & SOUTHBIT) {
-            can_rotate &= no_stone(+1,+1);
-            if (! (arms & EASTBIT)) can_rotate &= no_stone(+1,0);
-        }
-        if (arms & EASTBIT) {
-            can_rotate &= no_stone(+1,-1);
-            if (! (arms & NORTHBIT)) can_rotate &= no_stone(0,-1);
-        }
-    }
-
-    if (can_rotate) {
-        sound_event (clockwise ? "turnstileright" : "turnstileleft");
-        sound_event("movesmall");
-
-        active = true;
-        set_anim(anim());
-	    rotate_arms(arms, clockwise);
-        handleActorsAndItems(clockwise, impulse_sender);
-
-        performAction(clockwise == 0);
-        server::IncMoveCounter();
-    }
-    return can_rotate;
-}
-
-namespace {
-    bool calc_arm_seen (bool cw, DirectionBits arms, int field) {
-        // for each field calculate whether an arm has passed by, first
-        // counterclockwise and then clockwise:
-        const DirectionBits neededArm[2][8] = {
-            {WESTBIT, NORTHBIT, NORTHBIT, EASTBIT, EASTBIT, SOUTHBIT, SOUTHBIT, WESTBIT},
-            {NORTHBIT, NORTHBIT, EASTBIT, EASTBIT, SOUTHBIT, SOUTHBIT, WESTBIT, WESTBIT}
-        };
-        return (arms & neededArm[cw][field]) != 0;
-    }
-}
-
-void Turnstile_Pivot_Base::handleActorsAndItems(bool clockwise, Object *impulse_sender) {
-    const int to_index[3][3] = { // (read this transposed)
-        { 0, 7, 6 }, // x == 0
-        { 1,-1, 5 }, // x == 1
-        { 2, 3, 4 }  // x == 2
-    };
-    const int to_x[8] = { -1, 0, 1, 1, 1, 0, -1, -1 };
-    const int to_y[8] = { -1, -1, -1, 0, 1, 1, 1, 0 };
-
-    bool arm_seen[8];
-    DirectionBits arms = arms_present(); // Note: already the rotated state
-    for (int i = 0; i<8; ++i)
-        arm_seen[i] = calc_arm_seen (clockwise, arms, i);
-
-    // ---------- Handle items in range ----------
-    GridPos pv_pos = get_pos();
-    for (int i = 0; i<8; ++i) 
-        if (arm_seen[i]) {
-            GridPos item_pos(pv_pos.x+to_x[i], pv_pos.y+to_y[i]);
-            if (Item *it = GetItem(item_pos)) { 
-                if (it->get_traits().id == it_laserbeam)
-                    KillItem(item_pos); 
-                else
-                    it->on_stonehit(this); // hit with pivot (shouldn't matter)
-            }
-        }
-
-    // ---------- Handle actors in range ----------
-    vector<Actor*> actorsInRange;
-
-    // tested range is sqrt(sqr(1.5)+sqr(1.5)) 
-    if (!GetActorsInRange(pv_pos.center(), 2.124, actorsInRange))
-        return;
-
-    vector<Actor*>::iterator iter = actorsInRange.begin(), end = actorsInRange.end();
-    for (; iter != end; ++iter) {
-        Actor *ac = *iter;
-        const V2 &ac_center = ac->get_pos();
-        GridPos   ac_pos(ac_center);
-        int dx  = ac_pos.x-pv_pos.x;
-        int dy  = ac_pos.y-pv_pos.y;
-
-        // ignore if actor is not inside the turnstile square or is not
-        // in distance of the the rotating arms
-        if ((dx<-1 || dx>1 || dy<-1 || dy>1) || 
-                (length(ac->get_pos() - pv_pos.center()) > 1.58114 + ac->get_actorinfo()->radius))
-            continue;
-
-        int idx_source = to_index[dx+1][dy+1];
-        if (idx_source == -1) 
-            continue;       // actor inside pivot -- should not happen
-
-        const int rot_index[4][8] = {
-            // The warp-destinations for actors. Why different destinations
-            // for oxyd/non-oxyd-type turnstiles? Imagine the actor on position
-            // 1 (North of pivot), the turnstile rotates anticlockwise. Then
-            // a green turnstile-arm, if at all, would push the actor one field
-            // to the left (position 0). Now assume it's a red turnstile. If the
-            // actor is to be warped, it has to be the one that activated the
-            // turnstile. Yet it is on position 1, in principle not able to
-            // hit an arm. But it can, if it hits fast enough on the edge of
-            // pivot and left arm. In this case, the actor should be handled
-            // as if on position 1, thus warping to 6.
-            { 6,  0, 0,  2, 2,  4, 4,  6 }, // anticlockwise
-            { 2,  2, 4,  4, 6,  6, 0,  0 }, // clockwise
-            { 6,  6, 0,  0, 2,  2, 4,  4 }, // anticlockwise (oxyd-compatible)
-            { 2,  4, 4,  6, 6,  0, 0,  2 }, // clockwise (oxyd-compatible)
-        };
-
-        bool compatible = oxyd_compatible();
-        int  idx_target = rot_index[clockwise+2*compatible][idx_source]; // destination index
-        bool do_warp = false; // move the actor along with the turnstile?
-
-        if (compatible) {
-            // Move only the actor that hit the turnstile in Oxyd mode
-            do_warp = (ac == dynamic_cast<Actor*>(impulse_sender));
-            if (!do_warp && arm_seen[idx_source])
-                SendMessage(ac, "shatter"); // hit by an arm
-        } else { // green turnstile
-            // move all actors only if pushed by an arm
-            do_warp = arm_seen[idx_source];
-        }
-
-        if (!do_warp) 
-            continue;
-
-        // Pushing an actor out of the level results in a shatter (no warp) instead
-        GridPos ac_target_pos(pv_pos.x+to_x[idx_target], pv_pos.y+to_y[idx_target]);
-
-        if(!IsInsideLevel(ac_target_pos)) {
-            SendMessage(ac, "shatter");
-            continue;
-        }
-
-        WarpActor(ac, ac_target_pos.x+.5, ac_target_pos.y+.5, false);
-
-        if (Stone *st = GetStone(ac_target_pos)) {
-
-            // destination is blocked
-
-            Turnstile_Arm *arm = dynamic_cast<Turnstile_Arm*>(st);
-            if (arm && !compatible) { // if blocking stone is turnstile arm -> hit it!
-                const int impulse_dir[2][8] = {
-                    // anticlockwise
-                    { SOUTHBIT|WESTBIT, WESTBIT, NORTHBIT|WESTBIT, NORTHBIT,
-                      NORTHBIT|EASTBIT, EASTBIT, SOUTHBIT|EASTBIT, SOUTHBIT },
-                    // clockwise
-                    { NORTHBIT|EASTBIT, EASTBIT, SOUTHBIT|EASTBIT, SOUTHBIT,
-                      SOUTHBIT|WESTBIT, WESTBIT, NORTHBIT|WESTBIT, NORTHBIT }
-                };
-
-                DirectionBits possible_impulses =
-                    static_cast<DirectionBits>(impulse_dir[clockwise][idx_target]);
-
-                for (int d = 0; d<4; ++d) 
-                    if (has_dir(possible_impulses, Direction(d))) 
-                        ac->send_impulse(ac_target_pos, Direction(d));
-
-//                 if (GetStone(ac_target_pos) == 0)  // arm disappeared
-//                     break;
-            }
-        }
-    }
-
-// @@@ FIXME: it's possible that two actors are moved to the same
-// destination field.  In that case the second actor is put on top of
-// the first actor (happens only in non-oxyd-compat-mode with three
-// balls or pullers/impulsestones)
-//
-// Note: With black and whiteball it's normally no problem, because
-// when one of the actors was moving, it's looking natural.  Problems
-// occur when small balls come into play.
-
-}
-
-
 /* -------------------- Mail stone -------------------- */
 
 namespace
@@ -2389,13 +1925,6 @@
 
     Register(new StoneImpulseStone);
 
-    Register (new Turnstile_Pivot); // oxyd-comaptible
-    Register (new Turnstile_Pivot_Green); // not oxyd-comaptible
-    Register (new Turnstile_N);
-    Register (new Turnstile_S);
-    Register (new Turnstile_E);
-    Register (new Turnstile_W);
-
 }
 
 } // namespace enigma



From ral at mail.berlios.de  Sun Jul 20 19:29:23 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 20 Jul 2008 19:29:23 +0200
Subject: [Enigma-game-svn] r1240 - in trunk: data/schemas src src/lev
Message-ID: <200807201729.m6KHTNqc009116@sheep.berlios.de>

Author: ral
Date: 2008-07-20 19:29:21 +0200 (Sun, 20 Jul 2008)
New Revision: 1240

Modified:
   trunk/data/schemas/objects.xml
   trunk/src/WorldProxy.cc
   trunk/src/actors.cc
   trunk/src/items.cc
   trunk/src/items.hh
   trunk/src/lev/Proxy.cc
   trunk/src/player.cc
   trunk/src/player.hh
   trunk/src/server.cc
   trunk/src/server.hh
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering
- rename attribute 'mousefactor' to 'adhesion' (it_strip)
- fix it_strip: ensure up to speed 50 grid/s that a large marble does not
  touch floor on hit of neighboring stone
- add attribute 'movable' support for st_turnstilearm
- add global attribute 'ProvideExtralifes': defaults to true - must be set
  befor world init
- add global attribute 'SurviveFinish': defaults to true for 1.10, but false
  for earlier releases. Actor must be alive when finish conditions are met.
- fix: ensure that lasered marble shatter within same tick


Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/data/schemas/objects.xml	2008-07-20 17:29:21 UTC (rev 1240)
@@ -2,6 +2,7 @@
 <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="objects.xsd">
   <attributes>
     <attr name="action" type="tokens" default="nil" rw="rw"/>
+    <attr name="adhesion" type="double" default="nil" rw="rw"/>
     <attr name="anchor1" type="tokens" default="nil" rw="rw"/>
     <attr name="anchor2" type="tokens" default="nil" rw="rw"/>
     <attr name="autoclose" type="bool" default="false" rw="rw"/>
@@ -34,7 +35,6 @@
     <attr name="loop" type="bool" default="true" rw="rw"/>
     <attr name="max" type="double" default="0" rw="rw"/>
     <attr name="min" type="double" default="0" rw="rw"/>
-    <attr name="mousefactor" type="double" default="nil" rw="rw"/>
     <attr name="movable" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
     <attr name="nopaction" type="bool" default="false" rw="rw"/>
@@ -180,7 +180,7 @@
     <object name="it_strip">
       <attr name="connections"/>
       <attr name="friction"/>
-      <attr name="mousefactor"/>
+      <attr name="adhesion"/>
     </object>
     <object name="it_strip_w">
       <attr name="connections" value="w"/>
@@ -701,6 +701,7 @@
       <attr name="state" max="3"/>
       <attr name="connections"/>
       <attr name="orientation"/>
+      <attr name="movable" default="true" rw="r"/>
       <msg name="orientate"/>
     </object>
     <object name="st_turnstilearm_n">

Modified: trunk/src/WorldProxy.cc
===================================================================
--- trunk/src/WorldProxy.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/WorldProxy.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -66,8 +66,12 @@
             return (server::GetDifficulty() == DIFFICULTY_HARD);  // read only
         } else if (key == "LevelTime") {   
             return server::LevelTime;    // read only
+        } else if (key == "ProvideExtralifes") {
+            return server::ProvideExtralifes;
         } else if (key == "ShowMoves") {
             return server::ShowMoves;
+        } else if (key == "SurviveFinish") {
+            return server::SurviveFinish;
         } else if (key == "Width") {
             return Width();
         } else if (key == "Brittleness") {
@@ -145,9 +149,17 @@
         } else if (key == "FollowThreshold") {
             server::FollowThreshold = val;
             display::UpdateFollowMode();
+        } else if (key == "ProvideExtralifes") {
+            bool newFlag = val.to_bool();
+            ASSERT(server::ProvideExtralifes || !newFlag, XLevelRuntime, 
+                "Attribute 'ProvideExtralifes': toggling from false to true not allowed");
+            server::ProvideExtralifes = newFlag;
+            
         } else if (key == "ShowMoves") {
             server::ShowMoves = val.to_bool();
             STATUSBAR->show_move_counter (server::ShowMoves);
+        } else if (key == "SurviveFinish") {
+            server::SurviveFinish = val.to_bool();
         } else if (key == "Brittleness") {
             server::Brittleness = val;
         } else if (key == "ActorimpulseStrength") {

Modified: trunk/src/actors.cc
===================================================================
--- trunk/src/actors.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/actors.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -140,7 +140,7 @@
     if (m_actorinfo.field) {
         Floor *fl = m_actorinfo.field->floor;
         Item *it = m_actorinfo.field->item;
-        bool item_covers_floor = (it && it->covers_floor(m_actorinfo.pos));
+        bool item_covers_floor = (it && it->covers_floor(m_actorinfo.pos, this));
         if (!item_covers_floor && fl && this->is_on_floor())
             fl->actor_contact(this);
     }
@@ -802,6 +802,12 @@
                 handled = true;
             }
             break;
+        case SHATTERING:
+            if (m.message == "_levelfinish") {
+                change_state(DEAD);
+                handled = true;
+            }
+            break;
         case DEAD:
             if (m.message == "resurrect") {
                 change_state(RESURRECTED);
@@ -918,7 +924,7 @@
 
     Floor *fl = m_actorinfo.field->floor;
     Item *it = m_actorinfo.field->item;
-    if (!(it != NULL && it->covers_floor(get_pos())) && fl != NULL)
+    if (!(it != NULL && it->covers_floor(get_pos(), this)) && fl != NULL)
         fl->get_sink_speed (sink_speed, raise_speed);
     
     if (sink_speed == 0.0 || has_shield()) {
@@ -1107,11 +1113,11 @@
         break;
     case DISAPPEARING:
         GrabActor(this);
-	disable_shield();
+        disable_shield();
         set_anim(kind+"-disappear");
         break;
     case RESURRECTED:
-	disable_shield();
+        disable_shield();
         sinkDepth = minSinkDepth;
 	break;
     default:

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/items.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -142,7 +142,7 @@
         GridObject::processLight(d);
 }
 
-double Item::getFriction(ecl::V2 pos, double defaultFriction) {
+double Item::getFriction(ecl::V2 pos, double defaultFriction, Actor *a) {
     return defaultFriction;
 }
 
@@ -3905,8 +3905,8 @@
         virtual void init_model();
                 
         // Items interface
-        virtual bool covers_floor(ecl::V2 pos) const;
-        virtual double getFriction(ecl::V2 pos, double defaultFriction);
+        virtual bool covers_floor(ecl::V2 pos, Actor *a) const;
+        virtual double getFriction(ecl::V2 pos, double defaultFriction, Actor *a);
         virtual ecl::V2 calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce);
         
     private:
@@ -3954,11 +3954,26 @@
         GridObject::init_model();
     }
 
-    bool StripItem::covers_floor(ecl::V2 pos) const {
+    bool StripItem::covers_floor(ecl::V2 pos, Actor *a) const {
         if (GridPos(pos) != get_pos())
             return false;
 
-        const double MAXDIST = 6.0/32;
+        double velocity = 0;
+        if (a != NULL) 
+            velocity = ecl::length(a->get_actorinfo()->vel);
+            
+        // calculate the maximal horizontal or vertical distance from the center:
+        // gurantee that a large marble can touch a neighboring stone at speed 0,
+        // and a fast marble does not step off the strip on hitting a neighbor stone.
+        // A fast marble might not reach the stone in one timestep while being
+        // on top of the strip and is afterwards moved forward off the strip.
+        // Thus we must expand the strip with increasing speed of the actor - call
+        // it a relativistic effect :-)
+        // d = 1/2 - 19/64 - 0.02 + velocity/400 
+        //  = 1/2 - radius large marble - epsilon + velocity/(1/2.5 ms)
+        // we need to limit the speed to avoid a fast marble traversing the gap in
+        // two timesteps! 
+        double MAXDIST = 0.183125 + ecl::Clamp(velocity/400, 0.0, 0.125);
         
         double ycenter = get_pos().y + 0.5;
         double xcenter = get_pos().x + 0.5;
@@ -3971,17 +3986,17 @@
                 ? true : false;
     }
     
-    double StripItem::getFriction(ecl::V2 pos, double defaultFriction) {
+    double StripItem::getFriction(ecl::V2 pos, double defaultFriction, Actor *a) {
         Value v = getAttr("friction");
-        if (v && covers_floor(pos))
+        if (v && covers_floor(pos, a))
             return v;
         else
             return defaultFriction;
     }
     
     ecl::V2 StripItem::calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce) {
-        Value v = getAttr("mousefactor");
-        if (v && covers_floor(a->get_pos()))
+        Value v = getAttr("adhesion");
+        if (v && covers_floor(a->get_pos(), a))
             return mouseForce * (double)v ;
         else
             return floorForce;        

Modified: trunk/src/items.hh
===================================================================
--- trunk/src/items.hh	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/items.hh	2008-07-20 17:29:21 UTC (rev 1240)
@@ -191,7 +191,7 @@
         const char *get_kind() const;
         void init_model();
         virtual void processLight(Direction d);
-        virtual double getFriction(ecl::V2 pos, double defaultFriction);
+        virtual double getFriction(ecl::V2 pos, double defaultFriction, Actor *a);
         virtual ecl::V2 calcMouseforce(Actor *a, ecl::V2 mouseForce, ecl::V2 floorForce);
 
         /* ---------- Item interface ---------- */
@@ -206,7 +206,7 @@
           case the Floor::actor_contact() will not be called
           automatically; this must be done from `Item::actor_hit' (if
           at all). */
-        virtual bool covers_floor(ecl::V2 pos) const { return false; }
+        virtual bool covers_floor(ecl::V2 pos, Actor *a) const { return false; }
 
         /*! Return the force an item exerts on actor `a'.  This is
           used by sloped and hills for force fields that are local to

Modified: trunk/src/lev/Proxy.cc
===================================================================
--- trunk/src/lev/Proxy.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/lev/Proxy.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -625,8 +625,10 @@
             server::SetCompatibility(this);
             server::EnigmaCompatibility = getEnigmaCompatibility();
             server::LevelStatus = getLevelStatus();
-            if (server::EnigmaCompatibility < 1.10)
+            if (server::EnigmaCompatibility < 1.10) {
                 server::AllowSingleOxyds = true;
+                server::SurviveFinish = false;
+            }
             server::PrepareLua();
         }
         processDependencies();

Modified: trunk/src/player.cc
===================================================================
--- trunk/src/player.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/player.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -154,13 +154,13 @@
 
 /* -------------------- Functions -------------------- */
 
-void player::NewGame (bool isRestart) {
+void player::NewGame() {
     int nplayers = 2;           // Always prepare for two players
     std::vector<int> extralives(2);
 
     // calculate number of extralives
     for (int i=0; i<nplayers; ++i) {
-        if (isRestart) {
+        if (server::IsLevelRestart) {
             // count existing number of extralives
             int idxLife = -1;
             extralives[i] = -1;
@@ -170,7 +170,7 @@
             } while (idxLife != -1);
         } else {
             // new game provides 2 extralives
-            extralives[i] = 2;
+            extralives[i] = (server::ProvideExtralifes) ? 2 : 0;
         }
     }
 
@@ -225,13 +225,17 @@
     leveldat = LevelLocalData();
 }
 
-void player::LevelFinished() 
+void player::LevelFinished(int stage) 
 {
     for (unsigned i=0; i<players.size(); ++i) {
         for (unsigned j=0; j<players[i].actors.size(); ++j) {
             Actor *a = players[i].actors[j];
-            SendMessage(a, "disappear");
-            SendMessage(a, "disconnect");
+            if (stage == 0) {
+                SendMessage(a, "_levelfinish");
+            } else {
+                SendMessage(a, "disappear");
+                SendMessage(a, "disconnect");
+            }
         }
     }
 }
@@ -402,8 +406,7 @@
     unassignedActors.push_back(a);
 }
 
-static void CheckDeadActors() 
-{
+void player::CheckDeadActors() {
     bool           toggle_player    = false;
     const unsigned NO_PLAYER        = UINT_MAX;
     unsigned       toggle_to_player = NO_PLAYER;

Modified: trunk/src/player.hh
===================================================================
--- trunk/src/player.hh	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/player.hh	2008-07-20 17:29:21 UTC (rev 1240)
@@ -37,7 +37,7 @@
     namespace player {
 
         /*! Start a new game for two virtual players. */
-        void NewGame(bool isRestart);
+        void NewGame();
 
         /*! This is called whenever a new level is reached in a running
           game.  The inventories of all players are cleaned up, i.e., all
@@ -53,7 +53,7 @@
 
         /*! Called as soon as the current level is finished; it removes
           the actors of all players from the level. */
-        void LevelFinished();
+        void LevelFinished(int stage);
 
         /* This function is only used by the YinYang items to exchange the
            two players. */
@@ -96,6 +96,7 @@
         ItemAction ActivateItem (Item *it);
 
         void Tick (double dtime);
+        void CheckDeadActors();
         void PlayerShutdown();
 
     } // namespace player

Modified: trunk/src/server.cc
===================================================================
--- trunk/src/server.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/server.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -56,6 +56,7 @@
         sv_paused,
         sv_restart_level,
         sv_restart_game,
+        sv_finishing,
         sv_finished,
     };
 
@@ -82,6 +83,9 @@
 bool     server::AllowTogglePlayer;
 bool     server::CreatingPreview = false;   // read only for Lua
 bool     server::ConserveLevel;
+bool     server::IsLevelRestart;            // no Lua access
+bool     server::ProvideExtralifes;
+bool     server::SurviveFinish;
 
 Value    server::FollowAction;
 bool     server::FollowGrid;
@@ -136,9 +140,10 @@
 {
     try {
         server::PrepareLevel();
+        IsLevelRestart = isRestart;
 
         // clear inventory before level load and give us 2 extralives
-        player::NewGame(isRestart);
+        player::NewGame();
 
         levelProxy->loadLevel();  // sets the compatibility mode
 
@@ -243,6 +248,8 @@
     server::WorldInitialized  = false;
     server::LevelTime         = 0.0;
     server::ConserveLevel     = true;
+    server::ProvideExtralifes = true;
+    server::SurviveFinish     = true;
     server::TwoPlayerGame     = false;
     server::SingleComputerGame= true;
     server::AllowSingleOxyds  = false;
@@ -297,7 +304,7 @@
 
 void server::RestartLevel() 
 {
-    if (state == sv_running || state == sv_finished) {
+    if (state == sv_running || state == sv_finished || state == sv_finishing) {
         state = sv_restart_level;
         current_state_dtime = 0;
     }
@@ -309,57 +316,60 @@
 
 void server::Msg_RestartGame() 
 {
-    if (state == sv_running || state == sv_finished) {
+    if (state == sv_running || state == sv_finished || state == sv_finishing) {
         state = sv_restart_game;
         current_state_dtime = 0;
     }
 }
 
-void server::FinishLevel()
-{
+void server::FinishLevel() {
     if (state == sv_running) {
-        state = sv_finished;
-        current_state_dtime = 0;
-        player::LevelFinished(); // remove player-controlled actors
-        client::Msg_Command("level_finished");
+        state = sv_finishing;
     }
-    else {
-        // XXX server internal error: should only be called while game is running
-    }
 }
 
-
-void server::Tick (double dtime) 
-{
+void server::Tick (double dtime) {
     switch (state) {
-    case sv_idle:
-        break;
-    case sv_paused:
-        break;
-    case sv_waiting_for_clients:
-        break;
-    case sv_running: 
-        gametick (dtime);
-        break;
-    case sv_restart_level:
-    case sv_restart_game:
-        current_state_dtime += dtime;
-        if (current_state_dtime >= 1.0) {
-            lev::Index *ind = lev::Index::getCurrentIndex();
-            load_level(ind->getCurrent(), (state == sv_restart_level));
-        } else {
-            gametick(dtime);
-        }
-        break;
-    case sv_finished:
-        current_state_dtime += dtime;
-        if (current_state_dtime <= 2.5)
-            gametick(dtime);
-        else {
-            client::Msg_AdvanceLevel (lev::ADVANCE_NEXT_MODE);
-            state = sv_waiting_for_clients;
-        }
-        break;
+        case sv_idle:
+            break;
+        case sv_paused:
+            break;
+        case sv_waiting_for_clients:
+            break;
+        case sv_running: 
+            gametick (dtime);
+            break;
+        case sv_restart_level:
+        case sv_restart_game:
+            current_state_dtime += dtime;
+            if (current_state_dtime >= 1.0) {
+                lev::Index *ind = lev::Index::getCurrentIndex();
+                load_level(ind->getCurrent(), (state == sv_restart_level));
+            } else {
+                gametick(dtime);
+            }
+            break;
+        case sv_finishing:
+            if (server::SurviveFinish) {
+                player::LevelFinished(0);     // mark all shattered actors as dead
+                player::CheckDeadActors();    // restart level or game if actors are dead!
+            }
+            if (state == sv_finishing) {
+                state = sv_finished;
+                current_state_dtime = 0;
+                player::LevelFinished(1); // remove player-controlled actors
+                client::Msg_Command("level_finished");
+            }
+            break;
+        case sv_finished:
+            current_state_dtime += dtime;
+            if (current_state_dtime <= 2.5)
+                gametick(dtime);
+            else {
+                client::Msg_AdvanceLevel (lev::ADVANCE_NEXT_MODE);
+                state = sv_waiting_for_clients;
+            }
+            break;
     }
 }
 

Modified: trunk/src/server.hh
===================================================================
--- trunk/src/server.hh	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/server.hh	2008-07-20 17:29:21 UTC (rev 1240)
@@ -58,6 +58,9 @@
     // True: do not reset level when player dies
     extern bool     ConserveLevel;
 
+    extern bool     IsLevelRestart;
+    extern bool     ProvideExtralifes;
+    extern bool     SurviveFinish;
     extern bool     TwoPlayerGame;
 
     extern bool     SingleComputerGame;

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/src/world.cc	2008-07-20 17:29:21 UTC (rev 1240)
@@ -418,6 +418,13 @@
     GameTimer.tick(dtime);
 
     PerformRecalcLight(false);   // recalculate laser beams if necessary
+    // do kill lasered actors in same time step
+    for (unsigned i=0; i < actorlist.size(); ++i) {
+        Item *it = actorlist[i]->get_actorinfo()->field->item;
+        if (it != NULL && get_id(it) == it_laserbeam) {
+            it->actor_hit(actorlist[i]);
+        }
+    }
 }
 
 /* ---------- Puzzle scrambling -------------------- */
@@ -502,7 +509,7 @@
         }
 
         if (Item *item = a->m_actorinfo.field->item) {
-            friction = item->getFriction(a->get_pos(), friction);
+            friction = item->getFriction(a->get_pos(), friction, a);
             if (a->get_controllers() != 0) {
                 m = item->calcMouseforce(a, m_mouseforce.get_force(a), m);
             }
@@ -1518,6 +1525,7 @@
     level.reset (new World(w,h));
     display::NewWorld(w, h);
     server::WorldSized = true;
+    player::NewGame();
 }
 
 int Width() {



From ral at mail.berlios.de  Sun Jul 20 22:01:52 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 20 Jul 2008 22:01:52 +0200
Subject: [Enigma-game-svn] r1241 - trunk/src
Message-ID: <200807202001.m6KK1qw7002320@sheep.berlios.de>

Author: ral
Date: 2008-07-20 22:01:51 +0200 (Sun, 20 Jul 2008)
New Revision: 1241

Modified:
   trunk/src/floors.cc
Log:
Trunk 1.1: 
- fix: old fl-bridge missing state transition that caused trouble on multiple
  open messages while opening.
Note:
- fl-bridge needs a complete reengineering to ensure stability

Modified: trunk/src/floors.cc
===================================================================
--- trunk/src/floors.cc	2008-07-20 17:29:21 UTC (rev 1240)
+++ trunk/src/floors.cc	2008-07-20 20:01:51 UTC (rev 1241)
@@ -749,7 +749,7 @@
 
 Value Bridge::message(const Message &m)
 {
-    if (m.message == "open" && (state==CLOSED || state==CLOSING)) {
+    if (m.message == "open" && (state==CLOSED || state==CLOSING|| state==OPENING)) {
         change_state(OPENING);
         return Value();
     } else if (m.message == "close") {



From ral at mail.berlios.de  Sun Jul 20 23:48:20 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 20 Jul 2008 23:48:20 +0200
Subject: [Enigma-game-svn] r1242 - trunk/doc/reference
Message-ID: <200807202148.m6KLmKoc011469@sheep.berlios.de>

Author: ral
Date: 2008-07-20 23:48:08 +0200 (Sun, 20 Jul 2008)
New Revision: 1242

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API
- refman docu updates for r1241


Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2008-07-20 20:01:51 UTC (rev 1241)
+++ trunk/doc/reference/enigma-ref.texi	2008-07-20 21:48:08 UTC (rev 1242)
@@ -2673,7 +2673,9 @@
 @menu
 * World's Shape and Coordinates::    Grid Positions and Tiles
 * Object Layers::                    Floors, Items, Stones, Actors and Others
-* Global World Attributes::          Friction, Brittleness, Modes and Co.
+* World as an Object::               Global attributes and handle
+* Unpositioned Objects::             Other objects like rubbers and gadgets
+* Owned Items::                      Players Inventories and other containers
 @end menu
 
 @c ----------------- World's Shape and Coordinates -------------------- 
@@ -2720,7 +2722,7 @@
 part of a tile, whereas the right and lower edge belong to the neighbour tiles.
 
 @cindex tile
-Finally let us look more precisly on the tile itself. On one grid position you
+Finally let us look more precisely on the tile itself. On one grid position you
 may place a floor, an item, a stone and even several actors. The combination
 of all objects on one grid position is called a @dfn{tile}. It is a common 
 technique to declare these object combinations once in so called tile 
@@ -2770,15 +2772,29 @@
 placed at any position. Actors that pass a stone will be displayed below the
 stone.
 
-As a certain exception rubberbands that connect an actor with another one or 
-with a stone will simply be added to the world and will be displayed above any
-stone.
+ at node World as an Object
+ at subsection World as an Object
 
- at node Global World Attributes
- at subsection Global World Attributes
-
 Friction, Brittleness, Modes and Co., Scrollmodes
 
+ at node Unpositioned Objects
+ at subsection Unpositioned Objects
+
+You should be missing at least one object, that can neither be assigned to a
+single position nor to one of the above layers: rubberbands! In fact there are
+many @ref{Other Objects} besides floors, items, stones and actors that are 
+unpositioned. Besides visible rubberbands and wires useful gadgets,
+that help in plug and play composition of levels, can be added to the world.
+
+All these other objects are full objects concerning the following chapters. But
+you need to use the world's @ref{add} method to add them and you need to use
+ at ref{Object Reference} or @ref{Object Naming} to access them lateron, as no
+position driven access does exist.
+
+
+ at node Owned Items
+ at subsection Owned Items
+
 @c ----------------- Object Description -------------------- 
 
 @node Object Description
@@ -2887,7 +2903,7 @@
 to add a unique random number to the given string. Thus an auto named object
 will never unname another prior auto named object. But if you delete an 
 auto named object that has been named e.g. @samp{mydoor#103284} the number and
-the same name may be assigned to another that is created lateron.
+the same name may be assigned to another that is created later on.
 
 All named objects are registered by the @dfn{named object} repository. The API
 provides a variable @samp{no} that allows you to retrieve any named object, e.g.
@@ -2919,18 +2935,18 @@
 
 With this tile declaration you can describe arbitrary number of floppy switches
 and nearby blocker doors in a world map all by the same two tile key characters.
-Every floppy switch will target the nearest blocker door. If two target are
+Every floppy switch will target the nearest blocker door. If two targets are
 given within the same distance the one located in the south will win. If the
 targets are additionally horizontally aligned the one located in east will win.
 In the rare case of objects located on the same position stones will preceed
 items, floors and actors. The chosen target or destination depends just on the
 location of these objects and their type, but nothing else. Thus you can rely
 on a stable selection mechanism. @ref{Nearest Object Clustering} may help you in
-case of unexpected selected equidistant targets. 
+case of unexpected selected equidistant targets.
 
 Auto naming and nearest object features help you to reduce the number
 of needed tile declarations. Resolvers like @ref{res.autotile} and
- at ref{res.composer} are other feature for reducing the need of tile declarations.
+ at ref{res.composer} are another feature for reducing the need of tile declarations.
 
 Another unique feature of object names is their late on access evaluation. This
 allows you to reference an object prior to its existence. E.g. if you want to
@@ -2961,9 +2977,9 @@
 @ref{Messages}. But what about the nearest object references? To avoid problems
 due to killed objects the standard nearest object reference with just one 
 @samp{@@} as prefix are finalized on @ref{Level Initialization}. This means that
-they get substituted by the unique name of the nearest object that exists after
-the creation of all objects and before the user takes action and can kill a
-candidate.
+they get substituted by the unique name of the nearest of all existing objects
+at a point of time when all objects have been created, but before the user takes
+action and can incidentally kill a candidate.
 
 But sometimes you may like a dynamic nearest object target or destination. One
 that is evaluated when it gets accessed. By prefixing a name with @samp{@@@@}
@@ -3333,6 +3349,7 @@
 * Library Preloading:: 
 * Snapshot Principle:: 
 * Level Initialization:: 
+* Object Transformation::         Identity Transfer in case of Transformations
 * Runtime Ticks and Callbacks:: 
 * Ending Conditions:: 
 @end menu
@@ -3404,6 +3421,21 @@
 oxyd shuffle
 postinit()
 
+ at node Object Transformation
+ at subsection Object Transformation
+
+During runtime some Enigma objects do transform into other successor objects,
+like an @ref{st_blocker}/@ref{it_blocker}, an @ref{st_brake}/@ref{it_brake},
+an @ref{it_rubberband}/@ref{ot_rubberband}, an @ref{it_hammer}/@ref{it_sword},...
+
+Even though the successor object may have other attributes, some attributes and
+especially any user attributes should be maintained. In fact the objects name,
+its target and action attributes and all attributes starting with an underscore
+ at samp{_}, the user attributes, are transfered to the successor object. Thus you
+can rely on the successor to message the same target and you can it access it
+via its old name.
+
+
 @node Runtime Ticks and Callbacks
 @subsection Runtime Ticks and Callbacks
 
@@ -3475,7 +3507,7 @@
 missing. The character length of this key defines the key size within the map
 @item @i{map}
 A table of strings. Each string describes a row of tiles by its tile keys.
-If a map is given, the worlds size is determined from the longest string and
+If a map is given, the world size is determined from the longest string and
 the number of rows.
 @item @i{width}
 As an argument that is given instead of a map it describes the width of the
@@ -3497,7 +3529,7 @@
 @item @b{Details:}
 This world constructor may just be called once. Every subsequent call causes
 an error. This call sets the size of the world to fixed values that are reported
-by its two return values. The world size can lateron be retrieved by the world
+by its two return values. The world size can later on be retrieved by the world
 attributes @ref{Width} and @ref{Height}, too.
 
 A mapless world is filled with default tiles. Rows in a given map that are
@@ -3506,7 +3538,7 @@
 
 Every key is resolved to its tile declaration via the given resolver chain.
 The top resolver is given to this call as a parameter. If it is @samp{ti} the
-chain consists just of one element and the tile delaration stored in the tiles
+chain consists just of one element and the tile declaration stored in the tiles
 repository at the given key is taken. But there exist several useful 
 @ref{Resolvers} that may simplify the task of level writing or provide dynamic
 features like randomness, mazes, etc. If you like to use one or several of them
@@ -3658,6 +3690,12 @@
 * nopaction::
 * inverse::
 * destination::
+* friction::
+* adhesion::
+* checkerboard::
+* rubbers::
+* wires::
+* fellows::
 * movable::
 * hit_*::
 @end menu
@@ -3824,6 +3862,113 @@
 @item @b{Support:} @ @ by teleporting objects
 @end table
 
+ at node friction
+ at subsection friction
+
+An attribute that describes the decelerating friction force on actors that are
+on the floor. The friction force increases with the speed of the actor and
+is decelarating for positive friction values. But friction can be set to
+negative values as well what generates an accelerating force that is very 
+difficult to control for the player.
+
+Besides all floors some floor covering items like @ref{it_strip}, @ref{it_hollow}
+may provide friction values as well to deviate from the floor friction.
+
+ at table @asis
+ at item @b{Type:} @ @ number
+ at item @b{Values:} @ @ any floating point number
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ by all floor, and floor covering item objects
+ at end table
+
+ at node adhesion
+ at subsection adhesion
+
+An attribute that describes the adhesion that allows an actor to accelarate on
+a floor. Greater adhesion leads to more accelerating force at the same given
+mouse speed. Adhesion can be set to negative values as well what generates an
+accelerating force in the inverse direction of the mouse movement which is a 
+little bit difficult to control for the player.
+
+Besides all floors some floor covering items like @ref{it_strip}, @ref{it_hollow}
+may provide adhesion values as well to deviate from the floor adhesion.
+
+ at table @asis
+ at item @b{Type:} @ @ number
+ at item @b{Values:} @ @ any floating point number
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ by all floor, and floor covering item objects
+ at end table
+
+ at node checkerboard
+ at subsection checkerboard
+
+An attribute that .
+
+ at table @asis
+ at item @b{Type:} @ @ bool
+ at item @b{Values:} @ @ @code{0}, @code{1}
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ by all floor, stone and item objects
+ at example
+ti["c"] = ti(@{"fl_sahara", checkerboard=0@}) .. @{"fl_tigris", checkerboard=1@}
+ at end example
+ at end table
+
+ at node rubbers
+ at subsection rubbers
+
+An attribute that gives you access to the @ref{ot_rubberband}s that are
+currently connected to this object.
+
+Note that this attribute is read only. You can use the rubberband references
+to kill or reconnect single rubberbands. But to add new rubberbands you need
+to use the world's @samp{add} method.
+
+ at table @asis
+ at item @b{Type:} @ @ group of @code{ot_rubberband} objects
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read only
+ at item @b{Support:} @ @ by actor and stone objects
+ at end table
+
+ at node wires
+ at subsection wires
+
+An attribute that gives you access to the @ref{ot_wire}s that are
+currently connected to this stone object.
+
+Note that this attribute is read only. You can use the wire references
+to kill or reconnect single wires. But to add new wires you need
+to use the world's @samp{add} method.
+
+ at table @asis
+ at item @b{Type:} @ @ group of @ref{ot_wire} objects
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read only
+ at item @b{Support:} @ @ by all stone objects
+ at end table
+
+ at node fellows
+ at subsection fellows
+
+An attribute that gives you access to the group of all objects that are currently
+connected either by an @ref{ot_rubberband} or an  @ref{ot_wire}.
+
+Note that this attribute is read only. It is just for evaluation of the current
+level state. But to add new rubberbands or wires you need to use the
+world's @samp{add} method.
+
+ at table @asis
+ at item @b{Type:} @ @ group of objects
+ at item @b{Default:} @ @ @code{nil}
+ at item @b{Access:} @ @ read only
+ at item @b{Support:} @ @ by actor and stone objects
+ at end table
+
 @node movable
 @subsection movable
 
@@ -3880,6 +4025,8 @@
 * off::
 * open::
 * close::
+* kill::
+* disconnect::
 @end menu
 
 @node toggle
@@ -3980,11 +4127,39 @@
 @item @b{Support:} @ @ by door like objects that can be opened and closed
 @end table
 
+ at node kill
+ at subsection kill
+
+This message causes the receipent to cease to exist. You are just allowed to
+kill objects that are directly part of the world. Objects owned by players,
+being content part of a bag or otherwise owned by another object will refuse
+this message on behalf of their owner.
+
+ at table @asis
+ at item @b{Value:} @ @ -
+ at item @b{Returns:} @ @ -
+ at item @b{Support:} @ @ by all world owned objects
+ at end table
+
+ at node disconnect
+ at subsection disconnect
+
+This message causes the receipent to disconnect from all @ref{fellows} by
+cutting all @ref{wires} and @ref{rubbers} that are connect to it.
+
+ at table @asis
+ at item @b{Value:} @ @ -
+ at item @b{Returns:} @ @ -
+ at item @b{Support:} @ @ by all objects
+ at end table
+
+
 @node Global Attributes
 @section Global Attributes
 
 @menu
 * ActorimpulseStrength::
+* CreatingPreview::
 * ExtralifeGlasses::
 * FollowAction::
 * FollowGrid::
@@ -3995,6 +4170,9 @@
 * MagnetRange:: 
 * MagnetStrength::
 * MaxOxydColor::
+* ProvideExtralifes::
+* ShowMoves::
+* SurviveFinish::
 * Width::
 * WormholeRange:: 
 * WormholeStrength:: 
@@ -4014,6 +4192,31 @@
 @item @b{Support:} @ @ @ref{st_actorimpulse}
 @end table
 
+ at node CreatingPreview
+ at subsection CreatingPreview
+
+A global read only variable that indicates if the current level load is just for
+creating a preview thumbnail of the level or a real game play. If @samp{true},
+you can, e.g., change the start-position of the main actor to display another
+part of the level in the preview, or hide objects from it. When changing the
+initial position, it might be advantageous to also set the 
+ at ref{Display Follow Strategy} to permanent smooth scrolling:
+
+ at example
+if wo["CreatingPreview"] then
+    wo["FollowGrid"] = false
+    wo["FollowMethod"] = FOLLOW_SCROLL
+end
+ at end example
+
+ at table @asis
+ at item @b{Type:} @ @ bool
+ at item @b{Values:} @ @ @code{true}, @code{false}
+ at item @b{Default:} @ @ @code{false}
+ at item @b{Access:} @ @ read only
+ at item @b{Support:} @ @ object independent
+ at end table
+
 @node ExtralifeGlasses
 @subsection ExtralifeGlasses
 
@@ -4178,6 +4381,52 @@
 @item @b{Support:} @ @ @ref{st_oxyd}
 @end table
 
+ at node ProvideExtralifes
+ at subsection ProvideExtralifes
+
+A global variable that causes two @ref{it_extralife}s to be added to both player
+inventories on start of a new level. Set it to @samp{false} if a gamer could
+misuse these items. It is important to set this attribute before the world is
+created (@pxref{World Creation and Resolver Chaining}).
+
+ at table @asis
+ at item @b{Type:} @ @ bool
+ at item @b{Values:} @ @ @code{true}, @code{false}
+ at item @b{Default:} @ @ @code{true}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ object independent
+ at end table
+
+ at node ShowMoves
+ at subsection ShowMoves
+
+A global variable that enables or disables the display of the stone push
+counter besides the level time. It is mainly used in Sokoban like levels.
+
+ at table @asis
+ at item @b{Type:} @ @ bool
+ at item @b{Values:} @ @ @code{true}, @code{false}
+ at item @b{Default:} @ @ @code{false}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ object independent
+ at end table
+
+ at node SurviveFinish
+ at subsection SurviveFinish
+
+A global variable that defines if the essential actors have to survive the
+finish of the game (@pxref{Ending Conditions}). With this attribute set to 
+ at samp{false} a gamer can sacrify an essential actor to finish the level in the
+same step in some subtle cases.
+
+ at table @asis
+ at item @b{Type:} @ @ bool
+ at item @b{Values:} @ @ @code{true}, @code{false}
+ at item @b{Default:} @ @ @code{true}
+ at item @b{Access:} @ @ read/write
+ at item @b{Support:} @ @ object independent
+ at end table
+
 @node Width
 @subsection Width
 
@@ -4252,8 +4501,11 @@
 * it_hammer::
 * it_key::             
 * it_landmine::        
-* it_magnet::
+* it_magicwand::       Wizards Tools
+* it_magnet::          
+* it_rubberband::      
 * it_sensor::          Floor Switch for passing Actors
+* it_strip::           Narrow Bridge
 * it_sword::
 * it_trap::            
 * it_trigger::         Floor Switch for Actors and Stones
@@ -4609,7 +4861,7 @@
 @item @b{Attributes:} none
 
 @table @asis
- at item @b{code}, @ @ @i{values}: number; @ @ @i{default}: @code{1}
+ at item @b{code}, @ @ @i{values}: number or string; @ @ @i{default}: @code{1}
 The code of a key must match that of an @ref{st_key} to unlock it.
 @end table
 
@@ -4622,6 +4874,8 @@
 @subsection it_landmine
 @obindex it_landmine
 
+!!TBD - Work in progress !!
+
 A static item that explodes on actors stepping onto its critical center part and
 on stones being pushed onto the mine.
 
@@ -4629,7 +4883,7 @@
 @ref{it_hollow} behind.
 
 Actors can jump over a landmine and pass carefully between two adjacent 
-landmines without activying the mines. Landmines do neither react on nearby
+landmines without activating the mines. Landmines do neither react on nearby
 explosions, nor fire, nor laserbeams.
 
 @table @asis
@@ -4641,6 +4895,38 @@
 
 @end table
 
+ at c ----------------- MagicWand Item -------------------- 
+ at node it_magicwand
+ at subsection it_magicwand
+ at obindex it_magicwand
+
+The wizard's tool, that allows to do all sort of magic things if it is the 
+wielded item in the player's inventory:
+
+ at itemize @bullet
+ at item Changes direction of a oneway stone (@ref{st_oneway}).
+ at item Changes direction of a boulder stone (@ref{st_boulder}).
+ at item Scrambles blue puzzle stones instead of pushing, causes complete
+clusters to explode (@ref{st_puzzle}).
+ at item Lets a @samp{st_stoneimpulse_movable} not pulse on pushed 
+(@ref{st_stoneimpulse})
+ at item Makes @code{st_brick_magic} transparent (@ref{st_brick_magic}).
+ at item Makes @code{st_invisible_magic} visible and non-transparent
+(@ref{st_invisible}).
+ at item Makes rubberband stones movable (@ref{st_rubberband}).
+ at item Changes the color of a chess stone (@ref{st_chess}).
+ at item Activates @code{st_yinyang3} (@ref{st_yinyang}).
+ at end itemize
+
+ at table @asis
+ at item @b{Attributes:} none
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at end table
+
 @c ----------------- Magnet Item -------------------- 
 @node it_magnet
 @subsection it_magnet
@@ -4697,6 +4983,56 @@
 
 @end table
 
+ at c ----------------- Rubberband Item -------------------- 
+ at node it_rubberband
+ at subsection it_rubberband
+ at obindex it_rubberband
+
+A portable @ref{ot_rubberband} that gets connected to the bearer on activation.
+
+As the rubberbands @samp{anchor1} is given by the activator itself, just the
+ at samp{anchor2} reference can be configured by this item. It can be any stone
+or actor reference. 
+
+Of special interest may be the usage of dynamic nearest object references 
+(@pxref{Object Naming}). A marble will be able to connect to the nearest
+object out of a given group.
+
+If @samp{anchor2} does not exist, the @samp{it_rubberband} will be dropped.
+
+The other attributes describe the force and length parameters of the 
+ at ref{ot_rubberband}, that will be created on application of the item. In fact
+the items identity will be transfered to its successor 
+(@pxref{Object Transformation}). After creation of the life rubberband the 
+action message will be send to the target. Note that it is actually the 
+ at ref{ot_rubberband} as the successor that sends the message.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{anchor2} @ @ @i{values}: actor or stone object; @ @ @i{default}: @code{nil}
+Object reference or name of an actor or a stone that the rubber will be 
+connected to. The reference will be evaluated on item activation.
+ at item @b{strength} @ @ @i{values}: number; @ @ @i{default}: @code{10.0}
+The force strength.
+ at item @b{length} @ @ @i{values}: positiv number; @ @ @i{default}: @code{1.0}
+The natural length above which forces are applied.
+ at item @b{threshold} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The length smaller than the natural length below which inverted forces are applied.
+ at item @b{min} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The minimum length at which actors bounce.
+ at item @b{max} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The maximum length at which actors bounce.
+ at end table
+
+ at item @b{Messages:} none
+ at item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
+On succesfull activation of this item the action message is send with a value of
+ at samp{true}. Note that the parameter @samp{sender} will report the new 
+ at ref{ot_rubberband}.
+ at end table
+
 @c ----------------- Sensor Item -------------------- 
 @node it_sensor
 @subsection it_sensor
@@ -4743,6 +5079,64 @@
 @end table
 
 
+ at c ----------------- Strip Item -------------------- 
+ at node it_strip
+ at subsection it_strip
+ at obindex it_strip
+
+These items cover a small strip of the ground below them and provide a narrow
+bridge for the marble to safely pass @ref{fl_abyss}, @ref{fl_swamp}, 
+ at ref{fl_water}, or any other floor. 
+
+A strip connects zero, what is just a central small unconnected square, or up
+to 4 neighboring floor grids. A marble can pass from one connected floor to
+another connected floor via the strip.
+
+Any stone on a directly neighboring grid can be touched or hit by a large marble
+and prevents it from falling off the strip on this side. Small marbles can not
+touch neigboring stones and will not be protected from falling.
+
+Per default an actor on a covering strip is exposed to the same friction and
+adhesion as on the floor below. But strips can provide its own deviating
+values for these factors.
+
+ at table @asis
+
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{connections}, @ @ @i{values}: string; @ @ @i{default}: @code{nil}
+Describes the connections to the neighbor grids. The string is a substring of 
+ at code{"nesw"} listing the existing connections. The sequence of the sides, north,
+east, south, west, is guaranteed on read access but arbitrary on write access.
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: @code{nil} @ @ @xref{friction}
+Deviating friction that defaults to floor friction.
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: @code{nil} @ @ @xref{adhesion}
+Deviating adhesion that defaults to floor adhesion.
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{it_strip}: connections = @code{""}
+ at item @b{it_strip_w}: connections = @code{"w"}
+ at item @b{it_strip_s}: connections = @code{"s"}
+ at item @b{it_strip_sw}: connections = @code{"sw"}
+ at item @b{it_strip_e}: connections = @code{"e"}
+ at item @b{it_strip_ew}: connections = @code{"ew"}
+ at item @b{it_strip_es}: connections = @code{"es"}
+ at item @b{it_strip_esw}: connections = @code{"esw"}
+ at item @b{it_strip_n}: connections = @code{"n"}
+ at item @b{it_strip_nw}: connections = @code{"nw"}
+ at item @b{it_strip_ns}: connections = @code{"ns"}
+ at item @b{it_strip_nsw}: connections = @code{"nsw"}
+ at item @b{it_strip_ne}: connections = @code{"ne"}
+ at item @b{it_strip_new}: connections = @code{"new"}
+ at item @b{it_strip_nes}: connections = @code{"nes"}
+ at item @b{it_strip_nesw}: connections = @code{"nesw"}
+
+ at end table
+
+ at end table
+
 @c ----------------- Sword Item -------------------- 
 @node it_sword
 @subsection it_sword
@@ -4784,13 +5178,13 @@
 reaction.
 
 Any marble falling into a trap causes it to break and to become visible by the
-remanents of the trap. The trap can be opened by messages, too.
+remnants of the trap. The trap can be opened by messages, too.
 
 The level author can configure @ref{it_glasses} by addition of 
 @samp{SPOT_TRAP} to show invisible traps. An actor with such an
 @ref{it_glasses} in its inventory will be able to spot invisible traps.
 With the global attribute @ref{ExtralifeGlasses} even glasses generated by laser
-lighting an @ref{it_extralife} can be configured not to show invisible traps.
+lighting an @ref{it_extralife} can be configured to show invisible traps.
 
 @table @asis
 @item @b{Attributes:}
@@ -5272,6 +5666,7 @@
 * st_floppy::          Floppy Driven Switch
 * st_fourswitch::      Four Direction Switch
 * st_key::             Key Driven Switch
+* st_knight::          Sword Bearing Knight Stone
 * st_laser::           Lightemitting Laser
 * st_laserflop::       Lightsensitive Monoflop
 * st_laserswitch::     Lightsensitive Switch
@@ -5281,8 +5676,12 @@
 * st_oxyd::            Game Target Stone
 * st_polarswitch::     Transparency Switch for Light Beams
 * st_rotator::         Rotating Stone Impulser
+* st_rubberband::      Rubberband generator
+* st_scissors::        Scissors cutting rubberbands
 * st_switch::          Classical on/off Switch
 * st_timer::           Animated Timer
+* st_turnstile::       Turnstile Pivot
+* st_turnstilearm::    Turnstile Arm
 * st_window::          Faced Window
 @end menu
 
@@ -5543,7 +5942,7 @@
 @item @b{flip}
 Flip the color of the stone.
 @item @b{move}, @ @ @i{value type}: position; @ @ @i{values}: @code{NNE}, @code{NEE}, @code{SEE}, @code{SSE}, @code{SSW}, @code{SWW}, @code{NWW}, @code{NNW}
-Jump into the given dirction.
+Jump into the given direction.
 @end table
 
 @item @b{Action:}  none
@@ -5649,7 +6048,7 @@
 @item @b{Messages:}
 @table @asis
 @item @b{toggle} @ @ @xref{toggle}
-Temporarily activy the stone to show its animation and to get visible for this
+Temporarily activate the stone to show its animation and to get visible for this
 period.
 @end table
 
@@ -5773,7 +6172,7 @@
 @table @asis
 @item @b{state}, @ @ @i{values}: @code{ON}, @code{OFF}; @ @ @i{default}: @code{OFF}; @ @ @xref{state}
 Current activity state of the key stone.
- at item @b{code}, @ @ @i{values}: number; @ @ @i{default}: @code{1}:
+ at item @b{code}, @ @ @i{values}: number or string; @ @ @i{default}: @code{1}:
 The code that is required to activate this switch.
 @end table
 
@@ -5789,6 +6188,35 @@
 @item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
 
 @end table
+ at c ----------------- Knight Stone -------------------- 
+ at node st_knight
+ at subsection st_knight
+ at obindex st_knight
+
+A sword bearing knight stone that shatters all marbles that hit it, as long as
+they are not protected by an activated @ref{it_umbrella} or wield an
+ at ref{it_sword}. 
+
+By hitting @samp{st_knight} with an @ref{it_sword} four times, the knight stone
+spits out a cheeky remark and can be passed thereafter, even without a sword.
+
+A beaten knight stone is transparent to laser light.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{state}, @ @ @i{values}: @code{0} to @code{4}; @ @ @i{default}: @code{0}; @i{access}: @code{read only} @ @ @xref{state}
+Current hit count of the knight stone. Starting uninjured at state @samp{0}
+the knight is beaten after 4 hits.
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at end table
+
 @c ----------------- Laser Stone -------------------- 
 @node st_laser
 @subsection st_laser
@@ -6045,29 +6473,32 @@
 will differ slightly in a darker color.
 
 Mirros hit or just touched will turn their mirror panes by 90 degrees. The 
-standard turning direction is clockwise. But this standard can be changed with
+standard turning direction is clockwise. But this standard can be changed 
 by the attribute @samp{counterclockwise}. An @ref{st_boulder} hitting a mirror
-will turn it in its standard direction, too.
+will turn it in its standard direction, too. 
 
 A mirror can be turned into the opposite direction either by a message 
 @samp{turnback} or by an actor with a revealed @ref{it_wrench} in its 
 inventory.
 
+Mirrors moved by stone pushing impulses issued by @ref{it_puller}, 
+ at ref{st_stoneimpulse},... or send by @ref{ot_wire} will move without being turned.
+
 @table @asis
 @item @b{Attributes:}
 
 @table @asis
 @item @b{flavor} @ @ @i{values}: @code{"slab"}, @code{"sheets"}, @code{"triangle"}; @ @ @i{default}: @code{"slab"}
-Mirror panes either set up as an triangle or as a side intransparent slab or
+Mirror panes either set up as a triangle or as a side intransparent slab or
 as a mandatory semi-transparent pair of sheets.
 @item @b{state}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}; @ @ @xref{state}
-The orientation of the mirror. For a triangle mirror it is the triangles 
-pointing direction. For a planar mirror it the reflection direction of an 
+The orientation of the mirror. For a triangular mirror it is the triangle's 
+pointing direction. For a planar mirror it is the reflection direction of an 
 incoming northbound beam.
 @item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}
-The orientation of the mirror. For a triangle mirror it is the triangles 
-pointing direction. For a planar mirror it the reflection direction of an 
-incoing northbound beam.
+The orientation of the mirror. For a triangular mirror it is the triangle's 
+pointing direction. For a planar mirror it is the reflection direction of an 
+incoming northbound beam.
 @item @b{transparent} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 Semitransparency of the mirror panes.
 @item @b{movable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false} @ @ @xref{movable}
@@ -6083,7 +6514,7 @@
 @msindex orientate
 @item @b{orientate}, @ @ @i{value type}: direction
 Change the orientation to the given direction value. The @ref{st_fourswitch}
-provides a compatible action which allows you to set a boulder as
+provides a compatible action which allows you to set a mirror as
 target and this message as action.
 @item @b{turn}
 Turn the orientation in turning direction as defined by attribute 
@@ -6093,12 +6524,14 @@
 @samp{counterclockwise}.
 @item @b{signal} @ @ @xref{signal}
 Turn the orientation in turning direction as defined by attribute 
- at samp{counterclockwise} on at value @samp{1}. A values of @samp{0} is ignored.
+ at samp{counterclockwise} on value @samp{1}. A value of @samp{0} is ignored.
 
 @end table
 
 @item @b{Action:} none
 
+ at item @b{Variants:}
+
 @table @asis
 @item @b{st_mirror}: flavor=@code{slab}, state = @code{NORTH}
 @item @b{st_mirror_slab}: flavor=@code{slab}, state = @code{NORTH}
@@ -6349,6 +6782,68 @@
 
 @end table
 
+ at c ----------------- Rubberband Stone -------------------- 
+ at node st_rubberband
+ at subsection st_rubberband
+ at obindex st_rubberband
+
+A rubberband stone attaches a new @ref{ot_rubberband} between actors hitting it
+and itself.
+
+No rubberband is attached if the hitting actor is already connected to this
+particular stone.
+
+If the attribute @samp{scissor} is @samp{true}, all rubberbands connected to
+the hitting actor are removed prior attaching the direct new connection.
+
+The rubberband stone is static by default. But an actor with a revealed 
+ at ref{it_wand} can move it by hitting it. As the actor will get connected by
+an @ref{ot_rubberband} at the same time you will usually place an 
+ at ref{st_scissors} near the target place as an opportunity for the marble to free
+itself again from the rubberband stone.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{strength} @ @ @i{values}: number; @ @ @i{default}: @code{10.0}
+The force strength.
+ at item @b{length} @ @ @i{values}: positiv number; @ @ @i{default}: @code{1.0}
+The natural length above which forces are applied.
+ at item @b{threshold} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The length smaller than the natural length below which inverted forces are applied.
+ at item @b{min} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The minimum length at which actors bounce.
+ at item @b{max} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The maximum length at which actors bounce.
+ at item @b{scissor}, @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{true}
+Rubberband cutting behaviour on connection.
+ at end table
+
+ at item @b{Messages:} none
+
+ at end table
+
+ at c ----------------- Scissors Stone -------------------- 
+ at node st_scissors
+ at subsection st_scissors
+ at obindex st_scissors
+
+This stone cuts all @ref{ot_rubberband}s attached to an actor that touches it.
+When at least one rubber band is cut, it performs the action given in the 
+action/target-pair.
+
+ at table @asis
+ at item @b{Attributes:} none
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
+Send an action message with value @samp{true} on freeing an actor from its
+rubberbands.
+
+ at end table
+
 @c ----------------- Switch Stone -------------------- 
 @node st_switch
 @subsection st_switch
@@ -6458,7 +6953,162 @@
 @samp{true}
 @end table
 
+ at c ----------------- Turnstile Pivot Stone -------------------- 
+ at node st_turnstile
+ at subsection st_turnstile
+ at obindex st_turnstile
 
+A turnstile is a stone cluster that consists of a central pivot, this 
+ at samp{st_turnstile}, and up to four neighboring @ref{st_turnstilearm}s of
+connecting orientations. When one the arms is hit by an actor or receives a
+stone pushing impulse by another object (e.g. @samp{st_rotator}, @samp{ot_wire},
+ at samp{it_puller}, ...), the whole cluster turns by 90 degrees into the impulse
+direction. Of course the turnstile complex just turns if it is not blocked by
+other stones in its surrounding. Even movable stones will block turnstiles.
+
+There are two @samp{flavor}s of turnstiles. The common @samp{red} version
+pulls only the actor, that did hit the arm. It keeps it behind the 
+ at samp{st_turnstilearm} and shatters all others in its surrounding. Whereas the
+ at samp{green} version pushes all actors with its attached @samp{st_turnstilearm}s
+and keeps them in front of the arms. Just actors being in range of the arms will
+be pushed. That means that they need to be in a distance of less than 1.5 grids
+to the center of the pivot. Thus actors located at the very edge of the
+diagonal grid positions will not be pushed. As actors can not be moved out of
+the world, a green turnstile positioned at the levelborder that moves an arm
+to the border will shatter actors instead.
+
+Any actor moved by a turnstile is directly warped to its new position without
+touching any grid inbetween. Thus actors can pass abyss or water floors,
+but they will not grab any items located on the grid positions inbetween.
+The relative position of an actor within the grid is maintained during its
+circular move. Thus two small actors moved at the same time keep their relative
+positioning. It is guranteed that any moved actors will fall even into a tiny
+ at ref{it_hollow} that is positioned at the destination grid.
+
+Items in the range of the rotating arms will act like a stone being pushed over
+them.
+
+When green turnstiles push actors to a diagonal grid position they will push 
+away an @ref{st_turnstilearm}, and just this single kind of stone, if it is
+located on this target grid. This feature can be used to intertwine several
+turnstile as it can be seen in the level @samp{ZigZag}.
+
+There are two other ways of coupling turnstiles. You can simply set another
+ at samp{st_turnstile} as the target of a first one and perform a @samp{signal}
+action. This will turn both turnstiles in the same direction. But if one is
+blocked the rotations will desynchronize.
+
+Another way is the coupling of two @ref{st_turnstilearm}s via an @ref{ot_wire}.
+A turnstile will propagate its rotation impulses via an wire that is connected
+at one of its arms. Two turnstiles connected by wired arms will resync in their
+rotation even if one of them is temporarily blocked.
+
+Turnstiles can be turned by standard messages and attributes. They do even
+evaluate the turns and keep the attribute @samp{orientation} up to date for
+easy read evaluation of the current turnstile orientation.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+The standard turning direction is clockwise. Use this attribute to revert the
+direction.
+ at atindex orientation
+ at item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}
+The orientation of the turnstile that is only visible by its arms. Setting
+this attribute just defines a new base, but does not turn the turnstile as the
+direction would not be defined. But every rotation does update this attribute
+relative to its previous value.
+ at end table
+
+ at item @b{Messages:}
+
+ at table @asis
+ at item @b{signal} @ @ @xref{signal}
+Rotate the turnstile counterclockwise on @samp{1}, and clockwise at values @samp{0}.
+ at item @b{turn}
+Turn in turning direction as defined by attribute @samp{counterclockwise}.
+ at item @b{turnback}
+Turn in opposite turning direction as defined by attribute @samp{counterclockwise}.
+ at end table
+
+ at item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
+At the end of each turn the action is performed with a value of @samp{true}
+on counterclock turns and @samp{false} on clockwise turns.
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_turnstile}: flavor = @code{"red"}
+ at item @b{st_turnstile_red}: flavor = @code{"red"}
+ at item @b{st_turnstile_green}: flavor = @code{"green"}
+ at end table
+ at end table
+
+ at c ----------------- Turnstilearm Stone -------------------- 
+ at node st_turnstilearm
+ at subsection st_turnstilearm
+ at obindex st_turnstilearm
+
+An arm that usually connects to an @ref{st_turnstile} pivot building a turnstile 
+cluster. The arm's subkind suffix, its state and orientation are named according
+to the arm's position within the turnstile cluster. Thus a @samp{NORTH} arm has
+a single standard connection of @code{"s"}, the reverse direction.
+
+As long as a turnstile arm is not connected to a pivot it is a free movable
+stone. Intentionally it is visually indistinguishable from a @ref{st_puzzle}
+with the same connections. But neither an arm will not connect to other
+ at ref{st_puzzle} nor a puzzle to a pivot.
+
+An arm is connected to a pivot on a neighboring grid position solely by a 
+matching connection. It is no longer free movable. All its impulses will turn
+the @ref{st_turnstile} cluster instead.
+
+A special move of an arm is due to actors being moved by another green 
+ at ref{st_turnstile} to its position. The arm receives an impulse by the other
+pivot and will either move straight forward or turn its own pivot if being
+part of a cluster.
+
+The orientation of an arm can be set by attribute or messages. Neither way will
+generate an impulse to turn a connected turnstile cluster. The arm will be 
+reorientated alone.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{state}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH} @ @ @xref{state}
+The position of an arm in a turnstile cluster.
+ at atindex orientation
+ at item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}
+The position of an arm in a turnstile cluster.
+ at item @b{connections} @ @ @i{values}: string; @ @ @i{default}: @code{"s"}
+Describes the @ref{st_puzzle} like connection that is the opposite of the
+turnstile position. The string is a string of a single character describing the
+sole connection.
+ at end table
+
+ at item @b{Messages:}
+
+ at table @asis
+ at msindex orientate
+ at item @b{orientate}, @ @ @i{value type}: direction
+Change the orientation to the given direction value. The @ref{st_fourswitch}
+provides a compatible action which allows you to set an arm as
+target and this message as action.
+ at end table
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_turnstilearm}: orientation = @code{NORTH}
+ at item @b{st_turnstilearm_n}: orientation = @code{NORTH}
+ at item @b{st_turnstilearm_e}: orientation = @code{EAST}
+ at item @b{st_turnstilearm_s}: orientation = @code{SOUTH}
+ at item @b{st_turnstilearm_w}: orientation = @code{WEST}
+ at end table
+ at end table
+
 @c ----------------- Window Stone -------------------- 
 @node st_window
 @subsection st_window
@@ -6553,11 +7203,165 @@
 @node Actor Objects
 @chapter Actor Objects
 
+ at menu
+* Actor Attributes::    Common attributes
+* Actors::              All actors
+ at end menu
+
+
+ at node Actor Attributes
+ at section Actor Attributes
+
+ at menu
+ at end menu
+
+ at c -----------------  -------------------- 
+
+ at node Actors
+ at section Actors
+
+ at menu
+ at end menu
+
+
 @c ===================  Other Objects  =======================
 
 @node Other Objects
 @chapter Other Objects
 
+ at menu
+* Visible Others::    Special gaming objects
+* Gadgets::           Tools for plug and play construction of levels
+ at end menu
+
+
+ at node Visible Others
+ at section Visible Others
+
+ at menu
+* ot_rubberband::     Rubberband with forces
+* ot_wire::    Stone connection that transfers impulses
+ at end menu
+
+
+ at c ----------------- Rubberband -------------------- 
+ at node ot_rubberband
+ at subsection ot_rubberband
+ at obindex ot_rubberband
+
+An orange link between two objects that can apply attracting or repelling forces
+to them.
+
+The two connected objects are called anchors. The attribute @samp{anchor1} holds
+the first objects reference that must be an actor. The @samp{anchor2} references
+the second object that can either be another actor or a stone. Both objects
+must exist to @ref{add} an rubberband to the world. If the stone sinks, breaks
+or is killed otherwise the rubberband will be destroyed, too.
+
+Both anchor objects will update their attributes @ref{rubbers} and @ref{fellows}
+to list this rubberband and the connected object for purposes of evaluation.
+
+The force that is applied between the objects can be configured by several
+attributes. Every rubberband has a natural @samp{length} at which it does not
+apply any force to the actors. The more the rubberband is extended from this
+point it applies a force of the given @samp{strength}. A positive strength is
+a natural attracting force, whereas a negative strength would repell the actors.
+
+A rubberband that is shorter than its natural @samp{length} would normally not
+apply any force. But this special rubber allows you to set a @samp{threshold}
+where the rubberband starts to apply the opposite directed forces onto the 
+actors, like a spring would do. Thus a positve @samp{strength} would lead to a
+repelling force, a negative one to an attracting force. A rubberband with a
+length inbetween @samp{threshold} and @samp{length} will apply no forces.
+
+In some cases you do want to limit the length of rubberband. You can do this
+by setting @samp{min} and @samp{max} attributes. Actors will bounce on these
+limits. Do not try to use artificial large @samp{strength} values to ensure
+length limits, as this could lead to extreme forces causing unexpected and
+unstable actor movements.
+
+Rubberbands can be cut by @ref{st_scissors}, by receiving a @ref{kill} message,
+by one of the anchors receiving a @ref{disconnect} message or a stone anchor
+that ceases to exist.
+
+Rubberbands can be dynamically generated by @ref{it_rubberband} and 
+ at ref{st_rubberband}.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{anchor1} @ @ @i{values}: actor object; @ @ @i{default}: @code{nil}
+Object reference or name of an actor that the rubber will be connected to. Note
+that the reference will be immediately evaluated and thus the actor must exist
+already.
+ at item @b{anchor2} @ @ @i{values}: actor or stone object; @ @ @i{default}: @code{nil}
+Object reference or name of an actor or a stone that the rubber will be 
+connected to. Note that the reference will be immediately evaluated and thus the
+actor or stone must exist already.
+ at item @b{strength} @ @ @i{values}: number; @ @ @i{default}: @code{10.0}
+The force strength.
+ at item @b{length} @ @ @i{values}: positiv number; @ @ @i{default}: @code{1.0}
+The natural length above which forces are applied.
+ at item @b{threshold} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The length smaller than the natural length below which inverted forces are applied.
+ at item @b{min} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The minimum length at which actors bounce.
+ at item @b{max} @ @ @i{values}: positiv number or zero; @ @ @i{default}: @code{0.0}
+The maximum length at which actors bounce.
+ at end table
+
+ at item @b{Messages:} none
+ at item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
+An action will be performed on behalf of @ref{it_rubberband} after application
+and creation of this rubberband. The action value is @samp{1}.
+ at end table
+
+ at c ----------------- Wirecontrol -------------------- 
+ at node ot_wire
+ at subsection ot_wire
+ at obindex ot_wire
+
+A wire is a purple wire connecting two stones that transfers every stone pushing
+impulse from one stone to the other and vice versa. Thus both stones will move
+on the impulse if they are movable at all and not blocked in the direction of
+the impulse. The impulses may origin from an actor hitting a stone, an 
+ at ref{it_puller}, an @ref{st_rotator}, an @ref{st_stoneimpulse}.
+
+A single stone can be wired to many other stones. All these @ref{fellows} will
+move on an impulse. But the impulses will not be propagated to further stones
+that are wired themsselves to any of the fellows. Just the direct wired stones
+will move.
+
+You can request the wires connected to a stone by the stones @ref{wires} 
+attribute. As it is tedious to evaluate both anchors, every stone supports
+an attribute @ref{fellows} that reports the connected objects.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{anchor1} @ @ @i{values}: stone object; @ @ @i{default}: @code{nil}
+Object reference or name of a stone that the wire will be connected to. Note
+that the reference will be immediately evaluated and thus the stone must exist
+already.
+ at item @b{anchor2} @ @ @i{values}: stone object; @ @ @i{default}: @code{nil}
+Object reference or name of a stone that the wire will be connected to. Note 
+that the reference will be immediately evaluated and thus the stone must exist
+already.
+ at end table
+
+ at item @b{Messages:} none
+ at item @b{Actions:} none
+ at end table
+
+ at node Gadgets
+ at section Gadgets
+
+
+ at menu
+ at end menu
+
 @c ===================  Advanced Features  =======================
 
 @node Advanced Features
@@ -6574,12 +7378,42 @@
 @section World Advanced Methods
 
 @menu 
+* add::          Add @ref{Other Objects} to the world
 * drawBorder::   
 * drawMap::      
 * drawRect::     
 * shuffleOxyd::  Oxyd Shuffling Rules
 @end menu
 
+ at c ----------------- add -------------------- 
+ at node add
+ at subsection add
+
+Add @ref{Other Objects} to the world.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{wo:add}(@i{tile_declarations})
+
+ at table @asis
+ at item @i{tile_declarations}
+One or many other object declarations given as tiles or anonymous tables.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+wo:add(@{"ot_rubberband", anchor1="a1", anchor2="w", length=2, strength=80, threshold=0@})
+wo:add(ti["r"] .. @{"ot_wire", anchor1="w1", anchor2="w2"@})
+ at end example
+
+ at item @b{Details:}
+Just @ref{Other Objects} can be added by this method.
+
+ at item @b{Full Example:}
+ at example
+ at end example
+ at end table
+
 @c ----------------- drawBorder -------------------- 
 @node drawBorder
 @subsection drawBorder
@@ -6612,7 +7446,6 @@
 @item @b{Details:}
 
 
-
 @item @b{Full Example:}
 @example
 @end example
@@ -6654,7 +7487,7 @@
 
 @item @b{Details:}
 The syntax is similar to the world creation call. But there are two essential
-difference you need to be aware of. First the map is drawn in the already
+differences you need to be aware of. First the map is drawn in the already
 existing world. Thus we need to define the position. This is done via the
 anchor position, which can be an already existing object, too.
 
@@ -6764,7 +7597,7 @@
 term amusement. Thus the call of this method is part of most levels.
 
 Many levels just call this method without any arguments. This results in a
-shuffling of all @ref{st_oxyd} that are not exclude by an @samp{noshuffle}
+shuffling of all @ref{st_oxyd} that are not excluded by a @samp{noshuffle}
 attribute.
 
 But sometimes levels need to influence the shuffling, either for ensuring that
@@ -6819,7 +7652,7 @@
 @item @b{Details:}
 
 Any call of @samp{wo:shuffleOxyd()} must occur after all @ref{st_oxyd} have been
-set. That means that it must follow the standard world initialzation 
+set. That means that it must follow the standard world initialization 
 (@pxref{World Creation and Resolver Chaining}). As a side effect shuffleOxyd 
 will assign colors to all @samp{OXYD_AUTO} colored @ref{st_oxyd}. 
 
@@ -6850,7 +7683,7 @@
 shortcuts for the most common rules that are applied to oxyds arranged on a
 line or a circle. In both cases they avoid pairs of neighboring oxyds. They
 are equivalent to @samp{n-1} res. @samp{n} rules with all possible neighboring
-oxyds pairs as two groups and a rule of @samp{max=0}.
+oxyd pairs as two groups and a rule of @samp{max=0}.
 
 Note that you can apply several rules at once to given groups. E.g. you can
 apply a minrule and a maxrule within one rule!
@@ -6875,10 +7708,11 @@
 counted and logged. It is recommended to check the count on complex rules to 
 ensure that enough distributions remain for a varying game. But be careful 
 applying count on trivial rules. With 16 oxyds there may be as many as
-... distributions and it may take a standard PC up to 30 seconds to count them!
+2027025 distributions and it may take a standard PC up to 30 seconds to count
+them - add a factor of 17*19 for 20 oxyds!
 
 Be very, very cautious in usage of logging @samp{all}. This call tries to print
-all solutions. It takes ages if there are to many solutions. First check the
+all solutions. It takes ages if there are too many solutions. First check the
 count before trying to log the solutions.
 
 @item @b{Full Example:}
@@ -6932,7 +7766,7 @@
 @menu 
 * res.autotile::  Generate tiles from given template declarations
 * res.composer::  Compose tiles from given base tiles
-* res.maze::      Generate arbitrary chaped mazes
+* res.maze::      Generate arbitrarly chaped mazes
 * res.random::    Choosing random tiles in a given distribution
 @end menu
 
@@ -6943,7 +7777,7 @@
 
 Autotiling reduces the number of required tile declarations by generating them
 according to given simple rules. The most common application are a bunch of
-identical switch like objects that target all target the same type of object
+identical switch like objects that all target the same type of object
 like a door or a laser. As each of them has its individual target object it
 would require to write a separate tile declaration with a unique tile key, e.g.
 
@@ -6965,7 +7799,7 @@
 @end example
 
 Independent on the number of required unique objects you have just one template.
-You just declare the used ranged of tile keys by a rule and are free to use
+You just declare the used range of tile keys by a rule and are free to use
 them within your level map.
 
 @table @asis
@@ -7059,7 +7893,7 @@
 @subsection res.composer
 
 The composer resolver reduces the number of required tile declarations by
-geneating them by composition of base tiles. Small motley levels and nearly
+generating them by composition of base tiles. Small motley levels and nearly
 every large level will use many different objects in numerous tile compositions.
 As the usable one character tile key candidates will not suffice you will need
 to use two or three character tile keys. But you will need numerous tile
@@ -7104,16 +7938,16 @@
 Just in case that no declaration exists the search starts for existing subkey
 tiles. Subkeys are keys with some characters replaced by a whitespace @samp{ }.
 For all key lengths the basic subkeys with just one character different from a
-whitespace will be examined. Additional just for three character key length
+whitespace will be examined. Additionally just for three character key length
 the three keys with just one whitespace replacement and two remaining 
-original characters will be examined and these compositions will preceed the
+original characters will be examined and these compositions will preced the
 composition of three one character tiles.
 
 Thus for the key @code{"h~"} the composer will look for @code{"h "} and 
- at code{" ~"}. For the three character key @code{"#h~"} The compser will look for
+ at code{" ~"}. For the three character key @code{"#h~"} The composer will look for
 @code{"#h "} plus @code{"  ~"}, @code{"# ~"} plus @code{" h "}, @code{" h~"}
 plus @code{"#  "} and finally @code{"#  "} plus @code{" h "} plus @code{"  ~"}.
-For the 4 character key @code{"A#h~"} the compser will just look for 
+For the 4 character key @code{"A#h~"} the composer will just look for 
 @code{"A   "} plus @code{" #  "} plus @code{"  h "} plus @code{"   ~"}. The
 same holds for any larger key length.
 
@@ -7344,7 +8178,7 @@
 wo["FollowMethod"] = FOLLOW_SCROLL
 @end example
 The active actor will always stay in the center of the screen. The display
-compensates the actors movement pixel by pixel by scrolling. The display 
+compensates the actor's movement pixel by pixel by scrolling. The display 
 positions are not aligned to grid tiles.
 
 @item @b{Full Screen Scrolling:}



From ral at mail.berlios.de  Tue Jul 22 15:20:30 2008
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Tue, 22 Jul 2008 15:20:30 +0200
Subject: [Enigma-game-svn] r1243 - in trunk: data/levels data/levels/lib
	doc/reference src src/stones
Message-ID: <200807221320.m6MDKUS5013148@sheep.berlios.de>

Author: ral
Date: 2008-07-22 15:20:20 +0200 (Tue, 22 Jul 2008)
New Revision: 1243

Modified:
   trunk/data/levels/ant.lua
   trunk/data/levels/lib/ant.xml
   trunk/doc/reference/enigma-ref.texi
   trunk/src/items.hh
   trunk/src/stones/Turnstile.cc
Log:
Trunk 1.1: new API
- refman corrections
- fix heap problem introduced in 1106 (Windows crash)
- add missing templates for st_turnstile, st_turnstilearm
- fix ant.xml rubberbands connecting actors to themselves


Modified: trunk/data/levels/ant.lua
===================================================================
--- trunk/data/levels/ant.lua	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/data/levels/ant.lua	2008-07-22 13:20:20 UTC (rev 1243)
@@ -1021,7 +1021,9 @@
 function add_rubber_bands(gr1, gr2, strength, length)
    for i = 1,getn(gr1) do
       for j = 1,getn(gr2) do
-	 AddRubberBand(gr1[i], gr2[j], strength, length)
+	 if not enigma.IsSameObject(gr1[i], gr2[j]) then
+            AddRubberBand(gr1[i], gr2[j], strength, length)
+         end
       end
    end
 end

Modified: trunk/data/levels/lib/ant.xml
===================================================================
--- trunk/data/levels/lib/ant.xml	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/data/levels/lib/ant.xml	2008-07-22 13:20:20 UTC (rev 1243)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/ant"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
       <el:author  el:name="Petr Machata" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2002-2003 Petr Machata</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -1045,7 +1045,9 @@
 function add_rubber_bands(gr1, gr2, strength, length)
    for i = 1,getn(gr1) do
       for j = 1,getn(gr2) do
-	 AddRubberBand(gr1[i], gr2[j], strength, length)
+	 if not enigma.IsSameObject(gr1[i], gr2[j]) then
+            AddRubberBand(gr1[i], gr2[j], strength, length)
+         end
       end
    end
 end

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/doc/reference/enigma-ref.texi	2008-07-22 13:20:20 UTC (rev 1243)
@@ -3905,10 +3905,16 @@
 @node checkerboard
 @subsection checkerboard
 
-An attribute that .
+An attribute that defines if a given object declaration should only be applied
+on 'even' or 'uneven' grid positions. Setting this attribute to @samp{0} assures
+that this object will only be set on grid positions with an even sum of 
+ at code{x + y} grid coordinates, where as a value of @samp{1} assures that the
+sum must be uneven. This way you can easily provide two different object
+declarations for a tile to generate an arbitrary chaped map of checkerboard
+floors, items or stones.
 
 @table @asis
- at item @b{Type:} @ @ bool
+ at item @b{Type:} @ @ number
 @item @b{Values:} @ @ @code{0}, @code{1}
 @item @b{Default:} @ @ @code{nil}
 @item @b{Access:} @ @ read/write
@@ -5858,7 +5864,7 @@
 @item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}
 The orientation of the boulder that is shown by its arrow. It determines the
 direction that the boulder will take on its next move.
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard turning direction is clockwise. Use this attribute to revert the
 direction.
 @end table
@@ -5873,10 +5879,10 @@
 target and this message as action.
 @item @b{turn}
 Turn orientation in turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @item @b{turnback}
 Turn orientation in opposite turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @end table
 
 @item @b{Action:}
@@ -6117,7 +6123,7 @@
 @table @asis
 @atindex state
 @item @b{state}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH} @ @ @xref{state}
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard turning direction is clockwise. Use this attribute to revert the
 direction.
 @item @b{inverse} @ @ @xref{inverse}
@@ -6248,7 +6254,7 @@
 @item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{NORTH}
 The orientation of the laser. It determines the direction that the laser will
 emit light if it is switched on.
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard turning direction is clockwise. Use this attribute to revert the
 direction.
 @end table
@@ -6262,10 +6268,10 @@
 @item @b{off} @ @ @xref{off}
 @item @b{turn}
 Turn orientation in turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @item @b{turnback}
 Turn orientation in opposite turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @end table
 
 @item @b{Action:} none
@@ -6474,7 +6480,7 @@
 
 Mirros hit or just touched will turn their mirror panes by 90 degrees. The 
 standard turning direction is clockwise. But this standard can be changed 
-by the attribute @samp{counterclockwise}. An @ref{st_boulder} hitting a mirror
+by the attribute @samp{counterclock}. An @ref{st_boulder} hitting a mirror
 will turn it in its standard direction, too. 
 
 A mirror can be turned into the opposite direction either by a message 
@@ -6503,7 +6509,7 @@
 Semitransparency of the mirror panes.
 @item @b{movable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false} @ @ @xref{movable}
 Movability on actor hits and stone impulses.
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard turning direction is clockwise. Use this attribute to revert the
 direction.
 @end table
@@ -6518,13 +6524,13 @@
 target and this message as action.
 @item @b{turn}
 Turn the orientation in turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @item @b{turnback}
 Turn the orientation in opposite turning direction as defined by attribute 
- at samp{counterclockwise}.
+ at samp{counterclock}.
 @item @b{signal} @ @ @xref{signal}
 Turn the orientation in turning direction as defined by attribute 
- at samp{counterclockwise} on value @samp{1}. A value of @samp{0} is ignored.
+ at samp{counterclock} on value @samp{1}. A value of @samp{0} is ignored.
 
 @end table
 
@@ -6758,7 +6764,7 @@
 @item @b{state}, @ @ @i{values}: @code{CW}, @code{CCW}; @ @ @i{default}: @code{CW} @ @ @xref{state}
 The rotation direction - @samp{CW} for clockwise as default, or @samp{CCW} for
 counter clockwise. 
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard rotation direction is clockwise. Use this attribute to revert the
 direction.
 @item @b{movable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false} @ @ @xref{movable}
@@ -7010,7 +7016,7 @@
 @table @asis
 @item @b{Attributes:}
 @table @asis
- at item @b{counterclockwise} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at item @b{counterclock} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 The standard turning direction is clockwise. Use this attribute to revert the
 direction.
 @atindex orientation
@@ -7027,9 +7033,9 @@
 @item @b{signal} @ @ @xref{signal}
 Rotate the turnstile counterclockwise on @samp{1}, and clockwise at values @samp{0}.
 @item @b{turn}
-Turn in turning direction as defined by attribute @samp{counterclockwise}.
+Turn in turning direction as defined by attribute @samp{counterclock}.
 @item @b{turnback}
-Turn in opposite turning direction as defined by attribute @samp{counterclockwise}.
+Turn in opposite turning direction as defined by attribute @samp{counterclock}.
 @end table
 
 @item @b{Action:} @ @ @xref{target}, @ @ @xref{action}

Modified: trunk/src/items.hh
===================================================================
--- trunk/src/items.hh	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/src/items.hh	2008-07-22 13:20:20 UTC (rev 1243)
@@ -147,10 +147,10 @@
         it_wormhole_on,
         it_wrench,
         it_yinyang,
+        //  for DAT compatibility only
+        it_inversesensor,
         it_LAST,
-        it_COUNT,
-        //  for DAT compatibility only
-        it_inversesensor
+        it_COUNT
     };
 
     /*! What may happen to an item _after_ it was activated? */

Modified: trunk/src/stones/Turnstile.cc
===================================================================
--- trunk/src/stones/Turnstile.cc	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/src/stones/Turnstile.cc	2008-07-22 13:20:20 UTC (rev 1243)
@@ -459,8 +459,10 @@
     };
     
     BOOT_REGISTER_START
-        BootRegister(new TurnstilePivot("red"),  "st_turnstile_red");
-        BootRegister(new TurnstilePivot("green"),  "st_turnstile_green");
+        BootRegister(new TurnstilePivot("red"), "st_turnstile");
+        BootRegister(new TurnstilePivot("red"), "st_turnstile_red");
+        BootRegister(new TurnstilePivot("green"), "st_turnstile_green");
+        BootRegister(new TurnstileArm(NORTH), "st_turnstilearm");
         BootRegister(new TurnstileArm(WEST),  "st_turnstilearm_w");
         BootRegister(new TurnstileArm(SOUTH), "st_turnstilearm_s");
         BootRegister(new TurnstileArm(EAST),  "st_turnstilearm_e");



From raoul at mail.berlios.de  Tue Jul 22 15:46:18 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Tue, 22 Jul 2008 15:46:18 +0200
Subject: [Enigma-game-svn] r1244 - in trunk/data/levels: enigma_cross
	enigma_ii enigma_iii enigma_iv enigma_tutorial enigma_v
	enigma_vi enigma_vii enigma_viii
Message-ID: <200807221346.m6MDkIM7021031@sheep.berlios.de>

Author: raoul
Date: 2008-07-22 15:46:14 +0200 (Tue, 22 Jul 2008)
New Revision: 1244

Added:
   trunk/data/levels/enigma_vii/pulley06_2.xml
   trunk/data/levels/enigma_viii/andreas49_1.xml
   trunk/data/levels/enigma_viii/andreas53_1.xml
   trunk/data/levels/enigma_viii/pulley15_1.xml
   trunk/data/levels/enigma_viii/pulley16_3.xml
   trunk/data/levels/enigma_viii/ral24_1.xml
   trunk/data/levels/enigma_viii/ral25_1.xml
   trunk/data/levels/enigma_viii/ral26_1.xml
   trunk/data/levels/enigma_viii/ral27_1.xml
   trunk/data/levels/enigma_viii/ral28_1.xml
   trunk/data/levels/enigma_viii/ral29_1.xml
   trunk/data/levels/enigma_viii/ulf06_2.xml
Removed:
   trunk/data/levels/enigma_vii/pulley06_1.xml
   trunk/data/levels/enigma_viii/ulf06_1.xml
Modified:
   trunk/data/levels/enigma_cross/newlevels.xml
   trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
   trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
   trunk/data/levels/enigma_ii/ant07_1.xml
   trunk/data/levels/enigma_iii/andreas04_1.xml
   trunk/data/levels/enigma_iii/index.xml
   trunk/data/levels/enigma_iv/index.xml
   trunk/data/levels/enigma_iv/mp03_1.xml
   trunk/data/levels/enigma_tutorial/index.xml
   trunk/data/levels/enigma_v/andreas06_1.xml
   trunk/data/levels/enigma_v/index.xml
   trunk/data/levels/enigma_vi/andreas35_1.xml
   trunk/data/levels/enigma_vi/index.xml
   trunk/data/levels/enigma_vi/raoul29_1.xml
   trunk/data/levels/enigma_vii/andreas46_3.xml
   trunk/data/levels/enigma_vii/index.xml
   trunk/data/levels/enigma_viii/index.xml
   trunk/data/levels/enigma_viii/mecke01_1.xml
   trunk/data/levels/enigma_viii/mecke07_1.xml
   trunk/data/levels/enigma_viii/mecke15_1.xml
Log:
-> New wire levels
-> A few level bugfixes and new api updates



Modified: trunk/data/levels/enigma_cross/newlevels.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_cross/newlevels.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="8" title="Enigma 1.00 new"/>
+  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="9" title="Enigma 1.00 new"/>
 
   <attributes/>
 
@@ -67,7 +67,7 @@
     <level _seq="59" _title="Manamana" _xpath="enigma_iii/just07_1" author="JuSt" ctrl="force" easy="false" id="just07" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="60" _title="Bad Flowers" _xpath="enigma_iii/nat30_1" author="Nat Pryce" ctrl="force" easy="true" id="nat30" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="Don't Touch" _xpath="enigma_iii/raoul07_2" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul07" rel="2" rev="1" score="2" target="time" unit="duration"/>
-    <level _seq="62" _title="Laser Castle" _xpath="enigma_iii/andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="62" _title="Laser Castle" _xpath="enigma_iii/andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="63" _title="Bump Ahead" _xpath="enigma_iii/illmind01_1" author="illmind" ctrl="force" easy="false" id="illmind01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="64" _title="Killer Hills" _xpath="enigma_iii/luc11_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc11" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="Fox in the Henhouse" _xpath="enigma_iii/nat26_1" author="Nat Pryce" ctrl="force" easy="false" id="nat26" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -94,10 +94,10 @@
     <level _seq="86" _title="Bolder Run" _xpath="enigma_iv/just02_1" author="JuSt" ctrl="force" easy="false" id="just02" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Laser Pushing" _xpath="enigma_iv/just04_1" author="JuSt" ctrl="force" easy="false" id="just04" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="88" _title="Friction Nightmare" _xpath="enigma_iv/luc01_1" author="Lukas Sch?ller" ctrl="force" easy="true" id="luc01" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="89" _title="Laser Games" _xpath="enigma_iv/mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="89" _title="Laser Games" _xpath="enigma_iv/mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="90" _title="April 1st" _xpath="enigma_v/alain11_1" author="Alain Busser" ctrl="force" easy="false" id="alain11" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="91" _title="Send me the keys !" _xpath="enigma_v/alain09_1" author="Alain Busser" ctrl="force" easy="false" id="alain09" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="92" _title="Laser Path" _xpath="enigma_v/andreas06_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas06" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="92" _title="Laser Path" _xpath="enigma_v/andreas06_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas06" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="93" _title="Hobbyte" _xpath="enigma_v/alain15_1" author="Alain Busser" ctrl="force" easy="false" id="alain15" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="94" _title="Water Castle" _xpath="enigma_v/luc21_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc21" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="95" _title="Moving Puzzles" _xpath="enigma_v/luc13_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc13" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -169,7 +169,7 @@
     <level _seq="161" _title="- Meditation -" _xpath="enigma_vi/alain25_2" author="Alain Busser + Raoul Bourquin" ctrl="force" easy="true" id="alain25" rel="2" rev="2" score="2" target="time" unit="duration"/>
     <level _seq="162" _title="Checkmate I" _xpath="enigma_vi/andreas29_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas29" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="163" _title="The Stable" _xpath="enigma_vi/andreas30_2" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas30" rel="2" rev="1" score="2" target="time" unit="duration"/>
-    <level _seq="164" _title="Chess, Bugs &amp; Rock'n'Roll" _xpath="enigma_vi/andreas31_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas31" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="164" _title="Chess, Bugs &amp; Rock'n'Roll" _xpath="enigma_vi/andreas31_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas31" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="165" _title="Chessing Positions" _xpath="enigma_vi/raoul22_1" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul22" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="166" _title="Twisting by the pool" _xpath="enigma_vi/alain23_1" author="Alain Busser" ctrl="force" easy="true" id="alain23" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="167" _title="Hot Meditation" _xpath="enigma_vi/ral08_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060527ral010" rel="1" rev="42" score="1" target="time" unit="duration"/>
@@ -202,7 +202,7 @@
     <level _seq="194" _title="Oiltrace" _xpath="enigma_vi/raoul25_1" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul25" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="195" _title="The Cube" _xpath="enigma_vi/malaire01_1" author="Markus Laire" ctrl="force" easy="true" id="20061120malaire901" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="196" _title="Puzzle Puzzles" _xpath="enigma_vi/raoul26_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul26" rel="1" rev="25" score="1" target="time" unit="duration"/>
-    <level _seq="197" _title="Checkmate II" _xpath="enigma_vi/andreas35_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas35" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="197" _title="Checkmate II" _xpath="enigma_vi/andreas35_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas35" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="198" _title="be quick or be dead" _xpath="enigma_vi/illmind12_1" author="illmind" ctrl="force" easy="true" id="illmind12" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="199" _title="Tarzan" _xpath="enigma_vi/ulf03_1" author="Ulf Stegemann" ctrl="force" easy="true" id="20060629ulf003" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="200" _title="Simple Space" _xpath="enigma_vi/ulf02_1" author="Ulf Stegemann" ctrl="force" easy="false" id="20060628ulf002" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15500" network="false" owner="Enigma Team" release="1" revision="11" title="Enigma 1.01 new"/>
+  <info enigma="1.00" group="Facets" location="15500" network="false" owner="Enigma Team" release="1" revision="12" title="Enigma 1.01 new"/>
 
   <attributes/>
 
@@ -26,10 +26,10 @@
     <level _seq="18" _title="Your Friend, the Light" _xpath="enigma_vi/just15_1" author="JuSt" ctrl="force" easy="true" id="just15" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="19" _title="jumping ball flash" _xpath="enigma_vi/illmind13_1" author="illmind" ctrl="force" easy="false" id="2007ill001" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="20" _title="Cold Meditation" _xpath="enigma_vii/ral18_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070314ral728" rel="1" rev="67" score="1" target="time" unit="duration"/>
-    <level _seq="21" _title="Same task ..." _xpath="enigma_vi/raoul29_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul29" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="21" _title="Same task ..." _xpath="enigma_vi/raoul29_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul29" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="22" _title="Industrial Puzzles" _xpath="enigma_vi/raoul30_2" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul30" rel="2" rev="6" score="2" target="time" unit="duration"/>
     <level _seq="23" _title="Odyssey" _xpath="enigma_vi/ant39_1" author="Petr Machata" ctrl="force" easy="false" id="ant39" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="24" _title="Tandem Chess" _xpath="enigma_vi/luc34_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc342007" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="24" _title="Tandem Chess" _xpath="enigma_vi/luc34_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc342007" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="25" _title="Magic Trinity" _xpath="enigma_vi/duffy146_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy146" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="26" _title="Rotor Guards" _xpath="enigma_vi/duffy144_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy144" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="27" _title="Group Trip to Meditation" _xpath="enigma_vi/duffy136_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy136" rel="1" rev="2" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="9" title="Enigma 1.1 new"/>
+  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="10" title="Enigma 1.1 new"/>
 
   <attributes/>
 
@@ -31,7 +31,7 @@
     <level _seq="23" _title="Wood - Water - Wood" _xpath="enigma_vii/duffy173_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy173" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="24" _title="Transpositions" _xpath="enigma_vii/duffy174_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy174" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="25" _title="The Pearl Necklet" _xpath="enigma_vii/duffy175_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy175" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="26" _title="Puppet" _xpath="enigma_vii/pulley06_1" author="Mark Pulley" ctrl="force" easy="true" id="pulley06" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="26" _title="Puppet" _xpath="enigma_vii/pulley06_2" author="Mark Pulley" ctrl="force" easy="true" id="pulley06" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="27" _title="Restless Meditation" _xpath="enigma_vii/ral09_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070623ral914" rel="1" rev="77" score="1" target="time" unit="duration"/>
     <level _seq="28" _title="Ghost Driver" _xpath="enigma_vii/duffy176_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy176" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="29" _title="Re-entry Circuit" _xpath="enigma_vii/pulley05_1" author="Mark Pulley" ctrl="force" easy="false" id="pulley05" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -70,7 +70,7 @@
     <level _seq="62" _title="Lady in Red" _xpath="enigma_vii/just30_1" author="Just" ctrl="force" easy="true" id="just30" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="63" _title="Crawling the Abyss" _xpath="enigma_vii/sph02_1" author="ShadowPhrogg32642342" ctrl="force" easy="true" id="sph02" rel="1" rev="5" score="1" target="time" unit="duration"/>
     <level _seq="64" _title="Bold Boulder" _xpath="enigma_vii/ral14_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20061124ral279" rel="1" rev="96" score="1" target="time" unit="duration"/>
-    <level _seq="65" _title="Tinker, Tailor" _xpath="enigma_vii/andreas46_3" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas46" rel="4" rev="3" score="2" target="time" unit="duration"/>
+    <level _seq="65" _title="Tinker, Tailor" _xpath="enigma_vii/andreas46_3" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas46" rel="4" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="66" _title="Elbow Society" _xpath="enigma_vii/andreas45_2" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas45" rel="2" rev="5" score="2" target="time" unit="duration"/>
     <level _seq="67" _title="Watchmaker" _xpath="enigma_vii/huesing01_1" author="Johannes H?sing" ctrl="force" easy="false" id="huesing01" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="68" _title="Map it out II" _xpath="enigma_vii/manuel01_1" author="Manuel Eisentraut" ctrl="force" easy="true" id="manuel01" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -90,15 +90,25 @@
     <level _seq="82" _title="Enigmines" _xpath="enigma_viii/huffman01_1" author="Brian Huffman" ctrl="force" easy="true" id="huffman01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="83" _title="Red Cave" _xpath="enigma_viii/mecke21_1" author="mecke" ctrl="force" easy="true" id="mecke21" rel="1" rev="30" score="1" target="time" unit="duration"/>
     <level _seq="84" _title="Status code 302" _xpath="enigma_viii/dev02_1" author="/dev/null" ctrl="force" easy="true" id="dev02" rel="1" rev="4" score="1" target="time" unit="duration"/>
-    <level _seq="85" _title="A Screenful of Secrets" _xpath="enigma_viii/mecke01_1" author="mecke" ctrl="force" easy="true" id="mecke01" rel="1" rev="20" score="1" target="time" unit="duration"/>
+    <level _seq="85" _title="A Screenful of Secrets" _xpath="enigma_viii/mecke01_1" author="mecke" ctrl="force" easy="true" id="mecke01" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="86" _title="Southside Life" _xpath="enigma_viii/mecke10_1" author="mecke" ctrl="force" easy="true" id="mecke10" rel="1" rev="18" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Joona's Chess" _xpath="enigma_viii/joona02_1" author="Joona Laire" ctrl="force" easy="true" id="joona02" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="88" _title="Helios I" _xpath="enigma_viii/mecke07_1" author="mecke" ctrl="force" easy="false" id="mecke48" rel="1" rev="11" score="1" target="time" unit="duration"/>
     <level _seq="89" _title="The Green Hell" _xpath="enigma_viii/mecke22_1" author="mecke" ctrl="force" easy="true" id="mecke22" rel="1" rev="55" score="1" target="time" unit="duration"/>
-    <level _seq="90" _title="Tilt Board" _xpath="enigma_viii/ulf06_1" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="1" rev="115" score="1" target="time" unit="duration"/>
+    <level _seq="90" _title="Tilt Board" _xpath="enigma_viii/ulf06_2" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="2" rev="116" score="2" target="time" unit="duration"/>
     <level _seq="91" _title="4 - 8 - 4" _xpath="enigma_viii/dpl03_3" author="Dominik Leipold" ctrl="force" easy="true" id="20070821dpl003" rel="3" rev="4" score="3" target="time" unit="duration"/>
     <level _seq="92" _title="Impulsive Order" _xpath="enigma_viii/raywick05_1" author="Ray Wick" ctrl="force" easy="true" id="raywick5" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="93" _title="Cross Mail" _xpath="enigma_viii/johann03_1" author="Johann Freymuth" ctrl="force" easy="false" id="johann03" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="94" _title="Colour Maze" _xpath="enigma_viii/pulley16_3" author="Mark Pulley" ctrl="force" easy="false" id="pulley16" rel="3" rev="2" score="3" target="time" unit="duration"/>
+    <level _seq="95" _title="Earthlink" _xpath="enigma_viii/pulley15_1" author="Mark Pulley" ctrl="force" easy="true" id="pulley15" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="96" _title="Mirrors and Wire" _xpath="enigma_viii/andreas53_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas53" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="97" _title="Wired" _xpath="enigma_viii/andreas49_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas49" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="98" _title="Push Wires" _xpath="enigma_viii/ral24_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080708ral196" rel="1" rev="100" score="1" target="time" unit="duration"/>
+    <level _seq="99" _title="Wired Five" _xpath="enigma_viii/ral25_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080721ral073" rel="1" rev="109" score="1" target="time" unit="duration"/>
+    <level _seq="100" _title="Wireban Premiere" _xpath="enigma_viii/ral26_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080715ral161" rel="1" rev="105" score="1" target="time" unit="duration"/>
+    <level _seq="101" _title="Microwire" _xpath="enigma_viii/ral27_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080717ral427" rel="1" rev="107" score="1" target="time" unit="duration"/>
+    <level _seq="102" _title="More Microwire" _xpath="enigma_viii/ral28_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080717ral282" rel="1" rev="105" score="1" target="time" unit="duration"/>
+    <level _seq="103" _title="Freestyle Microwire" _xpath="enigma_viii/ral29_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080719ral530" rel="1" rev="107" score="1" target="time" unit="duration"/>
   </levels>
 
 </index>

Modified: trunk/data/levels/enigma_ii/ant07_1.xml
===================================================================
--- trunk/data/levels/enigma_ii/ant07_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_ii/ant07_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -18,7 +18,7 @@
 ti["~"] = {"fl-water"}
 ti["#"] = ti["~"] .. {"st-greenbrown"}
 ti["O"] = ti["~"] .. {"st_oxyd", flavor="a", name="oxydstone#"}
-ti["m"] = ti[" "] .. {"it-magicwand"}
+ti["m"] = ti[" "] .. {"it_magicwand"}
 ti["B"] = ti[" "] .. {"st_boulder_e", "the_boulder"}
 ti["+"] = ti["~"] .. {"it_trigger", target="turn_boulder", action_1="callback", invisible=true}
 ti["A"] = {"ac-blackball", 0.0, 0.5}

Modified: trunk/data/levels/enigma_iii/andreas04_1.xml
===================================================================
--- trunk/data/levels/enigma_iii/andreas04_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_iii/andreas04_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,12 +3,12 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Laser Castle" el:subtitle="" el:id="andreas04"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libluatools" el:id="lib/libluatools" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -18,106 +18,76 @@
       <el:score el:easy="02:29" el:difficult="02:58"/>
     </el:info>
     <el:luamain><![CDATA[
--- Created with the help of BBE 1.05
+-- Originally created with the help of BBE 1.05
 
-function file_oxyd(x,y,f)
-    oxyd_default_flavor=f
-    oxyd(x,y)
-end
-levelh=52
-levelw=20
-enigma.FlatForce=30
-enigma.SlopeForce=30
-enigma.ElectricForce=30
-cells={}
-items={}
-actors={}
-stones={}
-actors[" "]=cell{}
-stones[" "]=cell{}
-cells[" "]=cell{}
-items[" "]=cell{}
-cells["!"]=cell{floor="fl-water"}
-cells["#"]=cell{floor="fl-leaves"}
-stones["!"]=cell{stone="st-greenbrown"}
-cells["$"]=cell{floor="fl-abyss"}
-cells["%"]=cell{floor="fl-normal"}
-cells["&"]=cell{floor="fl-gradient12"}
-cells["'"]=cell{floor="fl-gradient4"}
-cells["("]=cell{floor="fl-gradient11"}
-cells[")"]=cell{floor="fl-gradient2"}
-stones["#"]=cell{stone="st-stoneimpulse"}
-cells["*"]=cell{floor="fl-gradient1"}
-cells["+"]=cell{floor="fl-rock"}
-items["!"]=cell{item="it-trigger"}
-stones["$"]=cell{stone="st-rock1_move"}
-cells[","]=cell{floor="fl-gradient6"}
-cells["-"]=cell{floor="fl-gradient8"}
-stones["%"]=cell{stone="st-rock1"}
-items["#"]=cell{item="it-seed_nowood"}
-stones["&"]=cell{stone="st-fourswitch"}
-cells["."]=cell{floor="fl-gradient10"}
-cells["/"]=cell{floor="fl-gradient3"}
-cells["0"]=cell{floor="fl-gradient7"}
-stones["'"]=cell{parent={{file_oxyd,"a"}}}
-stones["("]=cell{stone="st-mirror-p-t"}
-cells["1"]=cell{floor="fl-rock"}
-items["$"]=cell{item="it-wormhole"}
--- items["$"]=cell{item="it-vortex"}
-cells["2"]=cell{floor="fl-gradient5"}
-cells["3"]=cell{floor="fl-gradient9"}
-stones[")"]=cell{stone="st-knight"}
-stones["*"]=cell{stone="st-black4"}
-items["%"]=cell{item="it-hammer"}
-stones["+"]=cell{stone="st-laser-w"}
-function ac_blackball(x,y)
-n=""
-p=0
-f=0
- if (x==10) and (y==28) then
-  n="ac10x28"
-  p=0
-  mf=1
- end
- if enigma.CreatingPreview then
-  set_actor("ac-blackball", 4, 11.3)
- else
-  set_actor("ac-blackball",x+0.5,y+0.5,{player=p,name=n,mouseforce=mf})
- end
-end
-actors["!"]=cell{parent={{ac_blackball}}}
-items["&"]=cell{item="it-document"}
-function ac_top(x,y)
-n=""
-r=0
-f=0
- init=false
- if (x==10) and (y==47) then
-  n="ac10x47"
-  r=10
-  f=10
-  init=FALSE
- end
- if (x==12) and (y==44) then
-  n="ac12x44"
-  r=10
-  f=10
-  init=FALSE
- end
-set_actor("ac-top",x+0.5,y+0.5,{range=r,force=f,name=n,gohome=init})
-end
-actors["#"]=cell{parent={{ac_top}}}
--- actors["#"]=cell{parent={{ac_rotor}}}
-stones[","]=cell{stone="st-mirror-p\\t"}
-stones["-"]=cell{stone="st-laser-n"}
-stones["."]=cell{stone="st-laser-s"}
-stones["/"]=cell{stone="st-mirror-p/t"}
-stones["0"]=cell{stone="st-laser-e"}
-items["'"]=cell{item="it-seed"}
-stones["1"]=cell{stone="st-mirror-p|t"}
-stones["5"]=cell{stone="st-door-v"}
-stones["6"]=cell{stone="st-stoneimpulse-hollow"}
-items["("]=cell{item="it-extralife"}
+isPreview = wo["CreatingPreview"]
+
+ti["    "]={"fl-water"}
+ti["!   "]={"fl-water"}
+ti["#   "]={"fl-leaves"}
+ti["$   "]={"fl-abyss"}
+ti["%   "]={"fl-normal"}
+ti["&   "]={"fl-gradient12"}
+ti["'   "]={"fl-gradient4"}
+ti["(   "]={"fl-gradient11"}
+ti[")   "]={"fl-gradient2"}
+ti["*   "]={"fl-gradient1"}
+ti["+   "]={"fl-rock"}
+ti[",   "]={"fl-gradient6"}
+ti["-   "]={"fl-gradient8"}
+ti[".   "]={"fl-gradient10"}
+ti["/   "]={"fl-gradient3"}
+ti["0   "]={"fl-gradient7"}
+ti["1   "]={"fl-rock"}
+ti["2   "]={"fl-gradient5"}
+ti["3   "]={"fl-gradient9"}
+ti[" !  "]={"st-greenbrown"}
+ti[" #  "]={"st-stoneimpulse"}
+ti[" $  "]={"st-rock1_move"}
+ti[" %  "]={"st-rock1"}
+ti[" A  "]={"st_fourswitch", "fo_a", action = "signal",
+             target_0 = "la_w", target_1 = "la_s", target_2 = "la_e", target_3 = "la_n"}
+ti[" B  "]={"st_fourswitch", "fo_b", action = "signal",
+             target_0 = "la_w", target_1 = "la_s", target_2 = "la_e", target_3 = "la_n"}
+ti[" C  "]={"st_fourswitch", "fo_c", action = "signal",
+             target_0 = "la_w", target_1 = "la_s", target_2 = "la_e", target_3 = "la_n"}
+ti[" D  "]={"st_fourswitch", "fo_d", action = "signal",
+             target_0 = "la_w", target_1 = "la_s", target_2 = "la_e", target_3 = "la_n"}
+ti[" I  "]={"st_fourswitch", action = "signal",
+             target_0 = "mi_w", target_1 = "mi_s", target_2 = "mi_e", target_3 = "mi_n"}
+ti[" '  "]={"st_oxyd", flavor = "a"}
+ti[" )  "]={"st_knight"}
+ti[" *  "]={"st-black4"}
+ti[" J  "]={"st_mirror", flavor = "sheets", orientation = 1,
+            transparent = true}  -- p-t
+ti[" (  "]={"st_mirror", "mi_w", flavor = "sheets", orientation = 1,
+            transparent = true}  -- p-t
+ti[" /  "]={"st_mirror", "mi_s", flavor = "sheets", orientation = 2,
+            transparent = true}  -- p/t
+ti[" 1  "]={"st_mirror", "mi_e", flavor = "sheets", orientation = 3,
+            transparent = true} -- p|t
+ti[" ,  "]={"st_mirror", "mi_n", flavor = "sheets", orientation = 0,
+            transparent = true} -- p\\t
+ti[" +  "]={"st_laser", "la_w", orientation = WEST, state = OFF}
+ti[" -  "]={"st_laser", "la_n", orientation = NORTH, state = OFF}
+ti[" .  "]={"st_laser", "la_s", orientation = SOUTH, state = OFF}
+ti[" 0  "]={"st_laser", "la_e", orientation = EAST, state = OFF}
+ti[" 5  "]={"st-door-v", "castle_door"}
+ti[" 6  "]={"st-stoneimpulse-hollow"}
+ti["  1 "]={"it_trigger", target = {"fo_a", "fo_c"}}
+ti["  2 "]={"it_trigger", target = {"fo_a"}}
+ti["  3 "]={"it_trigger", target = {"fo_c", "fo_d"}}
+ti["  4 "]={"it_trigger", target = {"fo_d", "fo_b"}}
+ti["  O "]={"it_trigger", target = "castle_door"}
+ti["  # "]={"it-seed_nowood"}
+ti["  $ "]={"it_wormhole"}
+ti["  % "]={"it_hammer"}
+ti["  ' "]={"it-seed"}
+ti["  ( "]={"it-extralife"}
+ti["  & "]={"it-document", text = "text1"}
+ti["   !"]=luatools.cond(isPreview, {}, {"#ac-blackball", mouseforce = 1})
+ti["   #"]={"ac-top", range = 10, force = 10, gohome = false}
+
 level={"!!!!!!!!!!!!!!!!!!!!",
        "!!!######!!!!###!!!!",
        "!!#&))).#!!!######!!",
@@ -226,8 +196,8 @@
          "                    ",
          "                    ",
          "                    ",
-         "     !              ",
-         "               !    ",
+         "     1              ",
+         "               2    ",
          "                    ",
          "                    ",
          "                    ",
@@ -238,8 +208,8 @@
          "                    ",
          "         %          ",
          "                    ",
-         "      ! !           ",
-         "                  ! ",
+         "      3 O           ",
+         "                  4 ",
          "                    ",
          "                    ",
          "                    ",
@@ -280,18 +250,18 @@
         "    ###             ",
         "    # #       ###   ",
         "    #$%       # #   ",
-        "    ###&####  %$#   ",
+        "    ###A####  %$#   ",
         "      #%%%'######   ",
-        "      #%&%(,'& 5    ",
+        "      #%I%J,'B 5    ",
         "      #% )  %####   ",
         "      #% %    '%#   ",
         "      #'%%%-%)%'#   ",
         "      #(  +%0  1#   ",
         "      #'%%%.% %'#   ",
         "    #%#%  % %  %#   ",
-        "    #%&###'/'%66####",
+        "    #%C###'/'%66####",
         "    #$ # ## %%  #%##",
-        "    ####  ######&% #",
+        "    ####  ######D% #",
         "               %%%$#",
         "               #####",
         "                    ",
@@ -326,71 +296,36 @@
         "       %%%%%%%* )%  ",
         "             %%)'%  ",
         "              %%%%  "}
-create_world_by_map(level)
-draw_map(0,0,stmap,stones)
-draw_map(0,0,itmap,items)
-draw_map(0,0,acmap,actors)
-set_item("it-wormhole",14, 8, {targetx="14.5",targety="42.5",strength=0})
-set_item("it-wormhole",14,16, {targetx="14.5",targety="48.5",strength=0})
-set_item("it-wormhole",14,41, {targetx="16.5",targety="8.5",strength=0})
-set_item("it-wormhole",14,49, {targetx="15.5",targety="16.5",strength=0})
-set_item("it-wormhole", 8,14, {targetx="8.5",targety="48.5",strength=0})
-set_item("it-wormhole", 8,47, {targetx="9.0",targety="14.5",strength=0})
--- SetAttrib(enigma.GetItem(14,8),"strength",0)
--- SetAttrib(enigma.GetItem(14,16),"strength",0)
--- SetAttrib(enigma.GetItem(14,41),"strength",0)
--- SetAttrib(enigma.GetItem(14,49),"strength",0)
--- SetAttrib(enigma.GetItem(8,14),"strength",0)
--- SetAttrib(enigma.GetItem(8,47),"strength",0)
--- Signal ("it(14 8)","fl(14 42)")
--- Signal ("it(14 16)","fl(14 48)")
--- Signal ("it(14 41)","fl(16 8)")
--- Signal ("it(14 49)","fl(15 16)")
--- Signal ("it(8 14)","fl(8 48)")
--- Signal ("it(8 47)","fl(8 14)")
-SetAttrib(enigma.GetItem(5,4),"invisible",FALSE)
-SetAttrib(enigma.GetItem(6,16),"invisible",FALSE)
-SetAttrib(enigma.GetItem(10,31),"text","text1")
-SetAttrib(enigma.GetItem(15,5),"invisible",FALSE)
-SetAttrib(enigma.GetItem(18,17),"invisible",FALSE)
-Signal ("st(13 8)","st(11 11)")
-Signal ("st(13 8)","st(12 12)")
-Signal ("st(13 8)","st(11 13)")
-Signal ("st(13 8)","st(10 12)")
-Signal ("st(7 6)","st(11 11)")
-Signal ("st(7 6)","st(12 12)")
-Signal ("st(7 6)","st(11 13)")
-Signal ("st(7 6)","st(10 12)")
-Signal ("st(6 15)","st(11 11)")
-Signal ("st(6 15)","st(12 12)")
-Signal ("st(6 15)","st(11 13)")
-Signal ("st(6 15)","st(10 12)")
-Signal ("st(16 17)","st(11 11)")
-Signal ("st(16 17)","st(12 12)")
-Signal ("st(16 17)","st(11 13)")
-Signal ("st(16 17)","st(10 12)")
-Signal ("it(18 17)","st(16 17)")
-Signal ("it(18 17)","st(13 8)")
-Signal ("it(6 16)","st(6 15)")
-Signal ("it(6 16)","st(16 17)")
-Signal ("it(5 4)","st(7 6)")
-Signal ("it(5 4)","st(6 15)")
-Signal ("it(15 5)","st(7 6)")
-Signal ("it(15 5)","st(18 17)")
-Signal ("it(8 16)","st(15 8)")
-Signal ("st(8 8)","st(11 8)")
-Signal ("st(8 8)","st(15 12)")
-Signal ("st(8 8)","st(11 15)")
-Signal ("st(8 8)","st(7 12)")
-if not difficult then
-  set_item("it-flagblack",17,9)
+
+map = luatools.fuse_map_layers(level, stmap, itmap, acmap)
+w, h = wo(res.composer(ti), "    ", map)
+
+if not wo["IsDifficult"] then
+  wo[{17, 9}] = {"it-flagblack"}
 end
-if enigma.CreatingPreview then
-  display.SetFollowMode(display.FOLLOW_SMOOTH)
+
+wo["SlopeForce"] = 30
+
+if isPreview then
+  wo[{4, 11.3}] = {"ac-blackball"}
+  wo["FollowGrid"] = false
+  wo["FollowMethod"] = FOLLOW_SCROLL
 else
-  display.SetFollowMode(display.FOLLOW_SCROLLING)
+  wo["FollowGrid"] = true
+  wo["FollowMethod"] = FOLLOW_SCROLL
 end
-oxyd_shuffle()
+
+wo[{14,  8}] = {"it_wormhole", destination = po({14.5, 42.5}), strength = 0}
+wo[{14, 16}] = {"it_wormhole", destination = po({14.5, 48.5}), strength = 0}
+wo[{14, 41}] = {"it_wormhole", destination = po({16.5,  8.5}), strength = 0}
+wo[{14, 49}] = {"it_wormhole", destination = po({15.5, 16.5}), strength = 0}
+wo[{ 8, 14}] = {"it_wormhole", destination = po({ 8.5, 48.5}), strength = 0}
+wo[{ 8, 47}] = {"it_wormhole", destination = po({ 9.0, 14.5}), strength = 0}
+
+wo:shuffleOxyd()
+
+--no["la_w"]:on()
+
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_iii/index.xml
===================================================================
--- trunk/data/levels/enigma_iii/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_iii/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10400" network="false" owner="Enigma Team" release="1" revision="2" title="Enigma III"/>
+  <info enigma="1.00" group="Enigma" location="10400" network="false" owner="Enigma Team" release="1" revision="3" title="Enigma III"/>
 
   <attributes/>
 
@@ -69,7 +69,7 @@
     <level _seq="61" _title="Fool the Warden" _xpath="./duffy37_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy37" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="62" _title="Don't Touch" _xpath="./raoul07_2" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul07" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="63" _title="Emergency Exit" _xpath="./ss05_1" author="Sven Siggelkow" ctrl="force" easy="false" id="ss5" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="64" _title="Laser Castle" _xpath="./andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="64" _title="Laser Castle" _xpath="./andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="The Safe" _xpath="./siegfried77_1" author="Siegfried Fennig" ctrl="force" easy="false" id="siegfried77" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="66" _title="Block its way!" _xpath="./wb05_2" author="Jon 'WB' Sneyers" ctrl="force" easy="true" id="wb5" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="67" _title="Bump Ahead" _xpath="./illmind01_1" author="illmind" ctrl="force" easy="false" id="illmind01" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_iv/index.xml
===================================================================
--- trunk/data/levels/enigma_iv/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_iv/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10500" network="false" owner="Enigma Team" release="1" revision="3" title="Enigma IV"/>
+  <info enigma="1.00" group="Enigma" location="10500" network="false" owner="Enigma Team" release="1" revision="4" title="Enigma IV"/>
 
   <attributes/>
 
@@ -91,7 +91,7 @@
     <level _seq="83" _title="Friction Nightmare" _xpath="./luc01_1" author="Lukas Sch?ller" ctrl="force" easy="true" id="luc01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="84" _title="Prison Yard" _xpath="./nat20_1" author="Nat Pryce" ctrl="force" easy="true" id="nat20" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="85" _title="Bad Nightmare" _xpath="./duffy117_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy117" rel="2" rev="3" score="2" target="time" unit="duration"/>
-    <level _seq="86" _title="Laser Games" _xpath="./mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="86" _title="Laser Games" _xpath="./mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Worse Nightmare" _xpath="./duffy124_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy124" rel="2" rev="3" score="2" target="time" unit="duration"/>
     <level _seq="88" _title="Squaring the Circle" _xpath="./nat16_1" author="Nat Pryce" ctrl="force" easy="true" id="nat16" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="89" _title="Pain" _xpath="./ant27_1" author="Petr Machata" ctrl="force" easy="false" id="ant27" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_iv/mp03_1.xml
===================================================================
--- trunk/data/levels/enigma_iv/mp03_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_iv/mp03_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,266 +1,59 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
+  <el:protected >
     <el:info el:type="level">
       <el:identity el:title="Laser Games" el:subtitle="" el:id="mp03"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
-      <el:author  el:name="moonpearl" el:email="" el:homepage=""/>
+      <el:version el:score="1" el:release="1" el:revision="4" el:status="released"/>
+      <el:author el:name="moonpearl"/>
       <el:copyright>Copyright ? moonpearl</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
-      </el:compatibility>
+      <el:compatibility el:enigma="1.10"/>
       <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
-function file_oxyd(x,y,f)
-    oxyd_default_flavor=f
-    oxyd(x,y)
-end
-levelh=13
-levelw=20
-cells={}
-items={}
-actors={}
-stones={}
-actors[" "]=cell{}
-stones[" "]=cell{}
-cells[" "]=cell{}
-items[" "]=cell{}
-cells["!"]=cell{floor="fl-rough-red"}
-stones["!"]=cell{stone="st-rock4"}
-cells["#"]=cell{floor="fl-rough-blue"}
-stones["#"]=cell{stone="st-block"}
-items["!"]=cell{item="it-trigger"}
-stones["$"]=cell{stone="st-fourswitch"}
-function ac_blackball(x,y)
- n=""
- p=0
- f=0
- if (x==4) and (y==10) then
-  n="ac4x10"
-  p=0
-  mf=1.66666666666667
- end
- set_actor("ac-blackball",x+0.5,y+0.5,{player=p,name=n,mouseforce=mf})
-end
-actors["!"]=cell{parent={{ac_blackball}}}
-stones["%"]=cell{parent={{file_oxyd,"b"}}}
-stones["&"]=cell{stone="st-mirror-3^"}
-stones["'"]=cell{stone="st-mirror-p|"}
-stones["("]=cell{stone="st-mirror-p/"}
-stones[")"]=cell{stone="st-mirror-p-"}
-stones["*"]=cell{stone="st-mirror-p\\"}
-stones["+"]=cell{stone="st-mirror-p/t"}
-stones[","]=cell{stone="st-mirror-3v"}
-stones["-"]=cell{stone="st-mirror-p|t"}
-stones["."]=cell{stone={"st-laser-n", {on=TRUE}}}
-level={"!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#",
-       "#!#!#!#!#!#!#!#!#!#!",
-       "!#!#!#!#!#!#!#!#!#!#"}
-acmap={"                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "    !               ",
-       "                    ",
-       "                    "}
-itmap={"                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    ",
-       "                    "}
-stmap={"!!!!!!!!!!!%!%!%!%!!",
-       "!        !         !",
-       "!  # #   ! & , ' , %",
-       "!      # !         !",
-       "!        ! ' ) + ) %",
-       "!   $$   !         !",
-       "!   $$   ! ( ' ) * %",
-       "!   $$   !         !",
-       "!        ! - * ( - %",
-       "!        !         !",
-       "!     #  ! & * ' , %",
-       "!        !         !",
-       "!!!!!!!!!!!%!%!%!.!!"}
-create_world_by_map(level)
-draw_map(0,0,stmap,stones)
-draw_map(0,0,itmap,items)
-draw_map(0,0,acmap,actors)
-set_item("it-trigger",3,4,{action="callback", target="funcc0"})
-set_item("it-trigger",4,4,{action="callback", target="funcc1"})
-set_item("it-trigger",5,4,{action="callback", target="funcc2"})
-set_item("it-trigger",6,4,{action="callback", target="funcc3"})
-set_item("it-trigger",3,5,{action="callback", target="funcc4"})
-set_item("it-trigger",6,5,{action="callback", target="funcc5"})
-set_item("it-trigger",3,6,{action="callback", target="funcc6"})
-set_item("it-trigger",6,6,{action="callback", target="funcc7"})
-set_item("it-trigger",3,7,{action="callback", target="funcc8"})
-set_item("it-trigger",6,7,{action="callback", target="funcc9"})
-set_item("it-trigger",3,8,{action="callback", target="funcc10"})
-set_item("it-trigger",4,8,{action="callback", target="funcc11"})
-set_item("it-trigger",5,8,{action="callback", target="funcc12"})
-set_item("it-trigger",6,8,{action="callback", target="funcc13"})
-SetAttrib(enigma.GetStone(11,2),"name","mirror0")
-SetAttrib(enigma.GetStone(13,2),"name","mirror1")
-SetAttrib(enigma.GetStone(15,2),"name","mirror2")
-SetAttrib(enigma.GetStone(17,2),"name","mirror3")
-SetAttrib(enigma.GetStone(11,4),"name","mirror4")
-SetAttrib(enigma.GetStone(17,4),"name","mirror5")
-SetAttrib(enigma.GetStone(11,6),"name","mirror6")
-SetAttrib(enigma.GetStone(17,6),"name","mirror7")
-SetAttrib(enigma.GetStone(11,8),"name","mirror8")
-SetAttrib(enigma.GetStone(17,8),"name","mirror9")
-SetAttrib(enigma.GetStone(11,10),"name","mirror10")
-SetAttrib(enigma.GetStone(13,10),"name","mirror11")
-SetAttrib(enigma.GetStone(15,10),"name","mirror12")
-SetAttrib(enigma.GetStone(17,10),"name","mirror13")
-Signal ("st(4 5)","st(13 4)")
-Signal ("st(4 5)","st(13 4)")
-Signal ("st(4 5)","st(13 4)")
-Signal ("st(4 5)","st(13 4)")
-Signal ("st(5 5)","st(15 4)")
-Signal ("st(5 5)","st(15 4)")
-Signal ("st(5 5)","st(15 4)")
-Signal ("st(5 5)","st(15 4)")
-Signal ("st(4 6)","st(13 6)")
-Signal ("st(4 6)","st(13 6)")
-Signal ("st(4 6)","st(13 6)")
-Signal ("st(4 6)","st(13 6)")
-Signal ("st(5 6)","st(15 6)")
-Signal ("st(5 6)","st(15 6)")
-Signal ("st(5 6)","st(15 6)")
-Signal ("st(5 6)","st(15 6)")
-Signal ("st(4 7)","st(13 8)")
-Signal ("st(4 7)","st(13 8)")
-Signal ("st(4 7)","st(13 8)")
-Signal ("st(4 7)","st(13 8)")
-Signal ("st(5 7)","st(15 8)")
-Signal ("st(5 7)","st(15 8)")
-Signal ("st(5 7)","st(15 8)")
-Signal ("st(5 7)","st(15 8)")
-oxyd_shuffle()
+wo["ConserveLevel"] = false
 
--- ^ I I V
--- I ? ? -
--- / ? ? \
--- I ? ? I
--- ^ \ I V
+ti["  "] = ti({"fl-rough-blue", checkerboard = 1}) .. {"fl-rough-red", checkerboard = 0}
+ti["# "] = {"st-rock4"}
+ti["= "] = {"st-block"}
+ti["^ "] = {"st_laser", state = ON, orientation = NORTH}
+ti["$ "] = {"st_oxyd", flavor = "b"}
+ti["@ "] = {"#ac-blackball"}
+ti["T*"] = {"it_trigger", target = "mirror%%", action_1 = "turn", action_0 = "turnback"}
+ti["F*"] = {"st_fourswitch", target = "mirror%%"}
+ti["1*"] = {"st_mirror", name = "mirror%%", flavor = "triangle", orientation = NORTH}
+ti["2*"] = {"st_mirror", name = "mirror%%", flavor = "triangle", orientation = SOUTH}
+ti["3*"] = {"st_mirror", name = "mirror%%", orientation = NORTH}
+ti["4*"] = {"st_mirror", name = "mirror%%", orientation = SOUTH}
+ti["5*"] = {"st_mirror", name = "mirror%%", flavor = "sheets", orientation = EAST}
+ti["6*"] = {"st_mirror", name = "mirror%%", orientation = EAST}
+ti["7*"] = {"st_mirror", name = "mirror%%", orientation = WEST}
+ti["8*"] = {"st_mirror", name = "mirror%%", flavor = "sheets", orientation = NORTH}
+ti["9*"] = {"st_mirror", name = "mirror%%", flavor = "triangle",
+                         orientation = SOUTH, counterclock = true}
 
-function switch()
-    mir=enigma.GetNamedObject("mirror0")
-    if sw0==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror1")
-    if sw1==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 1) end
-    mir=enigma.GetNamedObject("mirror2")
-    if sw2==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror3")
-    if sw3==1 then SetAttrib(mir,"orientation", 2) else SetAttrib(mir,"orientation", 1) end
-    mir=enigma.GetNamedObject("mirror4")
-    if sw4==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror5")
-    if sw5==1 then SetAttrib(mir,"orientation", 2) else SetAttrib(mir,"orientation", 1) end
-    mir=enigma.GetNamedObject("mirror6")
-    if sw6==1 then SetAttrib(mir,"orientation", 1) else SetAttrib(mir,"orientation", 4) end
-    mir=enigma.GetNamedObject("mirror7")
-    if sw7==1 then SetAttrib(mir,"orientation", 3) else SetAttrib(mir,"orientation", 2) end
-    mir=enigma.GetNamedObject("mirror8")
-    if sw8==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror9")
-    if sw9==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror10")
-    if sw10==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror11")
-    if sw11==1 then SetAttrib(mir,"orientation", 3) else SetAttrib(mir,"orientation", 2) end
-    mir=enigma.GetNamedObject("mirror12")
-    if sw12==1 then SetAttrib(mir,"orientation", 4) else SetAttrib(mir,"orientation", 3) end
-    mir=enigma.GetNamedObject("mirror13")
-    if sw13==1 then SetAttrib(mir,"orientation", 2) else SetAttrib(mir,"orientation", 1) end
-end
-function funcc0(ison)
-    sw0=ison
-    switch()
-end
-function funcc1(ison)
-    sw1=ison
-    switch()
-end
-function funcc2(ison)
-    sw2=ison
-    switch()
-end
-function funcc3(ison)
-    sw3=ison
-    switch()
-end
-function funcc4(ison)
-    sw4=ison
-    switch()
-end
-function funcc5(ison)
-    sw5=ison
-    switch()
-end
-function funcc6(ison)
-    sw6=ison
-    switch()
-end
-function funcc7(ison)
-    sw7=ison
-    switch()
-end
-function funcc8(ison)
-    sw8=ison
-    switch()
-end
-function funcc9(ison)
-    sw9=ison
-    switch()
-end
-function funcc10(ison)
-    sw10=ison
-    switch()
-end
-function funcc11(ison)
-    sw11=ison
-    switch()
-end
-function funcc12(ison)
-    sw12=ison
-    switch()
-end
-function funcc13(ison)
-    sw13=ison
-    switch()
-end
+local resolver = res.autotile(ti, {"T", "T*"}, {"F", "F*"},
+    {"1", "1*"}, {"2", "2*"}, {"3", "3*"}, {"4", "4*"}, {"5", "5*"},
+    {"6", "6*"}, {"7", "7*"}, {"8", "8*"}, {"9", "9*"})
+         
+w, h = wo(resolver, "  ", {
+"# # # # # # # # # # # $ # $ # $ # $ # # ",
+"#                 #                   # ",
+"#     =   =       #   1a  9b  3c  2d  $ ",
+"#             =   #                   # ",
+"#     TaTbTcTd    #   3e  4f  5g  4h  $ ",
+"#     TeFfFgTh    #                   # ",
+"#     TiFjFkTl    #   6i  3j  4k  7l  $ ",
+"#     TmFnFoTp    #                   # ",
+"#     TqTrTsTt    #   8m  7n  6o  8p  $ ",
+"#                 #                   # ",
+"#       @   =     #   1q  7r  3s  2t  $ ",
+"#                 #                   # ",
+"# # # # # # # # # # # $ # $ # $ # ^ # # "
+})
+
+wo:shuffleOxyd()
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_tutorial/index.xml
===================================================================
--- trunk/data/levels/enigma_tutorial/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_tutorial/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -56,7 +56,7 @@
     <level _seq="48" _title="Brittle Floor!" _xpath="enigma_iii/martin91_1" author="Martin Hawlisch" ctrl="force" easy="true" id="martin91" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="49" _title="Inverted Laser Spiral" _xpath="enigma_ii/duffy42_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy42" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="50" _title="- Meditation -" _xpath="enigma_i/siegfried35_1" author="Siegfried Fennig" ctrl="force" easy="false" id="meditation14" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="51" _title="Laser Games" _xpath="enigma_iv/mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="51" _title="Laser Games" _xpath="enigma_iv/mp03_1" author="moonpearl" ctrl="force" easy="false" id="mp03" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="52" _title="Items" _xpath="./a_tut05" author="Andreas Lochmann" ctrl="force" easy="false" id="a_tut05" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="53" _title="Flying" _xpath="enigma_i/luc07_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc07" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="54" _title="Annoying little balls" _xpath="enigma_i/wb09_2" author="Jon 'WB' Sneyers" ctrl="force" easy="false" id="wb9" rel="2" rev="0" score="2" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_v/andreas06_1.xml
===================================================================
--- trunk/data/levels/enigma_v/andreas06_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_v/andreas06_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Laser Path" el:subtitle="" el:id="andreas06"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2005 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
+      <el:compatibility el:enigma="1.10">
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -17,132 +16,65 @@
       <el:score el:easy="01:08" el:difficult="02:07"/>
     </el:info>
     <el:luamain><![CDATA[
--- Created with the help of BBE 1.05
 
-function file_oxyd(x,y,f)
-    oxyd_default_flavor=f
-    oxyd(x,y)
-end
-levelh=13
-levelw=20
-enigma.FlatForce=30
-enigma.SlopeForce=30
-enigma.ElectricForce=30
-cells={}
-items={}
-actors={}
-stones={}
-actors[" "]=cell{}
-stones[" "]=cell{}
-cells[" "]=cell{}
-items[" "]=cell{}
-cells["!"]=cell{floor="fl-normal"}
-stones["!"]=cell{stone="st-metal"}
-stones["#"]=cell{stone="st-laserswitch"}
-stones["$"]=cell{parent={{file_oxyd,"a"}}}
-stones["%"]=cell{stone="st-door-h"}
-stones["&"]=cell{stone="st-laser-e"}
-stones["'"]=cell{stone="st-glass1"}
-stones["("]=cell{stone="st-mirror-p|t"}
-stones[")"]=cell{stone="st-mirror-p|"}
-stones["*"]=cell{stone="st-switch"}
-stones["+"]=cell{stone="st-door-v"}
-function ac_blackball(x,y)
-n=""
-p=0
-f=0
- if (x==4) and (y==2) then
-  n="ac4x2"
-  p=0
-  mf=1
- end
-set_actor("ac-blackball",x+0.5,y+0.5,{player=p,name=n,mouseforce=mf})
-end
-actors["!"]=cell{parent={{ac_blackball}}}
--- stones[","]=cell{stone="st-oneway-w"}
-stones["<"]=cell{stone="st-oneway-w"}
-stones[">"]=cell{stone="st-oneway-e"}
-stones["-"]=cell{stone="st-mirror-p|m"}
-stones["."]=cell{stone="st-mirror-p|tm"}
-if difficult then
-  stones["M"]=cell{stone="st-metal"}
-  stones["L"]=cell{stone="st-metal"}
-  stones["K"]=cell{stone="st-metal"}
+-- Originally created with the help of BBE 1.05
+
+ti[" "]={"fl-normal"}
+ti["!"]={"st-metal"}
+ti["$"]={"st_oxyd", flavor = "a"}
+ti["1"]={"st_laserswitch", target = "door1"}
+ti["2"]={"st_laserswitch", target = "door2"}
+ti["3"]={"st_laserswitch", target = "door3"}
+ti["4"]={"st_laserswitch", target = "door4"}
+ti["a"]={"st-door-v", "door1"}
+ti["b"]={"st-door-h", "door2"}
+ti["c"]={"st-door-h", "door3"}
+ti["d"]={"st-door-h", "door4"}
+ti["e"]={"st-door-v", "door5"}
+ti["*"]={"st_switch", target = "laser"}
+ti["E"]={"st_switch", target = "door5"}
+ti["&"]={"st_laser", "laser", orientation = EAST}
+ti["'"]={"st-glass1"}
+ti[")"]={"st_mirror", orientation = 3}  -- p|
+ti["("]={"st_mirror", orientation = 3, transparent = true, flavor = "sheets"}  -- p|t
+ti["-"]={"st_mirror", orientation = 3, movable = true}  -- p|m
+ti["."]={"st_mirror", orientation = 3, movable = true,
+                      transparent = true, flavor = "sheets"}  -- p|tm
+ti["@"]={"#ac-blackball", mouseforce = 1}
+ti["<"]={"st-oneway-w"}
+ti[">"]={"st-oneway-e"}
+if wo["IsDifficult"] then
+  ti["M"]=ti["!"]
+  ti["L"]=ti["!"]
+  ti["K"]=ti["!"]
 else
-  stones["M"]=cell{stone="st-mirror-p|m"}
-  stones["L"]=cell{stone="st-mirror-p|tm"}
-  stones["K"]=cell{stone="st-mirror-p|"}
+  ti["M"]=ti["-"]  -- p|m
+  ti["L"]=ti["."]  -- p|tm
+  ti["K"]=ti[")"]  -- p|
 end
-if difficult then
-else
-end
-level={"!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!",
-       "!!!!!!!!!!!!!!!!!!!!"}
-   acmap={"                    ",
-          "                    ",
-          "    !               ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    ",
-          "                    "}
-  itmap={"                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    ",
-         "                    "}
- stmap={"!!!!!!!!!!!!!!!!!!#!",
-        "!!&              ( #",
-        "!$'            >   !",
-        "!!!*'!!(''')'-''K'%!",
-        "# (              ) !",
+
+w, h = wo(ti, " ", 
+       {"!!!!!!!!!!!!!!!!!!1!",
+        "!!&              ( 2",
+        "!$' @          >   !",
+        "!!!*'!!(''')'-''K'b!",
+        "3 (              ) !",
         "!    <         <   !",
-        "!%'!'!-''!''!-!!'!'!",
-        "! )              ( #",
+        "!c'!'!-''!''!-!!'!'!",
+        "! )              ( 4",
         "!    >         >   !",
-        "!!!!'!M!LL!-''.!''%!",
-        "!$'+'            ) !",
-        "!!!*+<         <   !",
-        "!!!!!!!!!!!!!!!!('(!"}
-create_world_by_map(level)
-draw_map(0,0,stmap,stones)
-draw_map(0,0,itmap,items)
-draw_map(0,0,acmap,actors)
-Signal ("st(3 3)","st(2 1)")
-Signal ("st(19 1)","st(18 3)")
-Signal ("st(3 11)","st(3 10)")
-Signal ("st(0 4)","st(1 6)")
-Signal ("st(19 7)","st(18 9)")
-Signal ("st(18 0)","st(4 11)")
-if difficult then
-  enigma.ConserveLevel = FALSE
-  set_item("it-document", 5, 2, {text="text1"})
+        "!!!!'!M!LL!-''.!''d!",
+        "!$'e'            ) !",
+        "!!!Ea<         <   !",
+        "!!!!!!!!!!!!!!!!('(!"})
+
+if wo["IsDifficult"] then
+  wo["ConserveLevel"] = false
+  wo[{5, 2}] = {"it-document", text = "text1"}
 end
-oxyd_shuffle()
+
+wo:shuffleOxyd()
+
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_v/index.xml
===================================================================
--- trunk/data/levels/enigma_v/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_v/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10600" network="false" owner="Enigma Team" release="1" revision="5" title="Enigma V"/>
+  <info enigma="1.00" group="Enigma" location="10600" network="false" owner="Enigma Team" release="1" revision="6" title="Enigma V"/>
 
   <attributes/>
 
@@ -9,7 +9,7 @@
     <level _seq="1" _title="Welcome" _xpath="./welcometopack5_1" author="Raoul Bourquin" ctrl="force" easy="true" id="welcometopack5" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="2" _title="April 1st" _xpath="./alain11_1" author="Alain Busser" ctrl="force" easy="false" id="alain11" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="3" _title="Send me the keys !" _xpath="./alain09_1" author="Alain Busser" ctrl="force" easy="false" id="alain09" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="4" _title="Laser Path" _xpath="./andreas06_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas06" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="4" _title="Laser Path" _xpath="./andreas06_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas06" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="5" _title="Hobbyte" _xpath="./alain15_1" author="Alain Busser" ctrl="force" easy="false" id="alain15" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="6" _title="Water Castle" _xpath="./luc21_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc21" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="7" _title="Moving Puzzles" _xpath="./luc13_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc13" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_vi/andreas35_1.xml
===================================================================
--- trunk/data/levels/enigma_vi/andreas35_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vi/andreas35_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,11 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Checkmate II" el:subtitle="" el:id="andreas35"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.0">
+      <el:compatibility el:enigma="1.10">
       </el:compatibility>
       <el:modes el:easy="false" el:single="true" el:network="true"/>
       <el:comments>
@@ -16,51 +16,39 @@
       <el:score el:easy="-" el:difficult="01:06"/>
     </el:info>
     <el:luamain><![CDATA[
-levelw = 20
-levelh = 13
 
-CreateWorld(levelw, levelh)
+ti[" "] = ti({"fl-white", checkerboard = 0})
+          .. {"fl-black", checkerboard = 1}
+ti["#"] = {"st-rock3"}
+ti["c"] = ti({"st_chess_white", checkerboard = 0})
+          .. {"st_chess_black", checkerboard = 1}
+ti["x"] = ti({"st-black4", checkerboard = 0})
+          .. {"st-white4", checkerboard = 1}
+ti["y"] = ti["x"] .. {"it-yinyang"}
+ti["o"] = ti({"st_oxyd", oxydcolor = OXYD_WHITE, checkerboard = 0})
+          .. {"st_oxyd", oxydcolor = OXYD_BLACK, checkerboard = 1}
 
-fill_floor("fl-abyss")
-draw_checkerboard_floor("fl-white", "fl-black", 0, 1, levelw, levelh - 1)
-draw_border("st-rock3", 0, 1, levelw, levelh - 1)
+w, h = wo(ti, " ", {
+ -- 01234567890123456789
+   "####################",
+   "#     yxxxxxxy     #",
+   "#     cccccccc     #",
+   "#     cccccccc     #",
+   "#     cccccccc     #",
+   "ox    cccccccc    xo",
+   "ox    cccccccc    xo",
+   "#     cccccccc     #",
+   "#     cccccccc     #",
+   "#     cccccccc     #",
+   "#     yxxxxxxy     #",
+   "####################"
+})
 
-set_actor("ac-blackball", 4, 7, {player=0})
-set_actor("ac-whiteball", levelw - 4, 7, {player=1})
-set_item("it-yinyang", 6, 11)
-set_item("it-yinyang", levelw - 7, 11)
-set_item("it-yinyang", 6, 2)
-set_item("it-yinyang", levelw - 7, 2)
+wo:shuffleOxyd()
 
-oxyd(0, 6)
-oxyd(levelw-1, 6)
-oxyd(0, 7)
-oxyd(levelw-1, 7)
-oxyd_shuffle()
-set_stone("st-black4", 1, 6)
-set_stone("st-white4", levelw - 2, 6)
-set_stone("st-white4", 1, 7)
-set_stone("st-black4", levelw - 2, 7)
+wo[{4,6}] = {"ac-blackball", player = 0}
+wo[{w-4, 6}] = {"ac-whiteball", player = 1}
 
-for x = 6, levelw - 7 do
-  for y = 2, levelh - 2 do
-    if enigma.GetKind(enigma.GetFloor(x,y)) == "fl-black" then
-      set_stone("st-white4", x, y)
-    else
-      set_stone("st-black4", x, y)
-    end
-  end
-end
-
-for x = 6, levelw - 7 do
-  for y = 3, levelh - 3 do
-    if enigma.GetKind(enigma.GetFloor(x,y)) == "fl-black" then
-      set_stone("st-chess_black", x, y)
-    else
-      set_stone("st-chess_white", x, y)
-    end
-  end
-end
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_vi/index.xml
===================================================================
--- trunk/data/levels/enigma_vi/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vi/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10700" network="false" owner="Enigma Team" release="1" revision="11" title="Enigma VI"/>
+  <info enigma="1.00" group="Enigma" location="10700" network="false" owner="Enigma Team" release="1" revision="12" title="Enigma VI"/>
 
   <attributes/>
 
@@ -52,12 +52,12 @@
     <level _seq="44" _title="Dancing on Light Beams" _xpath="./andreas28_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas28" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="45" _title="Wormhole Madness!" _xpath="./edward24_1" author="Edward" ctrl="force" easy="false" id="edward24" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="46" _title="Alcatraz" _xpath="./ralf14_1" author="Ralf Westram" ctrl="force" easy="true" id="ralf14" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="47" _title="Chess, Bugs &amp; Rock'n'Roll" _xpath="./andreas31_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas31" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="47" _title="Chess, Bugs &amp; Rock'n'Roll" _xpath="./andreas31_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas31" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="48" _title="Oiltrace" _xpath="./raoul25_1" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul25" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="49" _title="Simple Space" _xpath="./ulf02_1" author="Ulf Stegemann" ctrl="force" easy="false" id="20060628ulf002" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="50" _title="Hot Meditation" _xpath="./ral08_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060527ral010" rel="1" rev="42" score="1" target="time" unit="duration"/>
     <level _seq="51" _title="Just a Maze?" _xpath="./duffy12_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy12" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="52" _title="Checkmate II" _xpath="./andreas35_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas35" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="52" _title="Checkmate II" _xpath="./andreas35_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas35" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="53" _title="Bodyguard" _xpath="./ral10_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060730ral012" rel="2" rev="97" score="1" target="time" unit="duration"/>
     <level _seq="54" _title="be quick or be dead" _xpath="./illmind12_1" author="illmind" ctrl="force" easy="true" id="illmind12" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="55" _title="Puzzle Puzzles" _xpath="./raoul26_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul26" rel="1" rev="25" score="1" target="time" unit="duration"/>
@@ -77,7 +77,7 @@
     <level _seq="69" _title="Devil's Bolder" _xpath="./just14_1" author="JuSt" ctrl="force" easy="true" id="just14" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="70" _title="Twisting by the pool" _xpath="./alain23_1" author="Alain Busser" ctrl="force" easy="true" id="alain23" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="71" _title="Revolver" _xpath="./ral16_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070214ral703" rel="1" rev="59" score="1" target="time" unit="duration"/>
-    <level _seq="72" _title="Same task ..." _xpath="./raoul29_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul29" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="72" _title="Same task ..." _xpath="./raoul29_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul29" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="73" _title="ZigZag" _xpath="./ralf06_1" author="Ralf Westram" ctrl="force" easy="true" id="ralf06" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="74" _title="Houdini" _xpath="./ral11_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060816ral719" rel="2" rev="58" score="2" target="time" unit="duration"/>
     <level _seq="75" _title="The wrong Place?" _xpath="./just17_1" author="JuSt" ctrl="force" easy="false" id="just17" rel="1" rev="1" score="1" target="time" unit="duration"/>
@@ -91,7 +91,7 @@
     <level _seq="83" _title="The Cube" _xpath="./malaire01_1" author="Markus Laire" ctrl="force" easy="true" id="20061120malaire901" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="84" _title="Blitz Chess" _xpath="./luc32_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc322006" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="85" _title="One-Way Woods" _xpath="./duffy135_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy135" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="86" _title="Tandem Chess" _xpath="./luc34_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc342007" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="86" _title="Tandem Chess" _xpath="./luc34_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc342007" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Your Friend, the Light" _xpath="./just15_1" author="JuSt" ctrl="force" easy="true" id="just15" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="88" _title="Correspondence Chess" _xpath="./luc35_3" author="Lukas Sch?ller" ctrl="force" easy="true" id="luc352007" rel="3" rev="4" score="3" target="time" unit="duration"/>
     <level _seq="89" _title="Magic Triangle" _xpath="./just13_1" author="JuSt" ctrl="force" easy="false" id="just13" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_vi/raoul29_1.xml
===================================================================
--- trunk/data/levels/enigma_vi/raoul29_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vi/raoul29_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,104 +3,69 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Same task ..." el:subtitle="... different Mirrors" el:id="raoul29"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="4" el:status="released"/>
       <el:author  el:name="Raoul Bourquin" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
+      <el:compatibility el:enigma="1.10">
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
--- GENERAL --
-levelh = 13
-levelw = 20
+wo["ConserveLevel"] = true
 
-create_world(levelw, levelh)
-fill_floor("fl-metal")
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-          if c=="O" then
-            oxyd(i-1,line)
-        elseif c=="G" then
-            set_stone("st-glass2",i-1,line)
-        elseif c=="F" then
-            set_stone("st-glass1",i-1,line)
-        elseif c=="<" then
-            set_stone("st-mirror-3<m",i-1,line)
-        elseif c=="|" then
-            set_stone("st-mirror-p|m",i-1,line)
-        elseif c=="(" then
-            set_stone("st-mirror-3<tm",i-1,line)
-        elseif c=="i" then
-            set_stone("st-mirror-p|tm",i-1,line)
-        elseif c=="L" then
-            set_stone("st-laser",i-1,line,{on=FALSE, dir=WEST, name="l_west"})
-        elseif c=="l" then
-            set_stone("st-laser",i-1,line,{on=FALSE, dir=EAST, name="l_east"})
-        elseif c=="P" then
-            set_stone("st-polarswitch",i-1,line,{on=FALSE})
-
-        elseif c=="h" then
-            set_stone("st-mirror-p-t",i-1,line)
-        elseif c=="v" then
-            set_stone("st-mirror-p|t",i-1,line)
-
-        elseif c=="b" then
-            set_item("it-flagblack",i-1,line)
-        elseif c=="w" then
-            set_item("it-flagwhite",i-1,line)
-
-        elseif c=="-" then
-            set_floor("fl-abyss",i-1,line)
-        elseif c=="~" then
-            if not difficult then
-                set_floor("fl-abyss",i-1,line,{friction=0.1})
-            else
-                set_floor("fl-abyss",i-1,line,{friction=0.25})
-            end
-        end
-    end
+ti[" "] = {"fl-metal"}
+ti["-"] = {"fl-abyss"}
+if wo["IsDifficult"] then
+  ti["~"] = {"fl-abyss", friction=0.25}
+else
+  ti["~"] = {"fl-abyss", friction=0.1}
 end
+ti["G"] = {"st-glass2"}
+ti["F"] = {"st-glass1"}
+ti["w"] = ti[" "] .. {"it-flagwhite"}
+ti["b"] = ti[" "] .. {"it-flagblack"}
+ti["y"] = {"it-yinyang"}
+ti["h"] = {"st_mirror", flavor="slab", transparent=true, orientation=SOUTH}
+ti["v"] = {"st_mirror", flavor="slab", transparent=true, orientation=NORTH}
+ti["<"] = {"st_mirror", flavor="triangle", transparent=false, movable=true, orientation=WEST}
+ti["|"] = {"st_mirror", flavor="slab", transparent=false, movable=true}
+ti["("] = {"st_mirror", flavor="triangle", transparent=true, movable=true, orientation=WEST}
+ti["i"] = {"st_mirror", flavor="sheets", transparent=true, movable=true}
+ti["P"] = {"st_polarswitch"}
+ti["1"] = {"it_trigger", target="l_west", action_1="on", action_0="off"}
+ti["2"] = {"it_trigger", target="l_east", action_1="on", action_0="off"}
+ti["L"] = {"st_laser", orientation=WEST, name="l_west"}
+ti["l"] = {"st_laser", orientation=EAST, name="l_east"}
+ti["O"] = {"st_oxyd", flavor="b"}
+ti["A"] = ti["y"] .. {"#ac-blackball", essential=1}
+ti["B"] = ti["y"] .. {"#ac-whiteball", essential=1}
 
-renderLine(00 , "-------G~~~~G-------")
-renderLine(01 , "GGOFFFFOGGGGOFFFFOGG")
-renderLine(02 , "GGh    hGGGFh    hFG")
-renderLine(03 , "OvP----PvOOvP----PvO")
-renderLine(04 , "F -    - GG -   w- F")
-renderLine(05 , "F - << - GG - |i - F")
-renderLine(06 , "F -  < - Ll - |  - F")
-renderLine(07 , "F - (< - GG - |i - F")
-renderLine(08 , "F -b   - GG -    - F")
-renderLine(09 , "OvP----PvOOvP----PvO")
-renderLine(10 , "GGh    hGGGFh    hFG")
-renderLine(11 , "GGOFFFFOGGGGOFFFFOGG")
-renderLine(12 , "-------G~~~~G-------")
+w, h = wo(ti, " ", {
+"-------G1~~2G-------",
+"GGOFFFFOGGGGOFFFFOGG",
+"GGh    hGGGFh    hFG",
+"OvP----PvOOvP----PvO",
+"F -    - GG -   w- F",
+"F - << - GG - |i - F",
+"F - A< - Ll - |B - F",
+"F - (< - GG - |i - F",
+"F -b   - GG -    - F",
+"OvP----PvOOvP----PvO",
+"GGh    hGGGFh    hFG",
+"GGOFFFFOGGGGOFFFFOGG",
+"-------G1~~2G-------"
+})
 
-oxyd_shuffle()
-
-set_item("it-trigger",8,0,{action="on", target="l_west"})
-set_item("it-trigger",11,0,{action="off", target="l_west"})
-
-set_item("it-trigger",8,12,{action="off", target="l_east"})
-set_item("it-trigger",11,12,{action="on", target="l_east"})
-
-if not difficult then
-    set_actor("ac-rotor",10,0.5, {force="10", range="15", prefercurrent=1})
-    set_actor("ac-rotor",10,12.5, {force="10", range="15", prefercurrent=1})
+if  wo["IsDifficult"]  then
+    wo[{10, 0.5}] = {"ac-rotor", force=20, range=15, prefercurrent=1}
+    wo[{10, 12.5}] = {"ac-rotor", force=20, range=15, prefercurrent=1}
 else
-    set_actor("ac-rotor",10,0.5, {force="20", range="15", prefercurrent=1})
-    set_actor("ac-rotor",10,12.5, {force="20", range="15", prefercurrent=1})
+    wo[{10, 0.5}] = {"ac-rotor", force=10, range=15, prefercurrent=1}
+    wo[{10, 12.5}] = {"ac-rotor", force=10, range=15, prefercurrent=1}
 end
-
--- Special
-set_actor("ac-blackball", 4.5,6.5, {player=0})
-set_actor("ac-whiteball", 15.5,6.5, {player=1})
-set_item("it-yinyang",4,6)
-set_item("it-yinyang",15,6)
+wo:shuffleOxyd()
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_vii/andreas46_3.xml
===================================================================
--- trunk/data/levels/enigma_vii/andreas46_3.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vii/andreas46_3.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Tinker, Tailor" el:subtitle="" el:id="andreas46"/>
-      <el:version el:score="2" el:release="4" el:revision="3" el:status="released"/>
+      <el:version el:score="2" el:release="4" el:revision="4" el:status="released"/>
       <el:author el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -11,94 +11,95 @@
         <el:dependency el:path="lib/libluatools" el:id="lib/libluatools" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
-      <el:score el:easy="3:25" el:difficult="5:44"/>
+      <el:score el:easy="2:18" el:difficult="5:10"/>
     </el:info>
     <el:luamain><![CDATA[
-parastonekind = "st-grate2"  --"st-likeoxyda-open"
 
-if wo["IsDifficult"] then
-  maxstrength = 1000
-else
-  maxstrength = 0
-end
+wo["ConserveLevel"] = true
 
+-- Names starting with "para" relate to objects on the
+-- right side of the screen, i.e., the side indicating
+-- the next pattern.
+
+ti["  "] = {"fl-leavesb"}
+ti["# "] = {"st-glass2"}
+ti["@ "] = {"#ac-blackball", name = "marble"}
+ti["o "] = {"st_oxyd", flavor = "b"}
+ti["S*"] = {"st_scissors", name = "scissors%%", target = "call_scissors"}
+ti["C "] = {"st_scissors", name = "scissors_central", target = "call_scissors"}
+ti["X*"] = {"st-glass1"} .. ti({"#ac-horse", name = "horse%%"})
+ti["s*"] = {"st-grate2", name = "parascissors%%"}
+ti["c "] = {"st-grate2", name = "parascissors_central"}
+ti["x*"] = {"st-glass1_hole", name = "paraplace%%"}
+ti["u "] = {"st_switch", target = "next_pattern"}
+ti["v "] = {"st_switch", target = "solve"}
+ti["r*"] = {"fl-leavesb", "parafloor%%"}
+ti["t "] = {"st_timer", interval = 2.0, name = "timer", loop = false,
+                        invisible = true}
+
 function myrandom()
   -- Return a random number of the following: 3, 2, 1, -1, -2, -3.
   return ({3,2,1,-1,-2,-3})[random(6)]
 end
 
-wo["ConserveLevel"] = true
+function myresolver(key, x, y)
+  if key == ". " then
+    return {"fl-leavesb", force_x = myrandom(), force_y = myrandom()}
+  else
+    return ti[key]
+  end
+end
 
-ti["  "] = {"fl-leavesb"}
-ti[". "] = {"fl-leavesb", force_x = myrandom(), force_y = myrandom()}
+local resolver = res.autotile(myresolver,
+                   {"S", "S*"}, {"X", "X*"}, {"s", "s*"}, {"x", "x*"}, {"r", "r*"})
 
-ti["# "] = ti["  "] .. {"st-glass2"}
-ti["G "] = ti["  "] .. {"st-glass2"}
-ti["@ "] = ti["  "] .. {"#ac-blackball", name = "marble"}
-ti["o "] = ti["  "] .. {"st_oxyd", flavor = "b"}
-ti["template_S"] = ti["  "] .. {"st-scissors", name = "scissors%%", target = "call_scissors"}
-ti["C "] = ti["  "] .. {"st-scissors", name = "scissors_central", target = "call_scissors"}
-ti["template_X"] = (ti["  "] .. {"st-glass1"}) .. {"#ac-horse", name = "horse%%"}
-ti["template_s"] = ti["  "] .. {parastonekind, name = "parascissors%%"}
-ti["c "] = ti["  "] .. {parastonekind, name = "parascissors_central"}
-ti["template_x"] = (ti["  "] .. {"st-glass1_hole", name = "paraplace%%"})
-ti["u "] = ti["  "] .. {"st_switch", target = "next_pattern"}
-ti["v "] = ti["  "] .. {"st_switch", target = "solve"}
-ti["template_r"] = {"fl-leavesb", "parafloor%%"}
-ti["t "] = ti["  "] .. {"st_timer", interval = 2.0, name = "timer", loop = false,
-                       invisible = true}
-
-local resolver = res.autotile(ti,
-                   {"S", "template_S"}, {"X", "template_X"},
-                   {"s", "template_s"}, {"x", "template_x"}, {"r", "template_r"})
-
 w, h = wo(resolver, "  ", {
  -- 01234567890123456789
    "# # # # # # # # # # # # # # # # # # # # ",
-   "#                   G G     r1  r2    # ",
-   "#       X1  X2      G G r3. . . . . r4# ",
-   "#       S1  S2      G G . . x1. x2. . # ",
-   "#                   G G . . s1. s2. . # ",
-   "# X3S3  @       S4X4G G x3s3. . . s4x4# ",
-   "#         C         G G . . . c . . . # ",
-   "# X5S5          S6X6G G x5s5. . . s6x6# ",
-   "#                   G G . . s7. s8. . # ",
-   "#       S7  S8      G G . . x7. x8. . # ",
-   "#       X7  X8      G G r5. . . . . r6# ",
-   "#                   G G     r7  r8    # ",
+   "#                   # #     r1  r2    # ",
+   "#       X1  X2      # # r3. . . . . r4# ",
+   "#       S1  S2      # # . . x1. x2. . # ",
+   "#                   # # . . s1. s2. . # ",
+   "# X3S3  @       S4X4# # x3s3. . . s4x4# ",
+   "#         C         # # . . . c . . . # ",
+   "# X5S5          S6X6# # x5s5. . . s6x6# ",
+   "#                   # # . . s7. s8. . # ",
+   "#       S7  S8      # # . . x7. x8. . # ",
+   "#       X7  X8      # # r5. . . . . r6# ",
+   "#                   # #     r7  r8    # ",
    "# # # # # # # # # # # # # # # # # # # # ",
    "t                                       ",
 })
 
-function connect(obj1, obj2, strength)
-  enigma.AddRubberBand(obj1, obj2, strength or maxstrength, 2.5)
-  obj1:set({_partner = obj2})
-  obj2:set({_partner = obj1})
+function connect(obj1, obj2, restrict)
+  wo:add({"ot_rubberband", anchor1 = obj1, anchor2 = obj2,
+          strength = strength or maxstrength,
+          max = luatools.cond(restrict and wo["IsDifficult"], 2.5, nil)})
+  -- Save partner of actor: When call_scissors is called, the
+  -- rubberband will've already been removed, so ["fellows"]
+  -- doesn't work anymore for the marble.
+  obj1["_fellow"] = obj2
 end
 
 function call_scissors(onoff, sender)
-  local marbles_partner = no["marble"]["_partner"]
-  local scissors_partner = sender["_partner"]
+  local marbles_partner = no["marble"]["_fellow"]
+  local scissors_partner = sender["fellows"][1]
   if sender == marbles_partner then
     -- Marble hit its own partner, recreate rubberband
     -- and everything is fine
-    connect(no["marble"], sender)
+    connect(no["marble"], sender, true)
   else
     -- This is the interesting case:
     -- Rubberband of marble is already cut, now delete the other one
-    -- We do some trick while rubberbands can't be killed yet:
-    -- Recreate the stone!
-    --no["rb_"..scissors_partner["name"]]:kill()
-    local sname = sender["name"]
-    wo[sender] = {"st-scissors", name = sname, target = "call_scissors"}
+    sender["rubbers"]:kill()
     -- Reconnect
-    connect(no["marble"], no[sname])
-    connect(scissors_partner, marbles_partner, 0)
+    connect(no["marble"], sender, true)
+    connect(scissors_partner, marbles_partner)
     -- Check for correct pattern
     local correct = true
     for j = 1, 8 do
       correct = correct and
-          (no["horse%"..j]["_partner"] == no["scissors%"..Goal[j]])
+          (no["horse%"..j]["fellows"][1] == no["scissors%"..Goal[j]])
     end
     if correct then
       next_pattern()
@@ -106,9 +107,11 @@
   end
 end
 
+-- solve() is for debug reasons only. Use tile keys "u " and "v "
+-- to set debug switches in the level.
 function solve()
   for j = 1, 8 do
-    wo[no["scissors%"..j]] = {"st-scissors", name = "scissors%"..j}
+    wo[no["scissors%"..j]] = {"st_scissors", name = "scissors%"..j}
   end
   for j = 1, 8 do
     connect(no["horse%"..j], no["scissors%"..Goal[j]])
@@ -150,7 +153,7 @@
     no["parahorse%"..Goal[j]]:set({destination = {no["paraplace%"..j]}})
   end
   -- taint the glass of the new "fixpoint"
-  local k = 8 - pattern_count + 1  --first_permutation[pattern_count]
+  local k = 8 - pattern_count + 1
   wo[no["paraplace%"..fixpoint_permutation[k]]]
     = {"st-glass2_hole", name = "paraplace%"..fixpoint_permutation[k]}
   if pattern_count == 7 then
@@ -160,7 +163,7 @@
 end
 
 Goal = luatools.cyclic_permutation(8)
-connect(no["marble"], no["scissors_central"])
+connect(no["marble"], no["scissors_central"], true)
 
 if wo["IsDifficult"] then
   fixpoint_permutation = luatools.permutation(8)
@@ -181,12 +184,10 @@
 end
 
 for j = 1, 8 do
-  connect(no["parahorse%"..j], no["parascissors%"..j], 0)
-  connect(no["horse%"..j], no["scissors%"..j], 0)
+  connect(no["parahorse%"..j], no["parascissors%"..j])
+  connect(no["horse%"..j], no["scissors%"..j])
 end
 
-wo:shuffleOxyd()
-
     ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">

Modified: trunk/data/levels/enigma_vii/index.xml
===================================================================
--- trunk/data/levels/enigma_vii/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vii/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10800" network="false" owner="Enigma Team" release="1" revision="14" title="Enigma VII"/>
+  <info enigma="1.00" group="Enigma" location="10800" network="false" owner="Enigma Team" release="1" revision="15" title="Enigma VII"/>
 
   <attributes/>
 
@@ -55,7 +55,7 @@
     <level _seq="47" _title="Wood - Water - Wood" _xpath="./duffy173_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy173" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="48" _title="Transpositions" _xpath="./duffy174_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy174" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="49" _title="The Pearl Necklet" _xpath="./duffy175_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy175" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="50" _title="Puppet" _xpath="./pulley06_1" author="Mark Pulley" ctrl="force" easy="true" id="pulley06" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="50" _title="Puppet" _xpath="./pulley06_2" author="Mark Pulley" ctrl="force" easy="true" id="pulley06" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="51" _title="Restless Meditation" _xpath="./ral09_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070623ral914" rel="1" rev="77" score="1" target="time" unit="duration"/>
     <level _seq="52" _title="Ghost Driver" _xpath="./duffy176_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy176" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="53" _title="Re-entry Circuit" _xpath="./pulley05_1" author="Mark Pulley" ctrl="force" easy="false" id="pulley05" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -94,7 +94,7 @@
     <level _seq="86" _title="Lady in Red" _xpath="./just30_1" author="Just" ctrl="force" easy="true" id="just30" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Crawling the Abyss" _xpath="./sph02_1" author="ShadowPhrogg32642342" ctrl="force" easy="true" id="sph02" rel="1" rev="5" score="1" target="time" unit="duration"/>
     <level _seq="88" _title="Bold Boulder" _xpath="./ral14_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20061124ral279" rel="1" rev="96" score="1" target="time" unit="duration"/>
-    <level _seq="89" _title="Tinker, Tailor" _xpath="./andreas46_3" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas46" rel="4" rev="3" score="2" target="time" unit="duration"/>
+    <level _seq="89" _title="Tinker, Tailor" _xpath="./andreas46_3" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas46" rel="4" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="90" _title="Elbow Society" _xpath="./andreas45_2" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas45" rel="2" rev="5" score="2" target="time" unit="duration"/>
     <level _seq="91" _title="Watchmaker" _xpath="./huesing01_1" author="Johannes H?sing" ctrl="force" easy="false" id="huesing01" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="92" _title="Map it out II" _xpath="./manuel01_1" author="Manuel Eisentraut" ctrl="force" easy="true" id="manuel01" rel="1" rev="0" score="1" target="time" unit="duration"/>

Deleted: trunk/data/levels/enigma_vii/pulley06_1.xml
===================================================================
--- trunk/data/levels/enigma_vii/pulley06_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_vii/pulley06_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,112 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Puppet" el:subtitle="" el:id="pulley06"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
-      <el:author  el:name="Mark Pulley" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007 Mark Pulley</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.00">
-       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
-      </el:compatibility>
-      <el:modes el:easy="true" el:single="true" el:network="false"/>
-      <el:score el:easy="0:45" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-function file_oxyd(x,y,f)
-    oxyd_default_flavor=f
-    oxyd(x,y)
-end
-
--- ANT --
-create_world(20,13)
-
-cells={}
-if difficult then
-    cells[" "]=cell{floor="fl-gradient14"}
-    cells["^"]=cell{floor="fl-gradient13"} -- Up
-    cells["f"]=cell{actor={"ac-horse", {name="footL"}},floor="fl-gradient13"}
-else
-    cells[" "]=cell{floor="fl-normal"}
-    cells["^"]=cell{floor="fl-normal"}
-    cells["f"]=cell{actor={"ac-horse", {name="footL"}},floor="fl-normal"}
-end
-cells["b"]=cell{floor="fl-bluegreen"}
-cells["g"]=cell{stone="st-grate3"}
-cells["0"]=cell{parent={{file_oxyd,"b"}}}
-cells["A"]=cell{stone={"st-glass", {name="support1"}}}
-cells["B"]=cell{stone={"st-glass", {name="support2"}}}
-cells["N"]=cell{actor={"ac-horse", {name="head"}}}
-cells["S"]=cell{actor={"ac-horse", {name="shoulder"}}}
-cells["e"]=cell{actor={"ac-horse", {name="elbowL"}}}
-cells["E"]=cell{actor={"ac-horse", {name="elbowR"}}}
-cells["h"]=cell{actor={"ac-horse", {name="handL"}}}
-cells["H"]=cell{actor={"ac-horse", {name="handR"}}}
-cells["P"]=cell{actor={"ac-horse", {name="hip"}}}
-cells["k"]=cell{actor={"ac-horse", {name="kneeL"}}}
-cells["K"]=cell{actor={"ac-horse", {name="kneeR"}}}
-cells["F"]=cell{actor={"ac-horse", {name="footR"}}}
-cells["!"]=cell{stone={"st-door_a", {name="Door1"}},floor="fl-bluegreen"}
-cells["@"]=cell{stone={"st-door_a", {name="Door2"}},floor="fl-bluegreen"}
-cells["#"]=cell{stone={"st-door_a", {name="Door3"}},floor="fl-bluegreen"}
-cells["$"]=cell{stone={"st-door_a", {name="Door4"}},floor="fl-bluegreen"}
-cells["%"]=cell{stone={"st-door_a", {name="Door5"}},floor="fl-bluegreen"}
-cells[")"]=cell{stone={"st-door_a", {name="Door6"}},floor="fl-bluegreen"}
-cells["&"]=cell{stone={"st-door_a", {name="Door7"}},floor="fl-bluegreen"}
-cells["*"]=cell{stone={"st-door_a", {name="Door8"}},floor="fl-bluegreen"}
-cells["("]=cell{stone={"st-door_a", {name="Door9"}},floor="fl-bluegreen"}
-cells["W"]=cell{stone={"st-brick"}}
-
-cells["1"]=cell{item={face="it-trigger",attr={action="openclose",target="Door1"}},floor="fl-bluegreen"}
-cells["2"]=cell{stone={face="st-grate3"},item={face="it-trigger",attr={action="openclose",target="Door2"}},floor="fl-bluegreen"}
-cells["3"]=cell{item={face="it-trigger",attr={action="openclose",target="Door3"}},floor="fl-bluegreen"}
-cells["4"]=cell{item={face="it-trigger",attr={action="openclose",target="Door4"}},floor="fl-bluegreen"}
-cells["5"]=cell{item={face="it-trigger",attr={action="openclose",target="Door5"}},floor="fl-bluegreen"}
-cells["6"]=cell{item={face="it-trigger",attr={action="openclose",target="Door6"}},floor="fl-bluegreen"}
-cells["7"]=cell{item={face="it-trigger",attr={action="openclose",target="Door7"}},floor="fl-bluegreen"}
-cells["8"]=cell{item={face="it-trigger",attr={action="openclose",target="Door8"}},floor="fl-bluegreen"}
-cells["9"]=cell{item={face="it-trigger",attr={action="openclose",target="Door9"}},floor="fl-bluegreen"}
-
-level={"W0ggggg2ANBggggggg0W",
-       "Wbg H E^ S  e h  (bW",
-       "Wbg   1     8    gbW",
-       "Wbg   ^     ^    gbW",
-       "Wbg        9     gbW",
-       "W%g   K4 P3^k    g$W",
-       "W at g    ^  7      g&W",
-       "Wbg       ^ 5    gbW",
-       "Wbg   F     f    gbW",
-       "Wbg       6      gbW",
-       "WbWWWWWWWWWWWWWWWWbW",
-       "W*bbbbbbb)!bbbbbbb#W",
-       "W0WWWWWWWWWWWWWWWW0W"}
-
-set_default_parent(cells[" "])
-draw_map(0,0,level,cells)
-
-set_actor("ac-blackball",3.5,3.5,{player=0,name="bb"})
-
-AddRubberBand (enigma.GetNamedObject("head"), enigma.GetNamedObject("support1"), 8000, 1, 1)
-AddRubberBand (enigma.GetNamedObject("head"), enigma.GetNamedObject("support2"), 8000, 1, 1)
-AddRubberBand (enigma.GetNamedObject("head"), enigma.GetNamedObject("shoulder"), 8000, 1, 1)
-AddRubberBand (enigma.GetNamedObject("shoulder"), enigma.GetNamedObject("elbowL"), 8000, 3, 3)
-AddRubberBand (enigma.GetNamedObject("shoulder"), enigma.GetNamedObject("elbowR"), 8000, 3, 3)
-AddRubberBand (enigma.GetNamedObject("elbowL"), enigma.GetNamedObject("handL"), 8000, 2, 2)
-AddRubberBand (enigma.GetNamedObject("elbowR"), enigma.GetNamedObject("handR"), 8000, 2, 2)
-AddRubberBand (enigma.GetNamedObject("shoulder"), enigma.GetNamedObject("hip"), 8000, 4, 4)
-AddRubberBand (enigma.GetNamedObject("hip"), enigma.GetNamedObject("kneeL"), 8000, 3, 3)
-AddRubberBand (enigma.GetNamedObject("hip"), enigma.GetNamedObject("kneeR"), 8000, 3, 3)
-AddRubberBand (enigma.GetNamedObject("kneeR"), enigma.GetNamedObject("footR"), 8000, 3, 3)
-AddRubberBand (enigma.GetNamedObject("kneeL"), enigma.GetNamedObject("footL"), 8000, 3, 3)
-
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>
-

Copied: trunk/data/levels/enigma_vii/pulley06_2.xml (from rev 1242, trunk/data/levels/enigma_vii/pulley06_1.xml)
===================================================================
--- trunk/data/levels/enigma_vii/pulley06_1.xml	2008-07-20 21:48:08 UTC (rev 1242)
+++ trunk/data/levels/enigma_vii/pulley06_2.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Puppet" el:subtitle="" el:id="pulley06"/>
+      <el:version el:score="1" el:release="2" el:revision="1" el:status="released"/>
+      <el:author  el:name="Mark Pulley" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2007 Mark Pulley</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="0:45" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+if wo["IsDifficult"] then
+    ti[" "]= {"fl-gradient14"}
+    ti["^"]= {"fl-gradient13"} -- Up
+    ti["f"]= {"ac-horse", name="footL"} .. ti({"fl-gradient13"})
+else
+    ti[" "]= {"fl-normal"}
+    ti["^"]= {"fl-normal"}
+    ti["f"]= {"ac-horse", name="footL"} .. ti({"fl-normal"})
+end
+ti["b"] = {"fl-bluegreen"}
+ti["g"] = {"st-grate3"}
+ti["0"] = {"st_oxyd_b"}
+ti["Y"] = {"st-glass", name="support1"}
+ti["Z"] = {"st-glass", name="support2"}
+--ti["z"] = {"st-glass1_move"}
+ti["O"] = {"#ac-horse", name="head"}
+ti["S"] = {"#ac-horse", name="shoulder"}
+ti["e"] = {"#ac-horse", name="elbowL"}
+ti["L"] = {"#ac-horse", name="elbowR"}
+ti["h"] = {"#ac-horse", name="handL"}
+ti["N"] = {"#ac-horse", name="handR"}
+ti["P"] = {"#ac-horse", name="hip"}
+ti["k"] = {"#ac-horse", name="kneeL"}
+ti["K"] = {"#ac-horse", name="kneeR"}
+ti["R"] = {"#ac-horse", name="footR"}
+ti["door"] = {"st-door_a", name="Door%%"} .. ti["b"]
+ti["W"] = {"st_brick"}
+
+ti["trigger"]= {"it_trigger", target="Door%%"} .. ti["b"]
+ti["2"]= {"st-grate3"} .. ti({"it_trigger", target="Door%2"}) .. ti["b"]
+ti["."] = {"#ac-blackball"}
+
+resolver = res.autotile(ti, {"1", "9", "trigger"}, {"A","I","door"})
+
+wo(resolver," ",{
+       "W0ggggg2YOZggggggg0W",
+       "Wbg N L^ S  e h  IbW",
+       "Wbg   1     8    gbW",
+       "Wbg.  ^     ^    gbW",
+       "Wbg        9     gbW",
+       "WEg   K4 P3^k    gDW",
+       "WBg    ^  7      gGW",
+       "Wbg       ^ 5    gbW",
+       "Wbg   R     f    gbW",
+       "Wbg       6      gbW",
+       "WbWWWWWWWWWWWWWWWWbW",
+       "WHbbbbbbbFAbbbbbbbCW",
+       "W0WWWWWWWWWWWWWWWW0W"
+})
+
+wo:add({"ot_rubberband", anchor1="head", anchor2="support1", length=1, strength=20, max=1.05, min=0.95})
+wo:add({"ot_rubberband", anchor1="head", anchor2="support2", length=1, strength=20, max=1.05, min=0.95})
+wo:add({"ot_rubberband", anchor1="head", anchor2="shoulder", length=1, strength=20, max=1.05, min=0.95})
+wo:add({"ot_rubberband", anchor1="shoulder", anchor2="elbowL", length=3, strength=20, max=3.05, min=2.95})
+wo:add({"ot_rubberband", anchor1="shoulder", anchor2="elbowR", length=3, strength=20, max=3.05, min=2.95})
+wo:add({"ot_rubberband", anchor1="elbowL", anchor2="handL", length=2, strength=20, max=2.05, min=1.95})
+wo:add({"ot_rubberband", anchor1="elbowR", anchor2="handR", length=2, strength=20, max=2.05, min=1.95})
+wo:add({"ot_rubberband", anchor1="shoulder", anchor2="hip", length4, strength=20, max=4.05, min=3.95})
+wo:add({"ot_rubberband", anchor1="hip", anchor2="kneeL", length=3, strength=20, max=3.05, min=2.95})
+wo:add({"ot_rubberband", anchor1="hip", anchor2="kneeR", length=3, strength=20, max=3.05, min=2.95})
+wo:add({"ot_rubberband", anchor1="kneeR", anchor2="footR", length=3, strength=20, max=3.05, min=2.95})
+wo:add({"ot_rubberband", anchor1="kneeL", anchor2="footL", length=3, strength=20, max=3.05, min=2.95})
+
+wo:shuffleOxyd()
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: trunk/data/levels/enigma_vii/pulley06_2.xml
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/andreas49_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas49_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/andreas49_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,106 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Wired" el:subtitle="" el:id="andreas49"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:author el:name="Andreas Lochmann" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2008 Andreas Lochmann</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libluatools" el:id="lib/libluatools" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="0:37" el:difficult="8:49"/>
+    </el:info>
+    <el:luamain><![CDATA[
+-- difficult: 0:52
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara", friction = 3.5, mouseforce = 4.0}
+ti["a"] = {"fl-light", friction = 3.5, mouseforce = 4.0}
+ti["b"] = {"fl-white", friction = 3.5, mouseforce = 4.0}
+ti["c"] = {"fl-lightgray", friction = 3.5, mouseforce = 4.0}
+ti["#"] = {"st-stone2"}
+ti["_"] = {"fl-water"}
+ti["@"] = {"#ac-blackball"}
+ti["w"] = {"st-plain_move", "wood#"}
+ti["t"] = {"it_trigger", "trigger#"}
+ti["d"] = {"st_blocker", "door#"}
+ti["o"] = {"st_oxyd", oxydcolor = OXYD_YELLOW, flavor = "a"}
+ti["O"] = {"st_oxyd", oxydcolor = OXYD_WHITE, flavor = "a"}
+ti["1"] = {"st_panel", cluster = 1}
+ti["2"] = {"st_panel", cluster = 2}
+ti["S"] = {"st_switch", target = "easy_mode_call"}
+
+floors = {ti[" "], ti["a"], ti["b"], ti["c"]}
+a = luatools.random_vector(10, 4)
+
+function myresolver(key, x, y)
+  if key == " " then  
+    return floors[luatools.cubic_polynomial(a, x, y) % (#floors) + 1]
+  elseif    (key == "#")
+         or ((key == "_") and (random(4) == 1))
+         or ((key == "S") and wo["IsDifficult"]) then
+    return ti[""..random(2)]
+  else
+    return ti[key]
+  end
+end
+
+w, h = wo(myresolver, " ", {
+ -- 01234567890123456789
+   "####################___________________",
+   "#                  #_____###o###_______",
+   "#   w   w t   t    #_____#d   d#_______",
+   "#     w   w t   t  #___### ### ###_____",
+   "#  w     t         #___#d d#_#d d#_____",
+   "#                  ##### ###_### ###___",
+   "S    w   w t @ t        d#___#_#d d#___",
+   "#                  #######_####### #___",
+   "#  w     t         #_______O  d# # o___",
+   "#     w   w t   t  #_______### ### #___",
+   "#   w   w t   t    #_________#d   d#___",
+   "#                  #_________###O###___",
+   "####################___________________"
+})
+
+door_p = luatools.permutation(12)
+wire_p = luatools.permutation(12)
+more_wires = luatools.cyclic_permutation(9)
+woods = no["wood#*"]
+
+for j = 1, 12 do
+  no["trigger#*"][j].target = no["door#*"][door_p[j]]
+end
+
+for j = 1, 9 do
+  wo:add({"ot_wire",
+          anchor1 = woods[wire_p[j + 3]],
+          anchor2 = woods[wire_p[luatools.mod(j, 3) + 1]]})
+  wo:add({"ot_wire", name = "obsolete_wire#",
+          anchor1 = woods[wire_p[j + 3]],
+          anchor2 = woods[wire_p[more_wires[j] + 3]]})
+end
+
+function easy_mode_call(onoff, sender)
+  if onoff then
+    no["obsolete_wire#*"]:message("kill")
+  else
+    for j = 1, 9 do
+      wo:add({"ot_wire", name = "obsolete_wire#",
+              anchor1 = woods[wire_p[j + 3]],
+              anchor2 = woods[wire_p[more_wires[j] + 3]]})
+    end
+  end
+end
+
+--wo:shuffleOxyd()
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/andreas49_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/andreas53_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas53_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/andreas53_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Mirrors and Wire" el:subtitle="" el:id="andreas53"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:author el:name="Andreas Lochmann" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2008 Andreas Lochmann</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libluatools" el:id="lib/libluatools" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="0:37" el:difficult="8:49"/>
+    </el:info>
+    <el:luamain><![CDATA[
+-- difficult: 0:52
+
+wo["ConserveLevel"] = true
+
+ti["  "] = {"fl-sand"}
+ti["# "] = {"st_bluesand", cluster = 1}
+ti["g "] = {"st-glass3"}
+ti["@ "] = {"#ac-blackball"}
+ti["o "] = {"st_oxyd", oxydcolor = OXYD_YELLOW, flavor = "a"}
+ti["O "] = {"st_oxyd", oxydcolor = OXYD_WHITE, flavor = "a"}
+ti["S "] = {"st_laserswitch", target = "oxyddoor"}
+ti["D "] = {"st-door-v", "oxyddoor"}
+ti["L "] = {"st_laser", state = ON, orientation = SOUTH}
+ti["F "] = {"st-fart"}
+ti["T "] = {"st_mirror", flavor = "triangle", orientation = WEST}
+ti["/!"] = {"st_mirror", flavor = "plane", orientation = 2}
+ti["/"] = {"st_mirror", "mirror%%", flavor = "plane", orientation = 2, movable = true}
+ti["&"] = {"st_mirror", "mirror%%", flavor = "plane", orientation = 0, movable = true}
+ti["A"] = {"st-wood", "anchor%%", _mytarget = "mirror%%"}
+
+w, h = wo(res.autotile(ti, {"Aa", "Al", "A"}, {"/a", "/l", "/"}, {"&a", "&l", "&"}), "  ", {
+ -- 01234567890123456789
+   "# # # # O # # # L # # # O # # # # # # # ",
+   "#                 g                   # ",
+   "#                 g                   O ",
+   "S                 g     T             # ",
+   "#     O   /c  O   g                 # # ",
+   "# g g g g g g     g             O   D O ",
+   "#         O g     g &f  O &h&i  &j&k# # ",
+   "#           g     g g g g g g g # # # # ",
+   "O   &a&b    g /d/e/l  /g        # Al  # ",
+   "# # # # # # # # # # # # # # # # #     # ",
+   "#   AaAb  Ac  AdAe  AfAg  AhAi  AjAk  # ",
+   "#                                   @ # ",
+   "# # # # # # # # # # # # # # # # # # # # "
+})
+
+for j in no["anchor%*"] do
+  wo:add({"ot_wire", anchor1 = j, anchor2 = no[j._mytarget]})
+end
+
+--wo:shuffleOxyd()
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/andreas53_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/data/levels/enigma_viii/index.xml
===================================================================
--- trunk/data/levels/enigma_viii/index.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/index.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="2" title="Enigma VIII"/>
+  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="3" title="Enigma VIII"/>
 
   <attributes/>
 
@@ -15,15 +15,25 @@
     <level _seq="7" _title="Enigmines" _xpath="./huffman01_1" author="Brian Huffman" ctrl="force" easy="true" id="huffman01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="8" _title="Red Cave" _xpath="./mecke21_1" author="mecke" ctrl="force" easy="true" id="mecke21" rel="1" rev="30" score="1" target="time" unit="duration"/>
     <level _seq="9" _title="Status code 302" _xpath="./dev02_1" author="/dev/null" ctrl="force" easy="true" id="dev02" rel="1" rev="4" score="1" target="time" unit="duration"/>
-    <level _seq="10" _title="A Screenful of Secrets" _xpath="./mecke01_1" author="mecke" ctrl="force" easy="true" id="mecke01" rel="1" rev="20" score="1" target="time" unit="duration"/>
+    <level _seq="10" _title="A Screenful of Secrets" _xpath="./mecke01_1" author="mecke" ctrl="force" easy="true" id="mecke01" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="11" _title="Southside Life" _xpath="./mecke10_1" author="mecke" ctrl="force" easy="true" id="mecke10" rel="1" rev="18" score="1" target="time" unit="duration"/>
     <level _seq="12" _title="Joona's Chess" _xpath="./joona02_1" author="Joona Laire" ctrl="force" easy="true" id="joona02" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="13" _title="Helios I" _xpath="./mecke07_1" author="mecke" ctrl="force" easy="false" id="mecke48" rel="1" rev="11" score="1" target="time" unit="duration"/>
     <level _seq="14" _title="The Green Hell" _xpath="./mecke22_1" author="mecke" ctrl="force" easy="true" id="mecke22" rel="1" rev="55" score="1" target="time" unit="duration"/>
-    <level _seq="15" _title="Tilt Board" _xpath="./ulf06_1" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="1" rev="115" score="1" target="time" unit="duration"/>
+    <level _seq="15" _title="Tilt Board" _xpath="./ulf06_2" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="2" rev="116" score="2" target="time" unit="duration"/>
     <level _seq="16" _title="4 - 8 - 4" _xpath="./dpl03_3" author="Dominik Leipold" ctrl="force" easy="true" id="20070821dpl003" rel="3" rev="4" score="3" target="time" unit="duration"/>
     <level _seq="17" _title="Impulsive Order" _xpath="./raywick05_1" author="Ray Wick" ctrl="force" easy="true" id="raywick5" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="18" _title="Cross Mail" _xpath="./johann03_1" author="Johann Freymuth" ctrl="force" easy="false" id="johann03" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="19" _title="Colour Maze" _xpath="./pulley16_3" author="Mark Pulley" ctrl="force" easy="false" id="pulley16" rel="3" rev="2" score="3" target="time" unit="duration"/>
+    <level _seq="20" _title="Earthlink" _xpath="./pulley15_1" author="Mark Pulley" ctrl="force" easy="true" id="pulley15" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="21" _title="Mirrors and Wire" _xpath="./andreas53_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas53" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="22" _title="Wired" _xpath="./andreas49_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas49" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="23" _title="Push Wires" _xpath="./ral24_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080708ral196" rel="1" rev="100" score="1" target="time" unit="duration"/>
+    <level _seq="24" _title="Wired Five" _xpath="./ral25_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080721ral073" rel="1" rev="109" score="1" target="time" unit="duration"/>
+    <level _seq="25" _title="Wireban Premiere" _xpath="./ral26_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080715ral161" rel="1" rev="105" score="1" target="time" unit="duration"/>
+    <level _seq="26" _title="Microwire" _xpath="./ral27_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080717ral427" rel="1" rev="107" score="1" target="time" unit="duration"/>
+    <level _seq="27" _title="More Microwire" _xpath="./ral28_1" author="Ronald Lamprecht" ctrl="force" easy="false" id="20080717ral282" rel="1" rev="105" score="1" target="time" unit="duration"/>
+    <level _seq="28" _title="Freestyle Microwire" _xpath="./ral29_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080719ral530" rel="1" rev="107" score="1" target="time" unit="duration"/>
   </levels>
 
 </index>

Modified: trunk/data/levels/enigma_viii/mecke01_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke01_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/mecke01_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -3,7 +3,7 @@
   <el:protected >
     <el:info el:type="level">
       <el:identity el:title="A Screenful of Secrets" el:subtitle="My First Level" el:id="mecke01"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 20 $" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 21 $" el:status="released"/>
       <el:author  el:name="mecke" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Thomas Bernhardt</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -41,7 +41,7 @@
 ti["^ "] = {"st-oneway_black-n"}
 ti["v "] = {"st-oneway_black-s"}
 ti["> "] = {"st-oneway_black-e"}
-ti["K "] = {"st-knight"}
+ti["K "] = {"st_knight"}
 ti["s "] = {"it-squashed"}
 ti["R "] = ti["R"] .. ti["X "]
 ti["o "] = {"st_oxyd", flavor="d"}
@@ -50,7 +50,7 @@
 ti["c "] = {"it-cherry"}
 ti["| "] = {"st_death_invisible"}
 ti[", "] = {"st-likeoxydd"}
-ti["= "] = {"st_mirror_triangle", movable=false, transparent=false, orientation=4}
+ti["= "] = {"st_mirror_triangle", movable=false, transparent=false, orientation=EAST}
 ti["T "] = ti["X "] .. {"#ac-top", range="1", force="1"}
 ti["6 "] = {"st_panel"}
 ti["b "] = {"it-blackbomb"}
@@ -60,7 +60,7 @@
 ti["l "] = ti["+ "] .. {"it-spoon"} 
 ti["E "] = {"st_boulder_e"}
 ti["h "] = {"it_hammer"}
-ti["- "] = {"it-hstrip"}
+ti["- "] = {"it_strip_ew"}
 ti["w "] = {"it_wormhole",range=0,strength=0, state=OFF}
 ti["p "] = {"it-puller-n"}
 ti["q "] = {"it-puller-s"}

Modified: trunk/data/levels/enigma_viii/mecke07_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke07_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/mecke07_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -45,7 +45,7 @@
 ti["x5"] = ti[" ~"] .. {"st_oxyd", flavor="a",name="olli5"}
 ti["x6"] = ti[" ~"] .. {"st_oxyd", flavor="a",name="olli6"}
 ti["o "] = {"it-springboard"}
-ti[" j"] = {"it-magicwand"}
+ti[" j"] = {"it_magicwand"}
 ti["S "] = ti[" n"] ..{"st-black4"}
 ti["G "] = {"st-yellow"}
 ti["P "] = ti[" n"] ..{"st-pull"}

Modified: trunk/data/levels/enigma_viii/mecke15_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke15_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/mecke15_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -36,10 +36,10 @@
 ti[" ("] = {"fl-gradient", type=3}
 ti["t "] = {"st-stone_break"}
 ti["# "] = {"st_lightpassenger"}
-ti["K "] = {"st-knight"}
+ti["K "] = {"st_knight"}
 ti["B "] = {"st-brick_magic"}
 ti["O "] = {"st_rotator_ccw", movable=true}
-ti["R "] = {"st-rubberband"}
+ti["R "] = {"st_rubberband"}
 ti["T "] = {"st-thief"}
 ti["Y "] = {"st-glass"}
 ti["r "] = {"st-brownie"}
@@ -80,20 +80,20 @@
 ti["? "] = ti[" ~"] .. {"st_actorimpulse_invisible"}
 ti["z "] = ti[" v"] .. {"st-stone_break"}
 ti["N "] = ti[" v"] .. {"st-stone_break"}
-ti["- "] = ti[" ~"] .. {"it-hstrip"}
+ti["- "] = ti[" ~"] .. {"it_strip_ew"}
 ti["b "] = ti[" ~"] .. {"it-booze"}
 ti["h2"] = ti["h1"] .. {"it-cherry"}
 ti["h3"] = ti["h1"] .. {"it_glasses"}
 ti["5 "] = {"it_key", code=1}
 ti["o "] = {"it-springboard"}
-ti["j "] = {"it-magicwand"}
+ti["j "] = {"it_magicwand"}
 ti[" z"] = {"it-booze"}
 ti["P "] = {"st-grate1"}
-ti["9 "] = {"st-turnstile"} 
-ti["a "] = {"st-turnstile-n"}
-ti["q "] = {"st-turnstile-s"}
-ti["k "] = {"st-turnstile-w"}
-ti["l "] = {"st-turnstile-e"}
+ti["9 "] = {"st_turnstile"} 
+ti["a "] = {"st_turnstilearm", orientation=NORTH}
+ti["q "] = {"st_turnstilearm", orientation=SOUTH}
+ti["k "] = {"st_turnstilearm", orientation=WEST}
+ti["l "] = {"st_turnstilearm", orientation=EAST}
 ti[" *"] = {"it-crack3"}
 ti["* "] = ti[" *"] ..  {"#ac-blackball"}
 ti["J "] = {"#ac-top", range=1, force=1}

Added: trunk/data/levels/enigma_viii/pulley15_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/pulley15_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/pulley15_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,169 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Earthlink" el:subtitle="" el:id="pulley15"/>
+      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:author  el:name="Mark Pulley" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2008 Mark Pulley</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.00">
+       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="9:35" el:difficult="10:35"/>
+    </el:info>
+    <el:luamain><![CDATA[
+function file_oxyd(x,y,f)
+    oxyd_default_flavor=f
+    oxyd(x,y)
+end
+
+-- ANT --
+create_world(115,73)
+cells={}
+cells[" "]=cell{floor="fl-leavesb"}
+cells["b"]=cell{stone="st-camouflage"}
+cells["e"]=cell{stone="st-oneway-e"}
+cells["g"]=cell{stone="st-grate1",floor="fl-leavesb"}
+cells["n"]=cell{stone="st-oneway-n"}
+cells["o"]=cell{stone="st-stoneimpulse"}
+cells["s"]=cell{stone="st-oneway-s"}
+cells["w"]=cell{stone="st-oneway-w"}
+cells["z"]=cell{stone="st-wood"}
+cells["O"]=cell{stone="st-stoneimpulse-hollow",floor="fl-abyss"}
+cells["."]=cell{stone="st-stoneimpulse-hollow"}
+
+if difficult then
+  cells["r"]=cell{floor="fl-leavesb"}
+  cells["E"]=cell{stone="st-oneway-e"}
+  cells["G"]=cell{stone="st-grate1",floor="fl-leavesb"}
+  cells["N"]=cell{stone="st-oneway-n"}
+  cells["S"]=cell{stone="st-oneway-s"}
+  cells["W"]=cell{stone="st-oneway-w"}
+  cells["Z"]=cell{stone="st-wood"}
+  cells[","]=cell{stone="st-stoneimpulse-hollow"}
+else
+  cells["r"]=cell{floor="fl-red"}
+  cells["E"]=cell{stone="st-camouflage"}
+  cells["G"]=cell{stone="st-grate1",floor="fl-red"}
+  cells["N"]=cell{stone="st-camouflage"}
+  cells["S"]=cell{stone="st-camouflage"}
+  cells["W"]=cell{stone="st-camouflage"}
+  cells["Z"]=cell{stone="st-wood",floor="fl-red"}
+  cells[","]=cell{stone="st-stoneimpulse-hollow",floor="fl-red"}
+end
+
+--      |         1    1   |2    2    3    3  | 4    4    5    5 |  6    6    7    7    8    8    9    9    0    0    1    1    2    2    3
+--      |1   5    0    5   |0    5    0    5  | 0    5    0    5 |  0    5    0    5    0    5    0    5    0    5    0    5    0    5    0 
+level={"bbbbborZOooorZobbbbbbbbb.ZroooOZrobbbbbbbbbo ZOooo Zobbbbbbbbb.ZroooOZrobbbbbbbbbo ZOooo Zobbbbbbbbb.ZroooOZrobbbbb",
+       "bbbbbbbSbbbbNbObbbbbbbbbobGbobbGbobbbbbbbbbbbSbbbbNbObbbbbbbbbobGbobbGbobbbbbbbbbbbSbbbbNbObbbbbbbbbobGbobbGbobbbbb",--01
+       "oO.............   booobboo,oooo,oobboooO.............   booobboo,oooo,oobboooO.............   booobboo,oooo,oobbooo",
+       "Zb   .        .   brbobbbbrbbborbbbbobZb   .        .   b bobbbbrbbborbbbbobZb   .        .   b bobbbbrbbborbbbbobZ",
+       "rW   .        .   WZG,rrrrrbbborrrrr,GrW   .        .   WZG,rrrrrbbborrrrr,GrW   .        .   WZG,rrrrrbbborrrrr,Gr",
+       "ob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooo",--05
+       "ob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobo",
+       "Ob   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobO",
+       "ZE   .        .   e g.     obbb     .gze   .        .   e g.     obbb     .gze   .        .   e g.     obbbrrrrr,GZ",
+       "rb   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbbrbbbbobr",
+       "ob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo,oobbooo",--10
+       "bbbbbObSbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobGbobbbbb",
+       "bbbbb.ZroooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooorZobbbbb",--
+       "bbbbbobGbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbNbObbbbb",
+       "ooobboo,oooo.oobboooO.............   booobboo.oooo.oobboooO.............   booobboo.oooo.oobboooO.............   bo",
+       "rbobbbbrbbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   br",--15
+       "ZG,rrrrrbbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   WZ",
+       "Oboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bO",
+       "obobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bo",
+       "ooobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   bo",
+       "rG,rrrrrobbb     .gze   .        .   e g.     obbb     .gze   .        .   e g.     obbb     .gze   .        .   Er",--20
+       "Zbobbbbrobbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bZ",
+       "ooobboo,oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oo",
+       "bbbbbobGbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbNbbbbbbb",
+       "bbbbborZOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOZrobbbbb",--
+       "bbbbbbbSbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbGbobbbbb",--25
+       "oO.............   booobboo.oooo.oobboooO.............   booobboo.oooo.oobboooO.............   booobboo.oooo,oobbooo",
+       "Zb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbborbbbbobZ",
+       "rW   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbborrrrr,Gr",
+       "ob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooo",
+       "ob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobo",--30
+       "Ob   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobO",
+       "ZE   .        .   e g.     obbb     .gze   .        .   e g.     obbb     .gze   .        .   e g.     obbbrrrrr,GZ",
+       "rb   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbbrbbbbobr",
+       "ob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo,oobbooo",
+       "bbbbbObSbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobGbobbbbb",--35
+       "bbbbb.ZroooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooorZobbbbb",--
+       "bbbbbobGbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbNbObbbbb",
+       "ooobboo,oooo.oobboooO.............   booobboo.oooo.oobboooO.............   booobboo.oooo.oobboooO.............   bo",
+       "rbobbbbrbbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   br",
+       "ZG,rrrrrbbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   WZ",--40
+       "Oboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bO",
+       "obobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bo",
+       "ooobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   bo",
+       "rG,rrrrrobbb     .gze   .        .   e g.     obbb     .gze   .        .   e g.     obbb     .gze   .        .   Er",
+       "Zbobbbbrobbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbb bbboob b   .        .   bZ",--45
+       "ooobboo,oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oo",
+       "bbbbbobGbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbNbbbbbbb",
+       "bbbbborZOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOZrobbbbb",--
+       "bbbbbbbSbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbGbobbbbb",
+       "oO.............   booobboo.oooo.oobboooO.............   booobboo.oooo.oobboooO.............   booobboo.oooo,oobbooo",--50
+       "Zb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbborbbbbobZ",
+       "rW   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbborrrrr,Gr",
+       "ob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooo",
+       "ob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobo",
+       "Ob   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobO",--55
+       "ZE   .        .   e g.     obbb     .gze   .        .   e g.     obbb     .gze   .        .   e g.     obbbrrrrr,GZ",
+       "rb   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbb bbbbob b   .        .   bzbobbbb obbbrbbbbobr",
+       "ob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo.oobbooob   .............Oooobboo.oooo,oobbooo",
+       "bbbbbObSbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobgbobbbbbbbbbObsbbbbnbbbbbbbbbbbobgbbobGbobbbbb",
+       "bbbbb.ZroooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooo zobbbbbbbbboz oooOz obbbbbbbbbo zOooorZobbbbb",--60
+       "bbbbbobGbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbnbObbbbbbbbbobgbobbgbobbbbbbbbbbbsbbbbNbObbbbb",
+       "ooobboo,oooo.oobboooO.............   booobboo.oooo.oobboooO.............   booobboo.oooo.oobboooO.............   bo",
+       "rbobbbbrbbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   b bobbbb bbbo bbbbobzb   .        .   br",
+       "ZG,rrrrrbbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   wzg.     bbbo     .g w   .        .   WZ",
+       "Oboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bOboooooobbbbbbbbbooob   .        .   bO",--65
+       "obobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bobobbbbbbbbbbbbbbobob   .        .   bo",
+       "ooobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   booobbbbbbbbboooooobOb   .        .   bo",
+       "rG,rrrrrobbbrrrrr,GZE   .        .   ErG,rrrrrobbbrrrrr,GZE   .        .   ErG,rrrrrobbbrrrrr,GZE   .        .   Er",
+       "Zbobbbbrobbbrbbbbobrb   .        .   bZbobbbbrobbbrbbbbobrb   .        .   bZbobbbbrobbbrbbbbobrb   .        .   bZ",
+       "ooobboo,oooo,oobbooob   .............Oooobboo,oooo,oobbooob   .............Oooobboo,oooo,oobbooob   .............Oo",--70
+       "bbbbbobGbbobGbobbbbbbbbbObSbbbbNbbbbbbbbbbbobGbbobGbobbbbbbbbbObSbbbbNbbbbbbbbbbbobGbbobGbobbbbbbbbbObSbbbbNbbbbbbb",
+       "bbbbborZOooorZobbbbbbbbboZroooOZr.bbbbbbbbborZOooorZobbbbbbbbboZroooOZr.bbbbbbbbborZOooorZobbbbbbbbboZroooOZr.bbbbb"}-- 72
+--      |         1    1   |2    2    3    3  | 4    4    5    5 |  6    6    7    7    8    8    9    9    0    0    1    1
+--      |1   5    0    5   |0    5    0    5  | 0    5    0    5 |  0    5    0    5    0    5    0    5    0    5    0    5
+
+set_default_parent(cells[" "])
+draw_map(0,0,level,cells)
+
+positions = {{9,6},{47,6},{85,6},{28,18},{66,18},{104,18},{9,30},{47,30},{85,30},{28,42},{66,42},{104,42},{9,54},{47,54},{85,54},{28,66},{66,66},{104,66}}
+
+for j = 1, 16 do
+   local n = table.getn(positions)
+   r = random(1,n)
+   p = positions[r]
+   oxyd(p[1],p[2])
+   table.remove(positions,r)
+end
+for j = 1, 2 do
+  local n = table.getn(positions)
+  r = random(1,n)
+  p = positions[r]
+  if difficult then
+    set_stone("st-fart", p[1], p[2])
+  else
+    set_stone("st-fakeoxyd", p[1], p[2])
+  end
+  table.remove(positions,r)
+end
+
+set_actor("ac-blackball",48.5,30.5,{player=0,name="bb"})
+oxyd_shuffle()
+
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/pulley15_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/pulley16_3.xml
===================================================================
--- trunk/data/levels/enigma_viii/pulley16_3.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/pulley16_3.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Colour Maze" el:subtitle="" el:id="pulley16"/>
+      <el:version el:score="3" el:release="3" el:revision="2" el:status="released"/>
+      <el:author  el:name="Mark Pulley" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2008 Mark Pulley</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+        <el:credits el:showinfo="true" el:showstart="false">New API translation by Ronald Lamprecht</el:credits>
+      </el:comments>      
+      <el:score el:easy="-" el:difficult="0:22"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["FollowGrid"] = false
+wo["FollowMethod"] = FOLLOW_SCROLL
+
+ti[" "] = {"fl-abyss_fake"}
+ti["*"] = {"st-glass1"}
+
+ti["!"] = {"fl-rough-blue", "blue#", _color="blue"}
+ti["@"] = {"fl-bumps", "orange#", _color="orange"}
+ti["#"] = {"fl-rough-red", "red#", _color="red"}
+ti["$"] = {"fl-leavesb", "green#", _color="green"}
+
+ti["1"] = ti["!"] .. {"st-door-h-open"}
+ti["2"] = ti["@"] .. {"st-door-h-open"}
+ti["3"] = ti["#"] .. {"st-door-h-open"}
+ti["4"] = ti["$"] .. {"st-door-h-open"}
+
+ti["d"] = {"it-document", text="text1"}
+ti["5"] = ti["1"] .. ti["d"]
+ti["6"] = ti["2"] .. ti["d"]
+ti["7"] = ti["3"] .. ti["d"]
+ti["8"] = ti["4"] .. ti["d"]
+
+ti["a"] = {"it_sensor", invisible=true, target="gates"}
+ti["O"] = ti["a"] .. {"#ac-blackball", "me"}
+
+ti["0"] = {"st_oxyd_a"}
+
+-- the following resolver can be eliminated by 4 tile declarations and a map editing
+function door_resolver(key, x, y)
+    if y%4 == 1 and (key == "1" or key == "2" or key=="3" or key =="4"
+            or key == "6" or key =="8") then
+        return ti[key] .. {"st-door-v-open"}
+    else
+        return ti[key]
+    end
+end
+
+wo(door_resolver, " ", {
+--      |         1    1   |2    2
+--      |1   5    0    5   |0    5
+       "***************************",
+       "*a2 at 2a3#3a2 at 2a1!1a3#3a1!1a*", --01
+       "*1***3***4***4***1***4***3*", 
+       "*!***#***$***$***!***$***#*", 
+       "*1***3***4***4***1***4***3*", 
+       "*a3#3a1!1a2 at 2a4$4a2 at 2a2@2a*", --05
+       "*4***4***3***4***4***1***1*", 
+       "*$***$***#***$***$***!***!*", 
+       "*4***4***3***4***4***1***1*", 
+       "*a3#3a2 at 2a4$4a3#3a4$4a3#3a*", 
+       "*4***1***1***2*******1***3*", --10
+       "*$***!***!***@*******!***#*", 
+       "*4***1***5***2***0***1***3*", --
+       "*a2 at 2a2@6O8$4a***a4$4a3#3a*", 
+       "*3***1***7***1***0***2***2*", 
+       "*#***!***#***!*******@***@*", --15
+       "*3***1***3***1*******2***2*", 
+       "*a4$4a1!1a3#3a2 at 2a3#3a4$4a*", 
+       "*4***2***2***4***4***2***1*", 
+       "*$***@***@***$***$***@***!*", 
+       "*4***2***2***4***4***2***1*", --20
+       "*a1!1a2 at 2a3#3a3#3a2 at 2a1!1a*", 
+       "*2***3***4***4***1***1***4*", 
+       "*@***#***$***$***!***!***$*", 
+       "*2***3***4***4***1***1***4*", --
+       "*a3#3a1!1a1!1a3#3a2 at 2a3#3a*", --25
+       "***************************"} -- 
+--      |         1    1   |2    2
+--      |1   5    0    5   |0    5
+)
+
+last = it(no["me"])   -- the position of the last visited sensor
+move = 0              -- the count of link moves
+sequence = {}         -- the sequence of the 4 colors that the user did choose
+
+function gates(value, sender)
+    if (last - sender) ~= po(0,0) then
+        local middle = last + (sender - last)/2
+        local color = fl(middle)["_color"]
+        if color == nil then return end  -- someone cheated, avoid throwing an exception
+        st(no[color.."#*"]):close()
+        sequence[move%4] = color
+        if sequence[(move+1)%4] ~= nil then
+            st(no[sequence[(move+1)%4].."#*"]):open()
+        end
+        move = move + 1
+        last = sender
+    end
+end
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+      <el:string el:key="text1">
+        <el:english el:translate="true">This is a colour maze. You have to work out what order you need to traverse the coloured floors in order to reach the oxyds.</el:english>
+      </el:string> 
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/pulley16_3.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral24_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral24_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral24_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="Push Wires" el:subtitle="" el:id="20080708ral196"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 100 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="0:55" el:difficult="1:39"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-black", friction=5.5, mousefactor=1.7}
+ti["~"] = {"fl-abyss"}
+ti["x"] = {"st_oxyd", flavor="d"}
+ti["#"] = {"st-glass3"} .. ti["~"]
+ti["wood"] = {"st-flhay", "wood%%"}
+ti["@"] = {"#ac-blackball"}
+
+resolver = res.autotile(ti, {"1","5","wood"})
+
+w, h = wo(resolver, " ", {
+"~~~~~~~~~~~~~~~~~~~~",
+"~~~~~~~~~~~~~~~~~~~~",
+"~~~~~~~~~~~~~~~~~~~~",
+"~~~~       ~~~~~~~~~",
+"~~~~   2   ~~~#~~~~~",
+"~~~~       ~~x~~~~~~",
+"~~~@ 5 1 3 ~#~~~#~~~",
+"~~~~       ~~~~x~~~~",
+"~~~~   4   ~~~#~~~~~",
+"~~~~       ~~~~~~~~~",
+"~~~~~~~~~~~~~~~~~~~~",
+"~~~~~~~~~~~~~~~~~~~~",
+"~~~~~~~~~~~~~~~~~~~~"
+})
+
+if wo["IsDifficult"] then
+  wo:add({"ot_wire", anchor1="wood%1", anchor2="wood%2"})
+  wo:add({"ot_wire", anchor1="wood%1", anchor2="wood%3"})
+  wo:add({"ot_wire", anchor1="wood%1", anchor2="wood%4"})
+  wo:add({"ot_wire", anchor1="wood%1", anchor2="wood%5"})
+else
+  wo:add({"ot_wire", anchor1="wood%2", anchor2="wood%5"})
+  wo:add({"ot_wire", anchor1="wood%3", anchor2="wood%4"})
+end
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral24_1.xml
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral25_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral25_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral25_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="Wired Five" el:subtitle="" el:id="20080721ral073"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 109 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="1:39" el:difficult="3:36"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+wo["ShowMoves"] = true
+
+cb = 0         -- checkerboard
+xoffset = 2    -- x offset of map
+if wo["IsDifficult"] then
+    cb = 1
+    xoffset = 1
+end
+
+ti[" "] = {"fl-abyss"}
+ti["*"] = ti[" "] ..{"st-marble"}
+ti["."] = {"fl-marble", friction=7, mousefactor=1.8, checkerboard=cb} 
+          .. ti({"fl-light", friction=7, mousefactor=1.8, checkerboard=1-cb})
+
+if wo["IsDifficult"] then
+    ti["+"] = ti[" "]
+else
+    ti["+"] = ti["."]
+end
+
+ti["trigger"] = {"it_trigger", target="hill%%", action="signal", inverse=true}
+ti["brownie"] = {"st-marble_move", "brownie%%"}
+ti["mini"] = {"fl-light", friction=7, mousefactor=1.8} 
+             .. ti({"#ac-whiteball-small", player=0})
+             .. ti({"it-tinyhill", "hill%%"})
+ti[","] = ti["."] .. {"it-tinyhill", "hill%5"}
+ti["@"] = ti["."] .. {"#ac-whiteball-small", player=0, essential=-1}
+
+myres = res.autotile(ti,{"1","5","brownie"},{"a","d","mini"},{"A","E","trigger"})
+
+wo(myres, ".", {
+       "a*                *b",
+       "*                  *",
+       "  +++++++++         ",
+       "  +2.....3+         ",
+       "  +.......+         ",
+       "  +.......+         ",
+       "  +...1...+         ",
+       "  +.......+         ",
+       "  +.......+         ",
+       "  +4.....5+         ",
+       "  +++++++++         ",
+       "*                  *",
+       "c*                *d"
+})
+
+wo:drawMap(myres, no["brownie%3"] + {xoffset,0} ," ", {
+       " A     B",
+       "",
+       "",
+       ",@  E",
+       "",
+       "",
+       " C     D",
+})
+
+wo:add({"ot_wire", anchor1="brownie%1", anchor2="brownie%2"})
+wo:add({"ot_wire", anchor1="brownie%1", anchor2="brownie%3"})
+wo:add({"ot_wire", anchor1="brownie%1", anchor2="brownie%4"})
+wo:add({"ot_wire", anchor1="brownie%1", anchor2="brownie%5"})
+
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral25_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral26_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral26_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral26_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="Wireban Premiere" el:subtitle="" el:id="20080715ral161"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 105 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:score el:easy="-" el:difficult="3:38"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["ShowMoves"] = true
+
+ti[" "] = {"fl-lightgray", friction=7, mousefactor=1.8}
+ti["."] = {"fl-abyss"}
+ti["#"] = {"st-rock8"}
+ti["+"] = {"st-grate1"}
+ti["w"] = {"st-brownie", "wood1"}
+ti["W"] = {"st-brownie", "wood2"}
+ti["D"] = {"st-door_a", "door1"}
+ti["d"] = {"st-door_a", "door2"}
+ti["T"] = {"it_trigger", target="door1"}
+ti["t"] = {"it_trigger", target="door2"}
+ti["L"] = {"st_oxyd", "left#"}
+ti["R"] = {"st_oxyd", "right#"}
+ti["@"] = {"#ac-blackball"}
+
+
+w, h = wo(ti, " ", {
+"####################",
+"#@W#  # # #     #  #",
+"#w    #    #  # #  #",
+"## # #  #   # #    #",
+"#  #   ## #   #   ##",
+"#    # +#  #  ## # #",
+"# #####     # ## # #",
+"#      #  # #  # # #",
+"##  #     #    # ###",
+"L D########## #  d R",
+"L #......#   ##  # R",
+"L #T....t        # R",
+"####################"
+})
+
+wo:add({"ot_wire", anchor1="wood1", anchor2="wood2"})
+wo:shuffleOxyd()
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral26_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral27_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral27_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral27_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="Microwire" el:subtitle="" el:id="20080717ral427"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 107 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:score el:easy="-" el:difficult="1:29"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["ProvideExtralifes"] = false
+wo["ShowMoves"] = true
+
+ti[" "] = {"fl-abyss"}
+ti["-"] = {"fl-lightgray", friction=7, mousefactor=1.8}
+ti["."] = {"st_polarswitch"}
+ti["1"] = {"st_mirror", "mirror1", orientation=EAST, movable=true}
+ti["2"] = {"st_mirror", "mirror2", orientation=EAST, movable=true}
+ti["3"] = {"st_mirror", "mirror3", orientation=EAST, movable=true}
+ti["x"] = {"it_trigger", "trigger#", target="check"}
+ti["W"] = ti[" "] .. {"st_laser_e", "laser#"}
+ti["E"] = ti[" "] .. {"st_laser_w", "laser#"}
+ti["O"] = {"st_oxyd_d"}
+ti["@"] = ti["x"] .. {"#ac-blackball"}
+
+
+w, h = wo(ti, "-", {
+"                    ",
+"        OOO         ",
+"                    ",
+"                    ",
+"       .....        ",
+"  W    .-1x.     E  ",
+"  W    .2 at -.     E  ",
+"  W    .x-3.     E  ",
+"       .....        ",
+"                    ",
+"                    ",
+"        OOO         ",
+"                    "
+})
+
+wo:add({"ot_wire", anchor1="mirror1", anchor2="mirror2"})
+wo:add({"ot_wire", anchor1="mirror2", anchor2="mirror3"})
+wo:shuffleOxyd()
+
+function check()
+    for trigger in no["trigger#*"] do
+        if not (st(trigger):is("st_mirror")) then
+            no["laser#*"]:off()
+            return
+        end
+    end
+    no["laser#*"]:on()
+end
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral27_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral28_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral28_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral28_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="More Microwire" el:subtitle="" el:id="20080717ral282"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 105 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:score el:easy="-" el:difficult="1:09"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["ShowMoves"] = true
+
+ti[" "] = {"fl-abyss"}
+ti["."] = {"fl-samba", friction=7, mousefactor=1.8}
+ti["*"] = ti[" "] ..{"st-beads"}
+ti["#"] = {"fl-samba"}
+ti["1"] = {"it_trigger", target="bridgeA", action="openclose"} 
+          .. ti({"st-brownie", "brownie1"})
+ti["2"] = {"it_trigger", target="bridgeB", action="openclose"} 
+          .. ti({"st-brownie", "brownie2"})
+ti["3"] = {"it_trigger", target="bridgeC", action="openclose"} 
+          .. ti({"st-brownie", "brownie3"})
+ti["4"] = {"it_trigger", target="bridgeD", action="openclose"} 
+          .. ti({"#ac-blackball"})
+ti["5"] = {"it_trigger", target="bridgeE", action="openclose"} 
+ti["6"] = {"it_trigger", target="bridgeF", action="openclose"} 
+ti["a"] = {"fl-bridge-closed", "bridgeA", type="x"}
+ti["b"] = {"fl-bridge-closed", "bridgeB", type="x"}
+ti["c"] = {"fl-bridge-closed", "bridgeC", type="x"}
+ti["d"] = {"fl-bridge-closed", "bridgeD", type="x"}
+ti["e"] = {"fl-bridge", "bridgeE", type="x"}
+ti["f"] = {"fl-bridge", "bridgeF", type="x"}
+ti["W"] = {"st_oxyd_d", "west#"}
+ti["E"] = {"st_oxyd_d", "east#"}
+
+w, h = wo(ti, ".", {
+"                    ",
+"                    ",
+"                    ",
+"                    ",
+"       ******       ",
+"    W  *.26.*  E    ",
+"   W#abc.41.def#E   ",
+"    W  *.35.*  E    ",
+"       ******       ",
+"                    ",
+"                    ",
+"                    ",
+"                    "
+})
+
+wo:add({"ot_wire", anchor1="brownie1", anchor2="brownie2"})
+wo:add({"ot_wire", anchor1="brownie2", anchor2="brownie3"})
+wo:shuffleOxyd({no["west#*"], max=0})
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral28_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/enigma_viii/ral29_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral29_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ral29_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="Freestyle Microwire" el:subtitle="" el:id="20080719ral530"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 107 $" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="0:33" el:difficult="0:28"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["ProvideExtralifes"] = false
+wo["ShowMoves"] = true
+wo["MaxOxydColor"] = OXYD_BLUE
+
+ti[" "] = {"fl-abyss"}
+ti["."] = {"fl-light", friction=7, mousefactor=1.8}
+ti["*"] = {"st-glass1"}
+ti["g"] = {"st-glass1_hole"}
+ti["#"] = {"it_trigger", "trigger#", target="check"}
+ti["mirror"] = {"st_mirror", "mirror%%", orientation=SLASH, movable=true}
+ti["S"] = {"st_mirror", orientation=SLASH, transparent=true}
+ti["B"] = {"st_mirror", orientation=BACKSLASH, transparent=true}
+ti["L"] = ti[" "] .. {"st_laser_s", "laser"}
+ti["O"] = {"st_oxyd_d"}
+
+if wo["IsDifficult"] then
+    ti["@"] = ti["."] .. {"#ac-blackball"}
+    ti["%"] = ti[" "]
+else
+    ti["@"] = ti["."] .. ti["g"] .. {"#ac-blackball"}
+    ti["%"] = ti["g"]
+end
+
+
+w, h = wo(res.autotile(ti,{"1","4","mirror"}), ".", {
+"O        LSB       O",
+"                    ",
+"                    ",
+"       ******       ",
+"       *.1.#*      B",
+"S      *2@#.*      B",
+"B      *.#%3*       ",
+"       *#.4.*      S",
+"       ******       ",
+"                    ",
+"                    ",
+"                    ",
+"O       B S        O"
+})
+
+wo:add({"ot_wire", anchor1="mirror%1", anchor2="mirror%2"})
+wo:add({"ot_wire", anchor1="mirror%2", anchor2="mirror%3"})
+wo:add({"ot_wire", anchor1="mirror%3", anchor2="mirror%4"})
+wo:shuffleOxyd()
+
+function check()
+    for trigger in no["trigger#*"] do
+        if not (st(trigger):is("st_mirror")) then
+            no["laser"]:off()
+            return
+        end
+    end
+    no["laser"]:on()
+end
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ral29_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Deleted: trunk/data/levels/enigma_viii/ulf06_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ulf06_1.xml	2008-07-22 13:20:20 UTC (rev 1243)
+++ trunk/data/levels/enigma_viii/ulf06_1.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -1,125 +0,0 @@
-<?xml version="1.0" encoding="utf-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Tilt Board" el:id="20080529ulf118"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 115 $" el:status="released"/>
-      <el:author  el:name="Ulf Stegemann" el:email="ulf-enigma at zeitform.de" el:homepage="http://ulf.zeitform.de"/>
-      <el:copyright>Copyright ? 2007 Ulf Stegemann</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.00">
-        <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
-      </el:compatibility>
-      <el:modes el:easy="true" el:single="true" el:network="false" el:control="force" el:scoreunit="duration" el:scoretarget="time"/>
-      <el:score el:easy="00:22" el:difficult="00:45"/>
-    </el:info>
-    <el:luamain><![CDATA[
--- DIFFICULTY --
-if difficult then
-  enigma.SlopeForce = 40
-end
-
--- CELLS --
-lasers={}
-cells={}
-cells[" "]=cell{floor="fl-abyss"}
-cells["1"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=2}}}
-cells["2"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=7}}}
-cells["3"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=3}}}
-cells["4"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=9}}}
-cells["5"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=1}}}
-cells["6"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=6}}}
-cells["7"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=4}}}
-cells["8"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=8}}}
-cells["9"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=0}}}
-
--- LANDSCAPE MAP --
-level = {
---  00000000001111111111
---  01234567890123456789
-   "                    ", -- 00
-   "     88811111222    ", -- 01
-   "     88881112222    ", -- 02
-   "     88881112222    ", -- 03
-   "     78881112223    ", -- 04
-   "     77778123333    ", -- 05
-   "     77777933333    ", -- 06
-   "     77776543333    ", -- 07
-   "     76665554443    ", -- 08
-   "     66665554444    ", -- 09
-   "     66665554444    ", -- 10
-   "     66655555444    ", -- 11
-   "                    "  -- 12
-}
-
--- FUNCTIONS --
-
-function tiltfloor(onoff,sender)
-  local gdir = enigma.GetAttrib(sender, "_mydir")
-  if gdir == 0 then
-    fill_floor("fl-gray", 5,1, 11,11)
-  else
-    i=0
-    while i<11 do
-      draw_floor("fl-gradient", {5,1+i}, {1,0}, 11, {type=gdir})
-      i = i+1
-    end
-  end
-end
-
-pos_hard = {{4,0},{5,0},{4,1},
-            {16,0},{15,0},{16,1},
-            {4,12},{4,11},{5,12},
-            {16,12},{15,12},{16,11}}
-pos_med  = {{6,0},{7,0},{8,0},{12,0},{13,0},{14,0},{4,2},{4,3},{4,4},{4,8},{4,9},{4,10},{16,2},{16,3},{16,4},{16,8},{16,9},{16,10},{6,12},{7,12},{8,12},{12,12},{13,12},{14,12}}
-pos_easy = {{9,0},{10,0},{11,0},{4,5},{4,6},{4,7},{9,12},{10,12},{11,12},{16,5},{16,6},{16,7}}
-counter = 0
-
-function setoxyd()
-  while (counter < 2) do
-    getandset(pos_hard)
-    counter = counter+1
-  end
-  while (counter < 4) do
-    getandset(pos_easy)
-    counter = counter+1
-  end
-  while (counter < 10) do
-    getandset(pos_med)
-    counter = counter+1
-  end
-end
-
-function getandset(mytable)
-    local n = table.getn(mytable)
-    r = random(1,n)
-    p = mytable[r]
-    set_stone("st-oxyd",p[1],p[2],{flavor="a"})
-    table.remove(mytable,r)
-    if (counter == 0) then
-      if (r == 1 or r == 4 or r == 7 or r == 10) then
-        table.remove(mytable,r)
-        table.remove(mytable,r)
-      elseif (r == 2 or r == 5 or r == 8 or r == 11) then
-        table.remove(mytable,r-1)
-      else
-        table.remove(mytable,r-2)
-      end
-    end
-end
-
--- GENERAL --
-enigma.ConserveLevel=TRUE
-set_default_parent(cells[" "])
-create_world_by_map(level)
-setoxyd()
-oxyd_shuffle()
-set_actor("ac-blackball",10.5,6.5,{player=0})
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-     </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_viii/ulf06_2.xml (from rev 1239, trunk/data/levels/enigma_viii/ulf06_1.xml)
===================================================================
--- trunk/data/levels/enigma_viii/ulf06_1.xml	2008-07-14 23:01:33 UTC (rev 1239)
+++ trunk/data/levels/enigma_viii/ulf06_2.xml	2008-07-22 13:46:14 UTC (rev 1244)
@@ -0,0 +1,125 @@
+<?xml version="1.0" encoding="utf-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Tilt Board" el:id="20080529ulf118"/>
+      <el:version el:score="2" el:release="2" el:revision="$Revision: 116 $" el:status="released"/>
+      <el:author  el:name="Ulf Stegemann" el:email="ulf-enigma at zeitform.de" el:homepage="http://ulf.zeitform.de"/>
+      <el:copyright>Copyright ? 2007 Ulf Stegemann</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.00">
+        <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false" el:control="force" el:scoreunit="duration" el:scoretarget="time"/>
+      <el:score el:easy="00:22" el:difficult="00:45"/>
+    </el:info>
+    <el:luamain><![CDATA[
+-- DIFFICULTY --
+if difficult then
+  enigma.SlopeForce = 40
+end
+
+-- CELLS --
+lasers={}
+cells={}
+cells[" "]=cell{floor="fl-abyss"}
+cells["1"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=2}}}
+cells["2"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=7}}}
+cells["3"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=3}}}
+cells["4"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=9}}}
+cells["5"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=1}}}
+cells["6"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=6}}}
+cells["7"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=4}}}
+cells["8"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=8}}}
+cells["9"]=cell{floor="fl-gray",item={"it-sensor",{action="callback",target="tiltfloor",_mydir=0}}}
+
+-- LANDSCAPE MAP --
+level = {
+--  00000000001111111111
+--  01234567890123456789
+   "                    ", -- 00
+   "     88811111222    ", -- 01
+   "     88881112222    ", -- 02
+   "     88881112222    ", -- 03
+   "     78881112223    ", -- 04
+   "     77778123333    ", -- 05
+   "     77777933333    ", -- 06
+   "     77776543333    ", -- 07
+   "     76665554443    ", -- 08
+   "     66665554444    ", -- 09
+   "     66665554444    ", -- 10
+   "     66655555444    ", -- 11
+   "                    "  -- 12
+}
+
+-- FUNCTIONS --
+
+function tiltfloor(onoff,sender)
+  local gdir = enigma.GetAttrib(sender, "_mydir")
+  if gdir == 0 then
+    fill_floor("fl-gray", 5,1, 11,11)
+  else
+    i=0
+    while i<11 do
+      draw_floor("fl-gradient", {5,1+i}, {1,0}, 11, {type=gdir})
+      i = i+1
+    end
+  end
+end
+
+pos_hard = {{4,0},{5,0},{4,1},
+            {16,0},{15,0},{16,1},
+            {4,12},{4,11},{5,12},
+            {16,12},{15,12},{16,11}}
+pos_med  = {{6,0},{7,0},{8,0},{12,0},{13,0},{14,0},{4,2},{4,3},{4,4},{4,8},{4,9},{4,10},{16,2},{16,3},{16,4},{16,8},{16,9},{16,10},{6,12},{7,12},{8,12},{12,12},{13,12},{14,12}}
+pos_easy = {{9,0},{10,0},{11,0},{4,5},{4,6},{4,7},{9,12},{10,12},{11,12},{16,5},{16,6},{16,7}}
+counter = 0
+
+function setoxyd()
+  while (counter < 2) do
+    getandset(pos_hard)
+    counter = counter+1
+  end
+  while (counter < 4) do
+    getandset(pos_easy)
+    counter = counter+1
+  end
+  while (counter < 10) do
+    getandset(pos_med)
+    counter = counter+1
+  end
+end
+
+function getandset(mytable)
+    local n = table.getn(mytable)
+    r = random(1,n)
+    p = mytable[r]
+    set_stone("st-oxyd",p[1],p[2],{flavor="a"})
+    table.remove(mytable,r)
+    if (counter == 0) then
+      if (r == 1 or r == 4 or r == 7 or r == 10) then
+        table.remove(mytable,r)
+        table.remove(mytable,r)
+      elseif (r == 2 or r == 5 or r == 8 or r == 11) then
+        table.remove(mytable,r-1)
+      else
+        table.remove(mytable,r-2)
+      end
+    end
+end
+
+-- GENERAL --
+enigma.ConserveLevel=TRUE
+set_default_parent(cells[" "])
+create_world_by_map(level)
+setoxyd()
+oxyd_shuffle()
+set_actor("ac-blackball",10.5,6.5,{player=0})
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+     </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/enigma_viii/ulf06_2.xml
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native



From andreasl at mail.berlios.de  Fri Jul 25 00:05:36 2008
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Fri, 25 Jul 2008 00:05:36 +0200
Subject: [Enigma-game-svn] r1245 - in trunk: data/levels/lib doc/reference
	src/stones
Message-ID: <200807242205.m6OM5aLT000781@sheep.berlios.de>

Author: andreasl
Date: 2008-07-25 00:05:30 +0200 (Fri, 25 Jul 2008)
New Revision: 1245

Modified:
   trunk/data/levels/lib/libluatools.xml
   trunk/doc/reference/enigma-ref.texi
   trunk/src/stones/BlockerStone.cc
Log:
Trunk:
 - libluatools:
    - new functions for map handling:
       - concat_maps_vertically (see below)
       - get_key_in_map
       - insert_key_in_map
       - complete_map
       - mirror_map_vertically
       - mirror_map_horizontally
    - fix luatools.print_table
    - correct name of concat_maps_vertically to
      concat_maps_horizontally.
 - Reference manual:
    - Add a subsection about "orthogonal autotiling".
 - Fix crash when trying to set a blocker stone
   with initial state "open" (assert).


Modified: trunk/data/levels/lib/libluatools.xml
===================================================================
--- trunk/data/levels/lib/libluatools.xml	2008-07-22 13:46:14 UTC (rev 1244)
+++ trunk/data/levels/lib/libluatools.xml	2008-07-24 22:05:30 UTC (rev 1245)
@@ -113,20 +113,21 @@
       key_s = "<" .. type(key) .. ">"
     end
     if type(value) == "number" then
-      print(prefix .. "|" .. key_s .. " = " .. value)
+      print((prefix or "") .. "|" .. key_s .. " = " .. value)
     elseif type(value) == "string" then
-      print(prefix .. "|" .. key_s .. " = \"" .. value .. "\"")
+      print((prefix or "").. "|" .. key_s .. " = \"" .. value .. "\"")
     elseif type(value) == "table" then
-      if depth < 5 then
-        print(prefix .. "|" .. key_s .. " = |")
+      if (depth or 0) < 5 then
+        print((prefix or "") .. "|" .. key_s .. " = |")
         luatools.print_table(value,
-            prefix .. "|" .. string.rep(" ", string.len(key_s)),
+            (prefix or "") .. "|" .. string.rep(" ", string.len(key_s) + 3),
             (depth or 0) + 1)
+        print((prefix or "") .. "|")
       else
-        print(prefix .. "|" .. key_s .. " = | ...")
+        print((prefix or "") .. "|" .. key_s .. " = | ...")
       end
     else
-      print(prefix .. "|" .. key_s .. " of type " .. type(value))
+      print((prefix or "").. "|" .. key_s .. " of type " .. type(value))
     end
   end
 end
@@ -426,27 +427,27 @@
   return layers
 end
 
--- concat_maps_vertically takes a list of maps or a table of
+-- concat_maps_horizontally takes a list of maps or a table of
 -- maps and returns a map, which is constructed from the others
 -- in the following way:
 --  Map1:  {"abc", "def"}
 --  Map2:  {"ABC", "DEF"}
 --  Map3:  {"123", "456"}
---  fuse_map_layers(Map1, Map2, Map3):
+--  concat_maps_horizontally(Map1, Map2, Map3):
 --         {"abcABC123", "defDEF456"}
 -- Missing letters are replaced by " ".
 -- This function can be used to combine several rooms
 -- or areas of a map to build a larger map.
--- Note that concat_maps_vertically doesn't take an
+-- Note that concat_maps_horizontally doesn't take an
 -- offset value for a vertical shift of the maps!
-function luatools.concat_maps_vertically(map1, ...)
+function luatools.concat_maps_horizontally(map1, ...)
   -- Understand arguments
   local maps = {map1, ...}
   if table.getn(maps) == 1 then
     maps = map1
   end
   if type(maps) ~= "table" then
-    error("concat_maps_vertically: Argument is not a table (map).")
+    error("concat_maps_horizontally: Argument is not a table (map).")
   end
   -- Find maximal line lengths and height
   local lengths = {}
@@ -470,6 +471,199 @@
   return result
 end
 
+-- concat_maps_vertically takes a list of maps or a table of
+-- maps and returns a map, which is constructed from the others
+-- in the following way:
+--  Map1:  {"abc", "def"}
+--  Map2:  {"ABC", "DEF"}
+--  Map3:  {"123", "456"}
+--  concat_maps_vertically(Map1, Map2, Map3):
+--         {"abc", "def", "ABC", "DEF", "123", "456"}
+-- This function can be used to combine several rooms
+-- or areas of a map to build a larger map.
+-- Note that concat_maps_vertically doesn't take an
+-- offset value for a horizontal shift of the maps!
+function luatools.concat_maps_vertically(map1, ...)
+  -- Understand arguments
+  local maps = {map1, ...}
+  if table.getn(maps) == 1 then
+    maps = map1
+  end
+  if type(maps) ~= "table" then
+    error("concat_maps_vertically: Argument is not a table (map).")
+  end
+  -- Create result
+  local result = {}
+  for j, map in pairs(maps) do
+    for y, line in pairs(map) do
+      table.insert(result, line)
+    end
+  end
+  return result
+end
+  
+-- get_key_in_map returns the key of MAP at position POSARG.
+-- KEYLENGTH can be a number or a string (then its length is
+-- considered to be the keylength). Returns nil if POSARG is
+-- not described in map.
+function luatools.get_key_in_map(map, keylength, posarg)
+  if type(map) ~= "table" then
+    error("get_key_in_map: First argument is not a table (map).")
+  end
+  if ((type(keylength) ~= "string") and (type(keylength) ~= "number"))
+      or ((type(keylength) == "number") and (keylength ~= math.floor(keylength))) then
+    error("get_key_in_map: Second argument is not an integer or string (keylength).")
+  end
+  local kl = keylength
+  if type(kl) == "string" then
+    kl = string.len(kl)
+  end
+  local pos = posarg
+  if type(pos) ~= "userdata" then
+    pos = po(posarg)
+  end
+  local px, py = math.floor(pos.x), math.floor(pos.y)
+  if (type(px) ~= "number") and (type(py) ~= "number") then
+    error("get_key_in_map: Can't interpret third argument as position.")
+  end
+  if not map[py] then
+    return nil
+  end
+  if string.len(map[py]) < kl * px then
+    return nil
+  end
+  return string.sub(map[py], kl * (px - 1) + 1, kl * px)  
+end
+
+-- insert_key_in_map inserts key KEY at position POSARG
+-- into the map MAP, which is assumed to be a table of
+-- strings, and returns the result. The key length of the
+-- map is assumed to be the length of KEY, so partial keys
+-- are not supported. Missing entries are filled with a
+-- neccessary number of spaces.
+function luatools.insert_key_in_map(map, key, posarg)
+  if type(map) ~= "table" then
+    error("insert_key_in_map: First argument is not a table (map).")
+  end
+  if type(key) ~= "string" then
+    error("insert_key_in_map: Second argument is not a string (key).")
+  end
+  if key == "" then
+    error("insert_key_in_map: Second argument (key) is empty.")
+  end
+  local pos = posarg
+  if type(pos) ~= "userdata" then
+    pos = po(posarg)
+  end
+  local px, py = math.floor(pos.x), math.floor(pos.y)
+  if (type(px) ~= "number") and (type(py) ~= "number") then
+    error("insert_key_in_map: Can't interpret third argument as position.")
+  end
+  local keylength = string.len(key)
+  local result = {}
+  for y = 1, math.max(#map, py) do
+    if y ~= py then
+      result[y] = map[y] or ""
+    else
+      local delta = keylength * (px - 1) - string.len(map[y])
+      if delta >= 0 then
+        -- Line of map has to be expanded.
+        result[y] = (map[y] or "") .. string.rep(" ", delta) .. key
+      else
+        -- Insert key into map (old key is deleted).
+        result[y] = string.sub(map[y], 1, keylength * (px - 1)) .. key ..
+                      string.sub(map[y], keylength * px + 1, string.len(map[y]))
+      end
+    end
+  end
+  return result  
+end
+
+-- complete_map returns a rectangularly completed version
+-- of MAP, with " " as fillers.
+function luatools.complete_map(map)
+  if type(map) ~= "table" then
+    error("complete_map: Argument is not a table (map).")
+  end
+  local width = 0
+  local height = 0
+  local result = {}
+  for key, entry in pairs(map) do
+    height = math.max(height, tonumber(key) or 0)
+    if type(entry) == "string" then
+      width = math.max(width, string.len(entry))
+    else
+      -- Odd entry. Report if key is a number
+      -- (i.e. non-number user keys are allowed).
+      if type(key) == "number" then
+        error("complete_map: Line " .. key .. " in map is not a string, but "
+              .. type(entry) .. ".")
+      else
+        result[key] = luatools.deep_copy(entry)
+      end
+    end
+  end
+  for y = 1, height do
+    result[y] = map[y] or ""
+    result[y] = result[y] .. string.rep(" ", width - string.len(result[y]))
+  end
+  return result
+end
+
+-- mirror_map_vertically returns MAP, mirrored along a
+-- horizontal axis (i.e. North and South are inverted).
+-- Missing entries are replaced with " ".
+function luatools.mirror_map_vertically(map)
+  if type(map) ~= "table" then
+    error("mirror_map_vertically: Argument is not a table (map).")
+  end
+  local completed = luatools.complete_map(map)
+  local result = {}
+  for key, entry in pairs(completed) do
+    if type(key) == "number" then
+      result[table.getn(completed) - key + 1] = entry
+    else
+      result[key] = luatools.deep_copy(entry)
+    end
+  end  
+  return result
+end
+
+-- mirror_map_horizontally returns MAP, mirrored along
+-- a vertical axis (i.e. East and West are inverted).
+-- The keylength given by KEY (example tile key or number)
+-- is respected.
+function luatools.mirror_map_horizontally(map, keylength)
+  if type(map) ~= "table" then
+    error("mirror_map_horizontally: Argument is not a table (map).")
+  end
+  if ((type(keylength) ~= "string") and (type(keylength) ~= "number"))
+      or ((type(keylength) == "number") and (keylength ~= math.floor(keylength))) then
+    error("mirror_map_horizontally: Second argument is not an integer or string (keylength).")
+  end
+  local kl = keylength
+  if type(kl) == "string" then
+    kl = string.len(kl)
+  end
+  local completed = luatools.complete_map(map)
+  local map_width = string.len(completed[1] or "") / kl
+  if math.ceil(map_width) ~= map_width then
+    error("mirror_map_horizontally: Map is odd (broken key length).")
+  end
+  local result = {}
+  for v, entry in pairs(completed) do
+    if type(v) == "number" then
+      for j = 1, map_width do
+        local x = kl * (map_width - j)
+        result[v] = (result[v] or "") .. string.sub(entry, x + 1, x + kl)
+      end
+    else
+      result[v] = luatools.deep_copy(entry)
+    end
+  end  
+  return result
+end
+
 -- print_map uses the print command to print a map.
 -- It should be used for debug reasons only.
 -- SEP can be a separator like "|" to encase the map

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2008-07-22 13:46:14 UTC (rev 1244)
+++ trunk/doc/reference/enigma-ref.texi	2008-07-24 22:05:30 UTC (rev 1245)
@@ -7893,6 +7893,8 @@
 @end example
 @end table
 
+A more elaborate example can be found in @ref{Orthogonal Autotiling}.
+
 @c ----------------- Composer Resolver -------------------- 
 
 @node res.composer
@@ -8239,6 +8241,7 @@
 
 @menu 
 * Nearest Object Clustering::    When nearest object address wrong target
+* Orthogonal Autotiling::        Autotiling with different sources and targets
 @end menu
 
 @node Nearest Object Clustering
@@ -8287,8 +8290,73 @@
 declarations. But you will likely be able to handle a dozen of additional
 switch/door combinations.
 
+ at node Orthogonal Autotiling
+ at subsection Orthogonal Autotiling
 
+Autotiling is useful whenever you want to define lots of
+target-action-pairings, even when source and target objects differ (i.e. use
+different tile keys). In this case we speak of @samp{orthogonal autotiling}.
+Let's take a look at the important parts of the API 2 version of the level
+ at samp{Laser Games}:
 
+ at example
+...
+ti["T*"] = @{"it_trigger", target = "mirror%%", action_1 = "turn", action_0 = "turnback"@}
+ti["F*"] = @{"st_fourswitch", target = "mirror%%"@}
+ti["1*"] = @{"st_mirror", name = "mirror%%", flavor = "triangle", orientation = NORTH@}
+ti["2*"] = @{"st_mirror", name = "mirror%%", flavor = "triangle", orientation = SOUTH@}
+ti["3*"] = @{"st_mirror", name = "mirror%%", orientation = NORTH@}
+...
+
+local resolver = res.autotile(ti, @{"T", "T*"@}, @{"F", "F*"@},
+    @{"1", "1*"@}, @{"2", "2*"@}, @{"3", "3*"@}, @{"4", "4*"@}, @{"5", "5*"@},
+    @{"6", "6*"@}, @{"7", "7*"@}, @{"8", "8*"@}, @{"9", "9*"@})
+         
+w, h = wo(resolver, "  ", @{
+"# # # # # # # # # # # $ # $ # $ # $ # # ",
+"#                 #                   # ",
+"#     =   =       #   1a  9b  3c  2d  $ ",
+"#             =   #                   # ",
+"#     TaTbTcTd    #   3e  4f  5g  4h  $ ",
+"#     TeFfFgTh    #                   # ",
+"#     TiFjFkTl    #   6i  3j  4k  7l  $ ",
+"#     TmFnFoTp    #                   # ",
+"#     TqTrTsTt    #   8m  7n  6o  8p  $ ",
+"#                 #                   # ",
+"#       @@   =     #   1q  7r  3s  2t  $ ",
+"#                 #                   # ",
+"# # # # # # # # # # # $ # $ # $ # ^ # # "
+@})
+...
+ at end example
+
+We have different kinds of sources for our actions (triggers @code{T} and
+fourswitchs @code{F}), and different kinds of targets (mirrors @code{1},
+ at code{2} etc.). However, as all mirrors are consistently named @code{mirror%%},
+with @code{%%} being replaced by @code{%a} to @code{%t}, the connections
+between the objects can be set easily without having to worry about different
+object types: The trigger @code{Ta} will turn mirror @code{1a} (which is called
+ at code{mirror%a}), @code{Tb} will turn @code{9b} and so on. If we decide to
+replace mirror @code{1a} by, say, mirror type @code{2}, we can simply replace
+ at code{1a} by @code{2a}, and still preserve the action-target-pairing.
+
+In this very special situation, the attribute @code{counterclock} proves to
+be useful: All mirrors in this level turn clockwise, except for @code{9b}.
+Without @code{counterclock}, we'd have to use a callback-function to decide
+about the target and manually choose between the actions @code{turn} and
+ at code{turnback}. However, by setting
+
+ at example
+ti["9*"] = @{"st_mirror", name = "mirror%%", flavor = "triangle",
+                         orientation = SOUTH, counterclock = true@}
+ at end example
+
+it's possible to send the same messages to all mirrors that correspond to
+triggers (i.e. @code{turn} when the trigger is pressed down and @code{turnback}
+when it is released again), and still to have one or more mirrors behave in a
+different way (i.e. rotating in another direction). The @code{inverse}
+attribute is of a similar use.
+
 @c ==================  Extension Development  =======================
 
 @node Extension Development

Modified: trunk/src/stones/BlockerStone.cc
===================================================================
--- trunk/src/stones/BlockerStone.cc	2008-07-22 13:46:14 UTC (rev 1244)
+++ trunk/src/stones/BlockerStone.cc	2008-07-24 22:05:30 UTC (rev 1245)
@@ -64,6 +64,10 @@
     }
     
     void BlockerStone::setState(int extState) {
+        if (extState == 1 && !isDisplayable()) {
+            ASSERT(0, XLevelRuntime,
+                   "There is no open st_blocker. Use it_blocker instead.");
+        }
         if (extState == 1) {    // -> open (shrink)
             setIState(SHRINKING);
         }



From raoul at mail.berlios.de  Sat Jul 26 15:40:20 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Sat, 26 Jul 2008 15:40:20 +0200
Subject: [Enigma-game-svn] r1246 - in trunk/data/levels: enigma_cross
	enigma_i enigma_viii
Message-ID: <200807261340.m6QDeKVS014167@sheep.berlios.de>

Author: raoul
Date: 2008-07-26 15:40:19 +0200 (Sat, 26 Jul 2008)
New Revision: 1246

Modified:
   trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
   trunk/data/levels/enigma_i/martin92_1.xml
   trunk/data/levels/enigma_viii/index.xml
   trunk/data/levels/enigma_viii/mecke15_1.xml
Log:
-> Small levelbugfixes



Modified: trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-07-24 22:05:30 UTC (rev 1245)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-07-26 13:40:19 UTC (rev 1246)
@@ -83,7 +83,7 @@
     <level _seq="75" _title="Audience in Venice" _xpath="enigma_vii/mecke09_1" author="mecke" ctrl="force" easy="true" id="mecke9" rel="1" rev="20" score="1" target="time" unit="duration"/>
     <level _seq="76" _title="Black Liberation" _xpath="enigma_vii/mecke11_1" author="mecke" ctrl="force" easy="true" id="mecke11" rel="1" rev="25" score="1" target="time" unit="duration"/>
     <level _seq="77" _title="Jack-Of-All-Trades" _xpath="enigma_viii/mecke12_1" author="mecke" ctrl="force" easy="true" id="mecke12" rel="1" rev="31" score="1" target="time" unit="duration"/>
-    <level _seq="78" _title="Enigmaparcour" _xpath="enigma_viii/mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="17" score="1" target="time" unit="duration"/>
+    <level _seq="78" _title="Enigmaparcour" _xpath="enigma_viii/mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="18" score="1" target="time" unit="duration"/>
     <level _seq="79" _title="Rhythm of Space" _xpath="enigma_viii/mecke20_1" author="mecke" ctrl="force" easy="true" id="mecke20" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="80" _title="The Show Jumper" _xpath="enigma_viii/andreas47_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas47" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="81" _title="The Red Room" _xpath="enigma_viii/joe29_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe29" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_i/martin92_1.xml
===================================================================
--- trunk/data/levels/enigma_i/martin92_1.xml	2008-07-24 22:05:30 UTC (rev 1245)
+++ trunk/data/levels/enigma_i/martin92_1.xml	2008-07-26 13:40:19 UTC (rev 1246)
@@ -17,9 +17,6 @@
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
-create_world(20, 13)
-fill_floor("fl-abyss")
-
 level =  {
  "                    ",
  " ##..--++++++--..## ",

Modified: trunk/data/levels/enigma_viii/index.xml
===================================================================
--- trunk/data/levels/enigma_viii/index.xml	2008-07-24 22:05:30 UTC (rev 1245)
+++ trunk/data/levels/enigma_viii/index.xml	2008-07-26 13:40:19 UTC (rev 1246)
@@ -8,7 +8,7 @@
   <levels>
     <level _seq="1" _title="Welcome" _xpath="./welcometopack8_1" author="Raoul Bourquin" ctrl="force" easy="true" id="welcometopack8" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="2" _title="Jack-Of-All-Trades" _xpath="./mecke12_1" author="mecke" ctrl="force" easy="true" id="mecke12" rel="1" rev="31" score="1" target="time" unit="duration"/>
-    <level _seq="3" _title="Enigmaparcour" _xpath="./mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="17" score="1" target="time" unit="duration"/>
+    <level _seq="3" _title="Enigmaparcour" _xpath="./mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="18" score="1" target="time" unit="duration"/>
     <level _seq="4" _title="Rhythm of Space" _xpath="./mecke20_1" author="mecke" ctrl="force" easy="true" id="mecke20" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="5" _title="The Show Jumper" _xpath="./andreas47_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas47" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="6" _title="The Red Room" _xpath="./joe29_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe29" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_viii/mecke15_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke15_1.xml	2008-07-24 22:05:30 UTC (rev 1245)
+++ trunk/data/levels/enigma_viii/mecke15_1.xml	2008-07-26 13:40:19 UTC (rev 1246)
@@ -5,7 +5,7 @@
   <el:protected >
     <el:info el:type="level">
       <el:identity el:title="Enigmaparcour" el:subtitle="Open the Doors" el:id="mecke15"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 17 $" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 18 $" el:status="released"/>
       <el:author  el:name="mecke" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Thomas Bernhardt</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -76,7 +76,15 @@
 ti["M2"] = ti[" _"] .. {"st_mirror_slab", movable=false, orientation=1}
 ti["X "] = ti[" ~"] .. {"st_oxyd", flavor="a"}
 ti["S "] = ti[" _"] .. {"st_laserswitch", target={"door#7", "door#8"}}
-ti[": "] = {"st-door-v", name="door#"}
+ti[":1"] = {"st-door-v", name="door#1"}
+ti[":2"] = {"st-door-v", name="door#2"}
+ti[":3"] = {"st-door-v", name="door#3"}
+ti[":4"] = {"st-door-v", name="door#4"}
+ti[":5"] = {"st-door-v", name="door#5"}
+ti[":6"] = {"st-door-v", name="door#6"}
+ti[":7"] = {"st-door-v", name="door#7"}
+ti[":8"] = {"st-door-v", name="door#8"}
+ti[":9"] = {"st-door-v", name="door#9"}
 ti["? "] = ti[" ~"] .. {"st_actorimpulse_invisible"}
 ti["z "] = ti[" v"] .. {"st-stone_break"}
 ti["N "] = ti[" v"] .. {"st-stone_break"}
@@ -119,7 +127,7 @@
   "#  w iV1 w i i    *     D1A A A A A 2 # #  vX  v# ",
   "# M2G G m G M2-   a~  - 6 +  v v v v6v$2#  v v v# ",
   "#  _ _G G G G  ~ ~9  ~ ~K # # # # # # # #  vX  v# ",
-  "# L  _G M1G M2-   q~  - : : : : : : : : : K K K # ",
+  "# L  _G M1G M2-   q~  - :1:2:3:4:5:6:7:8:9K K K # ",
   "#  _ _G G G G  ~k~9 l~ ~K # # # # # # # #  vX  v# ",
   "# S u G m G M2-    ~  - 4 3 < N  v v v$5#  v v v# ",
   "# > ^1^2^3$4Y     J     D1  Q 8 8 8 Q $7#  vX  v# ",



From ral at mail.berlios.de  Tue Jul 29 23:28:05 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 29 Jul 2008 23:28:05 +0200
Subject: [Enigma-game-svn] r1247 - trunk/src
Message-ID: <200807292128.m6TLS52q000218@sheep.berlios.de>

Author: ral
Date: 2008-07-29 23:28:04 +0200 (Tue, 29 Jul 2008)
New Revision: 1247

Modified:
   trunk/src/world.cc
Log:
Trunk 1.1: 
- fix r1233: application of double mouseforce values


Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-26 13:40:19 UTC (rev 1246)
+++ trunk/src/world.cc	2008-07-29 21:28:04 UTC (rev 1247)
@@ -520,7 +520,7 @@
     a->m_actorinfo.friction = friction;
     f += drunkenMouseforce(a, m);
 
-    return f + m;
+    return f;
 }
 
 /* Global forces are calculated less often than local ones, namely



From ral at mail.berlios.de  Wed Jul 30 00:04:18 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 30 Jul 2008 00:04:18 +0200
Subject: [Enigma-game-svn] r1248 - in trunk/src: . items stones
Message-ID: <200807292204.m6TM4IXD002779@sheep.berlios.de>

Author: ral
Date: 2008-07-30 00:04:16 +0200 (Wed, 30 Jul 2008)
New Revision: 1248

Added:
   trunk/src/items/
   trunk/src/items/BlockerItem.cc
   trunk/src/items/BlockerItem.hh
   trunk/src/items/GlassesItem.cc
   trunk/src/items/GlassesItem.hh
Modified:
   trunk/src/Makefile.am
   trunk/src/actors.cc
   trunk/src/floors.cc
   trunk/src/items.cc
   trunk/src/items.hh
   trunk/src/ox_extra.cc
   trunk/src/ox_magnum.cc
   trunk/src/ox_oxyd1.cc
   trunk/src/ox_peroxyd.cc
   trunk/src/oxyd.cc
   trunk/src/oxyd_internal.hh
   trunk/src/player.cc
   trunk/src/stones.cc
   trunk/src/stones/ActorImpulseStone.cc
   trunk/src/stones/DeathStone.cc
   trunk/src/stones/LightPassengerStone.cc
   trunk/src/stones/WindowStone.cc
   trunk/src/stones_simple.cc
   trunk/src/world.cc
   trunk/src/world.hh
Log:
Trunk 1.1: new API reengineering
- drop item,stone,actor id based template repositories
- switch oxyd* item tables back to kind strings
- rename item TRAITS macros to differ from stone macros
- new dir src/items
- start extracting item classes to new dir
- make use of Glasses Spot enum by header inclusion instead of numbers

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/Makefile.am	2008-07-29 22:04:16 UTC (rev 1248)
@@ -197,6 +197,10 @@
 	lev/ScoreManager.hh	\
 	lev/VolatileIndex.cc	\
 	lev/VolatileIndex.hh	\
+	items/BlockerItem.cc	\
+	items/BlockerItem.hh	\
+	items/GlassesItem.cc	\
+	items/GlassesItem.hh	\
 	others/Other.cc		\
 	others/Other.hh		\
 	others/Rubberband.cc	\

Modified: trunk/src/actors.cc
===================================================================
--- trunk/src/actors.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/actors.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -584,11 +584,11 @@
     }
     else if (Item *it = GetItem(p)) {
         if (!has_flags(it, itf_indestructible))
-            SetItem (p, it_explosion3);
+            SetItem (p, MakeItem("it-explosion3"));
     }
     else if (Floor *fl = GetFloor(p)) {
         if (fl->is_destructible())
-            SetItem (p, it_explosion3);
+            SetItem (p, MakeItem("it-explosion3"));
     }
     KillActor (this);
 }

Modified: trunk/src/floors.cc
===================================================================
--- trunk/src/floors.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/floors.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -213,7 +213,7 @@
 }
 
 bool Floor::force_fire() {
-    SetItem(get_pos(), it_burnable_ignited);
+    SetItem(get_pos(), MakeItem("it-burnable-ignited"));
     fire_countdown = 0;
     return true;
 }
@@ -374,7 +374,7 @@
         SetFloor(p, MakeFloor(get_firetransform().c_str()));
     // Remember, at this point "this" may be destroyed.
     if(!GetFloor(p)->has_firetype(flft_noash))
-        SetItem(p, it_burnable_ash);
+        SetItem(p, MakeItem("it-burnable-ash"));
     return true; // fire extinguished  
 }
 
@@ -403,7 +403,7 @@
     if(cont_fire)
         // continue burning
         //   -> put animation
-        SetItem(p, it_burnable_burning);
+        SetItem(p, MakeItem("it-burnable-burning"));
     else
         stop_fire(false);
 }
@@ -930,7 +930,7 @@
         enigma::Inventory *inv = player::GetInventory(m_affected_actor);
         if (inv && inv->size() > 0) {
             if (bag == NULL) {
-                bag = MakeItem(it_bag);
+                bag = MakeItem("it-bag");
                 bag->setOwnerPos(get_pos());
             }
             int i = IntegerRand (0, int (inv->size()-1));
@@ -943,7 +943,7 @@
     if(Item *it = GetItem(get_pos())) {
         if (!(it->get_traits().flags & itf_static)) {
             if (bag == NULL) {
-                bag = MakeItem(it_bag);
+                bag = MakeItem("it-bag");
                 bag->setOwnerPos(get_pos());                
             }
             dynamic_cast<ItemHolder *>(bag)->add_item(YieldItem(get_pos())); 

Added: trunk/src/items/BlockerItem.cc
===================================================================
--- trunk/src/items/BlockerItem.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items/BlockerItem.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -0,0 +1,191 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "items/BlockerItem.hh"
+//#include "main.hh"
+#include "world.hh"
+
+namespace enigma {
+
+    BlockerItem::BlockerItem(bool shrinked_recently) {
+        state = shrinked_recently ? NEW : IDLE;
+    }
+
+    BlockerItem::~BlockerItem() {
+        GameTimer.remove_alarm (this);
+    }
+
+    BlockerItem * BlockerItem::clone() {
+        BlockerItem * dup = new BlockerItem(*this);
+        NameObject(dup, "$BlockerItem#");  // auto name object to avoid problems with object values
+        return dup;
+    }
+    
+    void BlockerItem::dispose() {
+        delete this;
+    }
+
+    Value BlockerItem::message(const Message &m) {
+        if (m.message == "_init") { 
+            if (Stone *st = GetStone(get_pos())) {
+                if (st->is_kind("st_boulder"))
+                    if (state == IDLE && server::GameCompatibility != GAMET_PEROXYD)
+                        setIState(UNLOCKED);
+                    else if (state == NEW || server::GameCompatibility != GAMET_PEROXYD)
+                        setIState(LOCKED);
+            }
+            return Item::message(m);    // pass on init message
+        } else if (m.message =="_performaction") {
+            performAction(true);
+            return Value();
+        }
+        return Item::message(m);
+    }
+    
+    void BlockerItem::toggleState() {
+        if (state == UNLOCKED) {  // revoke pending grow/close
+            setIState(LOCKED);
+        }
+        else {
+            setState(0);  // close
+        }
+    }
+    
+    int BlockerItem::externalState() const {
+        return 1;   // always open -- st_blocker is closed
+    }
+    
+    void BlockerItem::setState(int extState) {
+        if (extState == 1) {         // open (shrink)
+            if (state == UNLOCKED)   //   revoke pending grow/close
+                setIState(LOCKED);
+        }
+        else {                       // close (grow)
+            switch (state) {
+                case LOCKED:
+                    setIState(UNLOCKED);  // close when stone is removed
+                    break;
+                case UNLOCKED:
+                    break;                // will close anyway when stone is removed
+                case IDLE:
+                case NEW:
+                    grow();                    
+                    break;
+            }
+        }
+    }
+    
+    void BlockerItem::on_creation(GridPos p) {
+        if (state == NEW) {
+            GameTimer.set_alarm(this, 0.5, false);
+        }
+        Item::on_creation(p);
+    }
+
+    void BlockerItem::on_removal(GridPos p) {
+        setIState(IDLE);
+        Item::on_removal(p);
+    }
+
+    void BlockerItem::init_model() {
+        set_model("it-blocker");
+    }
+    
+    void BlockerItem::actor_leave(Actor *a) {
+        if (Value v = getAttr("autoclose")) {
+            if (v.to_bool()) {
+                setState(0);     // close
+            }
+        }
+    }
+    
+    void BlockerItem::stone_change(Stone *st) {
+        if (st != NULL) {
+            if (st->is_kind("st_boulder")) { // boulder arrived
+                switch (state) {
+                    case IDLE:
+                        setIState(UNLOCKED);  // will grow when boulder moves away
+                        break;
+                    case NEW:
+                        setIState(LOCKED);    // will not grow when boulder moves away
+                        break;
+                    case UNLOCKED:
+                    case LOCKED:
+                        // two BoulderStones running directly next to each other
+                        // let second pass as well (correct? siegfried says yes)
+                        // note: all stone moves are handled in a timestep before
+                        //   the world informs the items about stone changes
+                        break;
+                }
+            }
+            else { // any other stone
+                setIState(LOCKED);
+            }
+        }
+        else {              // stone disappeared
+            switch (state) {
+                case LOCKED:
+                    setIState(IDLE);
+                    break;
+                case UNLOCKED:
+                    grow();
+                    break;
+                case IDLE:
+                case NEW:
+                    // no action
+                    break;
+            }
+        }
+    }
+
+    void BlockerItem::alarm() {
+        if (state == NEW) { // BoulderStone did not arrive in time
+            setIState(IDLE);
+        }
+    }
+
+    void BlockerItem::setIState(iState newState) {
+        if (state != newState) {
+            if (state == NEW)
+                GameTimer.remove_alarm(this);
+            else if (newState == NEW)
+                GameTimer.set_alarm(this, 0.5, false);
+            state = newState;
+        }
+    }
+    
+    void BlockerItem::grow() {
+        Stone *st = MakeStone("st_blocker_new");
+        SetStone(get_pos(), st);
+        transferIdentity(st);
+        if (Value v = getAttr("autoclose"))
+            st->setAttr("autoclose", v); 
+        SendMessage(st, "_performaction");
+        kill();
+    }
+
+    DEF_ITEMTRAITSF(BlockerItem, "it_blocker", it_blocker, itf_static);
+
+    BOOT_REGISTER_START
+        BootRegister(new BlockerItem(false), "it_blocker");
+        BootRegister(new BlockerItem(true), "it_blocker_new");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/items/BlockerItem.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/items/BlockerItem.hh
===================================================================
--- trunk/src/items/BlockerItem.hh	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items/BlockerItem.hh	2008-07-29 22:04:16 UTC (rev 1248)
@@ -0,0 +1,94 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef BLOCKERITEM_HH
+#define BLOCKERITEM_HH
+
+#include "items.hh"
+
+#include "enigma.hh"
+
+namespace enigma {
+    /**
+     * A door like object that can be opened and closed by a BoulderStone. This item
+     * represents the open state of the door. The closed state is represented by a
+     * BlockerStone.<p>
+     * If a BoulderStone moves over a BlockerItem the BlockerItem starts growing and
+     * replaces itself by a BlockerStone. But other Stones can be pushed over a
+     * BlockerItem without causing its transformation. <p>
+     * It fully supports the door messages "open", "close", "toggle", "signal" and
+     * attribute "state". If the item is blocked by a stone the messages will not
+     * cause an instant growing. But the message will be remembered in the internal
+     * state and the item acts as soon as the stone moves away.<p>
+     * An initial BlockerItem with a BoulderStone on top will grow as soon as it moves
+     * away. An initial it_blocker_new with a BloulderStone on top will not grow when
+     * the stone moves away.<p>
+     * Note that this is the only door object that allows a stone to be pushed through.
+     * A BlockerItem can be killed by a BrakeItem being dropped.
+     */
+    class BlockerItem : public Item, public TimeHandler {
+        DECL_ITEMTRAITS;
+    private:
+        enum iState {
+            IDLE,       ///< neutral state
+            NEW,        ///< a new BlockerItem that replaced a recently shrinked BlockerStone -
+                        ///< a BoulderStone is awaited, but it has to arrive in time 
+            LOCKED,     ///< a stone covers the BlockerItem and locked it, so it will not grow
+                        ///< when the stone moves away. This is the state that a BoulderStone causes
+                        ///< on its first visit immediatly after shrinking the BlockerStone
+            UNLOCKED    ///< a stone covers the BlockerItem and unlocked it, so it will grow
+                        ///< when the stone moves away. This is the state that a BoulderStone causes
+                        ///< on its second visit when moving onto an idle BlockerItem. The blocker
+                        ///< will grow when the stones moves away
+        };
+
+    public:
+        BlockerItem(bool shrinked_recently);
+        ~BlockerItem();
+
+        // Object interface
+        virtual BlockerItem *clone();
+        virtual void dispose();
+        virtual Value message(const Message &m);
+
+        // StateObject interface
+        virtual void toggleState();
+        virtual int externalState() const;
+        virtual void setState(int extState);
+
+        // GridObject interface
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        virtual void init_model();
+        virtual void actor_leave(Actor *a);
+
+        // Item interface
+        virtual void stone_change(Stone *st);
+
+        // TimeHandler interface
+        virtual void alarm();
+    
+    private:
+        void setIState(iState newState);
+        void grow();
+    };
+    
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/items/BlockerItem.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/items/GlassesItem.cc
===================================================================
--- trunk/src/items/GlassesItem.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items/GlassesItem.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "items/GlassesItem.hh"
+
+#include "Inventory.hh"
+//#include "main.hh"
+#include "player.hh"
+#include "world.hh"
+
+namespace enigma {
+    void Glasses::updateGlasses() {
+        Inventory *ci = player::GetInventory(player::CurrentPlayer());
+        int newVisibility = 0;
+        int i = -1;
+        while ((i = ci->find("it_glasses", i+1)) != -1) {
+            Glasses *gl = dynamic_cast<Glasses *>(ci->get_item(i));
+            newVisibility |= gl->state;
+        }
+        if (newVisibility != server::GlassesVisibility) {
+            server::GlassesVisibility = newVisibility;
+            BroadcastMessage("_glasses", newVisibility, GridLayerBits(GRID_ITEMS_BIT | GRID_STONES_BIT));
+        }
+    }
+    
+    Glasses::Glasses(int initState) {
+        state = initState;
+    }
+    
+    int Glasses::maxState() const {
+        return MAX;
+    }
+    
+    void Glasses::toggleState() {
+        // ignore toggle
+    }
+    
+    void Glasses::setState(int extState) {
+        state = extState;
+        if (isDisplayable()) {
+            init_model();
+        } else {
+            // maybe part of players inventory
+            updateGlasses();
+            player::RedrawInventory();
+        }
+    }
+    
+    void Glasses::init_model() {
+        if (state > 0)
+            set_model("it_glasses");
+        else
+            set_model("it_glasses_broken");
+    }
+    
+    void Glasses::on_drop(Actor *a) {
+        updateGlasses();
+    }
+    void Glasses::on_pickup(Actor *a) {
+        updateGlasses();
+    }
+    void Glasses::on_stonehit(Stone *) {
+        sound_event ("shatter");
+        setState(0);
+    }
+        
+    int Glasses::traitsIdx() const {
+        return state != 0 ? 0 : 1;
+    }
+
+    ItemTraits Glasses::traits[2] = {
+        {"it_glasses",  it_glasses,  itf_none},
+        {"it_glasses_broken",  it_glasses_broken,  itf_none}
+    };
+
+    BOOT_REGISTER_START
+        BootRegister(new Glasses(0), "it_glasses_broken");
+        BootRegister(new Glasses(Glasses::DEATH + Glasses::HOLLOW + Glasses::LIGHTPASSENGER), "it_glasses");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/items/GlassesItem.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/items/GlassesItem.hh
===================================================================
--- trunk/src/items/GlassesItem.hh	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items/GlassesItem.hh	2008-07-29 22:04:16 UTC (rev 1248)
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef GLASSESITEM_HH
+#define GLASSESITEM_HH
+
+#include "items.hh"
+
+#include "actors.hh"
+#include "stones.hh"
+
+namespace enigma {
+    class Glasses : public Item {
+        CLONEOBJ(Glasses);
+        DECL_ITEMTRAITS_ARRAY(2, traitsIdx());
+
+    public:
+        enum Spot {
+            NOTHING         =  0,   // broken glasses
+            DEATH           =  1,
+            HOLLOW          =  2,
+            ACTORIMPULSE    =  4,
+            SENSOR          =  8,
+            LIGHTPASSENGER  = 16,
+            TRAP            = 32,
+            MAX             = 63
+        };
+        
+        static void updateGlasses();
+                
+        Glasses(int initState);
+        
+        // StateObject interface
+        virtual int maxState() const;
+        virtual void toggleState();
+        virtual void setState(int extState);
+        
+        // GridObject interface
+        virtual void init_model();
+        
+        // Items interface
+        virtual void on_drop(Actor *a);
+        virtual void on_pickup(Actor *a);
+        virtual void on_stonehit(Stone *st);
+        
+    private:
+        int traitsIdx() const;
+    };
+    
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/items/GlassesItem.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -18,6 +18,8 @@
  *
  */
 
+#include "items.hh"
+
 #include "errors.hh"
 #include "main.hh"
 #include "display.hh"
@@ -29,6 +31,7 @@
 #include "Inventory.hh"
 #include "ItemHolder.hh"
 #include "lev/Proxy.hh"
+#include "items/GlassesItem.hh"
 
 #include "ecl_util.hh"
 
@@ -45,44 +48,6 @@
 using ecl::V2;
 
 
-/* -------------------- Macros -------------------- */
-
-#define DEF_ITEM(classname, kindname, kindid)   \
-    class classname : public Item {             \
-        CLONEOBJ(classname);                    \
-        DECL_TRAITS;                            \
-    public:                                     \
-        classname() {}                          \
-    };                                          \
-    DEF_TRAITS(classname, kindname, kindid)
-
-#define DEF_ITEMF(classname, kindname, kindid, flags)   \
-    class classname : public Item {             \
-        CLONEOBJ(classname);                    \
-        DECL_TRAITS;                            \
-    public:                                     \
-        classname() {}                          \
-    };                                          \
-    DEF_TRAITSF(classname, kindname, kindid, flags)
-
-#define DECL_TRAITS                                             \
-        static ItemTraits traits;                               \
-        const ItemTraits &get_traits() const { return traits; }
-
-#define DECL_TRAITS_ARRAY(n, subtype_expr)                                      \
-        static ItemTraits traits[n];                                            \
-        const ItemTraits &get_traits() const { return traits[subtype_expr]; }
-
-#define DEF_TRAITS(classname, name, id)         \
-    ItemTraits classname::traits = { name, id, itf_none, 0.0 }
-
-#define DEF_TRAITSF(classname, name, id, flags)         \
-    ItemTraits classname::traits = { name, id, flags, 0.0 }
-
-#define DEF_TRAITSR(classname, name, id, radius)         \
-    ItemTraits classname::traits = { name, id, 0, radius }
-
-
 namespace enigma {
 
 /* -------------------- Item implementation -------------------- */
@@ -94,9 +59,9 @@
     KillItem(get_pos());
 }
 
-void Item::replace(ItemID id)
+void Item::replace(std::string kind)
 {
-    Item *newitem = MakeItem (id);
+    Item *newitem = MakeItem(kind.c_str());
     transferName(newitem);          // TODO check where transfer of identity is better
     setup_successor(newitem);           // hook for subclasses
     SetItem (get_pos(), newitem);
@@ -137,7 +102,7 @@
 
 void Item::processLight(Direction d) {
     if (get_traits().flags & itf_inflammable) {
-        replace (it_explosion1);
+        replace("it-explosion1");
     } else
         GridObject::processLight(d);
 }
@@ -206,7 +171,7 @@
 /* -------------------- DummyItem -------------------- */
     class Dummyitem : public Item {
         CLONEOBJ(Dummyitem);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_pickup(Actor *) {
             int code = getAttr("code");
@@ -219,32 +184,32 @@
     public:
         Dummyitem() {}
     };
-    DEF_TRAITSF(Dummyitem, "it-dummy", it_dummy, itf_fireproof);
+    DEF_ITEMTRAITSF(Dummyitem, "it-dummy", it_dummy, itf_fireproof);
 
 /* -------------------- Cherry -------------------- */
 
     class Cherry : public Item {
         CLONEOBJ(Cherry);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
         ItemAction activate(Actor *actor, GridPos) {
             SendMessage (actor, "invisibility");
             return ITEM_KILL;
         }
 
         void on_stonehit(Stone *) {
-            replace(it_squashed);
+            replace("it-squashed");
         }
     public:
         Cherry() {
         }
     };
-    DEF_TRAITS(Cherry, "it-cherry", it_cherry);
+    DEF_ITEMTRAITS(Cherry, "it-cherry", it_cherry);
 
 /* -------------------- Squashed Cherry -------------------- */
 
     class Squashed : public Item {
         CLONEOBJ(Squashed);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message (const Message &m) {
             if (enigma_server::GameCompatibility == GAMET_ENIGMA) {
@@ -261,14 +226,14 @@
         Squashed() {
         }
     };
-    DEF_TRAITSF(Squashed, "it-squashed", it_squashed, itf_static);
+    DEF_ITEMTRAITSF(Squashed, "it-squashed", it_squashed, itf_static);
 
 
 /* -------------------- Weight -------------------- */
 
     class Weight : public Item {
         CLONEOBJ(Weight);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_pickup(Actor *a) {
            ActorInfo *ai = a->get_actorinfo();
@@ -280,13 +245,13 @@
     public:
 	Weight() {}
     };
-    DEF_TRAITS(Weight, "it-weight", it_weight);
+    DEF_ITEMTRAITS(Weight, "it-weight", it_weight);
 
 /* -------------------- Pin -------------------- */
 
     class Pin : public Item {
         CLONEOBJ(Pin);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_pickup(Actor *a) {
             a->set_spikes(true);
@@ -297,33 +262,33 @@
     public:
         Pin() {}
     };
-    DEF_TRAITS(Pin, "it-pin", it_pin);
+    DEF_ITEMTRAITS(Pin, "it-pin", it_pin);
 
 /* -------------------- Banana -------------------- */
 
     class Banana : public Item {
         CLONEOBJ(Banana);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void processLight(Direction d) {
             sound_event ("itemtransform");
-            replace(it_cherry);
+            replace("it-cherry");
         }
 
         void on_stonehit(Stone *) {
-            replace(it_squashed);
+            replace("it-squashed");
         }
 
     public:
         Banana() {}
     };
-    DEF_TRAITS(Banana, "it-banana", it_banana);
+    DEF_ITEMTRAITS(Banana, "it-banana", it_banana);
 
 /* -------------------- Sword -------------------- */
 
     class Sword : public Item, public TimeHandler {
         CLONEOBJ(Sword);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         Sword(bool isNew);
@@ -373,13 +338,13 @@
             activatePhoto();        
     }
     
-    DEF_TRAITS(Sword, "it_sword", it_sword);
+    DEF_ITEMTRAITS(Sword, "it_sword", it_sword);
 
 /* -------------------- Hammer -------------------- */
 
     class Hammer : public Item, public TimeHandler {
         CLONEOBJ(Hammer);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         Hammer(bool isNew);
@@ -428,14 +393,14 @@
             activatePhoto();        
     }
     
-    DEF_TRAITS(Hammer, "it_hammer", it_hammer);
+    DEF_ITEMTRAITS(Hammer, "it_hammer", it_hammer);
 
 
 /* -------------------- ExtraLife -------------------- */
 
     class ExtraLife : public Item, public TimeHandler {
         CLONEOBJ(ExtraLife);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
         
     public:
         ExtraLife(bool isNew);
@@ -486,7 +451,7 @@
     void ExtraLife::lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs) {
         if (added_dirs(oldDirs, newDirs) != 0) {
             sound_event ("itemtransform");
-            replace(it_glasses);
+            replace("it_glasses");
         }
     }
     
@@ -499,13 +464,13 @@
             activatePhoto();        
     }
 
-    DEF_TRAITS(ExtraLife, "it_extralife", it_extralife);
+    DEF_ITEMTRAITS(ExtraLife, "it_extralife", it_extralife);
 
 /* -------------------- Umbrella -------------------- */
 
     class Umbrella : public Item, public TimeHandler {
         CLONEOBJ(Umbrella);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         Umbrella(bool isNew);
@@ -548,7 +513,7 @@
     void Umbrella::lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs) {
         if (added_dirs(oldDirs, newDirs) != 0 && server::GameCompatibility != enigma::GAMET_PEROXYD) {
             sound_event ("itemtransform");
-            replace(it_explosion1);
+            replace("it-explosion1");
         }
     }
     
@@ -562,14 +527,14 @@
             activatePhoto();        
     }
 
-    DEF_TRAITS (Umbrella, "it_umbrella", it_umbrella);
+    DEF_ITEMTRAITS (Umbrella, "it_umbrella", it_umbrella);
 
 /* -------------------- Spoon -------------------- */
 namespace
 {
     class Spoon : public Item {
         CLONEOBJ(Spoon);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         ItemAction activate(Actor *a, GridPos) {
             SendMessage(a, "suicide");
@@ -579,7 +544,7 @@
         Spoon()
         {}
     };
-    DEF_TRAITS(Spoon, "it-spoon", it_spoon);
+    DEF_ITEMTRAITS(Spoon, "it-spoon", it_spoon);
 }
 
 /* -------------------- Booze -------------------- */
@@ -588,7 +553,7 @@
 {
     class Booze : public Item {
 	CLONEOBJ(Booze);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
 	Booze() {
 	}
@@ -599,10 +564,10 @@
 	}
     void on_stonehit(Stone *) {
         sound_event("shatter");
-        replace(it_booze_broken);
+        replace("it-booze-broken");
     }
     };
-    DEF_TRAITS(Booze, "it-booze", it_booze);
+    DEF_ITEMTRAITS(Booze, "it-booze", it_booze);
 }
 
 /* -------------------- Broken Booze -------------------- */
@@ -610,7 +575,7 @@
 {
     class BrokenBooze : public Item {
         CLONEOBJ(BrokenBooze);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         bool actor_hit(Actor *a) {
             ActorInfo &ai = * a->get_actorinfo();
@@ -634,14 +599,14 @@
         BrokenBooze() {}
     };
 
-    DEF_TRAITSF(BrokenBooze, "it-booze-broken", it_booze_broken, itf_static | itf_indestructible);
+    DEF_ITEMTRAITSF(BrokenBooze, "it-booze-broken", it_booze_broken, itf_static | itf_indestructible);
 }
 
 /* -------------------- Brush -------------------- */
     /* Can "paint" some stones and remove ash. */
     class Brush : public Item {
         CLONEOBJ(Brush);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         Brush();
@@ -659,7 +624,7 @@
         return ITEM_DROP;
     }
     
-    DEF_TRAITSF(Brush, "it_brush", it_brush, itf_inflammable);
+    DEF_ITEMTRAITSF(Brush, "it_brush", it_brush, itf_inflammable);
 
 
 
@@ -669,7 +634,7 @@
 
     class Coin : public Item {
         CLONEOBJ(Coin);
-        DECL_TRAITS_ARRAY(3, state);
+        DECL_ITEMTRAITS_ARRAY(3, state);
 
     public:
         Coin(int type);
@@ -784,19 +749,19 @@
 
     class Hill : public HillHollow {
         CLONEOBJ(Hill);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Hill() : HillHollow(HILL) {}
     };
-    DEF_TRAITSF(Hill, "it-hill", it_hill, itf_static | itf_fireproof);
+    DEF_ITEMTRAITSF(Hill, "it-hill", it_hill, itf_static | itf_fireproof);
 
     class TinyHill : public HillHollow {
         CLONEOBJ(TinyHill);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         TinyHill() : HillHollow(TINYHILL) {}
     };
-    DEF_TRAITSF(TinyHill, "it-tinyhill", it_tinyhill, itf_static | itf_fireproof);
+    DEF_ITEMTRAITSF(TinyHill, "it-tinyhill", it_tinyhill, itf_static | itf_fireproof);
 
     /*
      * Hollows are special in that they can end the current level
@@ -804,7 +769,7 @@
      */
     class Hollow : public HillHollow {
         CLONEOBJ(Hollow);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Hollow(Type t = HOLLOW);
         // Object interface.
@@ -825,16 +790,16 @@
         Actor *whiteball;   // The small white ball that is currently being tracked
         double enter_time;  // ... when did it enter the hollow?
     };
-    DEF_TRAITSF(Hollow, "it-hollow", it_hollow, itf_static | itf_fireproof);
+    DEF_ITEMTRAITSF(Hollow, "it-hollow", it_hollow, itf_static | itf_fireproof);
 
 
     class TinyHollow : public Hollow {
         CLONEOBJ(TinyHollow);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         TinyHollow() : Hollow(TINYHOLLOW) {}
     };
-    DEF_TRAITSF(TinyHollow, "it-tinyhollow", it_tinyhollow, itf_static | itf_fireproof);
+    DEF_ITEMTRAITSF(TinyHollow, "it-tinyhollow", it_tinyhollow, itf_static | itf_fireproof);
 
 }
 
@@ -910,8 +875,8 @@
 
 void HillHollow::transmute(Type newtype)
 {
-    static ItemID newmodel[] = { it_hill, it_hollow, it_tinyhill, it_tinyhollow };
-    replace (newmodel[newtype]);
+    static char *newmodel[] = { "it-hill", "it-hollow", "it-tinyhill", "it_tinyhollow" };
+    replace(newmodel[newtype]);
 }
 
 
@@ -1022,7 +987,7 @@
 {
     class Spring1 : public Item {
         CLONEOBJ(Spring1);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Spring1() {}
     private:
@@ -1032,11 +997,11 @@
             return ITEM_KEEP;
         }
     };
-    DEF_TRAITS(Spring1, "it-spring1", it_spring1);
+    DEF_ITEMTRAITS(Spring1, "it-spring1", it_spring1);
 
     class Spring2 : public Item {
         CLONEOBJ(Spring2);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Spring2() {}
     private:
@@ -1052,7 +1017,7 @@
             }
         }
     };
-    DEF_TRAITS(Spring2, "it-spring2", it_spring2);
+    DEF_ITEMTRAITS(Spring2, "it-spring2", it_spring2);
 }
 
 
@@ -1061,7 +1026,7 @@
 {
     class Springboard : public Item {
         CLONEOBJ(Springboard);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         bool actor_hit(Actor *a) {
             const double ITEM_RADIUS = 0.3;
@@ -1080,7 +1045,7 @@
     public:
         Springboard() {}
     };
-    DEF_TRAITSF(Springboard, "it-springboard", it_springboard, itf_static);
+    DEF_ITEMTRAITSF(Springboard, "it-springboard", it_springboard, itf_static);
 }
 
 
@@ -1093,7 +1058,7 @@
 {
     class Brake : public Item {
         CLONEOBJ(Brake);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Brake() {}
 
@@ -1119,7 +1084,7 @@
             return ITEM_DROP;
         }
     };
-    DEF_TRAITS(Brake, "it-brake", it_brake);
+    DEF_ITEMTRAITS(Brake, "it-brake", it_brake);
 }
 
 
@@ -1142,7 +1107,7 @@
     // Explode but do nothing else.
     class Explosion1 : public Explosion {
         CLONEOBJ(Explosion1);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void animcb() {
             kill();
@@ -1151,18 +1116,18 @@
         Explosion1()
         {}
     };
-    DEF_TRAITSF(Explosion1, "it-explosion1", it_explosion1, itf_static |
+    DEF_ITEMTRAITSF(Explosion1, "it-explosion1", it_explosion1, itf_static |
                 itf_animation | itf_indestructible | itf_norespawn | itf_fireproof);
 
     // Explode and leave a hole in the ground.
     class Explosion2 : public Explosion {
         CLONEOBJ(Explosion2);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void animcb() {
             if (Floor *fl = GetFloor(get_pos()))
                 if (fl->is_destructible())
-                    replace(it_hollow);
+                    replace("it-hollow");
                 else
                     kill();
         }
@@ -1170,19 +1135,19 @@
         Explosion2()
         {}
     };
-    DEF_TRAITSF(Explosion2, "it-explosion2", it_explosion2, itf_static |
+    DEF_ITEMTRAITSF(Explosion2, "it-explosion2", it_explosion2, itf_static |
                 itf_animation | itf_indestructible | itf_norespawn | itf_fireproof);
 
 
     // Explode and shatter the floor.
     class Explosion3 : public Explosion {
         CLONEOBJ(Explosion3);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void animcb() {
             if (Floor *fl = GetFloor(get_pos()))
                 if (fl->is_destructible())
-                    replace(it_debris);
+                    replace("it-debris");
                 else
                     kill();
         }
@@ -1190,7 +1155,7 @@
         Explosion3()
         {}
     };
-    DEF_TRAITSF(Explosion3, "it-explosion3", it_explosion3, itf_static |
+    DEF_ITEMTRAITSF(Explosion3, "it-explosion3", it_explosion3, itf_static |
                 itf_animation | itf_indestructible | itf_norespawn | itf_fireproof);
 }
 
@@ -1202,7 +1167,7 @@
 {
     class Document : public Item {
         CLONEOBJ(Document);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         ItemAction activate(Actor *, GridPos)
         {
@@ -1231,7 +1196,7 @@
             }
 
             if (explode)
-                replace (it_explosion1);
+                replace("it-explosion1");
             return Value();
         }
     public:
@@ -1239,7 +1204,7 @@
             setAttr("text", "");
         }
     };
-    DEF_TRAITSF(Document, "it-document", it_document, itf_inflammable);
+    DEF_ITEMTRAITSF(Document, "it-document", it_document, itf_inflammable);
 }
 
 
@@ -1248,7 +1213,7 @@
 {
     class Dynamite : public Item {
         CLONEOBJ(Dynamite);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Dynamite() : state(IDLE) {}
     private:
@@ -1279,12 +1244,12 @@
                 // In space, an it-dynamite explodes to an it-sherd:
                 // HOT FIX
                 //replace(it_sherd);
-                replace(it_hollow);
+                replace("it-hollow");
             } else if (model == "fl-ice") {
                 // In ice, an it-dynamite explodes to an it-crack2:
-                replace(it_crack2);
+                replace("it-crack2");
             } else {
-                SetItem(p, it_explosion2);
+                SetItem(p, MakeItem("it-explosion2"));
             }
         }
 
@@ -1313,7 +1278,7 @@
             return Item::actor_hit(a);
         }
     };
-    DEF_TRAITSF(Dynamite, "it-dynamite", it_dynamite,
+    DEF_ITEMTRAITSF(Dynamite, "it-dynamite", it_dynamite,
                 itf_indestructible | itf_fireproof);
 }
 
@@ -1403,7 +1368,7 @@
 {
     class BlackBomb : public BombBase  {
         CLONEOBJ(BlackBomb);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         BlackBomb (bool burning=false)
         : BombBase(burning)
@@ -1414,19 +1379,19 @@
             GridPos p = get_pos();
             sound_event ("blackbomb");
             SendExplosionEffect(p, EXPLOSION_BLACKBOMB);
-            replace (it_explosion3);
+            replace("it-explosion3");
         }
     };
-    DEF_TRAITSF(BlackBomb, "it-blackbomb", it_blackbomb,
+    DEF_ITEMTRAITSF(BlackBomb, "it-blackbomb", it_blackbomb,
                 itf_static | itf_indestructible | itf_fireproof);
 
     class BlackBombBurning : public BlackBomb {
         CLONEOBJ(BlackBombBurning);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         BlackBombBurning() : BlackBomb(true) {}
     };
-    DEF_TRAITSF(BlackBombBurning, "it-blackbomb_burning",
+    DEF_ITEMTRAITSF(BlackBombBurning, "it-blackbomb_burning",
                 it_blackbomb_burning,
                 itf_static | itf_indestructible | itf_norespawn | itf_fireproof);
 }
@@ -1441,13 +1406,13 @@
 {
     class WhiteBomb : public BombBase  {
         CLONEOBJ(WhiteBomb);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         const char *burn_anim() const { return "it-whitebomb-burning"; }
         void explode() {
             GridPos p = get_pos();
             sound_event ("whitebomb");
-            replace (it_explosion3);
+            replace("it-explosion3");
             SendExplosionEffect(p, EXPLOSION_WHITEBOMB);
         }
 
@@ -1455,7 +1420,7 @@
         WhiteBomb()
         {}
     };
-    DEF_TRAITSF(WhiteBomb, "it-whitebomb", it_whitebomb,
+    DEF_ITEMTRAITSF(WhiteBomb, "it-whitebomb", it_whitebomb,
                 itf_static | itf_indestructible | itf_fireproof);
 }
 
@@ -1478,7 +1443,7 @@
      */
     class Trigger : public Item {
         CLONEOBJ(Trigger);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Trigger();
         
@@ -1504,7 +1469,7 @@
 
     };
 
-    DEF_TRAITSF(Trigger, "it_trigger", it_trigger, itf_static | itf_indestructible);
+    DEF_ITEMTRAITSF(Trigger, "it_trigger", it_trigger, itf_static | itf_indestructible);
     
     Trigger::Trigger() {
         setAttr("invisible", false);
@@ -1668,7 +1633,7 @@
 
     class SeedWood : public Seed {
         CLONEOBJ(SeedWood);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         const char* get_stone_name() {
             return "st-wood-growing";
@@ -1678,11 +1643,11 @@
         SeedWood()
         {}
     };
-    DEF_TRAITSR(SeedWood, "it-seed", it_seed, 0.2f);
+    DEF_ITEMTRAITSR(SeedWood, "it-seed", it_seed, 0.2f);
 
     class SeedNowood : public Seed {
         CLONEOBJ(SeedNowood);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         const char* get_stone_name() {
             return "st-greenbrown-growing";
@@ -1691,11 +1656,11 @@
         SeedNowood()
         {}
     };
-    DEF_TRAITSR(SeedNowood, "it-seed_nowood", it_seed_nowood, 0.2f);
+    DEF_ITEMTRAITSR(SeedNowood, "it-seed_nowood", it_seed_nowood, 0.2f);
 
     class SeedVolcano : public Seed {
         CLONEOBJ(SeedVolcano);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         const char* get_stone_name() {
             return "st-volcano-growing";
@@ -1704,7 +1669,7 @@
         SeedVolcano()
         {}
     };
-    DEF_TRAITSR(SeedVolcano, "it-seed_volcano", it_seed_volcano, 0.2f);
+    DEF_ITEMTRAITSR(SeedVolcano, "it-seed_volcano", it_seed_volcano, 0.2f);
 }
 
 
@@ -1720,7 +1685,7 @@
 {
     class ShogunDot : public Item {
         CLONEOBJ(ShogunDot);
-        DECL_TRAITS_ARRAY(3, subtype);
+        DECL_ITEMTRAITS_ARRAY(3, subtype);
     public:
         static void setup() {
             RegisterItem (new ShogunDot(SMALL));
@@ -1796,7 +1761,7 @@
        
     public:
         CLONEOBJ(Magnet);
-        DECL_TRAITS_ARRAY(2, state);
+        DECL_ITEMTRAITS_ARRAY(2, state);
 
         Magnet(bool isOn);
         
@@ -1919,7 +1884,7 @@
         
     public:
         CLONEOBJ(WormHole);
-        DECL_TRAITS_ARRAY(2, state & 1);
+        DECL_ITEMTRAITS_ARRAY(2, state & 1);
         
         WormHole(bool isOn);
         
@@ -2107,7 +2072,7 @@
 
     public:
         CLONEOBJ(Vortex);
-        DECL_TRAITS_ARRAY(2, is_open());
+        DECL_ITEMTRAITS_ARRAY(2, is_open());
         
         Vortex(bool opened);
         virtual ~Vortex();
@@ -2387,7 +2352,7 @@
 {
     class YinYang : public Item {
         CLONEOBJ(YinYang);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         YinYang()
         {}
@@ -2407,7 +2372,7 @@
             return ITEM_KEEP;
         }
     };
-    DEF_TRAITS(YinYang, "it-yinyang", it_yinyang);
+    DEF_ITEMTRAITS(YinYang, "it-yinyang", it_yinyang);
 }
 
 
@@ -2416,7 +2381,7 @@
 {
     class Spade : public Item {
         CLONEOBJ(Spade);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         ItemAction activate(Actor *, GridPos p) {
             if (Item *it=GetItem(p)) {
@@ -2429,7 +2394,7 @@
     public:
         Spade() {}
     };
-    DEF_TRAITS(Spade, "it-spade", it_spade);
+    DEF_ITEMTRAITS(Spade, "it-spade", it_spade);
 }
 
 
@@ -2439,12 +2404,12 @@
     class Pipe : public Item {
         CLONEOBJ(Pipe);
         int subtype;
-        DECL_TRAITS_ARRAY(10, subtype);
+        DECL_ITEMTRAITS_ARRAY(10, subtype);
 
         Pipe(int stype) : subtype(stype) {}
         virtual Value message(const Message &m) {
             if (m.message == "_explosion") {
-                replace (it_explosion1);
+                replace("it-explosion1");
                 return Value();
             }
             return Item::message(m);
@@ -2476,7 +2441,7 @@
 {
     class Puller : public Item {
         CLONEOBJ (Puller);
-        DECL_TRAITS_ARRAY(4, get_orientation());
+        DECL_ITEMTRAITS_ARRAY(4, get_orientation());
 
         bool active;
         Direction m_direction;
@@ -2510,7 +2475,7 @@
             }
             
             sound_event ("dynamite");
-            replace (it_explosion1);
+            replace("it-explosion1");
         }
 
 	Direction get_orientation() const {
@@ -2548,7 +2513,7 @@
 {
     class Crack : public Item {
         CLONEOBJ(Crack);
-        DECL_TRAITS_ARRAY(4, get_type());
+        DECL_ITEMTRAITS_ARRAY(4, get_type());
 
     public:
         static void setup() {
@@ -2606,7 +2571,7 @@
                     if (Item *it = GetItem(p))
                         SendMessage (it, "crack");
                     else if (do_crack())
-                        SetItem(p, it_crack0);
+                        SetItem(p, MakeItem("it-crack0"));
                 }
             }
         }
@@ -2640,7 +2605,7 @@
                 }
             } else if (m.message == "heat") {
                 sound_event ("crack");
-                replace(it_debris);
+                replace("it-debris");
                 return true;
             }
             return Item::message(m);
@@ -2668,7 +2633,7 @@
 {
     class Debris : public Item {
         CLONEOBJ(Debris);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         bool actor_hit(Actor *a) {
             SendMessage(a, "fall");
@@ -2682,7 +2647,7 @@
     public:
         Debris() {}
     };
-    DEF_TRAITSF(Debris, "it-debris", it_debris,
+    DEF_ITEMTRAITSF(Debris, "it-debris", it_debris,
                 itf_static | itf_animation | itf_indestructible | itf_fireproof);
 }
 
@@ -2696,7 +2661,7 @@
 
     class Burnable : public Item {
         CLONEOBJ(Burnable);
-        DECL_TRAITS_ARRAY(6, state);
+        DECL_ITEMTRAITS_ARRAY(6, state);
     public:
         static void setup() {
             RegisterItem (new Burnable(IDLE));
@@ -2775,7 +2740,7 @@
     /*! This items can extinguish burning floor. */
     class Extinguisher : public Item {
         CLONEOBJ(Extinguisher);
-        DECL_TRAITS_ARRAY(3, get_load());
+        DECL_ITEMTRAITS_ARRAY(3, get_load());
     public:
         static void setup() {
             RegisterItem (new Extinguisher(0));
@@ -2795,7 +2760,7 @@
             if (Item *it = GetItem(p)) {
                 SendMessage (it, "extinguish");
             } else {
-                SetItem (p, it_burnable_fireproof);
+                SetItem (p, MakeItem("it-burnable-fireproof"));
             }
         }
 
@@ -2849,7 +2814,7 @@
       white marble. */
     class FlagBlack : public Item {
         CLONEOBJ(FlagBlack);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_drop(Actor *) {
             player::SetRespawnPositions(get_pos(), true);
@@ -2861,11 +2826,11 @@
     public:
         FlagBlack() {}
     };
-    DEF_TRAITS(FlagBlack, "it-flagblack", it_flagblack);
+    DEF_ITEMTRAITS(FlagBlack, "it-flagblack", it_flagblack);
 
     class FlagWhite : public Item {
         CLONEOBJ(FlagWhite);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_drop(Actor *) {
             player::SetRespawnPositions(get_pos(), false);
@@ -2879,245 +2844,16 @@
         {}
     };
 
-    DEF_TRAITS(FlagWhite, "it-flagwhite", it_flagwhite);
+    DEF_ITEMTRAITS(FlagWhite, "it-flagwhite", it_flagwhite);
 }
 
 
-
-/* -------------------- Blocker item -------------------- */
-
-
-    /**
-     * A door like object that can be opened and closed by a BoulderStone. This item
-     * represents the open state of the door. The closed state is represented by a
-     * BlockerStone.<p>
-     * If a BoulderStone moves over a BlockerItem the BlockerItem starts growing and
-     * replaces itself by a BlockerStone. But other Stones can be pushed over a
-     * BlockerItem without causing its transformation. <p>
-     * It fully supports the door messages "open", "close", "toggle", "signal" and
-     * attribute "state". If the item is blocked by a stone the messages will not
-     * cause an instant growing. But the message will be remembered in the internal
-     * state and the item acts as soon as the stone moves away.<p>
-     * An initial BlockerItem with a BoulderStone on top will grow as soon as it moves
-     * away. An initial it_blocker_new with a BloulderStone on top will not grow when
-     * the stone moves away.<p>
-     * Note that this is the only door object that allows a stone to be pushed through.
-     * A BlockerItem can be killed by a BrakeItem being dropped.
-     */
-    class BlockerItem : public Item, public TimeHandler {
-        DECL_TRAITS;
-    private:
-        enum iState {
-            IDLE,       ///< neutral state
-            NEW,        ///< a new BlockerItem that replaced a recently shrinked BlockerStone -
-                        ///< a BoulderStone is awaited, but it has to arrive in time 
-            LOCKED,     ///< a stone covers the BlockerItem and locked it, so it will not grow
-                        ///< when the stone moves away. This is the state that a BoulderStone causes
-                        ///< on its first visit immediatly after shrinking the BlockerStone
-            UNLOCKED    ///< a stone covers the BlockerItem and unlocked it, so it will grow
-                        ///< when the stone moves away. This is the state that a BoulderStone causes
-                        ///< on its second visit when moving onto an idle BlockerItem. The blocker
-                        ///< will grow when the stones moves away
-        };
-
-    public:
-        BlockerItem(bool shrinked_recently);
-        ~BlockerItem();
-
-        // Object interface
-        virtual BlockerItem *clone();
-        virtual void dispose();
-        virtual Value message(const Message &m);
-
-        // StateObject interface
-        virtual void toggleState();
-        virtual int externalState() const;
-        virtual void setState(int extState);
-
-        // GridObject interface
-        virtual void on_creation(GridPos p);
-        virtual void on_removal(GridPos p);
-        virtual void init_model();
-        virtual void actor_leave(Actor *a);
-
-        // Item interface
-        virtual void stone_change(Stone *st);
-
-        // TimeHandler interface
-        virtual void alarm();
-    
-    private:
-        void setIState(iState newState);
-        void grow();
-    };
-    
-    DEF_TRAITSF(BlockerItem, "it_blocker", it_blocker, itf_static);
-
-
-    BlockerItem::BlockerItem(bool shrinked_recently) {
-        state = shrinked_recently ? NEW : IDLE;
-    }
-
-    BlockerItem::~BlockerItem() {
-        GameTimer.remove_alarm (this);
-    }
-
-    BlockerItem * BlockerItem::clone() {
-        BlockerItem * dup = new BlockerItem(*this);
-        NameObject(dup, "$BlockerItem#");  // auto name object to avoid problems with object values
-        return dup;
-    }
-    
-    void BlockerItem::dispose() {
-        delete this;
-    }
-
-    Value BlockerItem::message(const Message &m) {
-        if (m.message == "_init") { 
-            if (Stone *st = GetStone(get_pos())) {
-                if (st->is_kind("st_boulder"))
-                    if (state == IDLE && server::GameCompatibility != GAMET_PEROXYD)
-                        setIState(UNLOCKED);
-                    else if (state == NEW || server::GameCompatibility != GAMET_PEROXYD)
-                        setIState(LOCKED);
-            }
-            return Item::message(m);    // pass on init message
-        } else if (m.message =="_performaction") {
-            performAction(true);
-            return Value();
-        }
-        return Item::message(m);
-    }
-    
-    void BlockerItem::toggleState() {
-        if (state == UNLOCKED) {  // revoke pending grow/close
-            setIState(LOCKED);
-        }
-        else {
-            setState(0);  // close
-        }
-    }
-    
-    int BlockerItem::externalState() const {
-        return 1;   // always open -- st_blocker is closed
-    }
-    
-    void BlockerItem::setState(int extState) {
-        if (extState == 1) {         // open (shrink)
-            if (state == UNLOCKED)   //   revoke pending grow/close
-                setIState(LOCKED);
-        }
-        else {                       // close (grow)
-            switch (state) {
-                case LOCKED:
-                    setIState(UNLOCKED);  // close when stone is removed
-                    break;
-                case UNLOCKED:
-                    break;                // will close anyway when stone is removed
-                case IDLE:
-                case NEW:
-                    grow();                    
-                    break;
-            }
-        }
-    }
-    
-    void BlockerItem::on_creation(GridPos p) {
-        if (state == NEW) {
-            GameTimer.set_alarm(this, 0.5, false);
-        }
-        Item::on_creation(p);
-    }
-
-    void BlockerItem::on_removal(GridPos p) {
-        setIState(IDLE);
-        Item::on_removal(p);
-    }
-
-    void BlockerItem::init_model() {
-        set_model("it-blocker");
-    }
-    
-    void BlockerItem::actor_leave(Actor *a) {
-        if (Value v = getAttr("autoclose")) {
-            if (v.to_bool()) {
-                setState(0);     // close
-            }
-        }
-    }
-    
-    void BlockerItem::stone_change(Stone *st) {
-        if (st != NULL) {
-            if (st->is_kind("st_boulder")) { // boulder arrived
-                switch (state) {
-                    case IDLE:
-                        setIState(UNLOCKED);  // will grow when boulder moves away
-                        break;
-                    case NEW:
-                        setIState(LOCKED);    // will not grow when boulder moves away
-                        break;
-                    case UNLOCKED:
-                    case LOCKED:
-                        // two BoulderStones running directly next to each other
-                        // let second pass as well (correct? siegfried says yes)
-                        // note: all stone moves are handled in a timestep before
-                        //   the world informs the items about stone changes
-                        break;
-                }
-            }
-            else { // any other stone
-                setIState(LOCKED);
-            }
-        }
-        else {              // stone disappeared
-            switch (state) {
-                case LOCKED:
-                    setIState(IDLE);
-                    break;
-                case UNLOCKED:
-                    grow();
-                    break;
-                case IDLE:
-                case NEW:
-                    // no action
-                    break;
-            }
-        }
-    }
-
-    void BlockerItem::alarm() {
-        if (state == NEW) { // BoulderStone did not arrive in time
-            setIState(IDLE);
-        }
-    }
-
-    void BlockerItem::setIState(iState newState) {
-        if (state != newState) {
-            if (state == NEW)
-                GameTimer.remove_alarm(this);
-            else if (newState == NEW)
-                GameTimer.set_alarm(this, 0.5, false);
-            state = newState;
-        }
-    }
-    
-    void BlockerItem::grow() {
-        Stone *st = MakeStone("st_blocker_new");
-        SetStone(get_pos(), st);
-        transferIdentity(st);
-        if (Value v = getAttr("autoclose"))
-            st->setAttr("autoclose", v); 
-        SendMessage(st, "_performaction");
-        kill();
-    }
-
-
 /* -------------------- Ring -------------------- */
 namespace
 {
     class Ring : public Item {
         CLONEOBJ(Ring);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     public:
         Ring() {}
 
@@ -3131,7 +2867,7 @@
             return ITEM_DROP;
         }
     };
-    DEF_TRAITS(Ring, "it-ring", it_ring);
+    DEF_ITEMTRAITS(Ring, "it-ring", it_ring);
 }
 
 //----------------------------------------
@@ -3146,7 +2882,7 @@
 {
     class OxydBridge : public Item {
         CLONEOBJ(OxydBridge);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message(const Message &m) {
             if (m.message == "signal") {
@@ -3163,12 +2899,12 @@
     public:
         OxydBridge() {}
     };
-    DEF_TRAITSF(OxydBridge, "it-bridge-oxyd", it_bridge_oxyd,
+    DEF_ITEMTRAITSF(OxydBridge, "it-bridge-oxyd", it_bridge_oxyd,
                 itf_static | itf_indestructible | itf_invisible | itf_fireproof);
 
     class OxydBridgeActive : public OxydBridge {
         CLONEOBJ(OxydBridgeActive);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_creation (GridPos p) {
             Floor *floor = GetFloor (p);
@@ -3177,7 +2913,7 @@
     public:
         OxydBridgeActive() {}
     };
-    DEF_TRAITSF(OxydBridgeActive, "it-bridge-oxyd_active", it_bridge_oxyd_active,
+    DEF_ITEMTRAITSF(OxydBridgeActive, "it-bridge-oxyd_active", it_bridge_oxyd_active,
                 itf_static | itf_indestructible | itf_invisible | itf_fireproof);
 }
 
@@ -3189,7 +2925,7 @@
    activated only once. */
     class Sensor : public Item {
         CLONEOBJ(Sensor);
-        DECL_TRAITS_ARRAY(4, traitsIdx());
+        DECL_ITEMTRAITS_ARRAY(4, traitsIdx());
     private:
         enum ObjectPrivatFlagsBits {
             OBJBIT_ISFILTER  =   1<<24    ///< sensor that filters signals, too
@@ -3263,7 +2999,7 @@
     }
     
     void Sensor::init_model() {
-        if (getAttr("invisible").to_bool() && ((server::GlassesVisibility & 8) == 0))
+        if (getAttr("invisible").to_bool() && ((server::GlassesVisibility & Glasses::SENSOR) == 0))
             set_model("invisible");
         else
             set_model("it_sensor");
@@ -3312,13 +3048,13 @@
 {
     class EasyKillStone : public Item {
         CLONEOBJ(EasyKillStone);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message(const Message &m);
     public:
         EasyKillStone() {}
     };
-    DEF_TRAITSF(EasyKillStone, "it-easykillstone",
+    DEF_ITEMTRAITSF(EasyKillStone, "it-easykillstone",
                 it_easykillstone, itf_invisible | itf_fireproof);
 }
 
@@ -3350,7 +3086,7 @@
 {
     class EasyKeepStone : public Item {
         CLONEOBJ(EasyKeepStone);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message(const Message &m) {
             if (m.message == "_init") {
@@ -3366,7 +3102,7 @@
     public:
         EasyKeepStone() {}
     };
-    DEF_TRAITSF(EasyKeepStone, "it-easykeepstone", it_easykeepstone,
+    DEF_ITEMTRAITSF(EasyKeepStone, "it-easykeepstone", it_easykeepstone,
                 itf_invisible | itf_fireproof);
 }
 
@@ -3375,7 +3111,7 @@
 {
     class OnePKillStone : public Item {
         CLONEOBJ (OnePKillStone);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message (const Message &m) {
             if (m.message == "_init") {
@@ -3389,12 +3125,12 @@
     public:
         OnePKillStone () {}
     };
-    DEF_TRAITSF(OnePKillStone, "it-1pkillstone", it_1pkillstone,
+    DEF_ITEMTRAITSF(OnePKillStone, "it-1pkillstone", it_1pkillstone,
                 itf_invisible | itf_fireproof);
 
     class TwoPKillStone : public Item {
         CLONEOBJ (TwoPKillStone);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         virtual Value message (const Message &m) {
             if (m.message == "_init") {
@@ -3408,124 +3144,14 @@
     public:
         TwoPKillStone () {}
     };
-    DEF_TRAITSF(TwoPKillStone, "it-2pkillstone", it_2pkillstone,
+    DEF_ITEMTRAITSF(TwoPKillStone, "it-2pkillstone", it_2pkillstone,
                 itf_invisible | itf_fireproof);
 }
 
-
-/* -------------------- Glasses -------------------- */
-    class Glasses : public Item {
-        CLONEOBJ(Glasses);
-        DECL_TRAITS_ARRAY(2, traitsIdx());
-
-    public:
-        enum Spot {
-            NOTHING         =  0,   // broken glasses
-            DEATH           =  1,
-            HOLLOW          =  2,
-            ACTORIMPULSE    =  4,
-            SENSOR          =  8,
-            LIGHTPASSENGER  = 16,
-            TRAP            = 32,
-            MAX             = 63
-        };
-        
-        static void updateGlasses();
-        static void setup();
-                
-        Glasses(int initState);
-        
-        // StateObject interface
-        virtual int maxState() const;
-        virtual void toggleState();
-        virtual void setState(int extState);
-        
-        // GridObject interface
-        virtual void init_model();
-        
-        // Items interface
-        virtual void on_drop(Actor *a);
-        virtual void on_pickup(Actor *a);
-        virtual void on_stonehit(Stone *st);
-        
-    private:
-        int traitsIdx() const;
-    };
-    
-    void Glasses::updateGlasses() {
-        Inventory *ci = player::GetInventory(player::CurrentPlayer());
-        int newVisibility = 0;
-        int i = -1;
-        while ((i = ci->find("it_glasses", i+1)) != -1) {
-            Glasses *gl = dynamic_cast<Glasses *>(ci->get_item(i));
-            newVisibility |= gl->state;
-        }
-        if (newVisibility != server::GlassesVisibility) {
-            server::GlassesVisibility = newVisibility;
-            BroadcastMessage("_glasses", newVisibility, GridLayerBits(GRID_ITEMS_BIT | GRID_STONES_BIT));
-        }
-    }
-    
-    void Glasses::setup() {
-        RegisterItem (new Glasses(0));
-        RegisterItem (new Glasses(DEATH + HOLLOW + LIGHTPASSENGER));
-    }
-    
-    Glasses::Glasses(int initState) {
-        state = initState;
-    }
-    
-    int Glasses::maxState() const {
-        return MAX;
-    }
-    
-    void Glasses::toggleState() {
-        // ignore toggle
-    }
-    
-    void Glasses::setState(int extState) {
-        state = extState;
-        if (isDisplayable()) {
-            init_model();
-        } else {
-            // maybe part of players inventory
-            updateGlasses();
-            player::RedrawInventory();
-        }
-    }
-    
-    void Glasses::init_model() {
-        if (state > 0)
-            set_model("it_glasses");
-        else
-            set_model("it_glasses_broken");
-    }
-    
-    void Glasses::on_drop(Actor *a) {
-        updateGlasses();
-    }
-    void Glasses::on_pickup(Actor *a) {
-        updateGlasses();
-    }
-    void Glasses::on_stonehit(Stone *) {
-        sound_event ("shatter");
-        setState(0);
-    }
-        
-    int Glasses::traitsIdx() const {
-        return state != 0 ? 0 : 1;
-    }
-
-    ItemTraits Glasses::traits[2] = {
-        {"it_glasses",  it_glasses,  itf_none},
-        {"it_glasses_broken",  it_glasses_broken,  itf_none}
-    };
-
-
 /* -------------------- Invisible Trap -------------------- */
     class Trap : public Item {
         CLONEOBJ(Trap);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
     
     public:
         Trap();
@@ -3565,7 +3191,7 @@
     }
     
     void Trap::init_model() {
-        if (state == 0 && ((server::GlassesVisibility & 32) == 0))
+        if (state == 0 && ((server::GlassesVisibility & Glasses::TRAP) == 0))
             set_model("invisible");
         else
             set_model("it_trap");
@@ -3587,13 +3213,13 @@
         return false;
     }
         
-    DEF_TRAITSF(Trap, "it_trap", it_trap, itf_static | itf_fireproof);
+    DEF_ITEMTRAITSF(Trap, "it_trap", it_trap, itf_static | itf_fireproof);
 
 
 /* -------------------- Landmine -------------------- */
     class Landmine : public Item {
         CLONEOBJ(Landmine);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         Landmine();
@@ -3625,16 +3251,16 @@
     
 	void Landmine::explode() {
         sound_event ("landmine");
-        replace(it_explosion2);
+        replace("it-explosion2");
 	}
 
-    DEF_TRAITSF(Landmine, "it_landmine", it_landmine, itf_static);
+    DEF_ITEMTRAITSF(Landmine, "it_landmine", it_landmine, itf_static);
 
 
 /* -------------------- Cross -------------------- */
     class Cross : public Item, public TimeHandler {
         CLONEOBJ(Cross);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         virtual ~Cross();
@@ -3696,7 +3322,7 @@
         performAction(true);
     }
     
-    DEF_TRAITSF(Cross, "it_cross", it_cross, itf_static);
+    DEF_ITEMTRAITSF(Cross, "it_cross", it_cross, itf_static);
 
 
 
@@ -3704,7 +3330,7 @@
 namespace
 {
     class Bag : public Item, public enigma::ItemHolder {
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         enum { BAGSIZE = 13 };
         vector<Item *> m_contents;
@@ -3800,7 +3426,7 @@
             ecl::delete_sequence (m_contents.begin(), m_contents.end());
         }
     };
-    DEF_TRAITS(Bag, "it-bag", it_bag);
+    DEF_ITEMTRAITS(Bag, "it-bag", it_bag);
 }
 
 /* -------------------- pencil -------------------- */
@@ -3808,7 +3434,7 @@
 {
     class Pencil : public Item {
         CLONEOBJ(Pencil);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         ItemAction activate(Actor * a, GridPos p) {
             if (enigma_server::GameCompatibility == GAMET_ENIGMA) {
@@ -3831,9 +3457,9 @@
                 if (model == "fl-abyss" || model == "fl-water" || model == "fl-swamp") {
                     return ITEM_KEEP;
                 } else  if (model == "fl-ice") {
-                    SetItem (p, it_crack1);
+                    SetItem (p, MakeItem("it-crack1"));
                 } else {
-                    SetItem (p, it_cross);
+                    SetItem (p, MakeItem("it-cross"));
                 }
                 return ITEM_KILL;
             }
@@ -3843,13 +3469,13 @@
         Pencil() {}
     };
 
-    DEF_TRAITS(Pencil, "it-pencil", it_pencil);
+    DEF_ITEMTRAITS(Pencil, "it-pencil", it_pencil);
 }
 
 /* -------------------- Death Item  -------------------- */
     class DeathItem : public Item {
         CLONEOBJ(DeathItem);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
         
     public:
         DeathItem();
@@ -3882,12 +3508,12 @@
         return false;
     }
     
-    DEF_TRAITSF(DeathItem, "it_death", it_death, itf_static | itf_indestructible);
+    DEF_ITEMTRAITSF(DeathItem, "it_death", it_death, itf_static | itf_indestructible);
 
 /* -------------------- Strip Items  -------------------- */
     class StripItem : public Item {
         CLONEOBJ(StripItem);
-        DECL_TRAITS_ARRAY(16, traitsIdx());
+        DECL_ITEMTRAITS_ARRAY(16, traitsIdx());
         
     public:
         static void setup();
@@ -4032,23 +3658,23 @@
 
     class SurpriseItem : public Item {
         CLONEOBJ(SurpriseItem);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void on_drop (Actor *) {
-            static ItemID items[] = {
-                it_umbrella,
-                it_spring1,
-                it_dynamite,
-                it_coffee,
-                it_hammer
+            static char *items[] = {
+                "it_umbrella",
+                "it-spring1",
+                "it-dynamite",
+                "it-coffee",
+                "it_hammer"
             };
-            replace (items[enigma::IntegerRand (0, 4)]);
+            replace(items[enigma::IntegerRand (0, 4)]);
         }
     public:
         SurpriseItem() {
         }
     };
-    DEF_TRAITS(SurpriseItem, "it-surprise", it_surprise);
+    DEF_ITEMTRAITS(SurpriseItem, "it-surprise", it_surprise);
 }
 
 /* -------------------- ChangeFloorItem -------------------- */
@@ -4056,7 +3682,7 @@
 {
     class ChangeFloorItem : public Item {
         CLONEOBJ(ChangeFloorItem);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         void exchange_floor (const char *a, const char *b) {
             GridPos p = get_pos();
@@ -4082,7 +3708,7 @@
         ChangeFloorItem() {
         }
     };
-    DEF_TRAITSF(ChangeFloorItem, "it-changefloor", it_changefloor,
+    DEF_ITEMTRAITSF(ChangeFloorItem, "it-changefloor", it_changefloor,
                 itf_static | itf_invisible);
 }
 
@@ -4129,7 +3755,7 @@
 
     class Drop : public Item {
         CLONEOBJ (Drop);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
         ItemAction activate(Actor *a, GridPos)
         {
@@ -4141,7 +3767,7 @@
             if (id == ac_blackball || id == ac_whiteball) {
                 // Kill ALL rubberbands connected with the actor:
                 SendMessage(a, "disconnect");
-                Actor *rotor = MakeActor (ac_rotor);
+                Actor *rotor = MakeActor("ac-rotor");
                 rotor->setAttr("mouseforce", Value (1.0));
                 rotor->setAttr("controllers", Value (iplayer+1));
                 rotor->setAttr("player", Value (iplayer));
@@ -4167,13 +3793,13 @@
     public:
         Drop() {}
     };
-    DEF_TRAITS(Drop, "it-drop", it_drop);
+    DEF_ITEMTRAITS(Drop, "it-drop", it_drop);
 }
 
 /* -------------------- Rubberband Item-------------------- */
     class RubberbandItem : public Item {
         CLONEOBJ(RubberbandItem);
-        DECL_TRAITS;
+        DECL_ITEMTRAITS;
 
     public:
         RubberbandItem();
@@ -4232,7 +3858,7 @@
         return ITEM_KILL;
     }
     
-    DEF_TRAITS(RubberbandItem, "it_rubberband", it_rubberband);
+    DEF_ITEMTRAITS(RubberbandItem, "it_rubberband", it_rubberband);
 
 
 /* -------------------- Functions -------------------- */
@@ -4243,8 +3869,6 @@
     RegisterItem (new Banana);
     RegisterItem (new BlackBomb);
     RegisterItem (new BlackBombBurning);
-    Register ("it_blocker_new", new BlockerItem(true));
-    RegisterItem (new BlockerItem(false));
     RegisterItem (new Booze);
     RegisterItem (new Brake);
     RegisterItem (new BrokenBooze);
@@ -4273,7 +3897,6 @@
     RegisterItem (new FlagBlack);
     RegisterItem (new FlagWhite);
     RegisterItem (new Floppy);
-    Glasses::setup();
     RegisterItem (new Hammer(false));
     Register ("it_hammer_new", new Hammer(true));
     RegisterItem (new Hill);

Modified: trunk/src/items.hh
===================================================================
--- trunk/src/items.hh	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/items.hh	2008-07-29 22:04:16 UTC (rev 1248)
@@ -185,7 +185,7 @@
 
         /* ---------- Public methods ---------- */
         void kill();
-        void replace (ItemID id);
+        void replace(std::string kind);
 
         /* ---------- Virtual functions ---------- */
         const char *get_kind() const;
@@ -277,6 +277,44 @@
 
     void InitItems();
     
+    
+/* --------------------  Item Macros -------------------- */
+
+#define DEF_ITEM(classname, kindname, kindid)   \
+    class classname : public Item {             \
+        CLONEOBJ(classname);                    \
+        DECL_ITEMTRAITS;                            \
+    public:                                     \
+        classname() {}                          \
+    };                                          \
+    DEF_ITEMTRAITS(classname, kindname, kindid)
+
+#define DEF_ITEMF(classname, kindname, kindid, flags)   \
+    class classname : public Item {             \
+        CLONEOBJ(classname);                    \
+        DECL_ITEMTRAITS;                            \
+    public:                                     \
+        classname() {}                          \
+    };                                          \
+    DEF_ITEMTRAITSF(classname, kindname, kindid, flags)
+
+#define DECL_ITEMTRAITS                                             \
+        static ItemTraits traits;                               \
+        const ItemTraits &get_traits() const { return traits; }
+
+#define DECL_ITEMTRAITS_ARRAY(n, subtype_expr)                                      \
+        static ItemTraits traits[n];                                            \
+        const ItemTraits &get_traits() const { return traits[subtype_expr]; }
+
+#define DEF_ITEMTRAITS(classname, name, id)         \
+    ItemTraits classname::traits = { name, id, itf_none, 0.0 }
+
+#define DEF_ITEMTRAITSF(classname, name, id, flags)         \
+    ItemTraits classname::traits = { name, id, flags, 0.0 }
+
+#define DEF_ITEMTRAITSR(classname, name, id, radius)         \
+    ItemTraits classname::traits = { name, id, 0, radius }
+    
 } // namespace enigma
 
 #endif

Modified: trunk/src/ox_extra.cc
===================================================================
--- trunk/src/ox_extra.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/ox_extra.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,15 +24,9 @@
 // defining PLAIN_SPEC_ONLY only shows xxx_floor_map, xxx_stone_map and xxx_item_map
 // Note:  the xxx_item_map changes it's type (ItemID -> const char *)
 
-#define ITEMSPEC(i) #i
-#define ITEMMAPTYPE const char *
-
 #else
 // Standard enigma section :
 
-#define ITEMSPEC(i) i
-#define ITEMMAPTYPE enigma::ItemID
-
 #include "oxyd_internal.hh"
 using namespace enigma;
 
@@ -313,73 +307,73 @@
     // codes >= 0xbc are unused
 };
 
-ITEMMAPTYPE oxyd::oxydextra_item_map[256] = {
-    ITEMSPEC(it_none),                    // OxydExtra item 0x00
-    ITEMSPEC(it_extralife),               // OxydExtra item 0x01
-    ITEMSPEC(it_document),                // OxydExtra item 0x02
-    ITEMSPEC(it_document),                // OxydExtra item 0x03
-    ITEMSPEC(it_hammer),                  // OxydExtra item 0x04
-    ITEMSPEC(it_coffee),                  // OxydExtra item 0x05
-    ITEMSPEC(it_cherry),                  // OxydExtra item 0x06
-    ITEMSPEC(it_umbrella),                // OxydExtra item 0x07
-    ITEMSPEC(it_MISSING),                 // OxydExtra item 0x08
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x09
-    ITEMSPEC(it_dynamite),                // OxydExtra item 0x0a
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x0b
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x0c
-    ITEMSPEC(it_crack0),                  // OxydExtra item 0x0d
-    ITEMSPEC(it_crack1),                  // OxydExtra item 0x0e
-    ITEMSPEC(it_crack2),                  // OxydExtra item 0x0f
-    ITEMSPEC(it_crack3),                  // OxydExtra item 0x10
-    ITEMSPEC(it_coin1),                   // OxydExtra item 0x11
-    ITEMSPEC(it_coin2),                   // OxydExtra item 0x12
-    ITEMSPEC(it_coin4),                   // OxydExtra item 0x13
-    ITEMSPEC(it_key_a),                   // OxydExtra item 0x14
-    ITEMSPEC(it_key_b),                   // OxydExtra item 0x15
-    ITEMSPEC(it_key_c),                   // OxydExtra item 0x16
-    ITEMSPEC(it_floppy),                  // OxydExtra item 0x17
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x18
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x19
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1a
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1b
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1c
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1d
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1e
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x1f
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x20
-    ITEMSPEC(it_spade),                   // OxydExtra item 0x21
-    ITEMSPEC(it_surprise),                // OxydExtra item 0x22
-    ITEMSPEC(it_pin),                     // OxydExtra item 0x23
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x24
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x25
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x26
-    ITEMSPEC(it_bag),                     // OxydExtra item 0x27
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x28
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x29
-    ITEMSPEC(it_sensor),                  // OxydExtra item 0x2a
-    ITEMSPEC(it_shogun_s),                // OxydExtra item 0x2b
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x2c
-    ITEMSPEC(it_vortex_open),             // OxydExtra item 0x2d
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x2e
-    ITEMSPEC(it_wormhole_on),             // OxydExtra item 0x2f
-    ITEMSPEC(it_hill),                    // OxydExtra item 0x30
-    ITEMSPEC(it_tinyhill),                // OxydExtra item 0x31
-    ITEMSPEC(it_hollow),                  // OxydExtra item 0x32
-    ITEMSPEC(it_tinyhollow),              // OxydExtra item 0x33
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x34
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x35
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x36
-    ITEMSPEC(it_bridge_oxyd),             // OxydExtra item 0x37
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x38
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x39
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x3a
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x3b
-    ITEMSPEC(it_MISSING),                 // OxydExtra item 0x3c
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x3d
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x3e
-    ITEMSPEC(it_UNUSED),                  // OxydExtra item 0x3f
-    ITEMSPEC(it_trigger),                 // OxydExtra item 0x40
-    ITEMSPEC(it_brush),                   // OxydExtra item 0x41
-    ITEMSPEC(it_banana),                  // OxydExtra item 0x42
+const char* oxyd::oxydextra_item_map[256] = {
+    IT_INVALID,                    // OxydExtra item 0x00
+    "it_extralife",               // OxydExtra item 0x01
+    IT_EXTERNAL,                // OxydExtra item 0x02
+    IT_EXTERNAL,                // OxydExtra item 0x03
+    "it_hammer",                  // OxydExtra item 0x04
+    "it-coffee",                  // OxydExtra item 0x05
+    "it-cherry",                  // OxydExtra item 0x06
+    "it_umbrella",                // OxydExtra item 0x07
+    IT_MISSING,                 // OxydExtra item 0x08
+    UNUSED,                  // OxydExtra item 0x09
+    "it-dynamite",                // OxydExtra item 0x0a
+    UNUSED,                  // OxydExtra item 0x0b
+    UNUSED,                  // OxydExtra item 0x0c
+    "it-crack0",                  // OxydExtra item 0x0d
+    "it-crack1",                  // OxydExtra item 0x0e
+    "it-crack2",                  // OxydExtra item 0x0f
+    "it-crack3",                  // OxydExtra item 0x10
+    "it_coin_s",                   // OxydExtra item 0x11
+    "it_coin_m",                   // OxydExtra item 0x12
+    "it_coin_l",                   // OxydExtra item 0x13
+    "it_key_a",                   // OxydExtra item 0x14
+    "it_key_b",                   // OxydExtra item 0x15
+    "it_key_c",                   // OxydExtra item 0x16
+    "it_floppy",                  // OxydExtra item 0x17
+    UNUSED,                  // OxydExtra item 0x18
+    UNUSED,                  // OxydExtra item 0x19
+    UNUSED,                  // OxydExtra item 0x1a
+    UNUSED,                  // OxydExtra item 0x1b
+    UNUSED,                  // OxydExtra item 0x1c
+    UNUSED,                  // OxydExtra item 0x1d
+    UNUSED,                  // OxydExtra item 0x1e
+    UNUSED,                  // OxydExtra item 0x1f
+    UNUSED,                  // OxydExtra item 0x20
+    "it-spade",                   // OxydExtra item 0x21
+    "it-surprise",                // OxydExtra item 0x22
+    "it-pin",                     // OxydExtra item 0x23
+    UNUSED,                  // OxydExtra item 0x24
+    UNUSED,                  // OxydExtra item 0x25
+    UNUSED,                  // OxydExtra item 0x26
+    "it-bag",                     // OxydExtra item 0x27
+    UNUSED,                  // OxydExtra item 0x28
+    UNUSED,                  // OxydExtra item 0x29
+    "it_sensor",                  // OxydExtra item 0x2a
+    "it-shogun-s",                // OxydExtra item 0x2b
+    UNUSED,                  // OxydExtra item 0x2c
+    "it_vortex_open",             // OxydExtra item 0x2d
+    UNUSED,                  // OxydExtra item 0x2e
+    "it_wormhole_on",             // OxydExtra item 0x2f
+    "it-hill",                    // OxydExtra item 0x30
+    "it-tinyhill",                // OxydExtra item 0x31
+    "it-hollow",                  // OxydExtra item 0x32
+    "it-tinyhollow",              // OxydExtra item 0x33
+    UNUSED,                  // OxydExtra item 0x34
+    UNUSED,                  // OxydExtra item 0x35
+    UNUSED,                  // OxydExtra item 0x36
+    "it-bridge-oxyd",             // OxydExtra item 0x37
+    UNUSED,                  // OxydExtra item 0x38
+    UNUSED,                  // OxydExtra item 0x39
+    UNUSED,                  // OxydExtra item 0x3a
+    UNUSED,                  // OxydExtra item 0x3b
+    IT_MISSING,                 // OxydExtra item 0x3c
+    UNUSED,                  // OxydExtra item 0x3d
+    UNUSED,                  // OxydExtra item 0x3e
+    UNUSED,                  // OxydExtra item 0x3f
+    "it_trigger",                 // OxydExtra item 0x40
+    "it_brush",                   // OxydExtra item 0x41
+    "it-banana",                  // OxydExtra item 0x42
     // codes >= 0x43 are unused
 };

Modified: trunk/src/ox_magnum.cc
===================================================================
--- trunk/src/ox_magnum.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/ox_magnum.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,15 +24,9 @@
 // defining PLAIN_SPEC_ONLY only shows xxx_floor_map, xxx_stone_map and xxx_item_map
 // Note:  the xxx_item_map changes it's type (ItemID -> const char *)
 
-#define ITEMSPEC(i) #i
-#define ITEMMAPTYPE const char *
-
 #else
 // Standard enigma section :
 
-#define ITEMSPEC(i) i
-#define ITEMMAPTYPE enigma::ItemID
-
 #include "oxyd_internal.hh"
 using namespace enigma;
 
@@ -295,110 +289,110 @@
     // codes >= 0xaa are unused
 };
 
-ITEMMAPTYPE oxyd::oxydmag_item_map[256] = {
-    ITEMSPEC(it_none),          // OxydMagnum item 0x00
-    ITEMSPEC(it_extralife),     // OxydMagnum item 0x01
-    ITEMSPEC(it_EXTERNAL),      // OxydMagnum item 0x02 document 1
-    ITEMSPEC(it_EXTERNAL),      // OxydMagnum item 0x03 document 2
-    ITEMSPEC(it_hammer),        // OxydMagnum item 0x04
-    ITEMSPEC(it_coffee),        // OxydMagnum item 0x05
-    ITEMSPEC(it_cherry),        // OxydMagnum item 0x06
-    ITEMSPEC(it_umbrella),      // OxydMagnum item 0x07
-    ITEMSPEC(it_glasses),       // OxydMagnum item 0x08
-    ITEMSPEC(it_glasses_broken), // OxydMagnum item 0x09
-    ITEMSPEC(it_dynamite),      // OxydMagnum item 0x0a
-    ITEMSPEC(it_blackbomb),     // OxydMagnum item 0x0b
-    ITEMSPEC(it_whitebomb),     // OxydMagnum item 0x0c
-    ITEMSPEC(it_crack0),        // OxydMagnum item 0x0d
-    ITEMSPEC(it_crack1),        // OxydMagnum item 0x0e
-    ITEMSPEC(it_crack2),        // OxydMagnum item 0x0f
-    ITEMSPEC(it_crack3),        // OxydMagnum item 0x10
-    ITEMSPEC(it_coin1),         // OxydMagnum item 0x11
-    ITEMSPEC(it_coin2),         // OxydMagnum item 0x12
-    ITEMSPEC(it_coin4),         // OxydMagnum item 0x13
-    ITEMSPEC(it_key_a),         // OxydMagnum item 0x14
-    ITEMSPEC(it_key_b),         // OxydMagnum item 0x15
-    ITEMSPEC(it_key_c),         // OxydMagnum item 0x16
-    ITEMSPEC(it_floppy),        // OxydMagnum item 0x17
-    ITEMSPEC(it_sword),         // OxydMagnum item 0x18
-    ITEMSPEC(it_flagwhite),     // OxydMagnum item 0x19
-    ITEMSPEC(it_flagblack),     // OxydMagnum item 0x1a
-    ITEMSPEC(it_ring),          // OxydMagnum item 0x1b
-    ITEMSPEC(it_pipe_wn),       // OxydMagnum item 0x1c
-    ITEMSPEC(it_pipe_sw),       // OxydMagnum item 0x1d
-    ITEMSPEC(it_pipe_ne),       // OxydMagnum item 0x1e
-    ITEMSPEC(it_pipe_es),       // OxydMagnum item 0x1f
-    ITEMSPEC(it_pipe_v),        // OxydMagnum item 0x20
-    ITEMSPEC(it_pipe_h),        // OxydMagnum item 0x21
-    ITEMSPEC(it_spade),         // OxydMagnum item 0x22
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x23
-    ITEMSPEC(it_pin),           // OxydMagnum item 0x24
-    ITEMSPEC(it_seed),          // OxydMagnum item 0x25
-    ITEMSPEC(it_spring2),       // OxydMagnum item 0x26
-    ITEMSPEC(it_spring1),       // OxydMagnum item 0x27
-    ITEMSPEC(it_bag),           // OxydMagnum item 0x28
-    ITEMSPEC(it_magnet_off),    // OxydMagnum item 0x29
-    ITEMSPEC(it_inversesensor), // OxydMagnum item 0x2a
-    ITEMSPEC(it_sensor),        // OxydMagnum item 0x2b
-    ITEMSPEC(it_shogun_s),      // OxydMagnum item 0x2c
-    ITEMSPEC(it_vortex_open),   // OxydMagnum item 0x2d
-    ITEMSPEC(it_vortex_closed), // OxydMagnum item 0x2e
-    ITEMSPEC(it_wormhole_on),   // OxydMagnum item 0x2f
-    ITEMSPEC(it_hill),          // OxydMagnum item 0x30
-    ITEMSPEC(it_tinyhill),      // OxydMagnum item 0x31
-    ITEMSPEC(it_hollow),        // OxydMagnum item 0x32
-    ITEMSPEC(it_tinyhollow),    // OxydMagnum item 0x33
-    ITEMSPEC(it_strip_ns),      // OxydMagnum item 0x34
-    ITEMSPEC(it_strip_ew),      // OxydMagnum item 0x35
-    ITEMSPEC(it_springboard),   // OxydMagnum item 0x36
-    ITEMSPEC(it_MISSING),       // OxydMagnum item 0x37
-    ITEMSPEC(it_bridge_oxyd),   // OxydMagnum item 0x38
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x39
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3a
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3b
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3c
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3d
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3e
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x3f
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x40
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x41
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x42
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x43
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x44
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x45
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x46
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x47
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x48
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x49
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x4a
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x4b
-    ITEMSPEC(it_springboard),   // OxydMagnum item 0x4c
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x4d
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x4e
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x4f
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x50
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x51
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x52
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x53
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x54
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x55
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x56
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x57
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x58
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x59
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x5a
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x5b
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x5c
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x5d
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x5e
-    ITEMSPEC(it_signalfilter1), // OxydMagnum item 0x5f
-    ITEMSPEC(it_drop),          // OxydMagnum item 0x60 (drunk)
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x61 (rev. breaking area)
-    ITEMSPEC(it_UNUSED),        // OxydMagnum item 0x62 (player exchange)
-    ITEMSPEC(it_trigger),       // OxydMagnum item 0x63
-    ITEMSPEC(it_puller_n),      // OxydMagnum item 0x64
-    ITEMSPEC(it_puller_s),      // OxydMagnum item 0x65
-    ITEMSPEC(it_puller_w),      // OxydMagnum item 0x66
-    ITEMSPEC(it_puller_e),      // OxydMagnum item 0x67
+const char* oxyd::oxydmag_item_map[256] = {
+    IT_INVALID,          // OxydMagnum item 0x00
+    "it_extralife",     // OxydMagnum item 0x01
+    IT_EXTERNAL,      // OxydMagnum item 0x02 document 1
+    IT_EXTERNAL,      // OxydMagnum item 0x03 document 2
+    "it_hammer",        // OxydMagnum item 0x04
+    "it-coffee",        // OxydMagnum item 0x05
+    "it-cherry",        // OxydMagnum item 0x06
+    "it_umbrella",      // OxydMagnum item 0x07
+    "it_glasses",       // OxydMagnum item 0x08
+    "it_glasses_broken", // OxydMagnum item 0x09
+    "it-dynamite",      // OxydMagnum item 0x0a
+    "it-blackbomb",     // OxydMagnum item 0x0b
+    "it-whitebomb",     // OxydMagnum item 0x0c
+    "it-crack0",        // OxydMagnum item 0x0d
+    "it-crack1",        // OxydMagnum item 0x0e
+    "it-crack2",        // OxydMagnum item 0x0f
+    "it-crack3",        // OxydMagnum item 0x10
+    "it_coin_s",         // OxydMagnum item 0x11
+    "it_coin_m",         // OxydMagnum item 0x12
+    "it_coin_l",         // OxydMagnum item 0x13
+    "it_key_a",         // OxydMagnum item 0x14
+    "it_key_b",         // OxydMagnum item 0x15
+    "it_key_c",         // OxydMagnum item 0x16
+    "it_floppy",        // OxydMagnum item 0x17
+    "it_sword",         // OxydMagnum item 0x18
+    "it-flagwhite",     // OxydMagnum item 0x19
+    "it-flagblack",     // OxydMagnum item 0x1a
+    "it-ring",          // OxydMagnum item 0x1b
+    "it-pipe-wn",       // OxydMagnum item 0x1c
+    "it-pipe-sw",       // OxydMagnum item 0x1d
+    "it-pipe-ne",       // OxydMagnum item 0x1e
+    "it-pipe-es",       // OxydMagnum item 0x1f
+    "it-pipe-v",        // OxydMagnum item 0x20
+    "it-pipe-h",        // OxydMagnum item 0x21
+    "it-spade",         // OxydMagnum item 0x22
+    UNUSED,        // OxydMagnum item 0x23
+    "it-pin",           // OxydMagnum item 0x24
+    "it-seed",          // OxydMagnum item 0x25
+    "it-spring2",       // OxydMagnum item 0x26
+    "it-spring1",       // OxydMagnum item 0x27
+    "it-bag",           // OxydMagnum item 0x28
+    "it_magnet_off",    // OxydMagnum item 0x29
+    "it_inversesensor", // OxydMagnum item 0x2a
+    "it_sensor",        // OxydMagnum item 0x2b
+    "it-shogun-s",      // OxydMagnum item 0x2c
+    "it_vortex_open",   // OxydMagnum item 0x2d
+    "it_vortex_closed", // OxydMagnum item 0x2e
+    "it_wormhole_on",   // OxydMagnum item 0x2f
+    "it-hill",          // OxydMagnum item 0x30
+    "it-tinyhill",      // OxydMagnum item 0x31
+    "it-hollow",        // OxydMagnum item 0x32
+    "it-tinyhollow",    // OxydMagnum item 0x33
+    "it_strip_ns",      // OxydMagnum item 0x34
+    "it_strip_ew",      // OxydMagnum item 0x35
+    "it-springboard",   // OxydMagnum item 0x36
+    IT_MISSING,       // OxydMagnum item 0x37
+    "it-bridge-oxyd",   // OxydMagnum item 0x38
+    UNUSED,        // OxydMagnum item 0x39
+    UNUSED,        // OxydMagnum item 0x3a
+    UNUSED,        // OxydMagnum item 0x3b
+    UNUSED,        // OxydMagnum item 0x3c
+    UNUSED,        // OxydMagnum item 0x3d
+    UNUSED,        // OxydMagnum item 0x3e
+    UNUSED,        // OxydMagnum item 0x3f
+    UNUSED,        // OxydMagnum item 0x40
+    UNUSED,        // OxydMagnum item 0x41
+    UNUSED,        // OxydMagnum item 0x42
+    UNUSED,        // OxydMagnum item 0x43
+    UNUSED,        // OxydMagnum item 0x44
+    UNUSED,        // OxydMagnum item 0x45
+    UNUSED,        // OxydMagnum item 0x46
+    UNUSED,        // OxydMagnum item 0x47
+    UNUSED,        // OxydMagnum item 0x48
+    UNUSED,        // OxydMagnum item 0x49
+    UNUSED,        // OxydMagnum item 0x4a
+    UNUSED,        // OxydMagnum item 0x4b
+    "it-springboard",   // OxydMagnum item 0x4c
+    UNUSED,        // OxydMagnum item 0x4d
+    UNUSED,        // OxydMagnum item 0x4e
+    UNUSED,        // OxydMagnum item 0x4f
+    UNUSED,        // OxydMagnum item 0x50
+    UNUSED,        // OxydMagnum item 0x51
+    UNUSED,        // OxydMagnum item 0x52
+    UNUSED,        // OxydMagnum item 0x53
+    UNUSED,        // OxydMagnum item 0x54
+    UNUSED,        // OxydMagnum item 0x55
+    UNUSED,        // OxydMagnum item 0x56
+    UNUSED,        // OxydMagnum item 0x57
+    UNUSED,        // OxydMagnum item 0x58
+    UNUSED,        // OxydMagnum item 0x59
+    UNUSED,        // OxydMagnum item 0x5a
+    UNUSED,        // OxydMagnum item 0x5b
+    UNUSED,        // OxydMagnum item 0x5c
+    UNUSED,        // OxydMagnum item 0x5d
+    UNUSED,        // OxydMagnum item 0x5e
+    "it_sensor_filter1", // OxydMagnum item 0x5f
+    "it-drop",          // OxydMagnum item 0x60 (drunk)
+    UNUSED,        // OxydMagnum item 0x61 (rev. breaking are)
+    UNUSED,        // OxydMagnum item 0x62 (player exchange)
+    "it_trigger",       // OxydMagnum item 0x63
+    "it-puller-n",      // OxydMagnum item 0x64
+    "it-puller-s",      // OxydMagnum item 0x65
+    "it-puller-w",      // OxydMagnum item 0x66
+    "it-puller-e",      // OxydMagnum item 0x67
     // codes >= 0x68 are unused
 };

Modified: trunk/src/ox_oxyd1.cc
===================================================================
--- trunk/src/ox_oxyd1.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/ox_oxyd1.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,13 +24,9 @@
 // defining PLAIN_SPEC_ONLY only shows xxx_floor_map, xxx_stone_map and xxx_item_map
 // Note:  the xxx_item_map changes it's type (ItemID -> const char *)
 
-#define ITEMSPEC(i) #i
-#define ITEMMAPTYPE const char *
 
 #else
 // Standard enigma section :
-#define ITEMSPEC(i) i
-#define ITEMMAPTYPE ItemID
 
 #include "server.hh"
 #include "oxyd_internal.hh"
@@ -309,103 +305,103 @@
     // codes >= 0x9a are unused
 };
 
-ITEMMAPTYPE oxyd::oxyd1_item_map[256] = {
-    ITEMSPEC(it_none),                    // 0x00
-    ITEMSPEC(it_extralife),               // 0x01
-    ITEMSPEC(it_EXTERNAL),                // 0x02 document 1
-    ITEMSPEC(it_EXTERNAL),                // 0x03 document 2
-    ITEMSPEC(it_hammer),                  // 0x04
-    ITEMSPEC(it_coffee),                  // 0x05
-    ITEMSPEC(it_cherry),                  // 0x06
-    ITEMSPEC(it_umbrella),                // 0x07
-    ITEMSPEC(it_glasses),                 // 0x08
-    ITEMSPEC(it_glasses_broken),          // 0x09
-    ITEMSPEC(it_dynamite),                // 0x0a
-    ITEMSPEC(it_blackbomb),               // 0x0b
-    ITEMSPEC(it_whitebomb),               // 0x0c
-    ITEMSPEC(it_crack0),                  // 0x0d
-    ITEMSPEC(it_crack1),                  // 0x0e
-    ITEMSPEC(it_crack2),                  // 0x0f
-    ITEMSPEC(it_crack3),                  // 0x10
-    ITEMSPEC(it_coin1),                   // 0x11
-    ITEMSPEC(it_coin2),                   // 0x12
-    ITEMSPEC(it_coin4),                   // 0x13
-    ITEMSPEC(it_key_a),                   // 0x14
-    ITEMSPEC(it_key_b),                   // 0x15
-    ITEMSPEC(it_key_c),                   // 0x16
-    ITEMSPEC(it_floppy),                  // 0x17
-    ITEMSPEC(it_sword),                   // 0x18
-    ITEMSPEC(it_flagwhite),               // 0x19
-    ITEMSPEC(it_flagblack),               // 0x1a
-    ITEMSPEC(it_ring),                    // 0x1b
-    ITEMSPEC(it_pipe_wn),                 // 0x1c
-    ITEMSPEC(it_pipe_sw),                 // 0x1d
-    ITEMSPEC(it_pipe_ne),                 // 0x1e
-    ITEMSPEC(it_pipe_es),                 // 0x1f
-    ITEMSPEC(it_pipe_v),                  // 0x20
-    ITEMSPEC(it_pipe_h),                  // 0x21
-    ITEMSPEC(it_spade),                   // 0x22
-    ITEMSPEC(it_surprise),                // 0x23
-    ITEMSPEC(it_pin),                     // 0x24
-    ITEMSPEC(it_seed),                    // 0x25
-    ITEMSPEC(it_spring2),                 // 0x26
-    ITEMSPEC(it_spring1),                 // 0x27
-    ITEMSPEC(it_bag),                     // 0x28
-    ITEMSPEC(it_magnet_off),              // 0x29
-    ITEMSPEC(it_inversesensor),           // 0x2a
-    ITEMSPEC(it_sensor),                  // 0x2b
-    ITEMSPEC(it_shogun_s),                // 0x2c
-    ITEMSPEC(it_vortex_open),             // 0x2d
-    ITEMSPEC(it_vortex_closed),           // 0x2e
-    ITEMSPEC(it_wormhole_on),             // 0x2f
-    ITEMSPEC(it_hill),                    // 0x30
-    ITEMSPEC(it_tinyhill),                // 0x31
-    ITEMSPEC(it_hollow),                  // 0x32
-    ITEMSPEC(it_tinyhollow),              // 0x33
-    ITEMSPEC(it_strip_ns),                // 0x34
-    ITEMSPEC(it_strip_ew),                // 0x35
-    ITEMSPEC(it_springboard),             // 0x36
-    ITEMSPEC(it_bridge_oxyd),             // 0x37 bridge active
-    ITEMSPEC(it_bridge_oxyd),             // 0x38 bridge inactive
-    ITEMSPEC(it_bridge_oxyd_active),      // 0x39 walkable bridge (?)
-    ITEMSPEC(it_UNUSED),                  // 0x3a
-    ITEMSPEC(it_UNUSED),                  // 0x3b
-    ITEMSPEC(it_UNUSED),                  // 0x3c
-    ITEMSPEC(it_UNUSED),                  // 0x3d
-    ITEMSPEC(it_UNUSED),                  // 0x3e
-    ITEMSPEC(it_UNUSED),                  // 0x3f
-    ITEMSPEC(it_UNUSED),                  // 0x40
-    ITEMSPEC(it_UNUSED),                  // 0x41
-    ITEMSPEC(it_UNUSED),                  // 0x42
-    ITEMSPEC(it_UNUSED),                  // 0x43
-    ITEMSPEC(it_UNUSED),                  // 0x44
-    ITEMSPEC(it_UNUSED),                  // 0x45
-    ITEMSPEC(it_UNUSED),                  // 0x46
-    ITEMSPEC(it_UNUSED),                  // 0x47
-    ITEMSPEC(it_UNUSED),                  // 0x48
-    ITEMSPEC(it_UNUSED),                  // 0x49
-    ITEMSPEC(it_UNUSED),                  // 0x4a
-    ITEMSPEC(it_UNUSED),                  // 0x4b
-    ITEMSPEC(it_UNUSED),                  // 0x4c
-    ITEMSPEC(it_UNUSED),                  // 0x4d
-    ITEMSPEC(it_UNUSED),                  // 0x4e
-    ITEMSPEC(it_UNUSED),                  // 0x4f
-    ITEMSPEC(it_UNUSED),                  // 0x50
-    ITEMSPEC(it_UNUSED),                  // 0x51
-    ITEMSPEC(it_UNUSED),                  // 0x52
-    ITEMSPEC(it_UNUSED),                  // 0x53
-    ITEMSPEC(it_UNUSED),                  // 0x54
-    ITEMSPEC(it_UNUSED),                  // 0x55
-    ITEMSPEC(it_UNUSED),                  // 0x56
-    ITEMSPEC(it_UNUSED),                  // 0x57
-    ITEMSPEC(it_UNUSED),                  // 0x58
-    ITEMSPEC(it_UNUSED),                  // 0x59
-    ITEMSPEC(it_UNUSED),                  // 0x5a
-    ITEMSPEC(it_UNUSED),                  // 0x5b
-    ITEMSPEC(it_UNUSED),                  // 0x5c
-    ITEMSPEC(it_UNUSED),                  // 0x5d
-    ITEMSPEC(it_UNUSED),                  // 0x5e
-    ITEMSPEC(it_sensor),                  // 0x5f
-    ITEMSPEC(it_drop),                    // 0x60    drop (turns actor into rotor)
+const char *oxyd::oxyd1_item_map[256] = {
+    IT_INVALID,                   // 0x00
+    "it_extralife",               // 0x01
+    IT_EXTERNAL,                  // 0x02 document 1
+    IT_EXTERNAL,                  // 0x03 document 2
+    "it_hammer",                  // 0x04
+    "it-coffee",                  // 0x05
+    "it-cherry",                  // 0x06
+    "it_umbrella",                // 0x07
+    "it_glasses",                 // 0x08
+    "it_glasses_broken",          // 0x09
+    "it-dynamite",                // 0x0a
+    "it-blackbomb",               // 0x0b
+    "it-whitebomb",               // 0x0c
+    "it-crack0",                  // 0x0d
+    "it-crack1",                  // 0x0e
+    "it-crack2",                  // 0x0f
+    "it-crack3",                  // 0x10
+    "it_coin_s",                  // 0x11
+    "it_coin_m",                  // 0x12
+    "it_coin_l",                  // 0x13
+    "it_key_a",                   // 0x14
+    "it_key_b",                   // 0x15
+    "it_key_c",                   // 0x16
+    "it_floppy",                  // 0x17
+    "it_sword",                   // 0x18
+    "it-flagwhite",               // 0x19
+    "it-flagblack",               // 0x1a
+    "it-ring",                    // 0x1b
+    "it-pipe-wn",                 // 0x1c
+    "it-pipe-sw",                 // 0x1d
+    "it-pipe-ne",                 // 0x1e
+    "it-pipe-es",                 // 0x1f
+    "it-pipe-v",                  // 0x20
+    "it-pipe-h",                  // 0x21
+    "it-spade",                   // 0x22
+    "it-surprise",                // 0x23
+    "it-pin",                     // 0x24
+    "it-seed",                    // 0x25
+    "it-spring2",                 // 0x26
+    "it-spring1",                 // 0x27
+    "it-bag",                     // 0x28
+    "it_magnet_off",              // 0x29
+    "it_inversesensor",           // 0x2a
+    "it_sensor",                  // 0x2b
+    "it-shogun-s",                // 0x2c
+    "it_vortex_open",             // 0x2d
+    "it_vortex_closed",           // 0x2e
+    "it_wormhole_on",             // 0x2f
+    "it-hill",                    // 0x30
+    "it-tinyhill",                // 0x31
+    "it-hollow",                  // 0x32
+    "it-tinyhollow",              // 0x33
+    "it_strip_ns",                // 0x34
+    "it_strip_ew",                // 0x35
+    "it-springboard",             // 0x36
+    "it-bridge-oxyd",             // 0x37 bridge active
+    "it-bridge-oxyd",             // 0x38 bridge inactive
+    "it-bridge-oxyd_active",      // 0x39 walkable bridge (?"
+    UNUSED,                  // 0x3a
+    UNUSED,                  // 0x3b
+    UNUSED,                  // 0x3c
+    UNUSED,                  // 0x3d
+    UNUSED,                  // 0x3e
+    UNUSED,                  // 0x3f
+    UNUSED,                  // 0x40
+    UNUSED,                  // 0x41
+    UNUSED,                  // 0x42
+    UNUSED,                  // 0x43
+    UNUSED,                  // 0x44
+    UNUSED,                  // 0x45
+    UNUSED,                  // 0x46
+    UNUSED,                  // 0x47
+    UNUSED,                  // 0x48
+    UNUSED,                  // 0x49
+    UNUSED,                  // 0x4a
+    UNUSED,                  // 0x4b
+    UNUSED,                  // 0x4c
+    UNUSED,                  // 0x4d
+    UNUSED,                  // 0x4e
+    UNUSED,                  // 0x4f
+    UNUSED,                  // 0x50
+    UNUSED,                  // 0x51
+    UNUSED,                  // 0x52
+    UNUSED,                  // 0x53
+    UNUSED,                  // 0x54
+    UNUSED,                  // 0x55
+    UNUSED,                  // 0x56
+    UNUSED,                  // 0x57
+    UNUSED,                  // 0x58
+    UNUSED,                  // 0x59
+    UNUSED,                  // 0x5a
+    UNUSED,                  // 0x5b
+    UNUSED,                  // 0x5c
+    UNUSED,                  // 0x5d
+    UNUSED,                  // 0x5e
+    "it_sensor",                  // 0x5f
+    "it-drop",                    // 0x60    drop (turns actor into rotor)
     // codes >= 0x61 are unused
 };

Modified: trunk/src/ox_peroxyd.cc
===================================================================
--- trunk/src/ox_peroxyd.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/ox_peroxyd.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,15 +24,9 @@
 // defining PLAIN_SPEC_ONLY only shows xxx_floor_map, xxx_stone_map and xxx_item_map
 // Note:  the xxx_item_map changes it's type (ItemID -> const char *)
 
-#define ITEMSPEC(i) #i
-#define ITEMMAPTYPE const char *
-
 #else
 // Standard enigma section :
 
-#define ITEMSPEC(i) i
-#define ITEMMAPTYPE enigma::ItemID
-
 #include "server.hh"
 #include "oxyd_internal.hh"
 
@@ -384,129 +378,129 @@
 };
 
 
-ITEMMAPTYPE oxyd::peroxyd_item_map[256] = {
-    ITEMSPEC(it_none),                    // 0x00
-    ITEMSPEC(it_extralife),               // 0x01
-    ITEMSPEC(it_EXTERNAL),                // 0x02 document 1
-    ITEMSPEC(it_EXTERNAL),                // 0x03 document 2
-    ITEMSPEC(it_hammer),                  // 0x04
-    ITEMSPEC(it_coffee),                  // 0x05
-    ITEMSPEC(it_cherry),                  // 0x06
-    ITEMSPEC(it_umbrella),                // 0x07
-    ITEMSPEC(it_glasses),                 // 0x08
-    ITEMSPEC(it_glasses_broken),          // 0x09
-    ITEMSPEC(it_dynamite),                // 0x0a
-    ITEMSPEC(it_blackbomb),               // 0x0b
-    ITEMSPEC(it_whitebomb),               // 0x0c
-    ITEMSPEC(it_crack0),                  // 0x0d
-    ITEMSPEC(it_crack1),                  // 0x0e
-    ITEMSPEC(it_crack2),                  // 0x0f
-    ITEMSPEC(it_crack3),                  // 0x10
-    ITEMSPEC(it_coin1),                   // 0x11
-    ITEMSPEC(it_coin2),                   // 0x12
-    ITEMSPEC(it_coin4),                   // 0x13
-    ITEMSPEC(it_key_a),                   // 0x14
-    ITEMSPEC(it_key_b),                   // 0x15
-    ITEMSPEC(it_key_c),                   // 0x16
-    ITEMSPEC(it_floppy),                  // 0x17
-    ITEMSPEC(it_flagwhite),               // 0x18
-    ITEMSPEC(it_flagblack),               // 0x19
-    ITEMSPEC(it_ring),                    // 0x1a
-    ITEMSPEC(it_pipe_wn),                 // 0x1b
-    ITEMSPEC(it_pipe_sw),                 // 0x1c
-    ITEMSPEC(it_pipe_ne),                 // 0x1d
-    ITEMSPEC(it_pipe_es),                 // 0x1e
-    ITEMSPEC(it_pipe_v),                  // 0x1f
-    ITEMSPEC(it_pipe_h),                  // 0x20
-    ITEMSPEC(it_spade),                   // 0x21
-    ITEMSPEC(it_surprise),                // 0x22
-    ITEMSPEC(it_pin),                     // 0x23
-    ITEMSPEC(it_seed),                    // 0x24
-    ITEMSPEC(it_spring2),                 // 0x25
-    ITEMSPEC(it_spring1),                 // 0x26
-    ITEMSPEC(it_bag),                     // 0x27
-    ITEMSPEC(it_magnet_off),              // 0x28
-    ITEMSPEC(it_signalfilter0),           // 0x29
-    ITEMSPEC(it_signalfilter1),           // 0x2a
-    ITEMSPEC(it_shogun_s),                // 0x2b
-    ITEMSPEC(it_shogun_l),                // 0x2c
-    ITEMSPEC(it_vortex_open),             // 0x2d
-    ITEMSPEC(it_vortex_closed),           // 0x2e
-    ITEMSPEC(it_wormhole_on),             // 0x2f XXX
-    ITEMSPEC(it_hill),                    // 0x30
-    ITEMSPEC(it_tinyhill),                // 0x31
-    ITEMSPEC(it_hollow),                  // 0x32
-    ITEMSPEC(it_tinyhollow),              // 0x33
-    ITEMSPEC(it_strip_ns),                // 0x34
-    ITEMSPEC(it_strip_ew),                // 0x35
-    ITEMSPEC(it_springboard),             // 0x36
-    ITEMSPEC(it_MISSING),                 // 0x37
-    ITEMSPEC(it_bridge_oxyd),             // 0x38
-    ITEMSPEC(it_UNUSED),                  // 0x39
-    ITEMSPEC(it_UNUSED),                  // 0x3a
-    ITEMSPEC(it_UNUSED),                  // 0x3b
-    ITEMSPEC(it_cross),                   // 0x3c
-    ITEMSPEC(it_spoon),                   // 0x3d
-    ITEMSPEC(it_MISSING),                 // 0x3e rubber band
-    ITEMSPEC(it_changefloor),             // 0x3f
-    ITEMSPEC(it_trigger),                 // 0x40
-    ITEMSPEC(it_brush),                   // 0x41
-    ITEMSPEC(it_banana),                  // 0x42
-    ITEMSPEC(it_pencil),                  // 0x43
-    ITEMSPEC(it_brake),                   // 0x44
-    ITEMSPEC(it_squashed),                // 0x45
-    ITEMSPEC(it_blocker),                 // 0x46
-    ITEMSPEC(it_magicwand),               // 0x47
-    ITEMSPEC(it_wrench),                  // 0x48
-    ITEMSPEC(it_UNUSED),                  // 0x49
-    ITEMSPEC(it_odometer),                // 0x4a
-    ITEMSPEC(it_puller_n),                // 0x4b
-    ITEMSPEC(it_puller_s),                // 0x4c
-    ITEMSPEC(it_puller_w),                // 0x4d
-    ITEMSPEC(it_puller_e),                // 0x4e
-    ITEMSPEC(it_UNUSED),                  // 0x4f
-    ITEMSPEC(it_UNUSED),                  // 0x50
-    ITEMSPEC(it_MISSING),                 // 0x51 puller left, active
-    ITEMSPEC(it_UNUSED),                  // 0x52
-    ITEMSPEC(it_MISSING),                 // 0x53 oxyd on floor (?)
-    ITEMSPEC(it_UNUSED),                  // 0x54
-    ITEMSPEC(it_UNUSED),                  // 0x55
-    ITEMSPEC(it_UNUSED),                  // 0x56
-    ITEMSPEC(it_UNUSED),                  // 0x57
-    ITEMSPEC(it_MISSING),                 // 0x58 oxyd on floor
-    ITEMSPEC(it_MISSING),                 // 0x59 oxyd on floor
-    ITEMSPEC(it_UNUSED),                  // 0x5a
-    ITEMSPEC(it_UNUSED),                  // 0x5b
-    ITEMSPEC(it_UNUSED),                  // 0x5c
-    ITEMSPEC(it_UNUSED),                  // 0x5d
-    ITEMSPEC(it_UNUSED),                  // 0x5e
-    ITEMSPEC(it_UNUSED),                  // 0x5f
-    ITEMSPEC(it_UNUSED),                  // 0x60
-    ITEMSPEC(it_UNUSED),                  // 0x61
-    ITEMSPEC(it_UNUSED),                  // 0x62
-    ITEMSPEC(it_UNUSED),                  // 0x63
-    ITEMSPEC(it_UNUSED),                  // 0x64
-    ITEMSPEC(it_UNUSED),                  // 0x65
-    ITEMSPEC(it_UNUSED),                  // 0x66
-    ITEMSPEC(it_UNUSED),                  // 0x67
-    ITEMSPEC(it_UNUSED),                  // 0x68
-    ITEMSPEC(it_UNUSED),                  // 0x69
-    ITEMSPEC(it_blackbomb_burning),       // 0x6a
-    ITEMSPEC(it_UNUSED),                  // 0x6b
-    ITEMSPEC(it_UNUSED),                  // 0x6c
-    ITEMSPEC(it_UNUSED),                  // 0x6d
-    ITEMSPEC(it_UNUSED),                  // 0x6e
-    ITEMSPEC(it_UNUSED),                  // 0x6f
-    ITEMSPEC(it_UNUSED),                  // 0x70
-    ITEMSPEC(it_UNUSED),                  // 0x71
-    ITEMSPEC(it_UNUSED),                  // 0x72
-    ITEMSPEC(it_UNUSED),                  // 0x73
-    ITEMSPEC(it_UNUSED),                  // 0x74
-    ITEMSPEC(it_UNUSED),                  // 0x75
-    ITEMSPEC(it_easykillstone),           // 0x76
-    ITEMSPEC(it_easykeepstone),           // 0x77
-    ITEMSPEC(it_2pkillstone),             // 0x78
-    ITEMSPEC(it_1pkillstone),             // 0x79
+const char *oxyd::peroxyd_item_map[256] = {
+    IT_INVALID,                   // 0x00
+    "it_extralife",               // 0x01
+    IT_EXTERNAL,                  // 0x02 document 1
+    IT_EXTERNAL,                  // 0x03 document 2
+    "it_hammer",                  // 0x04
+    "it-coffee",                  // 0x05
+    "it-cherry",                  // 0x06
+    "it_umbrella",                // 0x07
+    "it_glasses",                 // 0x08
+    "it_glasses_broken",          // 0x09
+    "it-dynamite",                // 0x0a
+    "it-blackbomb",               // 0x0b
+    "it-whitebomb",               // 0x0c
+    "it-crack0",                  // 0x0d
+    "it-crack1",                  // 0x0e
+    "it-crack2",                  // 0x0f
+    "it-crack3",                  // 0x10
+    "it_coin_s",                  // 0x11
+    "it_coin_m",                  // 0x12
+    "it_coin_l",                  // 0x13
+    "it_key_a",                   // 0x14
+    "it_key_b",                   // 0x15
+    "it_key_c",                   // 0x16
+    "it_floppy",                  // 0x17
+    "it-flagwhite",               // 0x18
+    "it-flagblack",               // 0x19
+    "it-ring",                    // 0x1a
+    "it-pipe-wn",                 // 0x1b
+    "it-pipe-sw",                 // 0x1c
+    "it-pipe-ne",                 // 0x1d
+    "it-pipe-es",                 // 0x1e
+    "it-pipe-v",                  // 0x1f
+    "it-pipe-h",                  // 0x20
+    "it-spade",                   // 0x21
+    "it-surprise",                // 0x22
+    "it-pin",                     // 0x23
+    "it-seed",                    // 0x24
+    "it-spring2",                 // 0x25
+    "it-spring1",                 // 0x26
+    "it-bag",                     // 0x27
+    "it_magnet_off",              // 0x28
+    "it_sensor_filter0",          // 0x29
+    "it_sensor_filter1",          // 0x2a
+    "it-shogun-s",                // 0x2b
+    "it-shogun-l",                // 0x2c
+    "it_vortex_open",             // 0x2d
+    "it_vortex_closed",           // 0x2e
+    "it_wormhole_on",             // 0x2f XXX
+    "it-hill",                    // 0x30
+    "it-tinyhill",                // 0x31
+    "it-hollow",                  // 0x32
+    "it-tinyhollow",              // 0x33
+    "it_strip_ns",                // 0x34
+    "it_strip_ew",                // 0x35
+    "it-springboard",             // 0x36
+    IT_MISSING,                   // 0x37
+    "it-bridge-oxyd",             // 0x38
+    UNUSED,                  // 0x39
+    UNUSED,                  // 0x3a
+    UNUSED,                  // 0x3b
+    "it_cross",                   // 0x3c
+    "it-spoon",                   // 0x3d
+    IT_MISSING,                   // 0x3e rubber band
+    "it-changefloor",             // 0x3f
+    "it_trigger",                 // 0x40
+    "it_brush",                   // 0x41
+    "it-banana",                  // 0x42
+    "it-pencil",                  // 0x43
+    "it-brake",                   // 0x44
+    "it-squashed",                // 0x45
+    "it_blocker",                 // 0x46
+    "it_magicwand",               // 0x47
+    "it_wrench",                  // 0x48
+    UNUSED,                  // 0x49
+    "it-odometer",                // 0x4a
+    "it-puller-n",                // 0x4b
+    "it-puller-s",                // 0x4c
+    "it-puller-w",                // 0x4d
+    "it-puller-e",                // 0x4e
+    UNUSED,                       // 0x4f
+    UNUSED,                       // 0x50
+    IT_MISSING,                   // 0x51 puller left, active
+    UNUSED,                       // 0x52
+    IT_MISSING,                   // 0x53 oxyd on floor (?"
+    UNUSED,                       // 0x54
+    UNUSED,                       // 0x55
+    UNUSED,                       // 0x56
+    UNUSED,                       // 0x57
+    IT_MISSING,                   // 0x58 oxyd on floor
+    IT_MISSING,                   // 0x59 oxyd on floor
+    UNUSED,                  // 0x5a
+    UNUSED,                  // 0x5b
+    UNUSED,                  // 0x5c
+    UNUSED,                  // 0x5d
+    UNUSED,                  // 0x5e
+    UNUSED,                  // 0x5f
+    UNUSED,                  // 0x60
+    UNUSED,                  // 0x61
+    UNUSED,                  // 0x62
+    UNUSED,                  // 0x63
+    UNUSED,                  // 0x64
+    UNUSED,                  // 0x65
+    UNUSED,                  // 0x66
+    UNUSED,                  // 0x67
+    UNUSED,                  // 0x68
+    UNUSED,                  // 0x69
+    "it-blackbomb-burning",       // 0x6a
+    UNUSED,                  // 0x6b
+    UNUSED,                  // 0x6c
+    UNUSED,                  // 0x6d
+    UNUSED,                  // 0x6e
+    UNUSED,                  // 0x6f
+    UNUSED,                  // 0x70
+    UNUSED,                  // 0x71
+    UNUSED,                  // 0x72
+    UNUSED,                  // 0x73
+    UNUSED,                  // 0x74
+    UNUSED,                  // 0x75
+    "it-easykillstone",           // 0x76
+    "it-easykeepstone",           // 0x77
+    "it-2pkillstone",             // 0x78
+    "it-1pkillstone",             // 0x79
     // codes >= 0x7a are unused
 };
 

Modified: trunk/src/oxyd.cc
===================================================================
--- trunk/src/oxyd.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/oxyd.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -369,64 +369,51 @@
     OxydLib::Language lang = Language_English;
     std::string localelang = ecl::GetLanguageCode (ecl::SysMessageLocaleName());
     if (localelang == "de")
-	lang = Language_German;
+        lang = Language_German;
     else if (localelang == "fr")
-	lang = Language_French;
+        lang = Language_French;
     
     switch (type) {
-    case 0x00: break;           // ignore
-    case 0x02:                  // note 1
-	{
-	    it = MakeItem (it_document);
-	    string text = convert_encoding(level.getNoteText(0, lang));
-	    it->setAttr ("text", text.c_str());
-	}
-        break;
-    case 0x03:                  // note 2
-    {
-        it = MakeItem (it_document);
-        string text = convert_encoding(level.getNoteText(1, lang));
-        it->setAttr ("text", text.c_str());
-    }
-    break;
-    case 0x14:                  // key a
-    {
-        it = MakeItem(it_key);
-        it->setAttr ("code", 1);
-    }
-    break;
-    case 0x15:                  // key b
-    {
-        it = MakeItem(it_key);
-        it->setAttr ("code", 2);
-    }
-    break;
-    case 0x16:                  // key c
-    {
-        it = MakeItem(it_key);
-        it->setAttr ("code", 3);
-    }
-    break;
-    default:
-        {
-            ItemID id = config.itemtable[type];
-            if (id == it_INVALID) {
+        case 0x00: break;           // ignore
+        case 0x02:                  // note 1
+    	    it = MakeItem("it-document");
+    	    it->setAttr ("text", convert_encoding(level.getNoteText(0, lang)).c_str());
+            break;
+        case 0x03:                  // note 2
+            it = MakeItem("it-document");
+            it->setAttr ("text", convert_encoding(level.getNoteText(1, lang)).c_str());
+            break;
+        case 0x14:                  // key a
+            it = MakeItem("it_key");
+            it->setAttr ("code", 1);
+            break;
+        case 0x15:                  // key b
+            it = MakeItem("it_key");
+            it->setAttr ("code", 2);
+            break;
+        case 0x16:                  // key c
+            it = MakeItem("it_key");
+            it->setAttr ("code", 3);
+            break;
+        default:
+            std::string key = config.itemtable[type];
+            if (key == IT_INVALID) {
                 Log << ecl::strf ("Unknown item %X\n",type);
-                it = MakeItem (it_dummy);
+                it = MakeItem("it-dummy");
                 it->setAttr("code", type);
+            } else if (key == "it_vortex_closed") {
+                it = MakeItem(key.c_str());
+                it->setAttr("autoclose", true);
+            } else if (key == "it_sensor") {
+                it = MakeItem(key.c_str());
+                it->setAttr("invisible", true);
+            } else if (key == "it_inversesensor") {
+                it = MakeItem("it_sensor");
+                it->setAttr("invisible", true);
+                it->setAttr("inverse", true);
             } else {
-                it = MakeItem (id);
-                if (id == it_vortex_closed)
-                    it->setAttr("autoclose", true);
-                else if (id == it_sensor) {
-                    it->setAttr("invisible", true);
-                }
-                else if (id == it_inversesensor) {
-                    it->setAttr("invisible", true);
-                    it->setAttr("inverse", true);
-                }
+                it = MakeItem(key.c_str());                
             }
-        }
     }
     return it;
 }
@@ -514,23 +501,23 @@
 
         switch (marble.getMarbleType()) {
         case MarbleType_Black:
-            ac = MakeActor (ac_blackball);
+            ac = MakeActor("ac-blackball");
             ac->setAttr ("player", Value(0.0));
             break;
         case MarbleType_White:
-            ac = MakeActor (ac_whiteball);
+            ac = MakeActor ("ac-whiteball");
             ac->setAttr ("player", Value(1.0));
             break;
         case MarbleType_Meditation:
             if (have_black_marble && !level.getHarmlessMeditationMarbles()) {
                 // # example: Oxyd Extra #28
-                ac = MakeActor (ac_killerball);
+                ac = MakeActor ("ac-killerball");
 //                ac->setAttr ("player", Value(0.0));
                 ac->setAttr ("mouseforce", Value (1.0));
                 ac->setAttr ("controllers", Value (3.0));
             }
             else {
-                ac = MakeActor (ac_meditation);
+                ac = MakeActor ("ac-whiteball-small");
                 nmeditationmarbles += 1;
 
                 if (config.twoplayers && (nmeditationmarbles % 2) == 0)
@@ -547,7 +534,7 @@
             }
             break;
         case MarbleType_Jack:
-            ac = MakeActor (ac_top);
+            ac = MakeActor ("ac-top");
             if (!minfo.is_default(MI_FORCE)) {
                 double force = minfo.get_value(MI_FORCE) / 4; // just a guess
                 ac->setAttr("force", Value(force) );
@@ -561,7 +548,7 @@
             break;
 
         case MarbleType_Rotor: {
-            ac = MakeActor (ac_rotor);
+            ac = MakeActor ("ac-rotor");
 
             double force = minfo.get_value (MI_FORCE, 30) * 0.3;
             double range = minfo.get_value (MI_RANGE, 100) / 32.0;
@@ -578,7 +565,7 @@
         }
 
         case MarbleType_Horse: {
-            ac = MakeActor (ac_horse);
+            ac = MakeActor ("ac-horse");
             int levelw = level.getWidth();
             if (!minfo.is_default(MI_HORSETARGET1)) {
                 int targetpos = minfo.get_value(MI_HORSETARGET1);
@@ -607,7 +594,7 @@
             break;
         }
         case MarbleType_Bug:
-            ac = MakeActor (ac_bug);
+            ac = MakeActor ("ac-bug");
             break;
         default:
             enigma::Log << "Unhandled actor type " << int(marble.getMarbleType()) << endl;

Modified: trunk/src/oxyd_internal.hh
===================================================================
--- trunk/src/oxyd_internal.hh	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/oxyd_internal.hh	2008-07-29 22:04:16 UTC (rev 1248)
@@ -29,9 +29,9 @@
 
 #include <cassert>
 
-#define it_UNUSED it_INVALID
-#define it_EXTERNAL it_INVALID
-#define it_MISSING it_INVALID
+#define IT_INVALID "it_invalid"
+#define IT_EXTERNAL IT_INVALID
+#define IT_MISSING IT_INVALID
 #define it_key_a it_key
 #define it_key_b it_key
 #define it_key_c it_key
@@ -58,7 +58,7 @@
         bool           twoplayers;
         GameMode       gamemode;
         const char   **floortable;
-        ItemID        *itemtable;
+        const char   **itemtable;
         const char   **stonetable;
 
         int id_timer;
@@ -68,7 +68,7 @@
         LoaderConfig (bool twoplayers_,
                       GameMode gamemode_,
                       const char **floortable_,
-                      ItemID *itemtable_,
+                      const char **itemtable_,
                       const char **stonetable_,
                       const char *oxyd_flavor_ = "a"
                       )
@@ -307,19 +307,19 @@
 
 /* -------------------- Global Variables -------------------- */
 
-    extern ItemID oxyd1_item_map[];
+    extern const char * oxyd1_item_map[];
     extern const char *oxyd1_floor_map[];
     extern const char *oxyd1_stone_map[];
 
-    extern ItemID peroxyd_item_map[];
+    extern const char * peroxyd_item_map[];
     extern const char *peroxyd_floor_map[];
     extern const char *peroxyd_stone_map[];
 
-    extern ItemID oxydmag_item_map[];
+    extern const char * oxydmag_item_map[];
     extern const char *oxydmag_floor_map[];
     extern const char *oxydmag_stone_map[];
 
-    extern ItemID oxydextra_item_map[];
+    extern const char * oxydextra_item_map[];
     extern const char *oxydextra_floor_map[];
     extern const char *oxydextra_stone_map[];
 

Modified: trunk/src/player.cc
===================================================================
--- trunk/src/player.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/player.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -181,7 +181,7 @@
         Inventory *inv = GetInventory(i);
         inv->assignOwner(i);
         for (int j = 0 ; j < extralives[i]; j++)
-            inv->add_item (MakeItem (it_extralife));
+            inv->add_item(MakeItem("it_extralife"));
     }
     
     unassignedActors.clear();
@@ -193,7 +193,7 @@
     for (unsigned i=0; i<players.size(); ++i) {
         Inventory *inv = GetInventory (i);
         if (inv->find ("it-yinyang") == -1) 
-            inv->add_item (MakeItem (it_yinyang));
+            inv->add_item(MakeItem("it-yinyang"));
     }
 }
 
@@ -216,7 +216,7 @@
                 nextralifes += 1;
         inv->clear();
         for (int i=0; i<nextralifes; ++i)
-            inv->add_item (MakeItem (it_extralife));
+            inv->add_item(MakeItem ("it_extralife"));
 
         players[iplayer].actors.clear();
     }

Modified: trunk/src/stones/ActorImpulseStone.cc
===================================================================
--- trunk/src/stones/ActorImpulseStone.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones/ActorImpulseStone.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -22,6 +22,7 @@
 //#include "main.hh"
 #include "player.hh"
 #include "server.hh"
+#include "items/GlassesItem.hh"
 
 namespace enigma {
     ActorImpulseStone::ActorImpulseStone(bool isInvisible) : Stone () {
@@ -110,7 +111,7 @@
 
     void ActorImpulseStone::init_model() {
         if (state == IDLE) {
-            if ((objFlags & OBJBIT_INVISIBLE) && ((server::GlassesVisibility & 4) == 0))
+            if ((objFlags & OBJBIT_INVISIBLE) && ((server::GlassesVisibility & Glasses::ACTORIMPULSE) == 0))
                 set_model("invisible");
             else
                 set_model("st-actorimpulse");

Modified: trunk/src/stones/DeathStone.cc
===================================================================
--- trunk/src/stones/DeathStone.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones/DeathStone.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -19,6 +19,8 @@
  */
 
 #include "stones/DeathStone.hh"
+
+#include "items/GlassesItem.hh"
 //#include "main.hh"
 
 namespace enigma {
@@ -72,7 +74,7 @@
 
     void DeathStone::init_model() {
         if (state == IDLE) {
-            if ((objFlags & OBJBIT_INVISIBLE) && ((server::GlassesVisibility & 1) == 0))
+            if ((objFlags & OBJBIT_INVISIBLE) && ((server::GlassesVisibility & Glasses::DEATH) == 0))
                 set_model("invisible");
             else
                 set_model("st-death");

Modified: trunk/src/stones/LightPassengerStone.cc
===================================================================
--- trunk/src/stones/LightPassengerStone.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones/LightPassengerStone.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,6 +24,7 @@
 #include "main.hh"
 #include "player.hh"
 #include "server.hh"
+#include "items/GlassesItem.hh"
 
 #include <algorithm>
 
@@ -109,7 +110,7 @@
         activatePhoto();
         if (updateCurrentLightDirs() != NODIRBIT)
             GameTimer.set_alarm(this, calcInterval(), false);
-        if (((server::GlassesVisibility & 16) != 0) != ((objFlags & OBJBIT_VISIBLE) != 0)) {
+        if (((server::GlassesVisibility & Glasses::LIGHTPASSENGER) != 0) != ((objFlags & OBJBIT_VISIBLE) != 0)) {
             objFlags ^= OBJBIT_VISIBLE; // toggle visibility bit
         }
         if (state == ON || state == BLINK) {

Modified: trunk/src/stones/WindowStone.cc
===================================================================
--- trunk/src/stones/WindowStone.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones/WindowStone.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -236,7 +236,7 @@
                     if (it_neighbor == NULL)
                         SetItem(w_pos_neighbor, YieldItem(w_pos));
                     else
-                        SetItem(w_pos, MakeItem(it_squashed));
+                        SetItem(w_pos, MakeItem("it-squashed"));
                 
                 // move actors
                 std::vector<Actor*> found_actors;

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -380,7 +380,7 @@
     case IDLE:
         ASSERT(0, XLevelRuntime, "SpitterStone: animcb called with inconsistent state"); 
     case LOADING: {
-        Actor     *ball = MakeActor (ac_cannonball);
+        Actor     *ball = MakeActor("ac-cannonball");
         ActorInfo *ai   = ball->get_actorinfo();
         V2         center  = get_pos().center();
 

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/stones_simple.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -24,6 +24,7 @@
 #include "client.hh"
 #include "main.hh"
 #include "Inventory.hh"
+#include "items/GlassesItem.hh"
 
 #include "stones_internal.hh"
 
@@ -133,7 +134,7 @@
         virtual Value message(const Message &m)
         {
             if (traits->hollow && m.message == "_glasses") {
-                if (to_int(m.value) & 2) {  // hollow
+                if (to_int(m.value) & Glasses::HOLLOW) {  // hollow
                     if (!sunglasses) {
                         sunglasses = true;
                         set_model( "invisible");
@@ -1306,7 +1307,7 @@
         enigma::Inventory *inv = player::GetInventory(m_affected_actor);
         if (inv && inv->size() > 0) {
             if (bag == NULL) {
-                bag = MakeItem(it_bag);
+                bag = MakeItem("it-bag");
                 bag->setOwnerPos(get_pos());
             }
             int i = IntegerRand (0, int (inv->size()-1));
@@ -1419,7 +1420,7 @@
     public:
         static void setup() {
             for (int i=0; i<8; ++i)
-                RegisterStone (new BlackWhiteStone(i));
+                Register(new BlackWhiteStone(i));
         }
     };
 
@@ -1549,7 +1550,7 @@
     if(Item *it = GetItem(get_pos())) {
         SendMessage(it, "ignite");
     } else
-        SetItem(p, it_explosion1);
+        SetItem(p, MakeItem("it-explosion1"));
 }
 
 Value BombStone::message(const Message &m) 
@@ -1640,7 +1641,7 @@
         void explode() {
             GridPos p = get_pos();
             KillStone(p);
-            SetItem(p, it_explosion1);
+            SetItem(p, MakeItem("it-explosion1"));
         }
 
         void processLight(Direction d) {
@@ -1880,13 +1881,13 @@
 
     Register(new BrickMagic);
 
-    RegisterStone (new ChameleonStone);
+    Register(new ChameleonStone);
 
     Register(new DiscoLight);
     Register(new DiscoMedium);
     Register(new DiscoDark);
     Register(new DummyStone);
-    RegisterStone (new EasyModeStone);
+    Register(new EasyModeStone);
     Register(new FakeOxydStone);
     Register(new FartStone);
     Register(new Grate1);

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/world.cc	2008-07-29 22:04:16 UTC (rev 1248)
@@ -1816,7 +1816,7 @@
 
 namespace
 {
-    void explosion(GridPos source, GridPos dest, ItemID explosion_item)
+    void explosion(GridPos source, GridPos dest, const char * explosion_item)
     {
         if (Stone *stone = GetStone(dest))
             SendMessage(stone, "_explosion", source);
@@ -1826,10 +1826,10 @@
             if (has_flags(item, itf_indestructible))
                 SendMessage(item, "_explosion", source);
             else
-                SetItem(dest, explosion_item);
+                SetItem(dest, MakeItem(explosion_item));
         }
         else
-            SetItem(dest, explosion_item);
+            SetItem(dest, MakeItem(explosion_item));
         if (Floor *floor = GetFloor(dest))
             SendMessage(floor, "_explosion");
     }
@@ -1855,7 +1855,7 @@
 
             case EXPLOSION_BLACKBOMB:
                 if (direct_neighbor) {
-                    explosion(center, dest, it_explosion1);
+                    explosion(center, dest, "it-explosion1");
                 } else {
                     // Note: should not ignite in non-enigma-mode!
                     if (stone) SendMessage(stone, "ignite");
@@ -1867,7 +1867,7 @@
             case EXPLOSION_WHITEBOMB:
                 // Note: at least in oxyd1 only direct neighbors
                 // explode, and the others not even ignite
-                explosion(center, dest, it_explosion3);            
+                explosion(center, dest, "it-explosion3");            
                 break;
     
             case EXPLOSION_BOMBSTONE:
@@ -2022,12 +2022,7 @@
     level->it_layer.set(p,it);
 }
 
-void SetItem (GridPos p, ItemID id) 
-{
-    SetItem (p, MakeItem (id));
-}
 
-
 /* -------------------- Actor manipulation -------------------- */
 
 void AddActor(double x, double y, Actor* a) 
@@ -2323,9 +2318,6 @@
 namespace
 {
     ObjectRepos *repos;
-    vector<Actor *> actor_repos(ac_COUNT);
-    vector<Stone *> stone_repos(st_COUNT);
-    vector<Item *> item_repos(it_COUNT);
 }
 
 
@@ -2381,22 +2373,12 @@
     Register(kind, o);
 }
 
-void RegisterStone (Stone *stone) 
-{
-    Register(static_cast<Object*>(stone));
-    StoneID id = get_id(stone);
-    ASSERT (id != st_INVALID, XLevelRuntime,
-        "RegisterStone: trying to register with invalid ID");
-    stone_repos[id] = stone;
-}
-
 void RegisterActor (Actor *actor) 
 {
     Register(static_cast<Object*>(actor));
     ActorID id = get_id(actor);
     ASSERT (id != ac_INVALID, XLevelRuntime,
         "RegisterActor: trying to register with invalid ID");
-    actor_repos[id] = actor;
 }
 
 void Repos_Shutdown() {
@@ -2440,25 +2422,7 @@
     return dynamic_cast<Actor*>(MakeObject(kind));
 }
 
-Actor *MakeActor (ActorID id) 
-{
-    if (Actor *ac = actor_repos[id])
-        return ac->clone();
-    else
-        ASSERT(0, XLevelRuntime, "MakeActor: no actor for ID defined");
-    return 0;
-}
 
-Stone *MakeStone (StoneID id) 
-{
-    if (Stone *st = stone_repos[id])
-        return st->clone();
-    else
-        ASSERT(0, XLevelRuntime, "MakeStone: no stone for ID defined");
-    return 0;
-}
-
-
 void DisposeObject(Object *o) {
     if (o != 0) {
         UnnameObject(o);
@@ -2493,17 +2457,8 @@
     ItemID id = get_id(item);
     ASSERT(id != it_INVALID, XLevelRuntime,
         "RegisterItem: trying to register with invalid ID");
-    item_repos[id] = item;
 }
 
-Item *MakeItem (ItemID id) 
-{
-    if (Item *it = item_repos[id])
-        return it->clone();
-    else
-        ASSERT(0, XLevelRuntime, "MakeItem: no item for ID defined");
-    return 0;
-}
 
 Item * MakeItem(const char *kind) {
     return dynamic_cast<Item*>(MakeObject(kind));

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-07-29 21:28:04 UTC (rev 1247)
+++ trunk/src/world.hh	2008-07-29 22:04:16 UTC (rev 1248)
@@ -279,7 +279,6 @@
 /* -------------------- Items -------------------- */
 
     void  SetItem (GridPos p, Item* it);
-    void  SetItem (GridPos p, ItemID id);
     Item *GetItem (GridPos p);
     Item *YieldItem (GridPos p);
     void  KillItem (GridPos p);
@@ -311,9 +310,7 @@
     Object *MakeObject (const char *kind);
     Floor  *MakeFloor (const char *kind);
     Stone  *MakeStone (const char *kind);
-    Stone  *MakeStone (StoneID id);
     Actor  *MakeActor (const char *kind);
-    Actor  *MakeActor (ActorID id);
 
     void DisposeObject(Object *o);
 
@@ -333,7 +330,6 @@
     void Register (const string &kind, Object *obj);
     void Register (const string &kind, Floor *obj);
     void Register (const string &kind, Stone *obj);
-    void RegisterStone (Stone *st);
     void RegisterActor (Actor *ac);
 
 
@@ -341,7 +337,6 @@
     void Register (const string &kind, Item *obj);
     void RegisterItem (Item *it);
     Item   *MakeItem (const char *kind);
-    Item   *MakeItem (ItemID id);
 
     /* Shutdown object repository */
     void Repos_Shutdown();



