From raoul at mail.berlios.de  Fri Feb  1 01:59:58 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Fri, 1 Feb 2008 01:59:58 +0100
Subject: [Enigma-game-svn] r1018 - trunk/doc/manual
Message-ID: <200802010059.m110xw6p019784@sheep.berlios.de>

Author: raoul
Date: 2008-02-01 01:59:58 +0100 (Fri, 01 Feb 2008)
New Revision: 1018

Modified:
   trunk/doc/manual/enigma_ru.html
Log:
-> Merged russian manual update (r848) from branch to trunk



Modified: trunk/doc/manual/enigma_ru.html
===================================================================
--- trunk/doc/manual/enigma_ru.html	2008-02-01 00:43:09 UTC (rev 1017)
+++ trunk/doc/manual/enigma_ru.html	2008-02-01 00:59:58 UTC (rev 1018)
@@ -56,7 +56,7 @@
 </tr></table>
 <h1 class="settitle">Enigma</h1>
 
-<p>??? ??????????? ????????? ??? ?????????? ? ?????? ? Enigma. ??? ????????????? 
+<p>??? ??????????? ?????????, ??? ?????????? ? ?????? ? Enigma. ??? ????????????? 
 ?????? Enigma ??? ??????? 1.00.
 </p>
 <p>Copyright &copy; 2003, 2004, 2005, 2006 Daniel Heck ? ?????? ?????????
@@ -128,7 +128,7 @@
 </tr></table>
 <h2 class="section"> 1.1 ?? Enigma </h2>
 
-<p>???????, ??? Enigma ? ????-??????????? ??? ?????????????. ?? ????? ???? Enigma 
+<p>???????, ??? Enigma -- ????-??????????? ??? ?????????????. ?? ????? ???? Enigma 
 ??? ???????? ????????? ???????????, ? ?????? ?? ?? 550 ?????????? ??????? ????? 
 ? ????? ????????? ?????????????????, ???????? ? ????????? ???? ???? ?? ????? ???????. 
 Enigma ?????? ? ????????, ????????? ? ???? ? ?????? ? ?????????. ??? ????? ???????? 
@@ -136,7 +136,7 @@
 ?? ??????????, ??? ????? ????????? ?????????. ???? ??? ???????? ????-??????????? 
 ? ? ??? ??????? ????, Enigma ???????? ?????? ??? ?? ?????????? ????? ?????.
 </p>
-<p>???? ???? ? ????? ? ??????? ???? <samp>`Oxyd'</samp>-?????? ??????????? ?????. ??????? ??. 
+<p>???? ???? -- ????? ? ??????? ???? <samp>`Oxyd'</samp>-?????? ??????????? ?????. ??????? ??. 
 ?????? ???????, ???! ??????? ???????, ???????? ?????????, ???????? ???? ?, ????? 
 ???????, ???????????? ??????????? ??????????? ?????? ????????????? ??? ?????? ???? 
 ? Oxyd-??????. ??????? ??????? Enigma (?? ????? ?????, ????? ?? ?? ???????) 
@@ -383,8 +383,8 @@
 
 </li><li>
 ?????? ? ???????????? ?????? ??????? ??????????????? ??? ?????? ????????????. 
-???????????? ??? ???????????????? ??????????? ??????? ??????. ??? ???????????? 
-????? ????, ??????? ?????? ???? ??????? ??????? ???????. ??????, ? ??????? ???? 
+???????????? ??? ??????????? ???????????????? ??????? ??????. ??? ???????????? 
+????? ????, ??????? ?????? ???? ??????? ??????? ???????. ??????, ? ??????? ???? 
 ????? ????? ??? ?????? ?????? ???????????? ????? ?????????? ??????? ????????????? 
 ??????. ? ???? ?????? ??????
 <kbd>&gt;&gt;|</kbd>  ?????????? ? ?????????? ?????? ? ?????? ???? ?????? ????????????.
@@ -459,7 +459,7 @@
 <p>? Enigma ???????????? ????? ???????. ?? ????? ????, ?????-????? ???????. ????? 
 ????????? ???????, ??? ?????? ? &quot;?????? ???????&quot;. ? ??-?? ????, ??? ?????? ????? 
 Enigma ????????? ?????? ???????, ?? ???? ??????? ?????? ??????? ? &quot;??????&quot;. 
-? ???????, ??? ??? ??????????? ????? ??? ??????.
+? ???????, ??? ??? ??????????? ?????, ??? ??????.
 </p>
 <p>????? ??????? ????? ???????, ??????? ? ???? &quot;????? ???????&quot;, ??????? ???????? 
 ?? ???????? ???? ??? ?? ???? ???????.
@@ -611,7 +611,7 @@
 <p>?????????? ?????? ?????, ??? ???? ??? ????? ?????????? ????? ????????? ??? ?????? 
 ?????? ??????? ASCII ? ??????????? ?? ??????? ? ??????? ???????? Enigma.
 </p>
-<p>??????? ??? ???? ?????? ??????????? ?? ??????. <samp>`-'</samp> ???????? ?????????? ??????. 
+<p>??????? ??? ???? ?????? ??????????? ?? ??????. <samp>`-'</samp> ???????? ?????????? ??????. 
 0 - ????? ??????, 5 - ??????????????, 10 - ????? ??????. ??????? ????? ??????? 
 ?????? ? ?????? ?????? (???????? (see section <a href="#SEC33">??????????? ?????</a>).
 </p>
@@ -704,8 +704,8 @@
 ????, ????? ??????????????. ? ????????? ????????? ??? ????? ??? ??????????.
 </p>
 <p>?????? ????? ????? ????????????, ???? ?????????? ?????? ?? ????????. ???? ?? 
-????? ???????? ?????? ? ?????????? ????, ??????? ???????????? ??? ????????????? 
-?????? ????? ???? ? ??????. ??? ??????????? ?????????? ??? ??????? ????, ????????? 
+????? ???????? ?????? -- ?????????? ????, ??????? ???????????? ??? ????????????? 
+?????? ????? ???? ? ??????. ??? ??????????? ??????????, ??? ??????? ????, ????????? 
 ?????????? ????? ? ????:
 </p>
 <p><img src="./images/intro-plank.png" alt="images/intro-plank">
@@ -713,7 +713,7 @@
 <p>??????? ??????? ??????????????? ???? ? ?????? ????????????? ?????????: ??????? 
 ??????? ?? ????, ????????, ????? ???? ?????????????, ? ?????????????? ???????? 
 ????? ? ????????? ??????. ? ?????? ????? ??????????, ???? ?? ????????? ?? ?????????? 
-????????? ?? ??????? ????? ?????? ????????? (????????? ???????-?-????? ????????? 
+????????? ?? ??????? ????? ?????? ????????? (????????? ??????? -- ????? ????????? 
 ?????? ? ???? ?????????).
 </p>
 <p>?????????, ?? ?? ????? ????????: ?? ???????? ? ?????? ?? ??????? ???????????? 
@@ -807,7 +807,7 @@
 <h2 class="section"> 2.3 ?????????? </h2>
 
 <p>????? ??????????? ?????????? ?? ????? ????. (?? ?? ??????? ?????????? ??? ????? 
-???????-?? ?????? ?????? ?????????? ???? ?????? ?? ????? ????, ????? ???????
+?????? -- ?? ?????? ?????? ?????????? ???? ?????? ?? ????? ????, ????? ???????
 <kbd>F1</kbd>.)
 </p>
 <dl compact="compact">
@@ -1013,7 +1013,7 @@
 </p>
 <p>????? ? ???????? ???????????? ? ?????????? ? ??????? ????????????. ???? ??? ??? 
 ??????????, ????? ??? ???????? ?? ??? ?????, ??? ?? ? ????????? ??? ?????????? 
-????, ?????? ???? ????? ????????? ? ?????? ??????. ???? ??? ???? ??????: ?????? 
+????, ?????? ????, ????? ????????? ? ?????? ??????. ???? ??? ???? ??????: ?????? 
 ? ?????, ??????? ????????????? ????????? ????? ?????????????? ??????? ? ?????? ?????.
 </p>
 
@@ -1671,10 +1671,10 @@
 ??? ?????, ??????? ?? ?????????? ??????????.
 </p>
 <p>??????????? ? ???? ??????? (?? ???? ?? ???????? ????????? ????). ??? ????? 
-?????? ????? ???? ???????? ????? ? ????? ???? ???????.
+?????? ????? ???? ???????? ????? ?????? ???? ???????.
 </p>
 <p>?????? ??????: ???????? ????? ??? ????? (?? ???????? ???????? ????? ?????? 
-????????????? ????) ????? ?????????? ??? (??? ????? ??????????? ?????????? 
+????????????? ????), ????? ?????????? ??? (??? ????? ??????????? ?????????? 
 ???????). ???????? ????? ? ???????? ?????? ???????? ????? ??? ????? ????? 
 ????????????? ????, ????? ?? ?? ???????????. ?????? ????? ????? ?????? ????????????? 
 ???? ? ????????? ????? ??? ????? ??????. ???????? ?????? ???????? ????? ??? ????? 
@@ -1694,7 +1694,7 @@
 ????????-??????? ???? ???? ??????? ? ???????-?????. ?? ?????? ???? ????????? ????? 
 ??????????? ?????????. ???????? ????? ???? ?????, ???? ?? ?? ????????? ???? ???? ? 
 ?? ?? ???????? ???? ???????? ?????????????. ????????? ?????????????, ????? ??????? 
-?????? ? ????????? ?? ?????? ??????? ? ?????? ??????, ?????? ???? ???????.
+?????? ? ????????? ?? ?????? ??????? -- ?????? ??????, ?????? ???? ???????.
 </p>
 <p>?????? ??????: ?????? ???????? ????????? ????, ?? ???????? ???????? ?????, ?? 
 ????????????? ? ???????, ??? ?? ????????. ????????? ? ??????? ????? ?? ???--?????? 
@@ -1731,8 +1731,8 @@
 </p>
 <p>??????? 1: ??? ????? ???? ?????? ??????? ? ?????? ??????. ???????? ??????-????? 
 ??????? ?? ???? ??????? ???? ? ????????? ??? ???, ????? ??? ????????? ????????? 
-&quot;\&quot; ????? ???????????? ?? ???? (????? ?????? ?? ?????? ?????? ???? ???????? 
-?????????). ???????? ???????-????? ??????? ?? ?????? ????????? ?????, ?? ???? 
+&quot;\&quot; ????? ???????????? ?? ???? (??? ?????? ???? ????? ? ???????? ????????? ????? ?? ??????). 
+???????? ???????-????? ??????? ?? ?????? ????????? ?????, ?? ???? 
 ??????? ???? ? ????????? ???, ????? ??? ???? ?????? ?? &quot;/&quot; (??? ?????? ???? ? 
 ??????? ????????? ?? ??????????? ??????? ? ????? ??? ???). ???????? ???????-?????? 
 ??????? ?? ??? ???????? ?????, ? ????? ?? ??? ???????? ?????? (??? ?????? ???? 
@@ -1745,7 +1745,7 @@
 ? ??????? ?????, ???????? ???????? ????? ???? ?? ?????. ???????? ?????????? ?????? 
 (????), ????????? ??????? ? ???????? ?????? ????. ?????? ??????? ???? ?? ????? ?? 
 ???????? ? ???????? ?? ??? ???????. ???????? ??? ?????? ?? ????????? ???? ???????, 
-????? ??????? ?????. ???????? ??????? ????? (???????? ? ??????? ?????), ????? ??????? 
+????? ??????? ???????. ???????? ??????? ??????? (???????? ? ??????? ?????), ????? ??????? 
 ???. ???? ?? ?????? ????????? ?????????????? ?????, ?? ?????? ?????????? ??????? ??? 
 ??????? ?????? ? ???????? ??????? ?????? ? ??????????? ????????? (????? ???????, 
 ?? ??????). ????? ????????? ? ??????? ? ????????, ????????? ??????? ? ?? ????????? 



From raoulb at bluewin.ch  Fri Feb  1 02:03:53 2008
From: raoulb at bluewin.ch (Raoul)
Date: Fri, 1 Feb 2008 02:03:53 +0100
Subject: [Enigma-game-svn] revision 1017
Message-ID: <20080201020353.13d00c7e@bluewin.ch>

-> Merged levelupdates/additions from branch (759:HEAD) to trunk


From ral at mail.berlios.de  Fri Feb  1 21:32:47 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 1 Feb 2008 21:32:47 +0100
Subject: [Enigma-game-svn] r1019 - homepage/input
Message-ID: <200802012032.m11KWlln006468@sheep.berlios.de>

Author: ral
Date: 2008-02-01 21:32:46 +0100 (Fri, 01 Feb 2008)
New Revision: 1019

Modified:
   homepage/input/infobox.html
   homepage/input/infobox_de.html
   homepage/input/stat-other.html
   homepage/input/table-hcp.html
   homepage/input/table-rat.html
   homepage/input/table-solved.html
   homepage/input/table-wr.html
   homepage/input/userlist.html
Log:
Homepage:
- statistics January 2008
- infobox: 100% solved announcement

Modified: homepage/input/infobox.html
===================================================================
--- homepage/input/infobox.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/infobox.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,9 +1,8 @@
     <div class="infobody">
        <div class="info">
-         <h3>Happy IV/2!</h3>
-         The Enigma Team wishes everyone a Happy New Year!
-         Let's hope for many new levels in 2008&mdash;some are
-         already in the starting blocks &hellip;
+         <h3>100% Solved!</h3>
+         Congratulations to our Japanese user Ryujun who succeeded first
+         in solving all levels of Enigma 1.01 in easy and difficult mode.
          <!--<h3>Level of the Month</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>

Modified: homepage/input/infobox_de.html
===================================================================
--- homepage/input/infobox_de.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/infobox_de.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,9 +1,9 @@
     <div class="infobody">
        <div class="info">
-         <h3>Frohes IV/2!</h3>
-         Das Enigma-Team w&uuml;nscht allen ein frohes neues Jahr!
-         Lasst uns auf viele neue Levels in 2008 hoffen - einige
-         stehen bereits in den Startbl&ouml;cken &hellip;
+         <h3>100% Gel?st!</h3>
+         Gl&uuml;ckwunsch an unseren japanischen Spieler Ryujun, dem es
+	 als erstem gelungen ist, alle Level von Enigma 1.01 im einfachen
+	 und im schwierigen Modus zu l?sen.
          <!--<h3>Level des Monats</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>

Modified: homepage/input/stat-other.html
===================================================================
--- homepage/input/stat-other.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/stat-other.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,22 +1,22 @@
   <div class="stat-help">
     <h3>$$Other_Statistics$$</h3>
     <h4>$$Scores$$</h4>
-      67135 $$single_level_scores$$.
+      70191 $$single_level_scores$$.
     <h4>$$Ratings$$</h4>
-      12983 $$single_level_ratings$$ 4.86 $$and_distribution$$: 
+      13727 $$single_level_ratings$$ 4.89 $$and_distribution$$: 
       <table>
         <colgroup><col width="80"><col width="80"></colgroup>
         <tr><th>$$rating$$</th><th>$$count$$</th></tr>
-        <tr><td class="num">0</td><td class="num">47</td></tr>
-        <tr><td class="num">1</td><td class="num">247</td></tr>
-        <tr><td class="num">2</td><td class="num">690</td></tr>
-        <tr><td class="num">3</td><td class="num">1937</td></tr>
-        <tr><td class="num">4</td><td class="num">2547</td></tr>
-        <tr><td class="num">5</td><td class="num">3102</td></tr>
-        <tr><td class="num">6</td><td class="num">2139</td></tr>
-        <tr><td class="num">7</td><td class="num">1446</td></tr>
-        <tr><td class="num">8</td><td class="num">518</td></tr>
-        <tr><td class="num">9</td><td class="num">213</td></tr>
-        <tr><td class="num">10</td><td class="num">97</td></tr>
+        <tr><td class="num">0</td><td class="num">55</td></tr>
+        <tr><td class="num">1</td><td class="num">264</td></tr>
+        <tr><td class="num">2</td><td class="num">721</td></tr>
+        <tr><td class="num">3</td><td class="num">2002</td></tr>
+        <tr><td class="num">4</td><td class="num">2642</td></tr>
+        <tr><td class="num">5</td><td class="num">3287</td></tr>
+        <tr><td class="num">6</td><td class="num">2284</td></tr>
+        <tr><td class="num">7</td><td class="num">1565</td></tr>
+        <tr><td class="num">8</td><td class="num">578</td></tr>
+        <tr><td class="num">9</td><td class="num">229</td></tr>
+        <tr><td class="num">10</td><td class="num">100</td></tr>
       </table>
   </div>

Modified: homepage/input/table-hcp.html
===================================================================
--- homepage/input/table-hcp.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/table-hcp.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,129 +1,132 @@
   <table>
-    <caption>$$Handicap_Statistics$$ $$December$$ 2007</caption>
+    <caption>$$Handicap_Statistics$$ $$January$$ 2008</caption>
     <colgroup><col width="130"><col width="220"></colgroup>
     <tr><th>$$solved_hcp$$</th><th class="left">$$user$$</th></tr>
-     <tr><td class="num">-136.2</td><td class="left">'Moneymaker'</td></tr>
-     <tr><td class="num"> -85.4</td><td class="left">'Stupid'</td></tr>
-     <tr><td class="num"> -85.4</td><td class="left">'Johannes'</td></tr>
-     <tr><td class="num"> -73.2</td><td class="left">'Great Scott'</td></tr>
-     <tr><td class="num"> -63.4</td><td class="left">'Duffy'</td></tr>
-     <tr><td class="num"> -59.2</td><td class="left">'daydreamer'</td></tr>
-     <tr><td class="num"> -48.2</td><td class="left">'Django'</td></tr>
-     <tr><td class="num"> -44.5</td><td class="left">'Alexandros'</td></tr>
-     <tr><td class="num"> -42.4</td><td class="left">'Taztunes'</td></tr>
-     <tr><td class="num"> -39.4</td><td class="left">'Safalra'</td></tr>
-     <tr><td class="num"> -34.6</td><td class="left">'Gloop'</td></tr>
-     <tr><td class="num"> -31.1</td><td class="left">'ryujun'</td></tr>
-     <tr><td class="num"> -29.0</td><td class="left">'bojster'</td></tr>
-     <tr><td class="num"> -25.1</td><td class="left">'hendrik'</td></tr>
-     <tr><td class="num"> -23.5</td><td class="left">'ABS'</td></tr>
-     <tr><td class="num"> -23.4</td><td class="left">'B-Huff'</td></tr>
-     <tr><td class="num"> -22.2</td><td class="left">'ged'</td></tr>
-     <tr><td class="num"> -21.5</td><td class="left">'Zekobah'</td></tr>
-     <tr><td class="num"> -20.8</td><td class="left">'Raoul'</td></tr>
-     <tr><td class="num"> -20.5</td><td class="left">'Ludmian'</td></tr>
-     <tr><td class="num"> -20.4</td><td class="left">'Emmanuel'</td></tr>
-     <tr><td class="num"> -17.5</td><td class="left">'Ghatotkacha'</td></tr>
-     <tr><td class="num"> -17.0</td><td class="left">'Ronald'</td></tr>
-     <tr><td class="num"> -16.2</td><td class="left">'dev0'</td></tr>
-     <tr><td class="num"> -14.6</td><td class="left">'dpl'</td></tr>
-     <tr><td class="num"> -14.5</td><td class="left">'Lukas'</td></tr>
-     <tr><td class="num"> -13.1</td><td class="left">'HuB34'</td></tr>
-     <tr><td class="num">  -9.4</td><td class="left">'joseba'</td></tr>
-     <tr><td class="num">  -8.8</td><td class="left">'Iceshark7'</td></tr>
-     <tr><td class="num">  -5.9</td><td class="left">'Daniel'</td></tr>
-     <tr><td class="num">  -4.6</td><td class="left">'fabian'</td></tr>
-     <tr><td class="num">  -3.6</td><td class="left">'Craven'</td></tr>
-     <tr><td class="num">  -3.1</td><td class="left">'JuSt'</td></tr>
-     <tr><td class="num">  -2.4</td><td class="left">'Wuzzy'</td></tr>
-     <tr><td class="num">  -0.2</td><td class="left">'para_doks'</td></tr>
-     <tr><td class="num">  -0.0</td><td class="left">'Tobias'</td></tr>
-     <tr><td class="num">   1.4</td><td class="left">'Guglielmo'</td></tr>
-     <tr><td class="num">   2.4</td><td class="left">'Andy'</td></tr>
-     <tr><td class="num">   2.7</td><td class="left">'serpent'</td></tr>
-     <tr><td class="num">   4.7</td><td class="left">'Austin'</td></tr>
-     <tr><td class="num">   6.8</td><td class="left">'mrduke'</td></tr>
-     <tr><td class="num">   9.6</td><td class="left">'ShadowPhrogg32642342'</td></tr>
-     <tr><td class="num">  11.0</td><td class="left">'Andreas'</td></tr>
-     <tr><td class="num">  11.7</td><td class="left">'alfred69'</td></tr>
-     <tr><td class="num">  12.3</td><td class="left">'Chocolate Zero'</td></tr>
-     <tr><td class="num">  13.1</td><td class="left">'Sim_Ed'</td></tr>
-     <tr><td class="num">  13.5</td><td class="left">'shoki'</td></tr>
-     <tr><td class="num">  13.5</td><td class="left">'Agnieszka'</td></tr>
-     <tr><td class="num">  14.1</td><td class="left">'Mark P.'</td></tr>
-     <tr><td class="num">  15.8</td><td class="left">'U-Punkt'</td></tr>
-     <tr><td class="num">  16.8</td><td class="left">'Tiza'</td></tr>
-     <tr><td class="num">  17.8</td><td class="left">'Alex'</td></tr>
-     <tr><td class="num">  20.9</td><td class="left">'Klaus'</td></tr>
-     <tr><td class="num">  21.2</td><td class="left">'Marc-Hendrik'</td></tr>
-     <tr><td class="num">  21.4</td><td class="left">'Chris'</td></tr>
-     <tr><td class="num">  22.3</td><td class="left">'Bent'</td></tr>
-     <tr><td class="num">  22.3</td><td class="left">'Thomas'</td></tr>
-     <tr><td class="num">  23.0</td><td class="left">'hdwow'</td></tr>
-     <tr><td class="num">  23.6</td><td class="left">'Gottseinsohn'</td></tr>
-     <tr><td class="num">  24.6</td><td class="left">'Ale'</td></tr>
-     <tr><td class="num">  26.0</td><td class="left">'Little_Mole'</td></tr>
-     <tr><td class="num">  26.1</td><td class="left">'J3FF'</td></tr>
-     <tr><td class="num">  27.0</td><td class="left">'biotopa'</td></tr>
-     <tr><td class="num">  28.4</td><td class="left">'redsantz'</td></tr>
-     <tr><td class="num">  28.8</td><td class="left">'geembo_90'</td></tr>
-     <tr><td class="num">  29.6</td><td class="left">'Edgar_Flesk'</td></tr>
-     <tr><td class="num">  29.9</td><td class="left">'Melanie'</td></tr>
-     <tr><td class="num">  30.1</td><td class="left">'IChrisI'</td></tr>
-     <tr><td class="num">  30.3</td><td class="left">'erich'</td></tr>
-     <tr><td class="num">  30.4</td><td class="left">'NorthForty'</td></tr>
-     <tr><td class="num">  31.0</td><td class="left">'Davacardo'</td></tr>
-     <tr><td class="num">  32.0</td><td class="left">'Vinksu'</td></tr>
-     <tr><td class="num">  32.2</td><td class="left">'Gorn'</td></tr>
-     <tr><td class="num">  33.7</td><td class="left">'niebie'</td></tr>
-     <tr><td class="num">  33.8</td><td class="left">'WP319'</td></tr>
-     <tr><td class="num">  33.9</td><td class="left">'MicWa'</td></tr>
-     <tr><td class="num">  35.7</td><td class="left">'Rugby4ever'</td></tr>
-     <tr><td class="num">  37.5</td><td class="left">'Drotten'</td></tr>
-     <tr><td class="num">  38.1</td><td class="left">'Archcorenth'</td></tr>
-     <tr><td class="num">  38.2</td><td class="left">'B-man'</td></tr>
-     <tr><td class="num">  38.2</td><td class="left">'Harry Lim'</td></tr>
-     <tr><td class="num">  39.6</td><td class="left">'Nfol'</td></tr>
-     <tr><td class="num">  39.7</td><td class="left">'Tiger'</td></tr>
-     <tr><td class="num">  40.5</td><td class="left">'Snaily'</td></tr>
-     <tr><td class="num">  40.8</td><td class="left">'Vlad'</td></tr>
-     <tr><td class="num">  41.8</td><td class="left">'Momcat'</td></tr>
-     <tr><td class="num">  42.4</td><td class="left">'Uli'</td></tr>
+     <tr><td class="num">-136.5</td><td class="left">'Moneymaker'</td></tr>
+     <tr><td class="num"> -83.0</td><td class="left">'Johannes'</td></tr>
+     <tr><td class="num"> -82.8</td><td class="left">'Stupid'</td></tr>
+     <tr><td class="num"> -71.4</td><td class="left">'Great Scott'</td></tr>
+     <tr><td class="num"> -61.2</td><td class="left">'Duffy'</td></tr>
+     <tr><td class="num"> -60.1</td><td class="left">'Malla'</td></tr>
+     <tr><td class="num"> -56.8</td><td class="left">'daydreamer'</td></tr>
+     <tr><td class="num"> -46.2</td><td class="left">'Django'</td></tr>
+     <tr><td class="num"> -44.0</td><td class="left">'Gloop'</td></tr>
+     <tr><td class="num"> -42.9</td><td class="left">'Alexandros'</td></tr>
+     <tr><td class="num"> -40.5</td><td class="left">'Taztunes'</td></tr>
+     <tr><td class="num"> -39.3</td><td class="left">'ryujun'</td></tr>
+     <tr><td class="num"> -37.5</td><td class="left">'Safalra'</td></tr>
+     <tr><td class="num"> -29.3</td><td class="left">'B-Huff'</td></tr>
+     <tr><td class="num"> -27.6</td><td class="left">'Zekobah'</td></tr>
+     <tr><td class="num"> -27.4</td><td class="left">'bojster'</td></tr>
+     <tr><td class="num"> -23.9</td><td class="left">'hendrik'</td></tr>
+     <tr><td class="num"> -22.9</td><td class="left">'dev0'</td></tr>
+     <tr><td class="num"> -22.0</td><td class="left">'ABS'</td></tr>
+     <tr><td class="num"> -21.2</td><td class="left">'ged'</td></tr>
+     <tr><td class="num"> -21.1</td><td class="left">'Ludmian'</td></tr>
+     <tr><td class="num"> -19.8</td><td class="left">'Raoul'</td></tr>
+     <tr><td class="num"> -19.5</td><td class="left">'Emmanuel'</td></tr>
+     <tr><td class="num"> -16.3</td><td class="left">'Ghatotkacha'</td></tr>
+     <tr><td class="num"> -15.4</td><td class="left">'Ronald'</td></tr>
+     <tr><td class="num"> -13.2</td><td class="left">'dpl'</td></tr>
+     <tr><td class="num"> -12.6</td><td class="left">'Lukas'</td></tr>
+     <tr><td class="num"> -11.8</td><td class="left">'HuB34'</td></tr>
+     <tr><td class="num">  -8.9</td><td class="left">'joseba'</td></tr>
+     <tr><td class="num">  -8.5</td><td class="left">'Iceshark7'</td></tr>
+     <tr><td class="num">  -4.7</td><td class="left">'Daniel'</td></tr>
+     <tr><td class="num">  -3.5</td><td class="left">'fabian'</td></tr>
+     <tr><td class="num">  -1.9</td><td class="left">'Craven'</td></tr>
+     <tr><td class="num">  -1.6</td><td class="left">'JuSt'</td></tr>
+     <tr><td class="num">  -1.4</td><td class="left">'Wuzzy'</td></tr>
+     <tr><td class="num">   1.3</td><td class="left">'para_doks'</td></tr>
+     <tr><td class="num">   1.4</td><td class="left">'Tobias'</td></tr>
+     <tr><td class="num">   2.4</td><td class="left">'Guglielmo'</td></tr>
+     <tr><td class="num">   3.7</td><td class="left">'Andy'</td></tr>
+     <tr><td class="num">   3.7</td><td class="left">'serpent'</td></tr>
+     <tr><td class="num">   4.6</td><td class="left">'U-Punkt'</td></tr>
+     <tr><td class="num">   5.8</td><td class="left">'Austin'</td></tr>
+     <tr><td class="num">   8.1</td><td class="left">'mrduke'</td></tr>
+     <tr><td class="num">  10.5</td><td class="left">'ShadowPhrogg32642342'</td></tr>
+     <tr><td class="num">  12.2</td><td class="left">'Andreas'</td></tr>
+     <tr><td class="num">  12.7</td><td class="left">'alfred69'</td></tr>
+     <tr><td class="num">  12.9</td><td class="left">'Chocolate Zero'</td></tr>
+     <tr><td class="num">  13.9</td><td class="left">'Tiza'</td></tr>
+     <tr><td class="num">  14.0</td><td class="left">'Sim_Ed'</td></tr>
+     <tr><td class="num">  14.3</td><td class="left">'Agnieszka'</td></tr>
+     <tr><td class="num">  14.6</td><td class="left">'shoki'</td></tr>
+     <tr><td class="num">  15.1</td><td class="left">'Mark P.'</td></tr>
+     <tr><td class="num">  19.0</td><td class="left">'Alex'</td></tr>
+     <tr><td class="num">  21.7</td><td class="left">'Klaus'</td></tr>
+     <tr><td class="num">  21.9</td><td class="left">'Marc-Hendrik'</td></tr>
+     <tr><td class="num">  22.2</td><td class="left">'Chris'</td></tr>
+     <tr><td class="num">  22.9</td><td class="left">'Bent'</td></tr>
+     <tr><td class="num">  23.1</td><td class="left">'Thomas'</td></tr>
+     <tr><td class="num">  23.8</td><td class="left">'hdwow'</td></tr>
+     <tr><td class="num">  24.5</td><td class="left">'Gottseinsohn'</td></tr>
+     <tr><td class="num">  25.5</td><td class="left">'Ale'</td></tr>
+     <tr><td class="num">  26.7</td><td class="left">'J3FF'</td></tr>
+     <tr><td class="num">  26.8</td><td class="left">'Little_Mole'</td></tr>
+     <tr><td class="num">  28.1</td><td class="left">'biotopa'</td></tr>
+     <tr><td class="num">  28.7</td><td class="left">'oblo'</td></tr>
+     <tr><td class="num">  29.1</td><td class="left">'redsantz'</td></tr>
+     <tr><td class="num">  29.2</td><td class="left">'geembo_90'</td></tr>
+     <tr><td class="num">  30.1</td><td class="left">'Edgar_Flesk'</td></tr>
+     <tr><td class="num">  30.7</td><td class="left">'Melanie'</td></tr>
+     <tr><td class="num">  30.7</td><td class="left">'IChrisI'</td></tr>
+     <tr><td class="num">  30.9</td><td class="left">'Vinksu'</td></tr>
+     <tr><td class="num">  31.1</td><td class="left">'NorthForty'</td></tr>
+     <tr><td class="num">  31.2</td><td class="left">'erich'</td></tr>
+     <tr><td class="num">  31.5</td><td class="left">'Davacardo'</td></tr>
+     <tr><td class="num">  32.0</td><td class="left">'Gorn'</td></tr>
+     <tr><td class="num">  34.3</td><td class="left">'niebie'</td></tr>
+     <tr><td class="num">  34.3</td><td class="left">'MicWa'</td></tr>
+     <tr><td class="num">  34.6</td><td class="left">'WP319'</td></tr>
+     <tr><td class="num">  34.8</td><td class="left">'Kosby'</td></tr>
+     <tr><td class="num">  36.4</td><td class="left">'Rugby4ever'</td></tr>
+     <tr><td class="num">  38.0</td><td class="left">'Drotten'</td></tr>
+     <tr><td class="num">  38.5</td><td class="left">'Archcorenth'</td></tr>
+     <tr><td class="num">  38.6</td><td class="left">'Harry Lim'</td></tr>
+     <tr><td class="num">  38.7</td><td class="left">'B-man'</td></tr>
+     <tr><td class="num">  39.8</td><td class="left">'Nfol'</td></tr>
+     <tr><td class="num">  40.3</td><td class="left">'Tiger'</td></tr>
+     <tr><td class="num">  40.9</td><td class="left">'Snaily'</td></tr>
+     <tr><td class="num">  41.3</td><td class="left">'Vlad'</td></tr>
+     <tr><td class="num">  42.2</td><td class="left">'Momcat'</td></tr>
+     <tr><td class="num">  42.3</td><td class="left">'Liam Sheehan'</td></tr>
+     <tr><td class="num">  42.8</td><td class="left">'Uli'</td></tr>
      <tr><td class="num">  42.8</td><td class="left">'Breezy'</td></tr>
-     <tr><td class="num">  44.0</td><td class="left">'Tarim'</td></tr>
-     <tr><td class="num">  44.1</td><td class="left">'Liam Sheehan'</td></tr>
-     <tr><td class="num">  44.9</td><td class="left">'IntKecsk'</td></tr>
-     <tr><td class="num">  45.2</td><td class="left">'Antonio EE'</td></tr>
-     <tr><td class="num">  46.2</td><td class="left">'ntaeijr'</td></tr>
-     <tr><td class="num">  46.6</td><td class="left">'mhatta'</td></tr>
-     <tr><td class="num">  47.8</td><td class="left">'Zak'</td></tr>
-     <tr><td class="num">  48.4</td><td class="left">'Valkyrie2'</td></tr>
-     <tr><td class="num">  48.9</td><td class="left">'Sandra'</td></tr>
-     <tr><td class="num">  49.8</td><td class="left">'jdcampo'</td></tr>
-     <tr><td class="num">  50.2</td><td class="left">'Jeffrey S'</td></tr>
-     <tr><td class="num">  51.0</td><td class="left">'brynn'</td></tr>
-     <tr><td class="num">  51.1</td><td class="left">'Vaily'</td></tr>
-     <tr><td class="num">  52.3</td><td class="left">'Turbogurk'</td></tr>
-     <tr><td class="num">  52.4</td><td class="left">'Neophilus'</td></tr>
-     <tr><td class="num">  52.6</td><td class="left">'Cyphase'</td></tr>
-     <tr><td class="num">  54.8</td><td class="left">'krazy62'</td></tr>
-     <tr><td class="num">  55.7</td><td class="left">'Adonica'</td></tr>
-     <tr><td class="num">  61.1</td><td class="left">'Asbel'</td></tr>
-     <tr><td class="num">  62.9</td><td class="left">'Meeve'</td></tr>
-     <tr><td class="num">  65.6</td><td class="left">'ael'</td></tr>
-     <tr><td class="num">  66.0</td><td class="left">'Samuel'</td></tr>
-     <tr><td class="num">  67.0</td><td class="left">'Alf'</td></tr>
-     <tr><td class="num">  68.5</td><td class="left">'Magnus and Susi'</td></tr>
-     <tr><td class="num">  68.6</td><td class="left">'Mecki'</td></tr>
-     <tr><td class="num">  69.7</td><td class="left">'xmouse'</td></tr>
-     <tr><td class="num">  71.3</td><td class="left">'Joona'</td></tr>
-     <tr><td class="num">  71.6</td><td class="left">'AQZ'</td></tr>
-     <tr><td class="num">  73.6</td><td class="left">'Dvorhagen'</td></tr>
-     <tr><td class="num">  74.6</td><td class="left">'jojo'</td></tr>
-     <tr><td class="num">  74.7</td><td class="left">'AsuCaga'</td></tr>
-     <tr><td class="num">  79.3</td><td class="left">'AkRa'</td></tr>
-     <tr><td class="num">  79.9</td><td class="left">'Agares'</td></tr>
-     <tr><td class="num">  84.6</td><td class="left">'Miel56'</td></tr>
-     <tr><td class="num">  89.8</td><td class="left">'The red O'</td></tr>
-     <tr><td class="num">  92.2</td><td class="left">'Michael'</td></tr>
+     <tr><td class="num">  44.7</td><td class="left">'Tarim'</td></tr>
+     <tr><td class="num">  45.2</td><td class="left">'IntKecsk'</td></tr>
+     <tr><td class="num">  45.6</td><td class="left">'Antonio EE'</td></tr>
+     <tr><td class="num">  46.5</td><td class="left">'ntaeijr'</td></tr>
+     <tr><td class="num">  46.9</td><td class="left">'mhatta'</td></tr>
+     <tr><td class="num">  48.3</td><td class="left">'Zak'</td></tr>
+     <tr><td class="num">  48.9</td><td class="left">'Valkyrie2'</td></tr>
+     <tr><td class="num">  49.2</td><td class="left">'Sandra'</td></tr>
+     <tr><td class="num">  50.2</td><td class="left">'jdcampo'</td></tr>
+     <tr><td class="num">  50.7</td><td class="left">'Jeffrey S'</td></tr>
+     <tr><td class="num">  51.5</td><td class="left">'Vaily'</td></tr>
+     <tr><td class="num">  51.6</td><td class="left">'brynn'</td></tr>
+     <tr><td class="num">  52.7</td><td class="left">'Turbogurk'</td></tr>
+     <tr><td class="num">  52.8</td><td class="left">'Neophilus'</td></tr>
+     <tr><td class="num">  52.8</td><td class="left">'Cyphase'</td></tr>
+     <tr><td class="num">  55.1</td><td class="left">'krazy62'</td></tr>
+     <tr><td class="num">  55.9</td><td class="left">'Adonica'</td></tr>
+     <tr><td class="num">  61.3</td><td class="left">'Asbel'</td></tr>
+     <tr><td class="num">  61.6</td><td class="left">'Mecki'</td></tr>
+     <tr><td class="num">  63.3</td><td class="left">'Meeve'</td></tr>
+     <tr><td class="num">  65.8</td><td class="left">'ael'</td></tr>
+     <tr><td class="num">  66.1</td><td class="left">'Samuel'</td></tr>
+     <tr><td class="num">  67.2</td><td class="left">'Alf'</td></tr>
+     <tr><td class="num">  68.7</td><td class="left">'Magnus and Susi'</td></tr>
+     <tr><td class="num">  69.9</td><td class="left">'xmouse'</td></tr>
+     <tr><td class="num">  71.5</td><td class="left">'Joona'</td></tr>
+     <tr><td class="num">  71.8</td><td class="left">'AQZ'</td></tr>
+     <tr><td class="num">  73.7</td><td class="left">'Dvorhagen'</td></tr>
+     <tr><td class="num">  74.7</td><td class="left">'jojo'</td></tr>
+     <tr><td class="num">  74.9</td><td class="left">'AsuCaga'</td></tr>
+     <tr><td class="num">  79.5</td><td class="left">'AkRa'</td></tr>
+     <tr><td class="num">  80.1</td><td class="left">'Agares'</td></tr>
+     <tr><td class="num">  84.7</td><td class="left">'Miel56'</td></tr>
+     <tr><td class="num">  89.9</td><td class="left">'The red O'</td></tr>
+     <tr><td class="num">  92.3</td><td class="left">'Michael'</td></tr>
   </table>

Modified: homepage/input/table-rat.html
===================================================================
--- homepage/input/table-rat.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/table-rat.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,37 +1,39 @@
   <table>
-    <caption>$$Rating_Statistics$$ $$December$$ 2007</caption>
+    <caption>$$Rating_Statistics$$ $$January$$ 2008</caption>
     <colgroup><col width="80"><col width="80"><col width="220"></colgroup>
-    <tr><th>$$count$$</th><th>$$average$$</th><th class="left">$$user$$</th></tr>    <tr><td class="num">1058</td><td class="num"> 5.05</td><td class="left">'ryujun'</td></tr>
+    <tr><th>$$count$$</th><th>$$average$$</th><th class="left">$$user$$</th></tr>    <tr><td class="num">1062</td><td class="num"> 5.06</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1056</td><td class="num"> 4.83</td><td class="left">'Taztunes'</td></tr>
     <tr><td class="num">871</td><td class="num"> 5.09</td><td class="left">'Stupid'</td></tr>
     <tr><td class="num">853</td><td class="num"> 4.78</td><td class="left">'daydreamer'</td></tr>
-    <tr><td class="num">713</td><td class="num"> 4.78</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num">780</td><td class="num"> 4.89</td><td class="left">'dev0'</td></tr>
     <tr><td class="num">653</td><td class="num"> 5.01</td><td class="left">'Duffy'</td></tr>
-    <tr><td class="num">625</td><td class="num"> 4.98</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">627</td><td class="num"> 4.99</td><td class="left">'Moneymaker'</td></tr>
     <tr><td class="num">613</td><td class="num"> 4.20</td><td class="left">'shoki'</td></tr>
+    <tr><td class="num">571</td><td class="num"> 4.81</td><td class="left">'U-Punkt'</td></tr>
+    <tr><td class="num">517</td><td class="num"> 4.96</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num">511</td><td class="num"> 5.30</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num">505</td><td class="num"> 5.07</td><td class="left">'dpl'</td></tr>
-    <tr><td class="num">464</td><td class="num"> 5.02</td><td class="left">'Ronald'</td></tr>
-    <tr><td class="num">461</td><td class="num"> 4.89</td><td class="left">'B-Huff'</td></tr>
+    <tr><td class="num">467</td><td class="num"> 5.03</td><td class="left">'Ronald'</td></tr>
     <tr><td class="num">448</td><td class="num"> 5.08</td><td class="left">'Johannes'</td></tr>
-    <tr><td class="num">432</td><td class="num"> 4.23</td><td class="left">'Alexandros'</td></tr>
+    <tr><td class="num">433</td><td class="num"> 4.24</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num">424</td><td class="num"> 4.35</td><td class="left">'ged'</td></tr>
-    <tr><td class="num">379</td><td class="num"> 4.93</td><td class="left">'U-Punkt'</td></tr>
-    <tr><td class="num">348</td><td class="num"> 4.09</td><td class="left">'Vinksu'</td></tr>
+    <tr><td class="num">388</td><td class="num"> 4.86</td><td class="left">'Gloop'</td></tr>
+    <tr><td class="num">369</td><td class="num"> 4.04</td><td class="left">'Vinksu'</td></tr>
     <tr><td class="num">307</td><td class="num"> 4.01</td><td class="left">'Sim_Ed'</td></tr>
-    <tr><td class="num">282</td><td class="num"> 4.59</td><td class="left">'ABS'</td></tr>
-    <tr><td class="num">275</td><td class="num"> 4.68</td><td class="left">'Gloop'</td></tr>
+    <tr><td class="num">285</td><td class="num"> 4.60</td><td class="left">'ABS'</td></tr>
     <tr><td class="num">254</td><td class="num"> 4.91</td><td class="left">'JuSt'</td></tr>
     <tr><td class="num">208</td><td class="num"> 6.15</td><td class="left">'Momcat'</td></tr>
+    <tr><td class="num">200</td><td class="num"> 5.74</td><td class="left">'Malla'</td></tr>
     <tr><td class="num">187</td><td class="num"> 5.05</td><td class="left">'WP319'</td></tr>
     <tr><td class="num">135</td><td class="num"> 4.13</td><td class="left">'Edgar_Flesk'</td></tr>
     <tr><td class="num">129</td><td class="num"> 5.64</td><td class="left">'Raoul'</td></tr>
-    <tr><td class="num"> 99</td><td class="num"> 5.01</td><td class="left">'Tiza'</td></tr>
+    <tr><td class="num">118</td><td class="num"> 5.01</td><td class="left">'Tiza'</td></tr>
     <tr><td class="num"> 97</td><td class="num"> 4.16</td><td class="left">'Safalra'</td></tr>
     <tr><td class="num"> 85</td><td class="num"> 4.76</td><td class="left">'para_doks'</td></tr>
     <tr><td class="num"> 72</td><td class="num"> 5.63</td><td class="left">'Wuzzy'</td></tr>
     <tr><td class="num"> 51</td><td class="num"> 6.39</td><td class="left">'Little_Mole'</td></tr>
     <tr><td class="num"> 50</td><td class="num"> 5.26</td><td class="left">'Daniel'</td></tr>
+    <tr><td class="num"> 49</td><td class="num"> 6.02</td><td class="left">'oblo'</td></tr>
     <tr><td class="num"> 49</td><td class="num"> 4.90</td><td class="left">'hendrik'</td></tr>
     <tr><td class="num"> 43</td><td class="num"> 3.74</td><td class="left">'Iceshark7'</td></tr>
     <tr><td class="num"> 30</td><td class="num"> 4.40</td><td class="left">'Archcorenth'</td></tr>
@@ -40,6 +42,7 @@
     <tr><td class="num"> 18</td><td class="num"> 7.44</td><td class="left">'Mark P.'</td></tr>
     <tr><td class="num"> 17</td><td class="num"> 5.53</td><td class="left">'Jeffrey S'</td></tr>
     <tr><td class="num"> 16</td><td class="num"> 7.63</td><td class="left">'Ghatotkacha'</td></tr>
+    <tr><td class="num"> 16</td><td class="num"> 3.88</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 13</td><td class="num"> 7.69</td><td class="left">'Ale'</td></tr>
     <tr><td class="num"> 13</td><td class="num"> 5.23</td><td class="left">'Samuel'</td></tr>
     <tr><td class="num"> 11</td><td class="num"> 6.36</td><td class="left">'ShadowPhrogg32642342'</td></tr>
@@ -57,7 +60,6 @@
     <tr><td class="num">  3</td><td class="num"> 7.67</td><td class="left">'Joona'</td></tr>
     <tr><td class="num">  3</td><td class="num"> 3.00</td><td class="left">'Rugby4ever'</td></tr>
     <tr><td class="num">  3</td><td class="num"> 4.33</td><td class="left">'krazy62'</td></tr>
-    <tr><td class="num">  2</td><td class="num"> 6.00</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num">  2</td><td class="num"> 0.00</td><td class="left">'mhatta'</td></tr>
     <tr><td class="num">  1</td><td class="num"> 5.00</td><td class="left">'ael'</td></tr>
     <tr><td class="num">  1</td><td class="num"> 5.00</td><td class="left">'Uli'</td></tr>

Modified: homepage/input/table-solved.html
===================================================================
--- homepage/input/table-solved.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/table-solved.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,13 +1,14 @@
   <table>
-    <caption>$$Solved_Level_Statistics$$ $$December$$ 2007</caption>
+    <caption>$$Solved_Level_Statistics$$ $$January$$ 2008</caption>
     <colgroup><col width="130"><col width="130"><col width="130"><col width="240"></colgroup>
     <tr><th>$$difficult$$</th><th>$$easy$$</th><th>$$total$$</th><th class="left">$$user$$</th></tr>
+    <tr><td class="num">1045/1045</td><td class="num">189/189</td><td class="num">100.00%</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1043/1045</td><td class="num">189/189</td><td class="num"> 99.84%</td><td class="left">'Taztunes'</td></tr>
-    <tr><td class="num">1041/1045</td><td class="num">189/189</td><td class="num"> 99.68%</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1029/1045</td><td class="num">183/189</td><td class="num"> 98.22%</td><td class="left">'Craven'</td></tr>
-    <tr><td class="num">1028/1045</td><td class="num">178/189</td><td class="num"> 97.73%</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">1030/1045</td><td class="num">178/189</td><td class="num"> 97.89%</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">1021/1045</td><td class="num">177/189</td><td class="num"> 97.08%</td><td class="left">'Malla'</td></tr>
     <tr><td class="num">1014/1045</td><td class="num">175/189</td><td class="num"> 96.35%</td><td class="left">'Stupid'</td></tr>
-    <tr><td class="num">1007/1045</td><td class="num">178/189</td><td class="num"> 96.03%</td><td class="left">'Ronald'</td></tr>
+    <tr><td class="num">1010/1045</td><td class="num">178/189</td><td class="num"> 96.27%</td><td class="left">'Ronald'</td></tr>
     <tr><td class="num"> 999/1045</td><td class="num">177/189</td><td class="num"> 95.30%</td><td class="left">'biotopa'</td></tr>
     <tr><td class="num"> 969/1045</td><td class="num">170/189</td><td class="num"> 92.30%</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num"> 970/1045</td><td class="num">166/189</td><td class="num"> 92.06%</td><td class="left">'Andy'</td></tr>
@@ -18,6 +19,7 @@
     <tr><td class="num"> 887/1045</td><td class="num">143/189</td><td class="num"> 83.47%</td><td class="left">'mrduke'</td></tr>
     <tr><td class="num"> 863/1045</td><td class="num">161/189</td><td class="num"> 82.98%</td><td class="left">'Tobias'</td></tr>
     <tr><td class="num"> 915/1045</td><td class="num">105/189</td><td class="num"> 82.66%</td><td class="left">'Django'</td></tr>
+    <tr><td class="num"> 863/1045</td><td class="num">150/189</td><td class="num"> 82.09%</td><td class="left">'Gloop'</td></tr>
     <tr><td class="num"> 849/1045</td><td class="num">151/189</td><td class="num"> 81.04%</td><td class="left">'WP319'</td></tr>
     <tr><td class="num"> 867/1045</td><td class="num">124/189</td><td class="num"> 80.31%</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num"> 874/1045</td><td class="num">103/189</td><td class="num"> 79.17%</td><td class="left">'Melanie'</td></tr>
@@ -25,57 +27,58 @@
     <tr><td class="num"> 950/1045</td><td class="num">  0/189</td><td class="num"> 76.99%</td><td class="left">'Tarim'</td></tr>
     <tr><td class="num"> 804/1045</td><td class="num">142/189</td><td class="num"> 76.66%</td><td class="left">'Safalra'</td></tr>
     <tr><td class="num"> 938/1045</td><td class="num">  1/189</td><td class="num"> 76.09%</td><td class="left">'Ale'</td></tr>
-    <tr><td class="num"> 747/1045</td><td class="num">137/189</td><td class="num"> 71.64%</td><td class="left">'Gloop'</td></tr>
-    <tr><td class="num"> 763/1045</td><td class="num">121/189</td><td class="num"> 71.64%</td><td class="left">'Gorn'</td></tr>
-    <tr><td class="num"> 738/1045</td><td class="num">131/189</td><td class="num"> 70.42%</td><td class="left">'ABS'</td></tr>
+    <tr><td class="num"> 811/1045</td><td class="num">128/189</td><td class="num"> 76.09%</td><td class="left">'Gorn'</td></tr>
+    <tr><td class="num"> 771/1045</td><td class="num">131/189</td><td class="num"> 73.10%</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num"> 739/1045</td><td class="num">131/189</td><td class="num"> 70.50%</td><td class="left">'ABS'</td></tr>
+    <tr><td class="num"> 754/1045</td><td class="num">100/189</td><td class="num"> 69.21%</td><td class="left">'U-Punkt'</td></tr>
+    <tr><td class="num"> 719/1045</td><td class="num">122/189</td><td class="num"> 68.15%</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num"> 762/1045</td><td class="num"> 73/189</td><td class="num"> 67.67%</td><td class="left">'redsantz'</td></tr>
     <tr><td class="num"> 745/1045</td><td class="num"> 73/189</td><td class="num"> 66.29%</td><td class="left">'brynn'</td></tr>
-    <tr><td class="num"> 699/1045</td><td class="num">118/189</td><td class="num"> 66.21%</td><td class="left">'dev0'</td></tr>
     <tr><td class="num"> 734/1045</td><td class="num"> 82/189</td><td class="num"> 66.13%</td><td class="left">'bojster'</td></tr>
     <tr><td class="num"> 782/1045</td><td class="num"> 33/189</td><td class="num"> 66.05%</td><td class="left">'Sim_Ed'</td></tr>
-    <tr><td class="num"> 716/1045</td><td class="num"> 90/189</td><td class="num"> 65.32%</td><td class="left">'U-Punkt'</td></tr>
     <tr><td class="num"> 766/1045</td><td class="num"> 37/189</td><td class="num"> 65.07%</td><td class="left">'alfred69'</td></tr>
     <tr><td class="num"> 681/1045</td><td class="num"> 78/189</td><td class="num"> 61.51%</td><td class="left">'HuB34'</td></tr>
     <tr><td class="num"> 659/1045</td><td class="num"> 95/189</td><td class="num"> 61.10%</td><td class="left">'Marc-Hendrik'</td></tr>
     <tr><td class="num"> 633/1045</td><td class="num">110/189</td><td class="num"> 60.21%</td><td class="left">'Raoul'</td></tr>
-    <tr><td class="num"> 625/1045</td><td class="num">108/189</td><td class="num"> 59.40%</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num"> 643/1045</td><td class="num"> 83/189</td><td class="num"> 58.83%</td><td class="left">'Great Scott'</td></tr>
     <tr><td class="num"> 714/1045</td><td class="num">  0/189</td><td class="num"> 57.86%</td><td class="left">'Gottseinsohn'</td></tr>
     <tr><td class="num"> 625/1045</td><td class="num"> 82/189</td><td class="num"> 57.29%</td><td class="left">'dpl'</td></tr>
+    <tr><td class="num"> 607/1045</td><td class="num"> 93/189</td><td class="num"> 56.73%</td><td class="left">'Ludmian'</td></tr>
+    <tr><td class="num"> 620/1045</td><td class="num"> 72/189</td><td class="num"> 56.08%</td><td class="left">'Breezy'</td></tr>
     <tr><td class="num"> 636/1045</td><td class="num"> 55/189</td><td class="num"> 56.00%</td><td class="left">'fabian'</td></tr>
-    <tr><td class="num"> 612/1045</td><td class="num"> 70/189</td><td class="num"> 55.27%</td><td class="left">'Breezy'</td></tr>
     <tr><td class="num"> 588/1045</td><td class="num"> 93/189</td><td class="num"> 55.19%</td><td class="left">'Ghatotkacha'</td></tr>
     <tr><td class="num"> 599/1045</td><td class="num"> 80/189</td><td class="num"> 55.02%</td><td class="left">'serpent'</td></tr>
     <tr><td class="num"> 634/1045</td><td class="num"> 43/189</td><td class="num"> 54.86%</td><td class="left">'Klaus'</td></tr>
     <tr><td class="num"> 564/1045</td><td class="num">112/189</td><td class="num"> 54.78%</td><td class="left">'Mark P.'</td></tr>
-    <tr><td class="num"> 555/1045</td><td class="num">117/189</td><td class="num"> 54.46%</td><td class="left">'Alexandros'</td></tr>
+    <tr><td class="num"> 557/1045</td><td class="num">117/189</td><td class="num"> 54.62%</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num"> 576/1045</td><td class="num"> 93/189</td><td class="num"> 54.21%</td><td class="left">'Guglielmo'</td></tr>
-    <tr><td class="num"> 570/1045</td><td class="num"> 83/189</td><td class="num"> 52.92%</td><td class="left">'Ludmian'</td></tr>
+    <tr><td class="num"> 565/1045</td><td class="num">100/189</td><td class="num"> 53.89%</td><td class="left">'Zekobah'</td></tr>
     <tr><td class="num"> 525/1045</td><td class="num"> 95/189</td><td class="num"> 50.24%</td><td class="left">'ShadowPhrogg32642342'</td></tr>
     <tr><td class="num"> 589/1045</td><td class="num"> 26/189</td><td class="num"> 49.84%</td><td class="left">'hdwow'</td></tr>
     <tr><td class="num"> 533/1045</td><td class="num"> 82/189</td><td class="num"> 49.84%</td><td class="left">'Wuzzy'</td></tr>
     <tr><td class="num"> 506/1045</td><td class="num">108/189</td><td class="num"> 49.76%</td><td class="left">'Agnieszka'</td></tr>
     <tr><td class="num"> 613/1045</td><td class="num">  0/189</td><td class="num"> 49.68%</td><td class="left">'Little_Mole'</td></tr>
+    <tr><td class="num"> 500/1045</td><td class="num"> 92/189</td><td class="num"> 47.97%</td><td class="left">'Kosby'</td></tr>
     <tr><td class="num"> 478/1045</td><td class="num">101/189</td><td class="num"> 46.92%</td><td class="left">'Austin'</td></tr>
-    <tr><td class="num"> 478/1045</td><td class="num"> 81/189</td><td class="num"> 45.30%</td><td class="left">'Zekobah'</td></tr>
     <tr><td class="num"> 519/1045</td><td class="num"> 37/189</td><td class="num"> 45.06%</td><td class="left">'Valkyrie2'</td></tr>
     <tr><td class="num"> 516/1045</td><td class="num"> 24/189</td><td class="num"> 43.76%</td><td class="left">'niebie'</td></tr>
     <tr><td class="num"> 494/1045</td><td class="num"> 26/189</td><td class="num"> 42.14%</td><td class="left">'Daniel'</td></tr>
     <tr><td class="num"> 506/1045</td><td class="num"> 12/189</td><td class="num"> 41.98%</td><td class="left">'Duffy'</td></tr>
     <tr><td class="num"> 503/1045</td><td class="num">  7/189</td><td class="num"> 41.33%</td><td class="left">'Edgar_Flesk'</td></tr>
     <tr><td class="num"> 433/1045</td><td class="num"> 45/189</td><td class="num"> 38.74%</td><td class="left">'ged'</td></tr>
-    <tr><td class="num"> 391/1045</td><td class="num"> 54/189</td><td class="num"> 36.06%</td><td class="left">'Tiza'</td></tr>
-    <tr><td class="num"> 439/1045</td><td class="num">  6/189</td><td class="num"> 36.06%</td><td class="left">'Vinksu'</td></tr>
+    <tr><td class="num"> 467/1045</td><td class="num">  6/189</td><td class="num"> 38.33%</td><td class="left">'Vinksu'</td></tr>
+    <tr><td class="num"> 405/1045</td><td class="num"> 58/189</td><td class="num"> 37.52%</td><td class="left">'Tiza'</td></tr>
+    <tr><td class="num"> 438/1045</td><td class="num">  3/189</td><td class="num"> 35.74%</td><td class="left">'oblo'</td></tr>
     <tr><td class="num"> 392/1045</td><td class="num"> 40/189</td><td class="num"> 35.01%</td><td class="left">'hendrik'</td></tr>
     <tr><td class="num"> 391/1045</td><td class="num"> 36/189</td><td class="num"> 34.60%</td><td class="left">'Iceshark7'</td></tr>
+    <tr><td class="num"> 336/1045</td><td class="num"> 86/189</td><td class="num"> 34.20%</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 397/1045</td><td class="num"> 24/189</td><td class="num"> 34.12%</td><td class="left">'Chocolate Zero'</td></tr>
-    <tr><td class="num"> 333/1045</td><td class="num"> 86/189</td><td class="num"> 33.95%</td><td class="left">'Emmanuel'</td></tr>
+    <tr><td class="num"> 368/1045</td><td class="num"> 44/189</td><td class="num"> 33.39%</td><td class="left">'Liam Sheehan'</td></tr>
     <tr><td class="num"> 376/1045</td><td class="num"> 35/189</td><td class="num"> 33.31%</td><td class="left">'Jeffrey S'</td></tr>
     <tr><td class="num"> 392/1045</td><td class="num"> 12/189</td><td class="num"> 32.74%</td><td class="left">'NorthForty'</td></tr>
     <tr><td class="num"> 344/1045</td><td class="num"> 51/189</td><td class="num"> 32.01%</td><td class="left">'Momcat'</td></tr>
     <tr><td class="num"> 382/1045</td><td class="num"> 10/189</td><td class="num"> 31.77%</td><td class="left">'J3FF'</td></tr>
     <tr><td class="num"> 335/1045</td><td class="num"> 50/189</td><td class="num"> 31.20%</td><td class="left">'Harry Lim'</td></tr>
-    <tr><td class="num"> 346/1045</td><td class="num"> 38/189</td><td class="num"> 31.12%</td><td class="left">'Liam Sheehan'</td></tr>
     <tr><td class="num"> 361/1045</td><td class="num"> 18/189</td><td class="num"> 30.71%</td><td class="left">'MicWa'</td></tr>
     <tr><td class="num"> 306/1045</td><td class="num"> 71/189</td><td class="num"> 30.55%</td><td class="left">'Davacardo'</td></tr>
     <tr><td class="num"> 336/1045</td><td class="num"> 41/189</td><td class="num"> 30.55%</td><td class="left">'Antonio EE'</td></tr>
@@ -93,6 +96,7 @@
     <tr><td class="num"> 243/1045</td><td class="num"> 23/189</td><td class="num"> 21.56%</td><td class="left">'Snaily'</td></tr>
     <tr><td class="num"> 201/1045</td><td class="num"> 54/189</td><td class="num"> 20.66%</td><td class="left">'mhatta'</td></tr>
     <tr><td class="num"> 210/1045</td><td class="num"> 38/189</td><td class="num"> 20.10%</td><td class="left">'Sandra'</td></tr>
+    <tr><td class="num"> 220/1045</td><td class="num"> 25/189</td><td class="num"> 19.85%</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 208/1045</td><td class="num"> 33/189</td><td class="num"> 19.53%</td><td class="left">'Uli'</td></tr>
     <tr><td class="num"> 203/1045</td><td class="num"> 34/189</td><td class="num"> 19.21%</td><td class="left">'ntaeijr'</td></tr>
     <tr><td class="num"> 214/1045</td><td class="num"> 19/189</td><td class="num"> 18.88%</td><td class="left">'Adonica'</td></tr>
@@ -109,7 +113,6 @@
     <tr><td class="num"> 148/1045</td><td class="num">  5/189</td><td class="num"> 12.40%</td><td class="left">'Rugby4ever'</td></tr>
     <tr><td class="num"> 110/1045</td><td class="num"> 31/189</td><td class="num"> 11.43%</td><td class="left">'Cyphase'</td></tr>
     <tr><td class="num"> 124/1045</td><td class="num"> 15/189</td><td class="num"> 11.26%</td><td class="left">'Magnus and Susi'</td></tr>
-    <tr><td class="num"> 113/1045</td><td class="num"> 22/189</td><td class="num"> 10.94%</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 131/1045</td><td class="num">  1/189</td><td class="num"> 10.70%</td><td class="left">'Asbel'</td></tr>
     <tr><td class="num"> 105/1045</td><td class="num"> 22/189</td><td class="num"> 10.29%</td><td class="left">'Neophilus'</td></tr>
     <tr><td class="num"> 101/1045</td><td class="num">  0/189</td><td class="num">  8.18%</td><td class="left">'Alf'</td></tr>

Modified: homepage/input/table-wr.html
===================================================================
--- homepage/input/table-wr.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/table-wr.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -1,52 +1,51 @@
   <table>
-    <caption>$$Worldrecord_Statistics$$ $$December$$ 2007</caption>
+    <caption>$$Worldrecord_Statistics$$ $$January$$ 2008</caption>
     <colgroup><col width="80"><col width="80"><col width="470"></colgroup>
     <tr><th>$$total$$</th><th>$$shared$$</th><th class="left">$$user$$</th></tr>
-    <tr><td class="num">841</td><td class="num">264</td><td class="left">'Moneymaker'</td></tr>
-    <tr><td class="num">238</td><td class="num">118</td><td class="left">'Stupid'</td></tr>
-    <tr><td class="num">164</td><td class="num">132</td><td class="left">'Johannes'</td></tr>
-    <tr><td class="num"> 91</td><td class="num"> 53</td><td class="left">'Duffy'</td></tr>
-    <tr><td class="num"> 77</td><td class="num"> 65</td><td class="left">'daydreamer'</td></tr>
-    <tr><td class="num"> 69</td><td class="num"> 58</td><td class="left">'Great Scott'</td></tr>
-    <tr><td class="num"> 40</td><td class="num"> 36</td><td class="left">'Django'</td></tr>
-    <tr><td class="num"> 37</td><td class="num"> 32</td><td class="left">'Iceshark7'</td></tr>
-    <tr><td class="num"> 36</td><td class="num"> 29</td><td class="left">'Alexandros'</td></tr>
-    <tr><td class="num"> 36</td><td class="num"> 33</td><td class="left">'joseba'</td></tr>
+    <tr><td class="num">860</td><td class="num">258</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">217</td><td class="num">113</td><td class="left">'Stupid'</td></tr>
+    <tr><td class="num">153</td><td class="num">129</td><td class="left">'Johannes'</td></tr>
+    <tr><td class="num"> 83</td><td class="num"> 52</td><td class="left">'Duffy'</td></tr>
+    <tr><td class="num"> 81</td><td class="num"> 34</td><td class="left">'Malla'</td></tr>
+    <tr><td class="num"> 65</td><td class="num"> 59</td><td class="left">'daydreamer'</td></tr>
+    <tr><td class="num"> 62</td><td class="num"> 54</td><td class="left">'Great Scott'</td></tr>
+    <tr><td class="num"> 39</td><td class="num"> 36</td><td class="left">'Django'</td></tr>
+    <tr><td class="num"> 38</td><td class="num"> 31</td><td class="left">'Iceshark7'</td></tr>
+    <tr><td class="num"> 36</td><td class="num"> 26</td><td class="left">'Zekobah'</td></tr>
+    <tr><td class="num"> 35</td><td class="num"> 29</td><td class="left">'Alexandros'</td></tr>
+    <tr><td class="num"> 34</td><td class="num"> 32</td><td class="left">'joseba'</td></tr>
     <tr><td class="num"> 28</td><td class="num"> 26</td><td class="left">'Ghatotkacha'</td></tr>
-    <tr><td class="num"> 26</td><td class="num"> 18</td><td class="left">'Zekobah'</td></tr>
-    <tr><td class="num"> 23</td><td class="num"> 18</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 23</td><td class="num"> 20</td><td class="left">'ged'</td></tr>
-    <tr><td class="num"> 23</td><td class="num"> 21</td><td class="left">'Safalra'</td></tr>
-    <tr><td class="num"> 22</td><td class="num">  9</td><td class="left">'Ronald'</td></tr>
-    <tr><td class="num"> 22</td><td class="num"> 13</td><td class="left">'Emmanuel'</td></tr>
-    <tr><td class="num"> 20</td><td class="num">  4</td><td class="left">'ryujun'</td></tr>
-    <tr><td class="num"> 19</td><td class="num"> 15</td><td class="left">'ABS'</td></tr>
-    <tr><td class="num"> 19</td><td class="num"> 18</td><td class="left">'bojster'</td></tr>
+    <tr><td class="num"> 22</td><td class="num">  7</td><td class="left">'ryujun'</td></tr>
+    <tr><td class="num"> 21</td><td class="num"> 14</td><td class="left">'Emmanuel'</td></tr>
+    <tr><td class="num"> 21</td><td class="num"> 19</td><td class="left">'Safalra'</td></tr>
+    <tr><td class="num"> 20</td><td class="num"> 18</td><td class="left">'Ludmian'</td></tr>
+    <tr><td class="num"> 19</td><td class="num"> 16</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num"> 18</td><td class="num"> 12</td><td class="left">'HuB34'</td></tr>
-    <tr><td class="num"> 13</td><td class="num">  5</td><td class="left">'Taztunes'</td></tr>
-    <tr><td class="num"> 13</td><td class="num">  8</td><td class="left">'Chocolate Zero'</td></tr>
-    <tr><td class="num"> 13</td><td class="num">  9</td><td class="left">'B-Huff'</td></tr>
-    <tr><td class="num"> 10</td><td class="num">  5</td><td class="left">'ShadowPhrogg32642342'</td></tr>
+    <tr><td class="num"> 18</td><td class="num"> 17</td><td class="left">'bojster'</td></tr>
+    <tr><td class="num"> 16</td><td class="num"> 16</td><td class="left">'ABS'</td></tr>
+    <tr><td class="num"> 15</td><td class="num">  7</td><td class="left">'Ronald'</td></tr>
+    <tr><td class="num"> 12</td><td class="num">  6</td><td class="left">'Taztunes'</td></tr>
+    <tr><td class="num"> 12</td><td class="num">  8</td><td class="left">'Chocolate Zero'</td></tr>
+    <tr><td class="num"> 11</td><td class="num">  7</td><td class="left">'Gloop'</td></tr>
     <tr><td class="num"> 10</td><td class="num"> 10</td><td class="left">'fabian'</td></tr>
+    <tr><td class="num">  9</td><td class="num">  5</td><td class="left">'ShadowPhrogg32642342'</td></tr>
     <tr><td class="num">  8</td><td class="num">  3</td><td class="left">'Breezy'</td></tr>
-    <tr><td class="num">  8</td><td class="num">  6</td><td class="left">'Gloop'</td></tr>
-    <tr><td class="num">  8</td><td class="num">  7</td><td class="left">'dpl' + 'Wuzzy'</td></tr>
-    <tr><td class="num">  7</td><td class="num">  5</td><td class="left">'Lukas'</td></tr>
-    <tr><td class="num">  7</td><td class="num">  6</td><td class="left">'Edgar_Flesk'</td></tr>
+    <tr><td class="num">  8</td><td class="num">  7</td><td class="left">'Wuzzy'</td></tr>
+    <tr><td class="num">  7</td><td class="num">  6</td><td class="left">'dpl' + 'Edgar_Flesk'</td></tr>
     <tr><td class="num">  6</td><td class="num">  3</td><td class="left">'para_doks'</td></tr>
-    <tr><td class="num">  6</td><td class="num">  4</td><td class="left">'Raoul'</td></tr>
-    <tr><td class="num">  6</td><td class="num">  5</td><td class="left">'Guglielmo'</td></tr>
+    <tr><td class="num">  6</td><td class="num">  4</td><td class="left">'Lukas'</td></tr>
+    <tr><td class="num">  6</td><td class="num">  5</td><td class="left">'Guglielmo' + 'Raoul'</td></tr>
     <tr><td class="num">  6</td><td class="num">  6</td><td class="left">'Tobias'</td></tr>
-    <tr><td class="num">  5</td><td class="num">  5</td><td class="left">'Cyphase' + 'Thomas' + 'Chris' + 'Ralf'</td></tr>
+    <tr><td class="num">  5</td><td class="num">  5</td><td class="left">'U-Punkt' + 'Cyphase' + 'Thomas' + 'Chris' + 'Ralf'</td></tr>
     <tr><td class="num">  4</td><td class="num">  2</td><td class="left">'Bent' + 'Craven'</td></tr>
-    <tr><td class="num">  4</td><td class="num">  3</td><td class="left">'Andy'</td></tr>
     <tr><td class="num">  4</td><td class="num">  4</td><td class="left">'J3FF'</td></tr>
-    <tr><td class="num">  3</td><td class="num">  2</td><td class="left">'Austin' + 'Stephanie'</td></tr>
-    <tr><td class="num">  3</td><td class="num">  3</td><td class="left">'geembo_90' + 'Neophilus' + 'hendrik'</td></tr>
+    <tr><td class="num">  3</td><td class="num">  2</td><td class="left">'Stephanie'</td></tr>
+    <tr><td class="num">  3</td><td class="num">  3</td><td class="left">'geembo_90' + 'Neophilus' + 'Andy'</td></tr>
     <tr><td class="num">  2</td><td class="num">  0</td><td class="left">'Ale' + 'Daniel'</td></tr>
-    <tr><td class="num">  2</td><td class="num">  1</td><td class="left">'mrduke' + 'U-Punkt' + 'Vlad' + 'JuSt'</td></tr>
-    <tr><td class="num">  2</td><td class="num">  2</td><td class="left">'Drotten' + 'Sim_Ed' + 'Snaily' + 'Ingo' + 'serpent'</td></tr>
-    <tr><td class="num">  1</td><td class="num">  0</td><td class="left">'ntaeijr' + 'dev0' + 'Alex' + 'shoki' + 'Gorn' + 'Ant' + 'Melanie' + 'IChrisI' + 'Nat'</td></tr>
-    <tr><td class="num">  1</td><td class="num">  1</td><td class="left">'alfred69' + 'Agares' + 'Tiger' + 'Zak' + 'Tiza' + 'niebie' + 'Andreas' + 'Samuel' + 'Mark P.' + 'jdcampo' + 'hdwow' + 'B-man' + 'Asbel' + 'Vaily' + 'Meeve' + 'krazy62'</td></tr>
-    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'Miel56' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'Mecki' + 'ael' + 'biotopa' + 'brynn' + 'IntKecsk' + 'Davacardo' + 'Adonica' + 'Joona' + 'Sandra' + 'Magnus and Susi' + 'WP319' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Little_Mole' + 'Harry Lim' + 'AkRa' + 'Momcat' + 'NorthForty' + 'The red O' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'jojo' + 'Klaus' + 'Valkyrie2' + 'MicWa' + 'AsuCaga' + 'Rugby4ever' + 'Archcorenth' + 'mhatta' + 'Dvorhagen' + 'Antonio EE' + 'Holger' + 'Ingo_K' + 'redsantz' + 'Markus' + 'Liam Sheehan' + 'Michael' + 'Tarim' + 'Agnieszka'</td></tr>
+    <tr><td class="num">  2</td><td class="num">  1</td><td class="left">'mrduke' + 'oblo'</td></tr>
+    <tr><td class="num">  2</td><td class="num">  2</td><td class="left">'Drotten' + 'Sim_Ed' + 'hendrik' + 'Austin' + 'Snaily' + 'Ingo' + 'serpent'</td></tr>
+    <tr><td class="num">  1</td><td class="num">  0</td><td class="left">'dev0' + 'Gorn' + 'Ant' + 'Melanie' + 'Nat'</td></tr>
+    <tr><td class="num">  1</td><td class="num">  1</td><td class="left">'alfred69' + 'Agares' + 'ntaeijr' + 'Tiger' + 'Zak' + 'Tiza' + 'niebie' + 'Andreas' + 'Samuel' + 'Mark P.' + 'jdcampo' + 'hdwow' + 'B-man' + 'Asbel' + 'Vlad' + 'Vaily' + 'krazy62' + 'JuSt'</td></tr>
+    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'Miel56' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'ael' + 'biotopa' + 'brynn' + 'IntKecsk' + 'Davacardo' + 'Adonica' + 'Joona' + 'Sandra' + 'Kosby' + 'Magnus and Susi' + 'WP319' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Alex' + 'Little_Mole' + 'Harry Lim' + 'AkRa' + 'Momcat' + 'NorthForty' + 'Mecki' + 'The red O' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'shoki' + 'jojo' + 'Klaus' + 'Valkyrie2' + 'MicWa' + 'AsuCaga' + 'Rugby4ever' + 'Archcorenth' + 'Meeve' + 'mhatta' + 'Dvorhagen' + 'Antonio EE' + 'Holger' + 'Ingo_K' + 'IChrisI' + 'redsantz' + 'Markus' + 'Liam Sheehan' + 'Michael' + 'Tarim' + 'Agnieszka'</td></tr>
   </table>

Modified: homepage/input/userlist.html
===================================================================
--- homepage/input/userlist.html	2008-02-01 00:59:58 UTC (rev 1018)
+++ homepage/input/userlist.html	2008-02-01 20:32:46 UTC (rev 1019)
@@ -72,12 +72,14 @@
     <li>joseba</li>
     <li>JuSt</li>
     <li>Klaus</li>
+    <li>Kosby</li>
     <li>krazy62</li>
     <li>Liam Sheehan</li>
     <li>Little_Mole</li>
     <li>Ludmian</li>
     <li>Lukas</li>
     <li>Magnus and Susi</li>
+    <li>Malla</li>
     <li>Marc-Hendrik</li>
     <li>Mark P.</li>
     <li>Markus</li>
@@ -97,6 +99,7 @@
     <li>niebie</li>
     <li>NorthForty</li>
     <li>ntaeijr</li>
+    <li>oblo</li>
     <li>para_doks</li>
     <li>Ralf</li>
     <li>Raoul</li>



From raoul at mail.berlios.de  Sat Feb  2 16:22:48 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Sat, 2 Feb 2008 16:22:48 +0100
Subject: [Enigma-game-svn] r1020 - in trunk/data/levels: enigma_cross
	enigma_i enigma_vii
Message-ID: <200802021522.m12FMmFM010551@sheep.berlios.de>

Author: raoul
Date: 2008-02-02 16:22:47 +0100 (Sat, 02 Feb 2008)
New Revision: 1020

Modified:
   trunk/data/levels/enigma_cross/newlevels.xml
   trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
   trunk/data/levels/enigma_i/alain04_1.xml
   trunk/data/levels/enigma_i/index.xml
   trunk/data/levels/enigma_vii/index.xml
   trunk/data/levels/enigma_vii/joe14_1.xml
   trunk/data/levels/enigma_vii/joe15_1.xml
Log:
-> Some levelbugfixes
 -> essential actors in meditation


Modified: trunk/data/levels/enigma_cross/newlevels.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_cross/newlevels.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="6" title="Enigma 1.00 new"/>
+  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="7" title="Enigma 1.00 new"/>
 
   <attributes/>
 
@@ -17,7 +17,7 @@
     <level _seq="9" _title="Enigmawale" _xpath="enigma_i/alain20_1" author="Alain Busser" ctrl="force" easy="true" id="alain20" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="10" _title="Encased" _xpath="enigma_i/xerxes01_1" author="Xerxes M. Dynatos" ctrl="force" easy="false" id="xerxes01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="11" _title="Without Tremor" _xpath="enigma_i/richi04_1" author="Richi B?tzer" ctrl="force" easy="false" id="richi04" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="12" _title="- Meditation -" _xpath="enigma_i/alain04_1" author="Alain Busser" ctrl="force" easy="false" id="alain04" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="12" _title="- Meditation -" _xpath="enigma_i/alain04_1" author="Alain Busser" ctrl="force" easy="false" id="alain04" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="13" _title="Light Barrier" _xpath="enigma_i/richi03_1" author="Richi B?tzer" ctrl="force" easy="false" id="richi03" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="14" _title="Dead Ball Walking" _xpath="enigma_i/illmind08_1" author="illmind" ctrl="force" easy="false" id="illmind08" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="15" _title="The Enigmhanoi Towers" _xpath="enigma_i/alain05_1" author="Alain Busser" ctrl="force" easy="true" id="alain05" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.0.2.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.2.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="6" title="Enigma 1.02 new"/>
+  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="7" title="Enigma 1.02 new"/>
 
   <attributes/>
 
@@ -44,8 +44,8 @@
     <level _seq="36" _title="No More Alternatives" _xpath="enigma_vii/just25_1" author="JuSt" ctrl="force" easy="true" id="just25" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="37" _title="The Walls" _xpath="enigma_vii/just26_1" author="JuSt" ctrl="force" easy="true" id="just26" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="38" _title="Pull the Puller" _xpath="enigma_vii/just28_1" author="JuSt" ctrl="force" easy="false" id="just28" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="39" _title="Double Sense" _xpath="enigma_vii/joe14_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe14" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="40" _title="Double Sense II" _xpath="enigma_vii/joe15_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe15" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="39" _title="Double Sense" _xpath="enigma_vii/joe14_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe14" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="40" _title="Double Sense II" _xpath="enigma_vii/joe15_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe15" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="41" _title="Lightyears" _xpath="enigma_vii/duffy177_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy177" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="42" _title="Zero Magnetism Lab" _xpath="enigma_vii/duffy178_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy178" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="43" _title="Armageddon" _xpath="enigma_vii/duffy179_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy179" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_i/alain04_1.xml
===================================================================
--- trunk/data/levels/enigma_i/alain04_1.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_i/alain04_1.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="- Meditation -" el:subtitle="" el:id="alain04"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
       <el:author  el:name="Alain Busser" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Alain Busser</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -32,37 +32,37 @@
         elseif c == "o" then
             oxyd( i-1, line)
             elseif c == "a" then
-            set_item("it-wormhole",i-1,line, {targetx=" 13.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=13.5, targety=10+random(10)/10, strength=0, range=0})          
         elseif c == "b" then
-            set_item("it-wormhole",i-1,line, {targetx=" 4.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=4.5, targety=3+random(10)/10, strength=0, range=0})          
             elseif c == "c" then
-            set_item("it-wormhole",i-1,line, {targetx=" 16.5",targety="4+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=16.5, targety=4+random(10)/10, strength=0, range=0})          
         elseif c == "d" then
-            set_item("it-wormhole",i-1,line, {targetx=" 6.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=6.5, targety=10+random(10)/10, strength=0, range=0})          
             elseif c == "e" then
-            set_item("it-wormhole",i-1,line, {targetx=" 13.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=13.5, targety=3+random(10)/10, strength=0, range=0})          
         elseif c == "f" then
-            set_item("it-wormhole",i-1,line, {targetx=" 4.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=4.5, targety=10+random(10)/10, strength=0, range=0})          
             elseif c == "g" then
-            set_item("it-wormhole",i-1,line, {targetx=" 16.5",targety="9+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=16.5, targety=9+random(10)/10, strength=0, range=0})          
         elseif c == "h" then
-            set_item("it-wormhole",i-1,line, {targetx=" 6.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=6.5, targety=3+random(10)/10, strength=0, range=0})          
         elseif c == "i" then
-            set_item("it-wormhole",i-1,line, {targetx=" 13.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=13.5, targety=10+random(10)/10, strength=0, range=0})          
         elseif c == "j" then
-            set_item("it-wormhole",i-1,line, {targetx=" 4.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=4.5, targety=3+random(10)/10, strength=0, range=0})          
             elseif c == "k" then
-            set_item("it-wormhole",i-1,line, {targetx=" 16.5",targety="4+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=16.5, targety=4+random(10)/10, strength=0, range=0})          
         elseif c == "l" then
-            set_item("it-wormhole",i-1,line, {targetx=" 6.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=6.5, targety=10+random(10)/10, strength=0, range=0})          
             elseif c == "m" then
-            set_item("it-wormhole",i-1,line, {targetx=" 13.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=13.5, targety=3+random(10)/10, strength=0, range=0})          
         elseif c == "n" then
-            set_item("it-wormhole",i-1,line, {targetx=" 4.5",targety="10+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=4.5, targety=10+random(10)/10, strength=0, range=0})          
             elseif c == "p" then
-            set_item("it-wormhole",i-1,line, {targetx=" 16.5",targety="9+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=16.5, targety=9+random(10)/10, strength=0, range=0})          
         elseif c == "q" then
-            set_item("it-wormhole",i-1,line, {targetx=" 6.5",targety="3+random(10)/10",strength=0,range=0})          
+            set_item("it-wormhole",i-1,line, {targetx=6.5, targety=3+random(10)/10, strength=0, range=0})          
           elseif c=="z" then
             set_actor("ac-whiteball-small", i-.5,line+.5, {player=0})
         elseif c=="+" then

Modified: trunk/data/levels/enigma_i/index.xml
===================================================================
--- trunk/data/levels/enigma_i/index.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_i/index.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10200" network="false" owner="Enigma Team" release="1" revision="4" title="Enigma I"/>
+  <info enigma="1.00" group="Enigma" location="10200" network="false" owner="Enigma Team" release="1" revision="5" title="Enigma I"/>
 
   <attributes/>
 
@@ -45,7 +45,7 @@
     <level _seq="37" _title=".J.U.M.P." _xpath="./martin60_1" author="Martin Hawlisch" ctrl="force" easy="false" id="martin60" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="38" _title="Encased" _xpath="./xerxes01_1" author="Xerxes M. Dynatos" ctrl="force" easy="false" id="xerxes01" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="39" _title="Without Tremor" _xpath="./richi04_1" author="Richi B?tzer" ctrl="force" easy="false" id="richi04" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="40" _title="- Meditation -" _xpath="./alain04_1" author="Alain Busser" ctrl="force" easy="false" id="alain04" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="40" _title="- Meditation -" _xpath="./alain04_1" author="Alain Busser" ctrl="force" easy="false" id="alain04" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="41" _title="Light Barrier" _xpath="./richi03_1" author="Richi B?tzer" ctrl="force" easy="false" id="richi03" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="42" _title="Basement" _xpath="./siegfried26_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level9c" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="43" _title="Sokoban Revival" _xpath="./martin04_1" author="Martin Hawlisch" ctrl="force" easy="false" id="martin04" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_vii/index.xml
===================================================================
--- trunk/data/levels/enigma_vii/index.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_vii/index.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10800" network="false" owner="Enigma Team" release="1" revision="11" title="Enigma VII"/>
+  <info enigma="1.00" group="Enigma" location="10800" network="false" owner="Enigma Team" release="1" revision="12" title="Enigma VII"/>
 
   <attributes/>
 
@@ -68,8 +68,8 @@
     <level _seq="60" _title="No More Alternatives" _xpath="./just25_1" author="JuSt" ctrl="force" easy="true" id="just25" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="The Walls" _xpath="./just26_1" author="JuSt" ctrl="force" easy="true" id="just26" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="62" _title="Pull the Puller" _xpath="./just28_1" author="JuSt" ctrl="force" easy="false" id="just28" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="63" _title="Double Sense" _xpath="./joe14_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe14" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="64" _title="Double Sense II" _xpath="./joe15_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe15" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="63" _title="Double Sense" _xpath="./joe14_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe14" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="64" _title="Double Sense II" _xpath="./joe15_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe15" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="Lightyears" _xpath="./duffy177_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy177" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="66" _title="Zero Magnetism Lab" _xpath="./duffy178_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy178" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="67" _title="Armageddon" _xpath="./duffy179_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy179" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_vii/joe14_1.xml
===================================================================
--- trunk/data/levels/enigma_vii/joe14_1.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_vii/joe14_1.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Double Sense" el:subtitle="" el:id="joe14"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
       <el:author  el:name="Joseph Dunne" el:email="josephdunne1993 at hotmail.com" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Joseph Dunne</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -38,7 +38,7 @@
 cells["!"]=cell{stone="st-bolder-s"}
 cells["I"]=cell{stone="st-blocker"}
 cells["+"]=cell{item="it-hollow"}
-cells["o"]=cell{actor={"ac-whiteball-small", {player=0}}}
+cells["o"]=cell{actor={"ac-whiteball-small", {player=0, essential=1}}}
 
if difficult then
    -- Normal Mode
    level = {
     "-@@@@@@@@@@@@@@@@@@-",
     "- at xxxxxxxxxxxxxx!x at -",

Modified: trunk/data/levels/enigma_vii/joe15_1.xml
===================================================================
--- trunk/data/levels/enigma_vii/joe15_1.xml	2008-02-01 20:32:46 UTC (rev 1019)
+++ trunk/data/levels/enigma_vii/joe15_1.xml	2008-02-02 15:22:47 UTC (rev 1020)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Double Sense II" el:subtitle="" el:id="joe15"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
       <el:author  el:name="Joseph Dunne" el:email="josephdunne1993 at hotmail.com" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Joseph Dunne</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -41,7 +41,7 @@
 cells["I"]=cell{stone="st-blocker"}
 cells["G"]=cell{item="it-blocker"}
 cells["+"]=cell{item="it-hollow"}
-cells["o"]=cell{actor={"ac-whiteball-small", {player=0}}}
+cells["o"]=cell{actor={"ac-whiteball-small", {player=0, essential=1}}}
 
if difficult then
    -- Normal Mode
    level = {
     "-@::::::::::::::::@!",
     "-@!:!::!:!::!:!:!:@-",



From ged at mail.berlios.de  Sat Feb  2 20:22:31 2008
From: ged at mail.berlios.de (ged at mail.berlios.de)
Date: Sat, 2 Feb 2008 20:22:31 +0100
Subject: [Enigma-game-svn] r1021 - feature_branches/hp_lotm/input/lotm
Message-ID: <200802021922.m12JMVEF017580@sheep.berlios.de>

Author: ged
Date: 2008-02-02 20:22:29 +0100 (Sat, 02 Feb 2008)
New Revision: 1021

Added:
   feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html
Log:
LotM 2008_02 russian translation

Added: feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html	2008-02-02 15:22:47 UTC (rev 1020)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html	2008-02-02 19:22:29 UTC (rev 1021)
@@ -0,0 +1,249 @@
+<div class="lotm">
+$$lotm_header$$
+<h3 class="lotm">
+<span class="date">??????? 2008: </span>
+&quot;Puzzle Puzzles&quot; ?? Raoul Bourquin
+</h3>
+
+<p>? ?????? ??? ??????????? ??????? ?????? 2008 ??????? ?????????? &quot;Sierpinsky&quot;&mdash;?????????
+?????? ?????? ???? ???????, ??? ??????? ????????? ?????
+????? ?????????? ? ?????? ????????? ?? ????????. ??, ????? ?? ??????? ??
+????????, ? ????? ? ?????????? ??????, ??????? ????????????? ???
+Julia ????? ??????? ?? ???????????? ? ??????? ??? ????? ?????????, ???????? ?????????????,
+?????????? ??????, ??? ????? ???????. ????? ?????????? ? &quot;Puzzle
+Puzzles&quot;!</p>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200802_a.png" alt="Level of the month" border="0">
+<div class="imagetitle">Enigma VI # 55 - Puzzle Puzzles</div>
+</div>
+
+<table cellpadding="0" cellspacing="1" class="statistics">
+<caption class="normalcaption">????????? ???????? ??????? 2007</caption>
+<colgroup>
+   <col width="80">
+   <col width="160">
+</colgroup>
+    <tr><td class="num">6:11</td>
+        <td class="left">Stupid</td></tr>
+    <tr><td class="num">8:21</td>
+        <td class="left">Raoul</td></tr>
+    <tr><td class="num">12:17</td>
+        <td class="left">Taztunes</td></tr>
+    <tr><td class="num">16:16</td>
+        <td class="left">Tarim</td></tr>
+    <tr><td class="num">16:26</td>
+        <td class="left">ryujun</td></tr>
+</table>
+
+<p></p>
+
+<table cellpadding="0" cellspacing="1" class="statistics">
+<caption class="normalcaption">?????????? ?????</caption>
+<colgroup>
+   <col width="80">
+   <col width="160">
+</colgroup>
+    <tr><td class="num">6:53</td>
+        <td class="left">Ronald</td></tr>
+    <tr><td class="num">10:16</td>
+        <td class="left">Stupid</td></tr>
+    <tr><td class="num">10:21</td>
+        <td class="left">Raoul</td></tr>
+    <tr><td class="num">13:02</td>
+        <td class="left">ryujun</td></tr>
+    <tr><td class="num">13:58</td>
+        <td class="left">Taztunes</td></tr>
+</table>
+
+<p>libpuzzle</p>
+
+<h4>Headline</h4>
+
+<p>
+?? ?????? ?????? ?????? ? ???????? ?????????? Raoul'? ? ?????????????? ???????:
+??????? ? ???????????? ????????????? &quot;Life's Cross&quot;, ? ???????? ???????
+??????????? ??????, ??????? ? ?????????? ????????????? ? &quot;?????????? ???????&quot;,
+??? ?????? ??????????? ????? ? ????? ???????? ? ????????. ??? ?????? ???????? ????
+????????????? ??? ??????? ??????, ? ??? ???????? (? ????? ???????) ???????? ?????? ?????
+? ??????????? &quot;Industrial Puzzles&quot;. ? ????? &quot;Space
+Station&quot; ??? ??? ?????? ??????? ???????, ? ??????, ????????? &quot;Puzzle Puzzles&quot;
+?? ??????? ???? ?????? ??????? ??????? ??????.
+</p>
+
+<h4>&quot;'Puzzle Puzzles' ??? ??? ??????????? ????&quot;</h4>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200802_d.png" alt="Level of the month" border="0">
+<div class="imagetitle">?????? ???????? &hellip;</div>
+</div>
+
+<div class="quote">
+?? ????? ????, &quot;Puzzle Puzzles&quot; - ????? ???????? ????? ???????? ? ????????,
+??? ? ?????? ???? ???, ???????????, ? ????? ???? ??????, ?????? ? ???? ???? ????????? ?
+????? ??????? ? ?????? ?? ??? ???????. ?????, ????? ????????? ????, ????? ? ?????? ??????
+?? ?????, ? ??????? ????, ??? ???? ??????? ?????? &quot;??????&quot; 84 ???? ? ????? ???????? ?????????.
+</div>
+
+<div class="quote">
+??????, &quot;Puzzle Puzzles&quot; ??? ??? ??????????? ????, ?? ??? ?????? ??? &quot;Houdini&quot;,
+?? ? ??? ??????? ?????? ?????????? ??? ?????? ??????? ???? ??????????? Raoul'? ?? &quot;Puzzle Puzzles&quot;.
+</div>
+
+<div class="quote">
+? ?????, ??? ??????? ???????????. ? ???? ????? ?? fl-water ? ???????? ????????????? ?????
+???? ???-?? ??????????????? ? ???????? ??????????????? ?? ?????? ??????????
+&quot;Island Labyrinth&quot; ? &quot;Temple of Gold&quot;. ??????? ???????? ??????? ???????.
+???? ????, ????????? ?? ??????????? ???????? ????? ?????, ?????????? ??? ?????? ???????????????
+???????????????? ??????.
+???????? ?? &quot;Puzzle Puzzles&quot; ??????????? ???????? - ? ?? ????.
+?? ?????? ??????? Enigma ?? ????? ?????????: ????? ?????????? ? LotM 2/2008. ;-)
+</div>
+
+<div class="author">Daydreamer</div>
+
+<p>
+??, ?????????? &quot;Puzzle Puzzles&quot; ????????????? Raoul'?, ????????? ??? ????????:
+??????????? ??? ??????? ? ?????-?? ??????? ??????? ? ?????, ?? ? ???? ??? ?? ?????? ?? ?
+????-????? ?????????, ?? ??????? ? ??????-???????? ???????. ????????, ? ??????? ??????,
+?????????? ?????? ????? ??????? ??????? ?????????, ?????????? ??? ? ?????? ??? ??????? ??????????
+?????? ?????????? ? ??????.
+</p>
+
+<h4>&quot;??? ????? ???? ????? ?????????&quot;</h4>
+
+<div class="quote">
+&quot;Puzzle Puzzles&quot; - ???? ?? ???????, ??????? ? ?????? ????? ?? ??? ??????
+? ????? ??????? ?? ???? ???????????. ???????, ????????? ?? ???????? ???????, ? ?? ??
+???????, ?????????? ??????? ?????????? ? ????????? ? ??????? ????????, ????????
+&quot;??????? ??????&quot;, ? ???????? ?? ?????? ?????? ????????? ?? ????????? ??????? ??????.
+????, ????? ? ??????? ????? ?? ???? ??????, ??? ??????????, ??? ? ?????? ?? ??? ????? ??????????.
+? ???? ??, ? ?????, ??? ???? ????? ??? ??????. ?? ??? ???? ?? ??? ? ? ??????? ???? ???. ??? ????
+???? ????? ?????? ??? ??????.
+</div>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200802_b.png" alt="Level of the month" border="0">
+<div class="imagetitle">&hellip; ? ??????!
+<br>????? ???????? ?????????????? ?????.</div>
+</div>
+
+<div class="quote">
+??????? ? ????????? ? ??????? ??????????? ??????. ??? ????? ???? ????? ?????????, ????? ????????? ????
+????? ???? ? ?????? ???????. ?? ??????????, ??? ???? ????? ?????? ????????? ??? ?????? ??-??
+X-???????? ????? ???????? (st-grate1) ? ??????? (fl-gradient) ?? ????? ??????? ? ???????-?????????????
+? ????????? ????????? (it-booze-broken).  ? ??? ?? ???&mdash;??????? ????????? ??? ??????
+???????, ????????, ??? ???? ?????? ??????????? ????????? ???????, ?????? ??? ??? ??????? ????????,
+???????? ? ????????. ??????? ??? ????? ????? ??? ????? ??????, ??? ?? ??? ? ????????? ? ??????.
+??? ???????? ??????, ??????? ??????? ????? ??????? ???????? ????????? ????????????.
+</div>
+
+<div class="quote">
+????? ???? ??? ? ????? ?????????? ?????, ? ?? ???? ????? ?????? ??????? ??-?? ????????? ?????? ????????? ??????.
+??????? ??? ????? ???? ?????? ???????, ????? ????? ????? ??????????? ?????????. '?????' ????????? ????? ???????,
+?? ? ????? ?????????????. ? X-???????? ????? ???????? (st-grate1) ??? ?????? ???????????, ? ???? ?? ?? ????? ?? ????,
+? ????? ?? ??????? ??????. ? ???? ??, ??????? ?????? ????? ??? ?????? ?????????? ?????, ?? ?????? ???? ??? ????????????</div>
+
+<div class="quote">
+???????, ? ????? ?????? ?????????? Raoul Bourquin ? ?????, ??? ? ?????, ??????? ?????? ????? ?????????????? ??????
+??????? ?????????? ?????????, ? ??? ???, ? ?? ?? ?????? ??????? ?????????? ????? ?? Enigma ? ? ??? ?????
+?????????????? ??????? ? ???????.
+</div>
+
+<div class="author">Ryujun</div>
+
+
+
+<h4>&quot;? ?????????? ?????? ?????? ????? ???????&quot;</h4>
+
+<div class="quote">
+? ???? ??????? ?????????? ?? ??????? ????????????? (? ?????????????? ????? ??????)
+??????? ?????? ???????? ?????? ? ???? Enigma.
+</div>
+
+<div class="quote">
+?????? ?????, ????????????: ? ???? ?????????? ???? ????? ????????? ?? ??????? ??????
+? ??? ???????????. ????? ? ??????, ??? ???? ??????? ? ????? ??????? ?????? ???????,
+? ?????, ??? ??? ?????? ??????? ? ???, ????? ?????????? ????? ????????? ?????????????? ???????.
+</div>
+
+<div class="quote">
+?????? ?????? ????? ?????? ???? &quot;Z&quot;- ?
+&quot;W&quot;-???????????. ??????? ?????? ? ???????, ??????? ????????? ? ????? ???? ????,
+??????? ???????? ??? ????? ???????? ? ??????-???????????.
+</div>
+
+<div class="quote">
+???????? ???? ???? ??? ????????? ??? ????????, ?????????, ???? ???????? ????????, ??????, ? ???????
+??????? ????? ??????????? ??????????? ?? ???? ?? ??????, ? ??????? ?????. ????? ?????? ???? ???? ???????????
+?????????? ?????, ???????? ???????? ??????????? ?????, ????? ?????? ? ????????? ??? ? ????????? ??????
+????????? ?????.
+</div>
+
+<div class="lotmpic">
+<img src="$$imagedir$$/lotm/lotm_200802_c.png" alt="Level of the month" border="0">
+<div class="imagetitle">?????! ??? ??? ????? ???????????? <br>
+? ?????? ??? ????????.</div>
+</div>
+
+<div class="quote">
+??????? ? ?????????? ????????? ??????? ??????? ???????? ??????? ??? ????? ????? ????????. ??????????? ????? ???,
+????? ???????????? ?? 8x8 ?????? ??????? ?????, ?? ??????? ??????? ???? ??????? &quot;Puzzle Puzzles&quot;.
+</div>
+
+<div class="quote">
+?????? ? ??? ???? ????????? ??????? ?? ???? ?????? ?????. ??? ?? ????????????? ???????? ?????? ? ????.
+????? ??????? ??? ?????, ?????? ?????? ??????-?? ??????? ? ???? ????-?? ??????????.
+</div>
+
+<div class="quote">
+? ?????????? ?????? ?????? ????? ???????, ???? ????? ??????? ????????? ??????. ???????, ? ????????? ?????????
+&quot;???&quot; (????? ?????? ??????). ?????? ???????????? ??????????? ?????????? ???.
+</div>
+
+<div class="quote">
+? ???????? ???? ? ?????? ????????, ??? ?????? ????????? ?????? oxyd ? ??????????? ??????. ???? ??? ??????
+?? ?????? ?????.
+</div>
+
+<div class="quote">
+?????? ? ????? ????, ??? ???????? ???? ????? ????? ?????????? ????????.
+??????, ??? ? ?????? ?????? ?????? ?????? ? ?????? ??????????, ??? ?????? ? ????? ??????????
+&quot;????&quot;.
+</div>
+
+<div class="quote">
+? ???????? ?????? ???????? ????????????? ?????, ? ??????,
+??????? ? ????? ? ????? ?? ??????? oxyd, ?? ?? ? Enigma. ??? ??? ? ????, ??? ??????, ???????? ?????.
+??????, ????? ????, ??? ? ????????? ????????? ????? ? ????? ???????????, ????? ???? ? ????????? ??????????????,
+? ??????? ??????? ??? ? ???????. ????? ?????????? ?????????? ????????? ??? ?????? ??????-???????????,
+???? ????????? ?????? ??????? ? ?????? ??? ??????????? ???????? ???? ??????? &hellip;
+</div>
+
+<div class="quote">
+?????? ??? ?????? ????? ????? ???????? ??????. ??, ??? ??? ? ?????, ??? ??????????? ?????? ? ?? ?????
+??? ????? ??????? ???? ??? ??????????, ? ????? ??????? ???????, ????? ?????????????? ????,
+??????? ?? ?????????? ?????? ???????. ??? ???? ?????????????? ??? ????????? ????????? ????? ? ??????
+????? ??? ?????????? ? ?????.
+</div>
+
+<div class="quote">
+????? ??????? ??? ??????? ?? ????? ???????, ?????????? ????? ?????? ????????. ? ?????????? ???????
+?????????? ????? ???????? ????????? ???????????. ??? ????????? ???? ??????? ??? ?? ??????????
+???????, ? ?? ??? ???? ?????? ?????????. ???? Ronald ?? ???????? ???? ? ???????? ???????.
+?????? ?????????? ???????, ??????? ????? ??????? ????????? ??????? ?????????? ???????? ??? ?????????.
+</div>
+
+<div class="quote">
+????? ?????????? ??????? ????????? ????????? ? ??????? ?????????? ????, ??????? ??? ????? ??? ??? ?
+??????????????? ??????? Enigma 1.0.
+</div>
+
+<div class="author">Raoul Bourquin</div>
+
+
+<p>? ?????????? ???????????,<br>
+<i>Andreas ? Harry</i></p>
+
+</div>
+


Property changes on: feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html
___________________________________________________________________
Name: svn:eol-style
   + native



From ged at mail.berlios.de  Sat Feb  2 20:26:54 2008
From: ged at mail.berlios.de (ged at mail.berlios.de)
Date: Sat, 2 Feb 2008 20:26:54 +0100
Subject: [Enigma-game-svn] r1022 - homepage/input
Message-ID: <200802021926.m12JQsXD017691@sheep.berlios.de>

Author: ged
Date: 2008-02-02 20:26:52 +0100 (Sat, 02 Feb 2008)
New Revision: 1022

Modified:
   homepage/input/infobox_ru.html
Log:
02.02.2008: Russian infobox

Modified: homepage/input/infobox_ru.html
===================================================================
--- homepage/input/infobox_ru.html	2008-02-02 19:22:29 UTC (rev 1021)
+++ homepage/input/infobox_ru.html	2008-02-02 19:26:52 UTC (rev 1022)
@@ -1,8 +1,8 @@
     <div class="infobody">
        <div class="info">
-         <h3>??????????? IV/2!</h3>
-         ??????? Enigma ?????? ??????? ??????????? ?????? ????!
-         ?? ???? ????? ????? ??????? ? 2008&mdash;????????? ??? ? ?????????? &hellip;
+         <h3>100% ??????!</h3>
+         ??????????? ?????? ????????? ???????????? Ryujun, ??????? ?????? ??????? ?????
+	 ??? ?????? Enigma 1.01 ? ?????????? ? ??????? ???????.
          <!--<h3>Level of the Month</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>



From ral at mail.berlios.de  Sun Feb  3 20:04:20 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 3 Feb 2008 20:04:20 +0100
Subject: [Enigma-game-svn] r1023 - in trunk: data/schemas src
Message-ID: <200802031904.m13J4Ksd005989@sheep.berlios.de>

Author: ral
Date: 2008-02-03 20:04:18 +0100 (Sun, 03 Feb 2008)
New Revision: 1023

Added:
   trunk/data/schemas/objects.xml
   trunk/data/schemas/objects.xsd
   trunk/src/AttributeDescriptor.cc
   trunk/src/AttributeDescriptor.hh
   trunk/src/KindDescriptor.cc
   trunk/src/KindDescriptor.hh
   trunk/src/MessageDescriptor.cc
   trunk/src/MessageDescriptor.hh
   trunk/src/ObjectValidator.cc
   trunk/src/ObjectValidator.hh
Modified:
   trunk/src/Makefile.am
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/lua.cc
   trunk/src/main.cc
   trunk/src/world.cc
Log:
Trunk 1.1: Object Validation part I
- add an XML declaration of the objects zoo, attributes, messages
- add descriptor classes for objects, attributes, messages
- cleanup Object
- add a validation class
- validate all level messages including action messages:
  - unknown messages are rejected, e.g. "open" on a switch
Note:
- just a few test objects are XML declared
- further features of the validator will be added in the next parts


Added: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/data/schemas/objects.xml	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,90 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="objects.xsd">
+  <attributes>
+    <attr name="action" type="tokens" default="nil" rw="rw"/>
+    <attr name="autoclose" type="bool" default="false" rw="rw"/>
+    <attr name="color" type="int" default="nil" min="0" max="1" rw="rw"/>
+    <attr name="counterclock" type="bool" default="false" rw="rw"/>
+    <attr name="inverse" type="bool" default="false" rw="rw"/>
+    <attr name="name" type="string" default="nil" rw="rw"/>
+    <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
+    <attr name="target" type="tokens" default="nil" rw="rw"/>
+  </attributes>
+  <messages>
+    <msg name="close" type="nil"/>
+    <msg name="closeall" type="nil"/>
+    <msg name="inner_pull" type="dir"/>
+    <msg name="off" type="nil"/>
+    <msg name="on" type="nil"/>
+    <msg name="open" type="nil"/>
+    <msg name="shuffle" type="nil"/>
+    <msg name="signal" type="int" min="0" max="1"/>
+    <msg name="toggle" type="nil"/>
+    <msg name="_bombstone" type="nil"/>
+    <msg name="_explosion" type="nil"/>
+    <msg name="_init" type="nil"/>
+    <msg name="_jumping" type="bool"/>
+    <msg name="_performaction" type="nil"/>
+    <msg name="_model_reanimated" type="nil"/>
+    <msg name="_passed" type="nil"/>            <!-- check type-->
+    <msg name="_performaction" type="nil"/>
+    <msg name="_start" type="nil"/>
+    <msg name="_trigger" type="bool"/>
+  </messages>
+  <zoo>
+    <object name="" abstract="true" states="2">
+      <attr name="action"/>
+      <attr name="inverse"/>
+      <attr name="name"/>
+      <attr name="state"/>
+      <attr name="target"/>
+      <action type="bool"/>
+      <msg name="toggle"/>
+    </object>
+    <object name="it" abstract="true"/>
+    <object name="it_blocker">
+      <attr name="autoclose"/>
+      <msg name="close"/>
+      <msg name="open"/>
+      <msg name="signal"/>
+      <msg name="_init"/>
+      <msg name="_performaction"/>
+    </object>
+    <object name="it_blocker_new" init="true">
+    </object>
+    <object name="st" abstract="true"/>
+    <object name="st_blocker">
+      <attr name="autoclose"/>
+      <msg name="close"/>
+      <msg name="open"/>
+      <msg name="signal"/>
+      <msg name="_performaction"/>
+      <msg name="_trigger"/>
+    </object>
+    <object name="st_blocker_new" init="true">
+    </object>
+    <object name="st_floppy">
+      <msg name="on"/>
+      <msg name="off"/>
+      <msg name="signal"/>
+    </object>
+    <object name="st_fourswitch" states="4">
+      <attr name="counterclock"/>
+      <action type="dir" statetype="bool"/>
+      <msg name="signal"/>
+      <msg name="_trigger"/>
+    </object>
+    <object name="st_switch">
+      <attr name="color"/>
+      <msg name="on"/>
+      <msg name="off"/>
+      <msg name="signal"/>
+    </object>
+    <object name="st_switch_black">
+      <attr name="color" value="0"/>
+    </object>
+    <object name="st_switch_white">
+      <attr name="color" value="1"/>
+    </object>
+  </zoo>
+</objects>


Property changes on: trunk/data/schemas/objects.xml
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:eol-style
   + native

Added: trunk/data/schemas/objects.xsd
===================================================================
--- trunk/data/schemas/objects.xsd	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/data/schemas/objects.xsd	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,122 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' version="0.1" xml:lang="en">
+  <xs:annotation>
+    <xs:documentation>
+      XML schema definitions for Enigma objects
+      Copyright ? 2008 Ronald Lamprecht
+      GPL2
+    </xs:documentation>
+  </xs:annotation>
+  <xs:element name="objects">
+    <xs:complexType>
+      <xs:sequence>
+        <xs:element name="attributes" minOccurs="1" maxOccurs="1">
+          <xs:annotation>
+            <xs:documentation>
+              All attributes of all objects with their default behaviour
+            </xs:documentation>
+          </xs:annotation>
+          <xs:complexType>
+            <xs:sequence>
+              <xs:element name="attr" minOccurs="0" maxOccurs="unbounded">
+                <xs:complexType>
+                  <xs:attribute name="name" type="xs:string" use="required"/>
+                  <xs:attribute name="type" type="valueType" use="required"/>
+                  <xs:attribute name="default" type="xs:string" use="required"/>
+                  <xs:attribute name="min" type="xs:string" use="optional"/>
+                  <xs:attribute name="max" type="xs:string" use="optional"/>
+                  <xs:attribute name="rw" type="xs:string" use="required"/>
+                  <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                </xs:complexType>
+              </xs:element> <!-- attr -->
+            </xs:sequence>
+          </xs:complexType>
+        </xs:element> <!-- attributes -->
+        
+        <xs:element name="messages" minOccurs="1" maxOccurs="1">
+          <xs:annotation>
+            <xs:documentation>
+              All messages of all objects with their value types
+            </xs:documentation>
+          </xs:annotation>
+          <xs:complexType>
+            <xs:sequence>
+              <xs:element name="msg" minOccurs="0" maxOccurs="unbounded" >
+                <xs:complexType>
+                  <xs:attribute name="name" type="xs:string" use="required"/>
+                  <xs:attribute name="type" type="valueType" use="required"/>
+                  <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                </xs:complexType>
+              </xs:element> <!-- msg -->
+            </xs:sequence>
+          </xs:complexType>
+        </xs:element> <!-- messages -->
+
+        <xs:element name="zoo" minOccurs="1" maxOccurs="1">
+          <xs:annotation>
+            <xs:documentation>
+              The zoo of all existing objects
+            </xs:documentation>
+          </xs:annotation>
+          <xs:complexType>
+            <xs:sequence>
+              <xs:element name="object" minOccurs="0" maxOccurs="unbounded" >
+                <xs:complexType>
+                  <xs:sequence>
+                    <xs:element name="attr" minOccurs="0" maxOccurs="unbounded">
+                      <xs:complexType>
+                        <xs:attribute name="name" type="xs:string" use="required"/>
+                        <xs:attribute name="type" type="valueType" use="optional"/>
+                        <xs:attribute name="default" type="xs:string" use="optional"/>
+                        <xs:attribute name="min" type="xs:string" use="optional"/>
+                        <xs:attribute name="max" type="xs:string" use="optional"/>
+                        <xs:attribute name="rw" type="xs:string" use="optional"/>
+                        <xs:attribute name="value" type="xs:string" use="optional"/>
+                        <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                      </xs:complexType>
+                    </xs:element> <!-- attr -->
+                    <xs:element name="action" minOccurs="0" maxOccurs="1">
+                      <xs:complexType>
+                        <xs:attribute name="type" type="valueType" use="required"/>
+                        <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                      </xs:complexType>
+                    </xs:element> <!-- action -->
+                    <xs:element name="msg" minOccurs="0" maxOccurs="unbounded" >
+                      <xs:complexType>
+                        <xs:attribute name="name" type="xs:string" use="required"/>
+                        <xs:attribute name="type" type="valueType" use="optional"/>
+                        <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                      </xs:complexType>
+                    </xs:element> <!-- msg -->
+                  </xs:sequence>
+                  <xs:attribute name="name" type="xs:string" use="required"/>
+                  <xs:attribute name="super" type="xs:string" use="optional" default="-"/>
+                  <xs:attribute name="abtract" type="xs:boolean" use="optional" default="false"/>
+                  <xs:attribute name="states" type="xs:int" use="optional" default="-1"/>
+                  <xs:attribute name="init" type="xs:boolean" use="optional" default="false"/>
+                  <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
+                </xs:complexType>
+              </xs:element> <!-- object -->
+            </xs:sequence>
+          </xs:complexType>
+        </xs:element> <!-- zoo -->
+        
+        <xs:any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
+      </xs:sequence>
+    </xs:complexType>
+  </xs:element> <!-- objects -->
+  
+  <xs:simpleType name="valueType">
+    <xs:restriction base="xs:string">
+      <xs:enumeration value="bool"/>
+      <xs:enumeration value="int"/>
+      <xs:enumeration value="double"/>
+      <xs:enumeration value="nil"/>
+      <xs:enumeration value="dir"/>
+<!--      <xs:enumeration value="pos"/>  -->
+      <xs:enumeration value="string"/>
+      <xs:enumeration value="enum"/>
+      <xs:enumeration value="tokens"/>
+    </xs:restriction>
+  </xs:simpleType>
+</xs:schema>


Property changes on: trunk/data/schemas/objects.xsd
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:eol-style
   + native

Added: trunk/src/AttributeDescriptor.cc
===================================================================
--- trunk/src/AttributeDescriptor.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/AttributeDescriptor.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,76 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "AttributeDescriptor.hh"
+
+#include "ObjectValidator.hh"
+
+namespace enigma {
+    
+    AttributeDescriptor::AttributeDescriptor(std::string attributeName, validationType valType, 
+            Value aValue, bool allowRead, bool allowWrite, Value minVal, Value maxVal)
+            : name (attributeName), type (valType), defaultValue (aValue), 
+            readable (allowRead), writable(allowWrite), min (minVal), max (maxVal) {
+    }
+    
+    std::string AttributeDescriptor::getName() {
+        return name;
+    }
+    
+    validationType AttributeDescriptor::getType() {
+        return type;
+    }
+    
+    bool AttributeDescriptor::isReadable() {
+        return readable;
+    }
+    
+    bool AttributeDescriptor::isWritable() {
+        return writable;
+    }
+    
+    Value AttributeDescriptor::getValue() {
+        return value;
+    }
+    
+    void AttributeDescriptor::setReadable(bool allowRead) {
+        readable = allowRead;
+    }
+    
+    void AttributeDescriptor::setWritable(bool allowWrite) {
+        writable = allowWrite;
+    }
+    
+    void AttributeDescriptor::setDefaultValue(const Value &newDefault) {
+        defaultValue = newDefault;
+    }
+
+    void AttributeDescriptor::setMinValue(const Value &newMin) {
+        min = newMin;
+    }
+    
+    void AttributeDescriptor::setMaxValue(const Value &newMax) {
+        max = newMax;
+    }
+    
+    void AttributeDescriptor::setValue(const Value &newValue) {
+        value = newValue;
+    }
+    
+} // namespace enigma


Property changes on: trunk/src/AttributeDescriptor.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/AttributeDescriptor.hh
===================================================================
--- trunk/src/AttributeDescriptor.hh	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/AttributeDescriptor.hh	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,66 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ */
+ 
+#ifndef ATTRIBUTEDESCRIPTOR_HH_INCLUDED
+#define ATTRIBUTEDESCRIPTOR_HH_INCLUDED
+
+#include "Value.hh"
+#include <string>
+
+namespace enigma
+{
+    enum validationType {
+        VAL_BOOL,
+        VAL_INT,
+        VAL_DOUBLE,
+        VAL_NIL,
+        VAL_DIR,
+//        VAL_POS,
+        VAL_STRING,
+        VAL_ENUM,
+        VAL_TOKENS
+    };    
+
+    class AttributeDescriptor {
+    public:
+        AttributeDescriptor(std::string name, validationType valType, Value defaultValue,
+                bool allowRead, bool allowWrite, Value minVal, Value maxVal);
+        std::string getName();
+        validationType getType();
+        bool isReadable();
+        bool isWritable();
+        Value getValue();
+        void setReadable(bool allowRead);
+        void setWritable(bool allowWrite);
+        void setDefaultValue(const Value &newDefault);
+        void setMinValue(const Value &newMin);
+        void setMaxValue(const Value &newMax);
+        void setValue(const Value &newValue);
+
+    private:
+        std::string name;
+        validationType type;
+        Value defaultValue;
+        bool readable;
+        bool writable;
+        Value  min;
+        Value  max;
+        Value value;
+    };
+} // namespace enigma
+#endif


Property changes on: trunk/src/AttributeDescriptor.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/KindDescriptor.cc
===================================================================
--- trunk/src/KindDescriptor.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/KindDescriptor.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,133 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "KindDescriptor.hh"
+
+#include "errors.hh"
+#include "main.hh"
+#include "ObjectValidator.hh"
+
+namespace enigma {
+    KindDescriptor::KindDescriptor(std::string name, std::string superKind, bool abstract, 
+            int states, bool initOnly) : kind (name), isAbstract (abstract), 
+            isInitOnly (isInitOnly), numStates (states) {
+        // find super kind
+        if (superKind != "-") {
+            // an explicit super kind is given
+            super = ObjectValidator::instance()->getKindDesc(superKind);
+        } else {
+            // implicit super kind by suffix cut off
+            std::string::size_type pos = name.rfind('_');
+            if (pos != std::string::npos)
+                super = ObjectValidator::instance()->getKindDesc( name.substr(0, pos));
+            else
+                super = ObjectValidator::instance()->getKindDesc("");
+        }
+        ASSERT(super != NULL || name == "", XFrontend, "Object description initialization error - unknown super kind");
+        // isClass - if all super are abstract
+        isClass = !abstract;
+        for (KindDescriptor *s = super; s != NULL; s = s->super)
+            if (!s->isAbstract)
+                isClass = false;
+
+        // inherit messages from super
+        if (super != NULL)
+            messages = super->messages;
+
+        // inherit attributes from super
+        if (super != NULL)
+            attributes = super->attributes;
+    }
+    
+    void KindDescriptor::addMessage(std::string msg) {
+        if (messages[msg] == NULL)
+            messages[msg] = ObjectValidator::instance()->getMessage(msg);
+    }
+    
+    bool KindDescriptor::validateMessage(std::string msg) {
+        std::map<std::string, MessageDescriptor *>::iterator it = messages.find(msg);
+        return it != messages.end();
+    }
+    
+    void KindDescriptor::addAttribute(std::string name) {
+        if (attributes[name] == NULL)
+            attributes[name] = ObjectValidator::instance()->getDefaultAttribute(name);
+    }
+    
+    AttributeDescriptor * KindDescriptor::addModifiedAttribute(std::string name) {
+        // make a clone and return it for modification
+        AttributeDescriptor *inheritedAttribute = attributes[name];
+        if (inheritedAttribute == NULL)
+            inheritedAttribute = ObjectValidator::instance()->getDefaultAttribute(name);
+        AttributeDescriptor *cloneAttribute = ObjectValidator::instance()->cloneAttribute(inheritedAttribute);
+        attributes[name] = cloneAttribute;
+        return cloneAttribute;
+    }
+    
+    bool KindDescriptor::validateAttributeWrite(std::string key, Value val) {
+        std::map<std::string, AttributeDescriptor *>::iterator it = attributes.find(key);
+        if (it == attributes.end())
+            return false;
+        else
+            return it->second->isWritable();
+    }
+    
+    void KindDescriptor::log() {
+        if (super != NULL)
+            Log << "Kind " << kind << " of super " << super->kind << " isClass " << isClass << "\n";
+        else
+            Log << "Kind " << kind << " is base - isClass " << isClass << "\n";
+        for (std::map<std::string, MessageDescriptor *>::iterator it = messages.begin(); it != messages.end(); ++it)
+            Log << "    Message: " << it->first << "\n";
+        for (std::map<std::string, AttributeDescriptor *>::iterator it = attributes.begin(); it != attributes.end(); ++it) {
+            Log << "    Attribute: " << it->first << " - ";
+            switch (it->second->getType()) {
+                case VAL_BOOL :
+                    Log << "bool - ";
+                    break;
+                case VAL_NIL :
+                    Log << "nil - ";
+                    break;
+                case VAL_STRING :
+                    Log << "string - ";
+                    break;
+                case VAL_INT :
+                    Log << "int - ";
+                    break;
+                case VAL_DIR :
+                    Log << "dir - ";
+                    break;
+                case VAL_ENUM :
+                    Log << "enum - ";
+                    break;
+                case VAL_DOUBLE :
+                    Log << "double - ";
+                    break;
+                case VAL_TOKENS :
+                    Log << "tokens - ";
+                    break;
+            }
+            if (it->second->isReadable()) Log << "r";
+            if (it->second->isWritable()) Log << "w";
+            if (it->second->getType() == VAL_INT && it->second->getValue() != Value())
+                Log << " : " << (int)(it->second->getValue());
+            Log << "\n";
+        }
+    }
+} // namespace enigma


Property changes on: trunk/src/KindDescriptor.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/KindDescriptor.hh
===================================================================
--- trunk/src/KindDescriptor.hh	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/KindDescriptor.hh	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,49 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ */
+ 
+#ifndef KINDDESCRIPTOR_HH_INCLUDED
+#define KINDDESCRIPTOR_HH_INCLUDED
+
+#include "AttributeDescriptor.hh"
+#include "MessageDescriptor.hh"
+#include <map>
+#include <string>
+
+namespace enigma
+{
+    class KindDescriptor {
+    public:
+        KindDescriptor(std::string name, std::string superKind, bool abstract, int states, bool initOnly);
+        void addMessage(std::string msg);
+        bool validateMessage(std::string msg);
+        void addAttribute(std::string name);
+        AttributeDescriptor * addModifiedAttribute(std::string name);
+        bool validateAttributeWrite(std::string key, Value val);
+        void log();
+    private:
+        std::string kind;
+        KindDescriptor *super;
+        bool isAbstract;  // object instantiation not possible
+        bool isClass;     // 
+        bool isInitOnly;  // isKind is never true 
+        int numStates;
+        std::map<std::string, MessageDescriptor *> messages;
+        std::map<std::string, AttributeDescriptor *> attributes;
+    };
+} // namespace enigma
+#endif


Property changes on: trunk/src/KindDescriptor.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/Makefile.am	2008-02-03 19:04:18 UTC (rev 1023)
@@ -25,6 +25,8 @@
 	actors.hh 		\
 	actors.cc 		\
 	actors_internal.hh	\
+	AttributeDescriptor.cc	\
+	AttributeDescriptor.hh	\
 	client.cc 		\
 	client.hh 		\
 	client_internal.hh	\
@@ -59,6 +61,8 @@
 	ItemHolder.hh		\
 	items.cc 		\
 	items.hh		\
+	KindDescriptor.cc	\
+	KindDescriptor.hh	\
 	laser.cc 		\
 	laser.hh		\
 	LocalToXML.cc		\
@@ -77,6 +81,8 @@
 	lua-ecl.hh		\
 	main.cc 		\
 	main.hh			\
+	MessageDescriptor.cc	\
+	MessageDescriptor.hh	\
 	netgame.cc 		\
 	netgame.hh 		\
 	network.cc		\
@@ -85,6 +91,8 @@
 	nls.hh			\
 	Object.cc 		\
 	Object.hh 		\
+	ObjectValidator.cc	\
+	ObjectValidator.hh	\
 	oxyd.cc			\
 	oxyd.hh 		\
 	oxyd_internal.hh	\

Added: trunk/src/MessageDescriptor.cc
===================================================================
--- trunk/src/MessageDescriptor.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/MessageDescriptor.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,31 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "MessageDescriptor.hh"
+
+#include "ObjectValidator.hh"
+
+namespace enigma {
+    MessageDescriptor::MessageDescriptor(std::string name) : message (name) {
+    }
+    
+    std::string MessageDescriptor::getMessage() {
+        return message;
+    }
+} // namespace enigma


Property changes on: trunk/src/MessageDescriptor.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/MessageDescriptor.hh
===================================================================
--- trunk/src/MessageDescriptor.hh	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/MessageDescriptor.hh	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ */
+ 
+#ifndef MESSAGEDESCRIPTOR_HH_INCLUDED
+#define MESSAGEDESCRIPTOR_HH_INCLUDED
+
+#include <string>
+
+namespace enigma
+{
+    class MessageDescriptor {
+    public:
+        MessageDescriptor(std::string name);
+        std::string getMessage();
+    private:
+        std::string message;
+    };
+} // namespace enigma
+#endif


Property changes on: trunk/src/MessageDescriptor.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/Object.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -24,6 +24,7 @@
 #include "game.hh"
 #include "main.hh"
 #include "lua.hh"
+#include "ObjectValidator.hh"
 #include "server.hh"
 #include "sound.hh"
 #include "world.hh"
@@ -112,19 +113,11 @@
         return id;
     }
     
-    Value Object::message(const Message &m) {
-        return Value();
-    }
-    
-    void Object::on_levelinit() {
-    }
-    
-    
     const char * Object::get_kind() const {      // To be made pure virtual
-        const Value *v = get_attrib("kind");
-        ASSERT(v && v->getType() == Value::STRING, XLevelRuntime,
-            "Object: attribute kind is not of type string (found in get_kind)");
-        return v->get_string();
+        AttribMap::const_iterator i = attribs.find("kind");        
+        ASSERT(i != attribs.end() && i->second.getType() == Value::STRING, XLevelRuntime,
+                "Object: attribute kind not found");
+        return i->second.get_string();
     }
     
     // check kind of object
@@ -137,20 +130,47 @@
         return ecl::string_match(get_kind(), kind_templ.c_str());
     }
     
+    std::string Object::getClass() const {
+        return get_kind();  // should be abstract, but until end of the reengineering we need compatibility
+    }
+    
+    std::string Object::getKind() const {
+        return getClass();
+    }
+    
+    bool Object::isKind(const std::string &kind) const {
+        return true;
+    }
+
+    bool Object::validateMessage(std::string msg, Value arg) {
+        return ObjectValidator::instance()->validateMessage(this, msg, arg);
+    }
+    
+    Value Object::message(const Message &m) {
+        return Value();
+    }
+    
+    
+    
     void Object::set_attrib(const string& key, const Value& val) {
         if (val)         // only set non-default values
             attribs[key] = val;  //.insert (key, val);
     }
     
-    const Value* Object::get_attrib(const string& key) const { // To be delete as soon as
-                                                               // get_kind() has no need of it
-        AttribMap::const_iterator i = attribs.find(key);
-        if (i == attribs.end())
-            return 0;
-        else
-            return &i->second;
+    
+    void Object::setAttrChecked(const std::string& key, const Value &val) {
+        if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeWrite(this, key, val))
+            setAttr(key, val);
     }
     
+    void Object::setAttr(const std::string& key, const Value &val) {
+        set_attrib(key, val);
+    }
+    
+    Value Object::getAttrChecked(const std::string &key) const {
+        return getAttr(key);
+    }
+    
     Value Object::getAttr(const string& key) const {
         AttribMap::const_iterator i = attribs.find(key);
         if (i == attribs.end())
@@ -166,14 +186,7 @@
             return defaultValue;
     }
     
-    Value Object::getValue(const string& key) const {
-        return getAttr(key);       // TODO write template method
-    }
     
-    Value Object::getDefaultValue(const string &key) const {
-        return Value(Value::DEFAULT);
-    }
-    
     void Object::transferName(Object *target) {
         if (target == NULL)
             return;
@@ -249,7 +262,9 @@
 //                            if (obj_action != action)
 //                                Log << "PerformAction renamed '" << action << "' to '" << obj_action << "' for receiver '" << (*oit)->get_kind() << "'\n";
                         }
-                        SendMessage(*oit, Message(obj_action, messageValue, this));                    
+                        // check if message is valid, otherwise ignore message
+                        if ((*oit)->validateMessage(obj_action, messageValue))
+                            SendMessage(*oit, Message(obj_action, messageValue, this));                    
                     }
                 }
             }

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/Object.hh	2008-02-03 19:04:18 UTC (rev 1023)
@@ -75,6 +75,8 @@
             ACTOR
         };
             
+        typedef ecl::AssocList<std::string, Value> AttribMap;
+
         Object();
         Object(const char *kind);
         Object(const Object &src_obj); 
@@ -83,77 +85,112 @@
         static Object * getObject(int id);
         int getId() const;
         
-        /* ---------- Attributes ---------- */
+        /* ---------- depreceated methods ---------- */
 
-        typedef ecl::AssocList<std::string, Value> AttribMap;
-
         bool is_kind(const char *kind) const;
         bool is_kind(const string& kind) const;
+        virtual const char *get_kind() const;
+        const AttribMap &get_attribs() const { return attribs; }  // just used by ObjectRepos::dump_info()        
 
-        const AttribMap &get_attribs() const { return attribs; }
-        
-        /**
-         * Get an attribute or a special given default value. This method
-         * gets attributes like the simple argumented getAttr method but
-         * returns the given default value instead of a DEFAULT value if
-         * no explicit attribute exists.
-         */
-        Value getDefaultedAttr(const string &key, Value defaultValue) const;
-
-
         /* ---------- Helper routines ---------- */
 
         void send_impulse(const GridPos& dest, Direction dir);
         void send_impulse(const GridPos& dest, Direction dir, double delay);
 
         /* ---------- Object interface ---------- */
+        
+        /**
+         * The main object category name of the object that describes its gaming class.
+         * All objects of a gaming class support the same attributes and messages. But
+         * they may still be members of different kind subcategories. E.g. "st_panel"
+         * is a class with "st_panel_n", "st_panel_s",... as kinds. A gaming object
+         * class is often implemented as a separate C++ class. But sometimes several 
+         * gaming classes share a single C++ class. E.g. "st_panel", "st_bluesand" are
+         * both impleneted by the class "ClusterStone". In this case we talk about a 
+         * common "familiy". 
+         */
+        virtual std::string getClass() const;
+        
+        /**
+         * The most specific object category name. Many objects change their kind during
+         * their lifecycle. All attributes are evaluated to determine the current kind
+         * of a gaming object. 
+         */
+        std::string getKind() const;
+        
+        /**
+         * Check the current kind of the object versus the given name.
+         */
+        bool isKind(const std::string &kind) const;
+        
+        
+        bool validateMessage(std::string msg, Value arg);
 
-        virtual const char *get_kind() const;
-
         /**
          * 
          */
         virtual Value message(const Message &m);
         
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void set_attrib(const string &key, const Value &val);
         
         /**
+         * Store the value information for the given key with prior checking of
+         * write allowance. All level code attribute settings should pass this
+         * central call. If a set is granted the virtual unchecked setAttr is 
+         * executed.
+         */
+        void setAttrChecked(const std::string &key, const Value &val);
+        
+        /**
+         * Store the value information for the given key. If it is a XML declared
+         * system attribute or a user attribute it will be stored in the attribute
+         * map. Otherwise an ivar may be set. Nothing happens if the attribute is
+         * declared as read only. If the value is "nil" the attribute will be reset
+         * to its declared default. If the default is "nil", too, or if it is a user
+         * attribute, it will be deleted in the attribute map. In these cases a read
+         * will return "nil" either way.
+         */
+        virtual void setAttr(const std::string &key, const Value &val);
+        
+        /**
+         * Get an attribute or value for the given key with prior checking of
+         * read allowance. All level code attribute reads should pass this central
+         * call. If a read is granted the virtual unchecked getAttr is executed.
+         */
+        Value getAttrChecked(const std::string &key) const;
+        
+        /**
          * Get an attribute that has been set or that stands as a proxy for a
          * trait or ivar. Object itself will just return attribute values
          * that are stored in its attribute map. For not existing attributes
-         * a value of type DEFAULT is returned.
+         * a XML declared standard default value will be returned. If the default
+         * is "nil" type DEFAULT will be returned. 
          * 
          * Subclasses may override this method to supply values of traits or
          * ivars. This way levels can gain read access to attributes that can
          * not to be stored in the attribute map due to performance reasons.
          */
-        virtual Value getAttr(const string &key) const;
+        virtual Value getAttr(const std::string &key) const;
         
+
         /**
-         * Get the attribute, traits, ivar or default value for a given key.
-         * This is the main access method for object values that returns
-         * the best available value known for a key. It resolves attributes,
-         * uses proxy values for ivars and traits, uses class defaults,
-         * world defaults or system defaults.
-         * 
-         * This is a template method. Subclass have to override the method
-         * <code>getDefaultValue()</code> to supply proper class defaults.
-         * All other defaults are resolved by this method
+         * Get an attribute or a special given default value. This method
+         * gets attributes like the simple argumented getAttr method but
+         * returns the given default value instead of a DEFAULT value if
+         * no explicit attribute exists.
          */
-        Value getValue(const string &key) const;
-
+        Value getDefaultedAttr(const string &key, Value defaultValue) const;
+        
+        
         virtual Object *clone()=0;
         virtual void dispose()=0;
 
-        virtual void on_levelinit();
-
         virtual void warning(const char *format, ...) const;
         virtual ObjectType getObjectType() const;
         void transferName(Object *target);
         virtual void transferIdentity(Object *target);
 
     protected:
-        virtual Value getDefaultValue(const string &key) const;
         /** This function is used by all triggers, switches etc. that
          * perform some particular action when activated (like opening
          * doors or switching lasers on and off). It interprets the
@@ -184,10 +221,11 @@
         static std::map<int, Object *> objects;
         int id;
         AttribMap attribs;
+        
         static int getNextId(Object *obj, bool bootFinished);
         static void bootFinished();
         static void freeId(int id);
-        const Value* get_attrib(const string& key) const;
+        
     };
 
 

Added: trunk/src/ObjectValidator.cc
===================================================================
--- trunk/src/ObjectValidator.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/ObjectValidator.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,333 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "ObjectValidator.hh"
+
+#include "errors.hh"
+#include "main.hh"
+#include "DOMErrorReporter.hh"
+#include "DOMSchemaResolver.hh"
+#include "utilXML.hh"
+#include "Utf8ToXML.hh"
+#include "XMLtoUtf8.hh"
+#include "gui/ErrorMenu.hh"
+#include <iostream>
+#include <sstream>
+#include <xercesc/dom/DOM.hpp>
+#include <xercesc/util/XMLDouble.hpp>
+
+XERCES_CPP_NAMESPACE_USE 
+
+namespace enigma {
+    ObjectValidator *ObjectValidator::theSingleton = 0;
+    
+    ObjectValidator* ObjectValidator::instance() {
+        if (theSingleton == NULL) {
+            theSingleton = new ObjectValidator();
+            theSingleton->init();
+        }
+        return theSingleton;
+    }
+    
+    ObjectValidator::ObjectValidator() {
+        std::string objectsPath;
+        std::string errMessage;
+        
+        if (!app.systemFS->findFile( "schemas/objects.xml" , objectsPath)) {
+                throw XFrontend("Cannot load object declarations!");
+        }
+
+        try {
+            std::ostringstream errStream;
+            app.domParserErrorHandler->resetErrors();
+            app.domParserErrorHandler->reportToOstream(&errStream);
+            app.domParserSchemaResolver->resetResolver();
+            app.domParserSchemaResolver->addSchemaId("objects.xsd","objects.xsd");
+
+            doc = app.domParser->parseURI(objectsPath.c_str());
+            if (doc != NULL && !app.domParserErrorHandler->getSawErrors()) {
+                
+            }
+            if(app.domParserErrorHandler->getSawErrors()) {
+                errMessage = errStream.str();
+            }
+            app.domParserErrorHandler->reportToNull();  // do not report to errStream any more
+        }
+        catch (...) {
+            errMessage = "Unexpected XML Exception on load of object declarations\n";
+        }
+        if (!errMessage.empty()) {
+            throw XFrontend("Cannot load object declarations file: " + objectsPath +
+                    "\nError: " + errMessage);
+        }
+    }
+     
+    ObjectValidator::~ObjectValidator() {
+        if (doc != NULL)
+            shutdown();
+        for (std::map<std::string, KindDescriptor *>::iterator it = kinds.begin(); it != kinds.end(); ++it)
+            delete it->second;
+        for (std::map<std::string, MessageDescriptor *>::iterator it = messages.begin(); it != messages.end(); ++it)
+            delete it->second;
+        for (std::map<std::string, AttributeDescriptor *>::iterator it = defaultAttributes.begin(); it != defaultAttributes.end(); ++it)
+            delete it->second;
+        while (!otherAttributes.empty()) {
+            delete otherAttributes.back();
+            otherAttributes.pop_back();
+        }
+    }
+    
+    void ObjectValidator::init() {
+        ASSERT(doc != NULL, XFrontend, "ObjectValidator try to init without given document");
+        
+        DOMNodeList *elemList;
+        DOMElement *baseElem;
+        
+        baseElem = dynamic_cast<DOMElement *>(doc->getElementsByTagName(Utf8ToXML("attributes").x_str())->item(0));
+        elemList = baseElem->getElementsByTagName(Utf8ToXML("attr").x_str());
+        for (int i = 0, l = elemList->getLength(); i < l; i++) {
+            scanAttributeElement(dynamic_cast<DOMElement *>(elemList->item(i)));
+        }
+        
+        baseElem = dynamic_cast<DOMElement *>(doc->getElementsByTagName(Utf8ToXML("messages").x_str())->item(0));
+        elemList = baseElem->getElementsByTagName(Utf8ToXML("msg").x_str());
+        for (int i = 0, l = elemList->getLength(); i < l; i++) {
+            scanMessageElement(dynamic_cast<DOMElement *>(elemList->item(i)));
+        }
+        
+        elemList = doc->getElementsByTagName(Utf8ToXML("object").x_str());
+        for (int i = 0, l = elemList->getLength(); i < l; i++) {
+            scanObjectElement(dynamic_cast<DOMElement *>(elemList->item(i)));
+        }
+    }
+    
+    void ObjectValidator::shutdown() {
+        if (doc != NULL)
+            doc->release();
+        doc = NULL;
+    }
+    
+    KindDescriptor *ObjectValidator::getKindDesc(std::string name) {
+        std::map<std::string, KindDescriptor *>::iterator it = kinds.find(name);
+        if (it != kinds.end())
+            return it->second;
+        else
+            return NULL;
+    }
+    
+    MessageDescriptor *ObjectValidator::getMessage(std::string name) {
+        std::map<std::string, MessageDescriptor *>::iterator it = messages.find(name);
+        if (it != messages.end())
+            return it->second;
+
+        ASSERT(false, XFrontend, ("ObjectValidator missing message declaration for: " + name).c_str());
+        return NULL;
+    }
+    
+    bool ObjectValidator::validateMessage(Object *obj, std::string msg, Value val) {
+        KindDescriptor *kind = getKindDesc(obj->getClass());
+        if (kind == NULL) {
+            return true;    // object is not under validator control
+        }
+        return kind->validateMessage(msg);
+    }
+
+    AttributeDescriptor *ObjectValidator::getDefaultAttribute(std::string name) {
+        std::map<std::string, AttributeDescriptor *>::iterator it = defaultAttributes.find(name);
+        if (it != defaultAttributes.end())
+            return it->second;
+
+        ASSERT(false, XFrontend, ("ObjectValidator missing default attribute declaration for: " + name).c_str());
+        return NULL;
+    }
+    
+    AttributeDescriptor *ObjectValidator::cloneAttribute(AttributeDescriptor *masterAttr) {
+        AttributeDescriptor *clone = new AttributeDescriptor(*masterAttr);
+        otherAttributes.push_back(clone);
+        return clone;
+    }
+
+    bool ObjectValidator::validateAttributeWrite(Object *obj, std::string key, Value val) {
+        KindDescriptor *kind = getKindDesc(obj->getClass());
+        if (kind == NULL) {
+            return true;    // object is not under validator control
+        }
+        return kind->validateAttributeWrite(key, val);
+    }
+    
+    bool ObjectValidator::validateAttributeRead(Object *obj, std::string key) {
+        KindDescriptor *kind = getKindDesc(obj->getClass());
+        if (kind == NULL) {
+            return true;    // object is not under validator control
+        }
+        return true;
+    }
+
+    void ObjectValidator::scanAttributeElement(DOMElement *attribElement) {
+        std::string name = XMLtoUtf8(attribElement->getAttribute(Utf8ToXML("name").x_str())).c_str();
+        std::string typeName = XMLtoUtf8(attribElement->getAttribute(Utf8ToXML("type").x_str())).c_str();
+        validationType valType;
+        if (typeName == "bool")
+            valType = VAL_BOOL;
+        else if (typeName == "int")
+            valType = VAL_INT;
+        else if (typeName == "double")
+            valType = VAL_DOUBLE;
+        else if (typeName == "nil")
+            valType = VAL_NIL;
+        else if (typeName == "dir")
+            valType = VAL_DIR;
+//        else if (typeName == "pos")
+//            valType = VAL_POS;
+        else if (typeName == "string")
+            valType = VAL_STRING;
+        else if (typeName == "enum")
+            valType = VAL_ENUM;
+        else if (typeName == "tokens")
+            valType = VAL_TOKENS;
+        
+        const XMLCh* defaultAttribute = attribElement->getAttribute(Utf8ToXML("default").x_str());
+        std::string defaultString = XMLtoUtf8(defaultAttribute).c_str();
+        Value defaultValue = parseTypedValue(defaultAttribute, defaultString, valType);
+
+        std::string rwString = XMLtoUtf8(attribElement->getAttribute(Utf8ToXML("rw").x_str())).c_str();
+        bool allowRead = (rwString.find('r') != std::string::npos) ? true : false;
+        bool allowWrite = (rwString.find('w') != std::string::npos) ? true : false;
+        
+        const XMLCh* minAttribute = attribElement->getAttribute(Utf8ToXML("min").x_str());
+        std::string minString = XMLtoUtf8(minAttribute).c_str();
+        Value minVal = parseTypedValue(minAttribute, minString, valType);
+
+        const XMLCh* maxAttribute = attribElement->getAttribute(Utf8ToXML("max").x_str());
+        std::string maxString = XMLtoUtf8(maxAttribute).c_str();
+        Value maxVal = parseTypedValue(maxAttribute, maxString, valType);
+        
+        AttributeDescriptor *attr = new AttributeDescriptor(name, valType, defaultValue, allowRead, allowWrite, minVal, maxVal);
+        defaultAttributes[name] = attr;
+        Log << "Default Attribute " << name << "\n";
+    }
+    
+    void ObjectValidator::scanMessageElement(DOMElement *msgElement) {
+        std::string name = XMLtoUtf8(msgElement->getAttribute(Utf8ToXML("name").x_str())).c_str();
+        MessageDescriptor *msg = new MessageDescriptor(name);
+        messages[name] = msg;
+//        Log << "Default Message " << name << "\n";
+    }
+    
+    void ObjectValidator::scanObjectElement(DOMElement *objectElement) {
+        std::string name = XMLtoUtf8(objectElement->getAttribute(Utf8ToXML("name").x_str())).c_str();
+        std::string super = XMLtoUtf8(objectElement->getAttribute(Utf8ToXML("super").x_str())).c_str();
+        int states = XMLString::parseInt(objectElement->getAttribute(Utf8ToXML("states").x_str()));
+        bool isAbstract = boolValue(objectElement->getAttribute(Utf8ToXML("abstract").x_str()));
+        bool isInit = boolValue(objectElement->getAttribute(Utf8ToXML("init").x_str()));
+        
+        KindDescriptor *kd = new KindDescriptor(name, super, isAbstract, states, isInit);
+        kinds[name] = kd;
+        
+        DOMNodeList *elemList;
+        
+        elemList = objectElement->getElementsByTagName(Utf8ToXML("msg").x_str());
+        for (int i = 0, l = elemList->getLength(); i < l; i++) {
+            DOMElement *msgElem = dynamic_cast<DOMElement *>(elemList->item(i));
+            kd->addMessage(XMLtoUtf8(msgElem->getAttribute(Utf8ToXML("name").x_str())).c_str());
+        }
+        
+        elemList = objectElement->getElementsByTagName(Utf8ToXML("attr").x_str());
+        for (int i = 0, l = elemList->getLength(); i < l; i++) {
+            DOMElement *attrElem = dynamic_cast<DOMElement *>(elemList->item(i));
+                        
+            std::string name = XMLtoUtf8(attrElem->getAttribute(Utf8ToXML("name").x_str())).c_str();
+            std::string typeName = XMLtoUtf8(attrElem->getAttribute(Utf8ToXML("type").x_str())).c_str();
+            const XMLCh* defaultAttribute = attrElem->getAttribute(Utf8ToXML("default").x_str());
+            std::string defaultString = XMLtoUtf8(defaultAttribute).c_str();
+            std::string rwString = XMLtoUtf8(attrElem->getAttribute(Utf8ToXML("rw").x_str())).c_str();
+            const XMLCh* minAttribute = attrElem->getAttribute(Utf8ToXML("min").x_str());
+            std::string minString = XMLtoUtf8(minAttribute).c_str();
+            const XMLCh* maxAttribute = attrElem->getAttribute(Utf8ToXML("max").x_str());
+            std::string maxString = XMLtoUtf8(maxAttribute).c_str();
+            const XMLCh* valAttribute = attrElem->getAttribute(Utf8ToXML("value").x_str());
+            std::string valString = XMLtoUtf8(valAttribute).c_str();
+
+            if (typeName == "" && defaultString == "" && rwString == "" && minString == "" 
+                    && maxString == "" && valString == "")
+                kd->addAttribute(name);
+            else {
+                ASSERT(typeName == "", XFrontend, ("ObjectValidator unsupported retyping of: " + name).c_str());
+                AttributeDescriptor *cloneAttr = kd->addModifiedAttribute(name);
+                if (rwString != "") {
+                    cloneAttr->setReadable((rwString.find('r') != std::string::npos) ? true : false);
+                    cloneAttr->setWritable((rwString.find('w') != std::string::npos) ? true : false);
+                }
+                validationType valType = cloneAttr->getType();
+                if (defaultString != "") {
+                    Value defaultValue = parseTypedValue(defaultAttribute, defaultString, valType);
+                    cloneAttr->setDefaultValue(defaultValue);
+                }
+                if (minString != "") {
+                    Value minValue = parseTypedValue(minAttribute, minString, valType);
+                    cloneAttr->setDefaultValue(minValue);
+                }
+                if (maxString != "") {
+                    Value maxValue = parseTypedValue(maxAttribute, maxString, valType);
+                    cloneAttr->setMaxValue(maxValue);
+                }
+                if (maxString != "") {
+                    Value maxValue = parseTypedValue(maxAttribute, maxString, valType);
+                    cloneAttr->setMaxValue(maxValue);
+                }
+                if (valString != "") {
+                    Value value = parseTypedValue(valAttribute, valString, valType);
+                    cloneAttr->setValue(value);
+                }
+            }
+        }
+        
+        kd->log();
+    }
+    
+    Value ObjectValidator::parseTypedValue(const XMLCh* xmlSource, const std::string &strSource, validationType type) {
+        if (strSource != "nil") {
+            switch (type) {
+                case VAL_BOOL :
+                    return Value(boolValue(xmlSource));
+                    break;
+                case VAL_STRING :
+                    return Value(XMLtoUtf8(xmlSource).c_str());
+                case VAL_INT :
+                case VAL_DIR :
+                case VAL_ENUM :
+                    return Value(XMLString::parseInt(xmlSource));
+                    break;
+                case VAL_DOUBLE : {
+                    XMLDouble * result = new XMLDouble(xmlSource);
+                    Value v = result->getValue();
+                    delete result;
+                    return v;
+                    break;
+                }
+                default :    // nil, tokens default to nil
+                    return Value();
+                    break;
+            }
+        } else
+            return Value();
+    }
+    
+} // namespace enigma
+


Property changes on: trunk/src/ObjectValidator.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/ObjectValidator.hh
===================================================================
--- trunk/src/ObjectValidator.hh	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/ObjectValidator.hh	2008-02-03 19:04:18 UTC (rev 1023)
@@ -0,0 +1,80 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ */
+ 
+#ifndef OBJECTVALIDATOR_HH_INCLUDED
+#define OBJECTVALIDATOR_HH_INCLUDED
+
+#include "KindDescriptor.hh"
+#include "AttributeDescriptor.hh"
+#include "MessageDescriptor.hh"
+#include "Object.hh"
+#include "Value.hh"
+#include <list>
+#include <map>
+#include <string>
+#include <xercesc/dom/DOMDocument.hpp>
+#include <xercesc/dom/DOMElement.hpp>
+
+namespace enigma
+{
+    /**
+     * 
+     * - distinguish message vs. attribute names for lua
+     * - ignore unknown messages - free classes from task to block unsupported messages
+     * - rw access check for attributes on behalf of classes
+     * - supply default attribute values if not set
+     * - delete attribute or reset to default on nil setting
+     * - getKind evaluation of special subKind conditions
+     * - isKind checking against arbitrary kind names
+     */
+    class ObjectValidator {
+    public:
+        
+        static ObjectValidator *instance();
+        ~ObjectValidator();
+        void shutdown();
+        
+        KindDescriptor *getKindDesc(std::string name);
+        MessageDescriptor *getMessage(std::string name);
+        bool validateMessage(Object *obj, std::string msg, Value val);
+        AttributeDescriptor *getDefaultAttribute(std::string name);
+        AttributeDescriptor *cloneAttribute(AttributeDescriptor *masterAttr);
+        bool validateAttributeWrite(Object *obj, std::string key, Value val);
+        bool validateAttributeRead(Object *obj, std::string key);
+        
+    protected:
+        ObjectValidator();
+    private:
+        static ObjectValidator *theSingleton;
+        
+        void init();
+        void scanAttributeElement(XERCES_CPP_NAMESPACE_QUALIFIER DOMElement *attribElement);
+        void scanMessageElement(XERCES_CPP_NAMESPACE_QUALIFIER DOMElement *msgElement);
+        void scanObjectElement(XERCES_CPP_NAMESPACE_QUALIFIER DOMElement *objectElement);
+        Value parseTypedValue(const XMLCh* xmlSource, const std::string &strSource, validationType type);
+        
+        std::map<std::string, KindDescriptor *> kinds;
+        std::map<std::string, MessageDescriptor *> messages;
+        std::map<std::string, AttributeDescriptor *> defaultAttributes;
+        std::list<AttributeDescriptor *> otherAttributes;
+        
+        XERCES_CPP_NAMESPACE_QUALIFIER DOMDocument *doc;
+    };
+} // namespace enigma
+#endif
+


Property changes on: trunk/src/ObjectValidator.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/lua.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -1236,7 +1236,9 @@
     
     if (obj) {   // ignore not existing objects
         try {
-            answer = SendMessage (obj, msg, val);
+            // check if message is valid, otherwise ignore message
+            if (obj->validateMessage(msg, val))
+                answer = SendMessage (obj, msg, val);
         }
         catch (const XLevelRuntime &e) {
             throwLuaError (L, e.what());
@@ -1455,17 +1457,20 @@
     } else {
         // attribute
         Value val;  // nil
-        if (obj) 
-            val = obj->getAttr(keyStr);
-        if ((keyStr.find('_') != 0) && val.isDefault()) {
-            // object exists and no user attribute - no existing system attribute
-            // try to send message
-            messageLIFO.push_back(keyStr);
-            lua_pushcfunction(L, objectDirectMessage);
+        if (obj) {
+            if ((keyStr.find('_') != 0) &&  obj->validateMessage(keyStr, Value(Value::DEFAULT))) {
+                // it is a valid public message - try to send it
+                messageLIFO.push_back(keyStr);
+                lua_pushcfunction(L, objectDirectMessage);
+            } else {
+                val = obj->getAttr(keyStr);
+                // user attribute, existing system attribute or nil if no object
+                push_value(L, val);
+            }
         } else {
-            // user attribute, existing system attribute or nil if no object
+            // access of no longer existing object - ignore it and return nil
             push_value(L, val);
-        }
+        } 
         return 1;
     }
     return 0;

Modified: trunk/src/main.cc
===================================================================
--- trunk/src/main.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/main.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -33,6 +33,7 @@
 #include "world.hh"
 #include "nls.hh"
 #include "LocalToXML.hh"
+#include "ObjectValidator.hh"
 #include "PreferenceManager.hh"
 #include "Utf8ToXML.hh"
 #include "XMLtoUtf8.hh"
@@ -368,6 +369,9 @@
     }
 
     lev::Proxy::countLevels();
+    
+    // ----- Object declarations
+    ObjectValidator::instance();    // force early initialization (an optional statement)
 
     // ----- Initialize sound tables -- needs sound, oxyd, video (error messages!)
     sound::InitSoundSets();

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-02 19:26:52 UTC (rev 1022)
+++ trunk/src/world.cc	2008-02-03 19:04:18 UTC (rev 1023)
@@ -347,10 +347,6 @@
 
 void World::name_object(Object *obj, const std::string &name)
 {
-    Object *old = get_named(name);
-    if (old != NULL)
-        unname(old);
-    
     std::string unique_name = name;
     if (server::EnigmaCompatibility >= 1.10 && name.size() > 0 && name[name.size() - 1] == '#') {
         // auto name object with a unique name
@@ -1855,7 +1851,7 @@
     // activate which key hole
     if (src->getObjectType() == Object::ITEM) {
         ItemID src_id = get_id(dynamic_cast<Item *>(src));
-        if (src_id >= it_key_a && src_id <= it_key_c && dst->is_kind("st_key")) {
+        if (src_id >= it_key_a && src_id <= it_key_c && dst->is_kind("st-key")) {
             dst->set_attrib("keycode", src->getAttr("keycode"));
             return;
         }
@@ -1921,17 +1917,17 @@
     void explosion (GridPos p, ItemID explosion_item)
     {
         if (Stone *stone = GetStone(p))
-            SendMessage(stone, "_explosion");
+            SendMessage(stone, "expl");
         if (Item  *item  = GetItem(p)) {
             if (has_flags(item, itf_indestructible))
-                SendMessage(item, "_explosion");
+                SendMessage(item, "expl");
             else
                 SetItem(p, explosion_item);
         }
         else
             SetItem(p, explosion_item);
         if (Floor *floor = GetFloor(p))
-            SendMessage(floor, "_explosion");
+            SendMessage(floor, "expl");
     }
 }
 
@@ -1972,9 +1968,9 @@
 
         case EXPLOSION_BOMBSTONE:
             if (direct_neighbor) {
-                if (stone) SendMessage(stone, "_bombstone");
-                if (item) SendMessage(item, "_bombstone");
-                if (floor) SendMessage(floor, "_bombstone");
+                if (stone) SendMessage(stone, "bombstone");
+                if (item) SendMessage(item, "bombstone");
+                if (floor) SendMessage(floor, "bombstone");
             }
             break;
 



From ral at mail.berlios.de  Wed Feb  6 01:02:58 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 6 Feb 2008 01:02:58 +0100
Subject: [Enigma-game-svn] r1024 - in trunk: lib-src/enigma-core src
	src/stones
Message-ID: <200802060002.m1602wD7029569@sheep.berlios.de>

Author: ral
Date: 2008-02-06 01:02:56 +0100 (Wed, 06 Feb 2008)
New Revision: 1024

Modified:
   trunk/lib-src/enigma-core/ecl_alist.hh
   trunk/src/AttributeDescriptor.cc
   trunk/src/AttributeDescriptor.hh
   trunk/src/KindDescriptor.cc
   trunk/src/KindDescriptor.hh
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/ObjectValidator.cc
   trunk/src/ObjectValidator.hh
   trunk/src/lua.cc
   trunk/src/main.cc
   trunk/src/stones/Switch.cc
   trunk/src/stones/Switch.hh
Log:
Trunk 1.1: Object Validation part II
- validate level rw-access permission on attributes
- supply declaration based default values for not set attributes
- set of attribute value to "nil":
  - reset to default value if default other than nil
  - if default nil the attribute will be deleted as the access return nil
- new object type schema instead of inconsistent old kind:
  - a new kind can be any specifier from "st", "st_brick" to "st_brick_n" 
  - class = common attr., mesg., similar behaviour, image - e.g. "st_brick"
  - subkind = most specific kind with one or more attr. fixed to values
- obj:kind() return most specific kind - dynamically evaluated on base
  of attribute values via given XML declaration
- obj:is("akind") checks if a objects fits to kind based on XML declaration
Note:
- just a few test objects are yet XML declared


Modified: trunk/lib-src/enigma-core/ecl_alist.hh
===================================================================
--- trunk/lib-src/enigma-core/ecl_alist.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/lib-src/enigma-core/ecl_alist.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -58,12 +58,18 @@
             return i;
         }
 
-	VAL &operator[] (const key_type &key) { 
+        VAL &operator[] (const key_type &key) { 
             iterator i=find(key);
             if (i==this->end())
                 i=insert(this->end(), make_pair(key, VAL()));
             return i->second;
         }
+        
+        void remove_key(const key_type &key) {
+            iterator i = find(key);
+            if (i != this->end())
+                erase(i);
+        }
     };
 }
 #endif

Modified: trunk/src/AttributeDescriptor.cc
===================================================================
--- trunk/src/AttributeDescriptor.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/AttributeDescriptor.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -19,6 +19,7 @@
 
 #include "AttributeDescriptor.hh"
 
+#include "errors.hh"
 #include "ObjectValidator.hh"
 
 namespace enigma {
@@ -26,7 +27,7 @@
     AttributeDescriptor::AttributeDescriptor(std::string attributeName, validationType valType, 
             Value aValue, bool allowRead, bool allowWrite, Value minVal, Value maxVal)
             : name (attributeName), type (valType), defaultValue (aValue), 
-            readable (allowRead), writable(allowWrite), min (minVal), max (maxVal) {
+            readable (allowRead), writable(allowWrite), min (minVal), max (maxVal), isKindValue (false) {
     }
     
     std::string AttributeDescriptor::getName() {
@@ -45,32 +46,58 @@
         return writable;
     }
     
+    Value AttributeDescriptor::getDefaultValue() {
+        return defaultValue;
+    }
+    
     Value AttributeDescriptor::getValue() {
         return value;
     }
     
     void AttributeDescriptor::setReadable(bool allowRead) {
+        ASSERT(!isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' made readable for a subkind",
+                name.c_str()).c_str());
         readable = allowRead;
     }
     
     void AttributeDescriptor::setWritable(bool allowWrite) {
+        ASSERT(!isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' made writable for a subkind",
+                name.c_str()).c_str());
         writable = allowWrite;
     }
     
     void AttributeDescriptor::setDefaultValue(const Value &newDefault) {
+        ASSERT(!isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' new default for a subkind",
+                name.c_str()).c_str());
         defaultValue = newDefault;
     }
 
     void AttributeDescriptor::setMinValue(const Value &newMin) {
+        ASSERT(!isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' new min for a subkind",
+                name.c_str()).c_str());
         min = newMin;
     }
     
     void AttributeDescriptor::setMaxValue(const Value &newMax) {
+        ASSERT(!isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' new max for a subkind",
+                name.c_str()).c_str());
         max = newMax;
     }
     
     void AttributeDescriptor::setValue(const Value &newValue) {
+        ASSERT(isKindValue, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' value for a class or abstract kind",
+                name.c_str()).c_str());
         value = newValue;
     }
     
+    void AttributeDescriptor::limitToKindValue() {
+        isKindValue = true;
+    }
+    
 } // namespace enigma

Modified: trunk/src/AttributeDescriptor.hh
===================================================================
--- trunk/src/AttributeDescriptor.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/AttributeDescriptor.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -44,6 +44,7 @@
         validationType getType();
         bool isReadable();
         bool isWritable();
+        Value getDefaultValue();
         Value getValue();
         void setReadable(bool allowRead);
         void setWritable(bool allowWrite);
@@ -51,6 +52,7 @@
         void setMinValue(const Value &newMin);
         void setMaxValue(const Value &newMax);
         void setValue(const Value &newValue);
+        void limitToKindValue();
 
     private:
         std::string name;
@@ -61,6 +63,7 @@
         Value  min;
         Value  max;
         Value value;
+        bool isKindValue;
     };
 } // namespace enigma
 #endif

Modified: trunk/src/KindDescriptor.cc
===================================================================
--- trunk/src/KindDescriptor.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/KindDescriptor.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -53,9 +53,15 @@
         // inherit attributes from super
         if (super != NULL)
             attributes = super->attributes;
+            
+        if (super != NULL)
+            super->registerSubKind(this);
     }
     
     void KindDescriptor::addMessage(std::string msg) {
+        ASSERT(isAbstract || isClass, XFrontend, 
+                ecl::strf("Object description initialization error - message '%s' addition to subkind '%s'",
+                msg.c_str(), kind.c_str()).c_str());
         if (messages[msg] == NULL)
             messages[msg] = ObjectValidator::instance()->getMessage(msg);
     }
@@ -66,16 +72,27 @@
     }
     
     void KindDescriptor::addAttribute(std::string name) {
+        ASSERT(isAbstract || isClass, XFrontend, 
+                ecl::strf("Object description initialization error - attribute '%s' addition to subkind '%s'",
+                name.c_str(), kind.c_str()).c_str());
         if (attributes[name] == NULL)
-            attributes[name] = ObjectValidator::instance()->getDefaultAttribute(name);
+            attributes[name] = ObjectValidator::instance()->getDefaultAttributeDesc(name);
     }
     
     AttributeDescriptor * KindDescriptor::addModifiedAttribute(std::string name) {
         // make a clone and return it for modification
         AttributeDescriptor *inheritedAttribute = attributes[name];
-        if (inheritedAttribute == NULL)
-            inheritedAttribute = ObjectValidator::instance()->getDefaultAttribute(name);
+        if (inheritedAttribute == NULL) {
+            ASSERT(isAbstract || isClass, XFrontend, 
+                    ecl::strf("Object description initialization error - attribute '%s' addition to subkind '%s'",
+                    name.c_str(), kind.c_str()).c_str());
+            inheritedAttribute = ObjectValidator::instance()->getDefaultAttributeDesc(name);
+        }
         AttributeDescriptor *cloneAttribute = ObjectValidator::instance()->cloneAttribute(inheritedAttribute);
+        if (!isAbstract && !isClass) {
+            cloneAttribute->limitToKindValue();
+            valuedAttributes[name] = cloneAttribute;
+        }
         attributes[name] = cloneAttribute;
         return cloneAttribute;
     }
@@ -85,9 +102,55 @@
         if (it == attributes.end())
             return false;
         else
+            // TODO validate value - DEFAULT is the type that matches anything
             return it->second->isWritable();
     }
     
+    bool KindDescriptor::validateAttributeRead(std::string key) {
+        std::map<std::string, AttributeDescriptor *>::iterator it = attributes.find(key);
+        if (it == attributes.end())
+            return false;
+        else
+            return it->second->isReadable();
+    }
+    
+    Value KindDescriptor::getDefaultValue(std::string key) {
+        std::map<std::string, AttributeDescriptor *>::iterator it = attributes.find(key);
+        if (it == attributes.end())
+            return Value(Value::DEFAULT);
+        else {
+            Value v = it->second->getDefaultValue();
+            if (v.getType() == Value::NIL)
+                return Value(Value::DEFAULT);
+            else
+                return v;
+        }
+    }
+    
+    std::string KindDescriptor::getKind(const Object *obj) {
+        for(std::list<KindDescriptor *>::iterator it = subKinds.begin(); it != subKinds.end(); ++it) {
+            if (!(*it)->isInitOnly && (*it)->validateObject(obj))
+                return (*it)->kind;
+        }
+        return kind;
+    }
+    
+    bool KindDescriptor::isKind(const Object *obj, std::string match) {
+        if (match == kind)
+            return true;
+        else {
+            // is it a super kind name?
+            for (KindDescriptor *s = super; s != NULL; s = s->super)
+                if (match == s->kind)
+                    return true;
+                    
+            // is it a special subkind?
+            if (match == getKind(obj))
+                return true;
+        }
+        return false;
+    }
+    
     void KindDescriptor::log() {
         if (super != NULL)
             Log << "Kind " << kind << " of super " << super->kind << " isClass " << isClass << "\n";
@@ -130,4 +193,18 @@
             Log << "\n";
         }
     }
+    
+    void KindDescriptor::registerSubKind(KindDescriptor *aKind) {
+        subKinds.push_back(aKind);
+    }
+    
+    bool KindDescriptor::validateObject(const Object *obj) {
+        bool result = true;
+        for (std::map<std::string, AttributeDescriptor *>::iterator it = valuedAttributes.begin();
+                it != valuedAttributes.end(); ++it) {
+            if ( it->second->getValue() != obj->getAttr(it->second->getName()))
+                return false;
+        }
+        return result;
+    }
 } // namespace enigma

Modified: trunk/src/KindDescriptor.hh
===================================================================
--- trunk/src/KindDescriptor.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/KindDescriptor.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -21,6 +21,7 @@
 
 #include "AttributeDescriptor.hh"
 #include "MessageDescriptor.hh"
+#include <list>
 #include <map>
 #include <string>
 
@@ -34,16 +35,25 @@
         void addAttribute(std::string name);
         AttributeDescriptor * addModifiedAttribute(std::string name);
         bool validateAttributeWrite(std::string key, Value val);
+        bool validateAttributeRead(std::string key);
+        Value getDefaultValue(std::string key);
+        std::string getKind(const Object *obj);
+        bool isKind(const Object *obj, std::string match);
         void log();
     private:
         std::string kind;
         KindDescriptor *super;
+        std::list<KindDescriptor *> subKinds;
         bool isAbstract;  // object instantiation not possible
         bool isClass;     // 
-        bool isInitOnly;  // isKind is never true 
+        bool isInitOnly;  // kind just for instanciation of new clones - isKind is never true 
         int numStates;
         std::map<std::string, MessageDescriptor *> messages;
         std::map<std::string, AttributeDescriptor *> attributes;
+        std::map<std::string, AttributeDescriptor *> valuedAttributes;
+        
+        void registerSubKind(KindDescriptor *aKind);
+        bool validateObject(const Object *obj);
     };
 } // namespace enigma
 #endif

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/Object.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -135,11 +135,11 @@
     }
     
     std::string Object::getKind() const {
-        return getClass();
+        return ObjectValidator::instance()->getKind(this);
     }
     
     bool Object::isKind(const std::string &kind) const {
-        return true;
+        return ObjectValidator::instance()->isKind(this, kind);
     }
 
     bool Object::validateMessage(std::string msg, Value arg) {
@@ -153,12 +153,18 @@
     
     
     void Object::set_attrib(const string& key, const Value& val) {
-        if (val)         // only set non-default values
-            attribs[key] = val;  //.insert (key, val);
+        if (val) {        // only set non-default values
+            if (val.getType() == Value::NIL && server::EnigmaCompatibility >= 1.10)
+                // delete attribute
+                attribs.remove_key(key);
+            else
+                attribs[key] = val;  //.insert (key, val);
+        }
     }
     
     
     void Object::setAttrChecked(const std::string& key, const Value &val) {
+        // allow all user attributes and those system attributes with write allowance
         if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeWrite(this, key, val))
             setAttr(key, val);
     }
@@ -168,13 +174,20 @@
     }
     
     Value Object::getAttrChecked(const std::string &key) const {
-        return getAttr(key);
+        // allow all user attributes and those system attributes with read allowance
+        if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeRead(this, key))
+            return getAttr(key);
+        
+        ASSERT(false, XLevelRuntime, ecl::strf("Object: attribute '%s' read not allowed for kind '%s'",
+                key.c_str(), getKind().c_str()).c_str());
+        return Value();
     }
     
     Value Object::getAttr(const string& key) const {
         AttribMap::const_iterator i = attribs.find(key);
-        if (i == attribs.end())
-            return Value(Value::DEFAULT);
+        if (i == attribs.end()) 
+//            return Value(Value::DEFAULT);
+            return ObjectValidator::instance()->getDefaultValue(this, key);
         else
             return i->second;
     }

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/Object.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -34,18 +34,18 @@
     class Value;
 
     /**
-     *  Object is the base class for all ``objects'' in the world.
+     * Object is the base class for all "objects" in the world.
      * The most important facilities this class provides are:
      *
-     * (1) A way to clone() and dispose() objects.  This is mainly used
+     * - A way to clone() and dispose() objects.  This is mainly used
      *     in function MakeObject() to create new objects of a given
      *     type.
      * 
-     * (2) A way to pass messages between unrelated objects via message().
+     * - A way to pass messages between unrelated objects via message().
      *     This allows us to send messages to objects from Lua and to
      *     decouple objects types as much as possible.
      * 
-     * (3) A way to get and set attributes.  These attributes are quite
+     * - A way to get and set attributes.  These attributes are quite
      *     similar to instance variables, but they can be easily modified
      *     from Lua.  This makes it possible to modify certain object
      *     parameters (such as the text on a piece of paper or the color
@@ -219,6 +219,7 @@
         
         static int next_id;
         static std::map<int, Object *> objects;
+        
         int id;
         AttribMap attribs;
         

Modified: trunk/src/ObjectValidator.cc
===================================================================
--- trunk/src/ObjectValidator.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/ObjectValidator.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -35,10 +35,19 @@
 XERCES_CPP_NAMESPACE_USE 
 
 namespace enigma {
-    ObjectValidator *ObjectValidator::theSingleton = 0;
+    ObjectValidator *ObjectValidator::theSingleton = NULL;
+    bool ObjectValidator::mayInitialize = false;
     
+    void ObjectValidator::didInitXML() {
+        mayInitialize = true;
+    }
+    
     ObjectValidator* ObjectValidator::instance() {
-        if (theSingleton == NULL) {
+        // autoinitialize on first access, but block any access during 
+        // bootstraping as XML cannot be loaded at this stage. This may
+        // and shall cause NULL pointer exceptions on inproper usage 
+        // in basic object initialization!
+        if (theSingleton == NULL && mayInitialize) {
             theSingleton = new ObjectValidator();
             theSingleton->init();
         }
@@ -148,7 +157,7 @@
         return kind->validateMessage(msg);
     }
 
-    AttributeDescriptor *ObjectValidator::getDefaultAttribute(std::string name) {
+    AttributeDescriptor *ObjectValidator::getDefaultAttributeDesc(std::string name) {
         std::map<std::string, AttributeDescriptor *>::iterator it = defaultAttributes.find(name);
         if (it != defaultAttributes.end())
             return it->second;
@@ -163,21 +172,58 @@
         return clone;
     }
 
-    bool ObjectValidator::validateAttributeWrite(Object *obj, std::string key, Value val) {
+    bool ObjectValidator::validateAttributeWrite(const Object *obj, std::string key, Value val) {
         KindDescriptor *kind = getKindDesc(obj->getClass());
         if (kind == NULL) {
-            return true;    // object is not under validator control
+            return true;    // object is not under validator control - allow write
         }
+        // TODO search specific sub kind if necessary
         return kind->validateAttributeWrite(key, val);
     }
     
-    bool ObjectValidator::validateAttributeRead(Object *obj, std::string key) {
+    bool ObjectValidator::validateAttributeRead(const Object *obj, std::string key) {
         KindDescriptor *kind = getKindDesc(obj->getClass());
         if (kind == NULL) {
             return true;    // object is not under validator control
         }
-        return true;
+        // TODO search specific sub kind if necessary
+        return kind->validateAttributeRead(key);
     }
+    
+    Value ObjectValidator::getDefaultValue(const Object *obj, std::string key) {
+        static bool recursive = false;
+                
+        // block potential recursions
+        if (recursive)
+            return Value(Value::DEFAULT);
+            
+        recursive = true;
+        KindDescriptor *kind = getKindDesc(obj->getClass());  // getClass is critical if it uses attributes
+        recursive = false;
+        
+        if (kind == NULL) {
+            return Value(Value::DEFAULT);    // object is not under validator control
+        }
+        // TODO search specific sub kind if necessary
+        return kind->getDefaultValue(key);
+    }
+    
+    std::string ObjectValidator::getKind(const Object *obj) {
+        std::string className = obj->getClass();
+        KindDescriptor *kind = getKindDesc(className);
+        if (kind == NULL) {
+            return className;    // object is not under validator control
+        }
+        return kind->getKind(obj);
+    }
+    
+    bool ObjectValidator::isKind(const Object *obj, std::string match) {
+        KindDescriptor *kind = getKindDesc(obj->getClass());
+        if (kind == NULL) {
+            return false;    // object is not under validator control
+        }
+        return kind->isKind(obj, match);
+    }
 
     void ObjectValidator::scanAttributeElement(DOMElement *attribElement) {
         std::string name = XMLtoUtf8(attribElement->getAttribute(Utf8ToXML("name").x_str())).c_str();
@@ -287,10 +333,6 @@
                     Value maxValue = parseTypedValue(maxAttribute, maxString, valType);
                     cloneAttr->setMaxValue(maxValue);
                 }
-                if (maxString != "") {
-                    Value maxValue = parseTypedValue(maxAttribute, maxString, valType);
-                    cloneAttr->setMaxValue(maxValue);
-                }
                 if (valString != "") {
                     Value value = parseTypedValue(valAttribute, valString, valType);
                     cloneAttr->setValue(value);

Modified: trunk/src/ObjectValidator.hh
===================================================================
--- trunk/src/ObjectValidator.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/ObjectValidator.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -46,21 +46,27 @@
     public:
         
         static ObjectValidator *instance();
+        static void didInitXML();
+        
         ~ObjectValidator();
         void shutdown();
         
         KindDescriptor *getKindDesc(std::string name);
         MessageDescriptor *getMessage(std::string name);
         bool validateMessage(Object *obj, std::string msg, Value val);
-        AttributeDescriptor *getDefaultAttribute(std::string name);
+        AttributeDescriptor *getDefaultAttributeDesc(std::string name);
         AttributeDescriptor *cloneAttribute(AttributeDescriptor *masterAttr);
-        bool validateAttributeWrite(Object *obj, std::string key, Value val);
-        bool validateAttributeRead(Object *obj, std::string key);
+        bool validateAttributeWrite(const Object *obj, std::string key, Value val);
+        bool validateAttributeRead(const Object *obj, std::string key);
+        Value getDefaultValue(const Object *obj, std::string key);
+        std::string getKind(const Object *obj);
+        bool isKind(const Object *obj, std::string match);
         
     protected:
         ObjectValidator();
     private:
         static ObjectValidator *theSingleton;
+        static bool mayInitialize;
         
         void init();
         void scanAttributeElement(XERCES_CPP_NAMESPACE_QUALIFIER DOMElement *attribElement);

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/lua.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -434,7 +434,7 @@
     Object *obj = to_object(L,1);
     const char *key = lua_tostring(L,2);
     if (obj && key)
-        obj->set_attrib(key, to_value(L, 3));
+        obj->setAttrChecked(key, to_value(L, 3));
     else
         throwLuaError(L, strf("SetAttrib: invalid object or attribute name '%s'", key).c_str());
     return 0;
@@ -455,7 +455,7 @@
         return 0;        
     }
 
-    push_value(L, obj->getAttr(key));
+    push_value(L, obj->getAttrChecked(key));
     return 1;
 }
 
@@ -1078,7 +1078,7 @@
                 if (lua_isstring(L, -2))
                     NameObject(obj, lua_tostring(L, -2));
             } else {
-                obj->set_attrib(key, to_value(L, -2));
+                obj->setAttrChecked(key, to_value(L, -2));
             }
          } else if (lua_tointeger(L, -1) == 2) {  // second entry without a string key is taken as name
              if (lua_isstring(L, -2))
@@ -1222,6 +1222,26 @@
     return 1;
 }
 
+static int objectGetKind(lua_State *L) { 
+    // object type is guaranteed
+    Object * obj = to_object(L, 1);
+    lua_pushstring(L, (obj != NULL) ? obj->getKind().c_str() : "");
+    return 1;
+}
+
+static int objectIsKind(lua_State *L) { 
+    // object type is guaranteed
+    Object * obj = to_object(L, 1);
+    if (!lua_isstring(L, 2)) {
+        throwLuaError(L,"Illegal kind - no string");
+        return 0;
+    }
+    std::string kind = lua_tostring(L, 2);
+    
+    lua_pushboolean(L, (obj != NULL) ? obj->isKind(kind) : false);
+    return 1;
+}
+
 static int objectMessageBase(lua_State *L) {
     // (object, string , value)
     Object     *obj = to_object(L, -3);
@@ -1463,7 +1483,7 @@
                 messageLIFO.push_back(keyStr);
                 lua_pushcfunction(L, objectDirectMessage);
             } else {
-                val = obj->getAttr(keyStr);
+                val = obj->getAttrChecked(keyStr);
                 // user attribute, existing system attribute or nil if no object
                 push_value(L, val);
             }
@@ -1480,7 +1500,7 @@
     Object *obj = to_object(L,1);
     const char *key = lua_tostring(L,2);
     if (obj && key)
-        obj->set_attrib(key, to_value(L, 3));
+        obj->setAttrChecked(key, to_value(L, 3));
     else if (obj)  // ignore NULL objects
         throwLuaError(L, strf("SetAttrib: invalid object or attribute name '%s'", key).c_str());
     return 0;
@@ -2159,7 +2179,7 @@
         lua_rawgeti(L, -1, i);  // the object
         Object *obj = to_object(L, -1);
         if (obj)                // ignore not existing objects
-            obj->set_attrib(name, to_value(L, 3));
+            obj->setAttrChecked(name, to_value(L, 3));
         lua_pop(L, 1);          // the object        
     }
     return 0;
@@ -2327,6 +2347,8 @@
 
 static CFunction objectMethods[] = {
     {objectExistance,               "exists"},
+    {objectIsKind,                  "is"},
+    {objectGetKind,                 "kind"},
     {killObject,                    "kill"},
     {objectMessage,                 "message"},
     {setAttributes,                 "set"},

Modified: trunk/src/main.cc
===================================================================
--- trunk/src/main.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/main.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -299,6 +299,10 @@
     // set message language
     init_i18n();
     
+    // ----- Object declarations
+    ObjectValidator::didInitXML();  // enable initialization
+    ObjectValidator::instance();    // force early initialization (an optional statement)
+
     // ----- Initialize object repositories
     InitWorld();
     if (ap.dumpinfo) {
@@ -370,9 +374,6 @@
 
     lev::Proxy::countLevels();
     
-    // ----- Object declarations
-    ObjectValidator::instance();    // force early initialization (an optional statement)
-
     // ----- Initialize sound tables -- needs sound, oxyd, video (error messages!)
     sound::InitSoundSets();
 

Modified: trunk/src/stones/Switch.cc
===================================================================
--- trunk/src/stones/Switch.cc	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/stones/Switch.cc	2008-02-06 00:02:56 UTC (rev 1024)
@@ -31,6 +31,10 @@
         state = OFF;
     }
 
+    std::string Switch::getClass() const {
+        return "st_switch";
+    }
+    
     void Switch::set_attrib(const string& key, const Value &val) {
         if (isDisplayable())
             if (key == "color" && state <= ON) {   // recoloring of a switch

Modified: trunk/src/stones/Switch.hh
===================================================================
--- trunk/src/stones/Switch.hh	2008-02-03 19:04:18 UTC (rev 1023)
+++ trunk/src/stones/Switch.hh	2008-02-06 00:02:56 UTC (rev 1024)
@@ -50,6 +50,7 @@
         Switch(Value color, bool instant = false);
         
         // Object interface
+        virtual std::string getClass() const;
         virtual void set_attrib(const string& key, const Value &val);
         virtual Value message(const Message &m);
         



From andreasl at mail.berlios.de  Wed Feb  6 02:54:20 2008
From: andreasl at mail.berlios.de (andreasl at BerliOS)
Date: Wed, 6 Feb 2008 02:54:20 +0100
Subject: [Enigma-game-svn] r1025 - in feature_branches/hp_lotm: images/lotm
	input/lotm
Message-ID: <200802060154.m161sKAS028781@sheep.berlios.de>

Author: andreasl
Date: 2008-02-06 02:54:18 +0100 (Wed, 06 Feb 2008)
New Revision: 1025

Modified:
   feature_branches/hp_lotm/images/lotm/lotm-history.png
   feature_branches/hp_lotm/input/lotm/lotm_200802.html
   feature_branches/hp_lotm/input/lotm/lotm_200802_de.html
   feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
Log:
LotM:
 - LotM 2/2008: Additions and restructuring (German and English).
 - New statistics in LotM-archive and history diagram.
Note:
 - This is supposed to be the structurally final version
   of LotM 2/2008, but some small contentual improvements
   might still be done later.
Todo:
 - Proofread.
 - Russian translation. 
 - Complete German translation and replace umlauts.


Modified: feature_branches/hp_lotm/images/lotm/lotm-history.png
===================================================================
(Binary files differ)

Modified: feature_branches/hp_lotm/input/lotm/lotm_200802.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802.html	2008-02-06 00:02:56 UTC (rev 1024)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802.html	2008-02-06 01:54:18 UTC (rev 1025)
@@ -56,9 +56,18 @@
         <td class="left">Taztunes</td></tr>
 </table>
 
-<p>libpuzzle</p>
+<p>&quot;Puzzle Puzzles&quot; enters our list of all-time-favorites at position
+six, shortly before its namesake &quot;Labyrinth of Puzzles&quot;. Our Level of
+the Year 2007, &quot;Island Labyrinth&quot; had a slight weakness this month,
+and saw its ratings sink by only 0.05 points&mdash;enough for
+&quot;Quadropolis&quot; to claim back the leading position, which it now shares
+with &quot;Island Labyrinth&quot;. On the middle ranks, some levels experienced
+similar downratings, only &quot;Pneumatic Delivery&quot; was able to win some
+more positive ratings and hit the 8-point-mark for the first time since July
+'07.
+</p>
 
-<h4>Headline</h4>
+<h4>&quot;I had to become a civil engineer&quot;</h4>
 
 <p>
 You can see much about Raoul developing his mastery of level design: Starting
@@ -71,6 +80,52 @@
 now reached his first Level of the Month.
 </p>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; is one of the levels that I was not able to solve for
+a long time and has a very high difficulty in its puzzles. The level which is
+made from seascape not room surrounded by walls is distinct in comparison with
+other levels chosen &quot;Level of the Month&quot;, and this enables us
+to almost look at the seascape as a whole easily. So when I played the
+level for the first time, it didn't seem to have lots of complex difficulties.
+Additionally, I may have thought that I could solve it easily. But it was wrong,
+and I felt slightly conceited. It was very difficult for me to solve it.
+</div>
+
+<div class="quote">
+I began with solving the easy mode first. I had to become a civil engineer to
+make a bridge across the sea to solve the level. But unexpectedly, it was
+difficult for me to fulfill these tasks, because of the X-shaped wire netting
+(st-grate1) and the slopes (fl-gradient) around the island with the puzzle
+stones and broken bottles (it-booze-broken).  And this wasn't all&mdash;the
+level provides more obstacles, for example, it was difficult for me to operate an
+invisible marble, as doing this needs dexterity, patience, and speed. So these
+have high ratings on the level, as well as intelligence and knowledge. I like
+such levels which require various high abilities very much.
+</div>
+
+<div class="quote">
+After solving easy mode, I was not able to solve difficult mode at once because
+the structures are quite different. So I needed much time to become a more
+excellent civil engineer. 'To become' is the most difficult, but is also the most
+enjoyable. And the X-shaped wire netting (st-grate1) is an important barricade,
+so if it wasn't there, I would have solved it earlier. Additionally, I was
+troubled as I knew how to solve the easy mode, but this showed up to not work
+in difficult mode.
+</div>
+
+<div class="quote">
+Last I admire Raoul Bourquin very much, and I think that people who
+make such a splendid level have an abundant creative ability, and
+without them, I could not spend happy times with Enigma, and expect
+new splendid levels in the future.
+</div>
+
+<div class="author">Ryujun</div>
+
+<p>
+Yes, let's hope so! :-)
+</p>
+
 <h4>&quot;'Puzzle Puzzles' still fascinates me&quot;</h4>
 
 <div class="lotmpic">
@@ -102,29 +157,47 @@
 But thousands of Enigma fans can't err: Welcome LotM 2/2008. ;-)
 </div>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; is one of the 7 levels on Ronalds secret top-60
+list, which I couldn't master yet. 3 of those are results of Ronald's level
+lab, and I can't suppress the feeling, that, after &quot;Temple of Gold&quot;,
+Ronald had a finger in the pie at &quot;Puzzle Puzzles&quot; as well!?
+However, contrasting to &quot;Temple of Gold&quot;, I think that &quot;Puzzle
+Puzzles&quot; is the only level in Enigma where the easy version is more
+difficult than the difficult one! Of course, I might be wrong, as I couldn't
+solve the easy difficult nor the difficult easy version yet. *silent laughter*
+</div>
+
 <div class="author">Daydreamer</div>
 
 <p>
-Yes, the design of &quot;Puzzle Puzzles&quot; is as Raoul as possible: Most of
-his levels are in some way connected to water, but this time he combined it with
-bright white floors, with glass and light blue stones. Open, and flooded by
-light, only broken by two darkish platforms, reminding us of his other prefered
-combination of dark materials and abyss.
+Indeed, Harry was right. Here are Ronald's experiences with putting the final
+cream topping onto our Level of the Month:
 </p>
 
-<h4>&quot;I had to become a civil engineer&quot;</h4>
+<div class="quote">
+On November 23rd, 2006, just a day after the beta release of Enigma 1.00 Raoul
+sent me a first version of his &quot;Puzzle Puzzles&quot; asking for a quick
+shortcut scan as he intended to add this level to the final 1.00 release that
+was due within a fortnight.
+</div>
 
 <div class="quote">
-&quot;Puzzle Puzzles&quot; is one of the levels that I was not able to solve for
-a long time and has a very high difficulty in its puzzles. The level which is
-made from seascape not room surrounded by walls is distinct in comparison with
-other levels chosen &quot;Level of the Month&quot;, and perhaps we will be able
-to look at the whole seascape easily. So when I played the level for the first
-time, the level didn't seem to have a lot of complex difficulties. Additionally,
-I may have thought that I could solve it easily. But it was wrong, and I felt
-conceited. It was very difficult for me to solve it.
+It was quite obvious to me that the control of the mighty magic wand was a key
+factor for this level. The user needs it, but it should not be usable at any
+time and anywhere. It took us 17 revisions with proposals and detected shortcuts
+from both sides until we had a lower right part of the level that fulfilled all
+demands.
 </div>
 
+<div class="quote">
+But the fixing had two other side effects. First I came up with the idea of
+adding &quot;cherry island&quot; in a manner that forces locally another more
+complicated solution for the difficult mode than in easy mode. Yes, you may call
+me a repeater as I did the same with &quot;Temple of Gold&quot;. Stick to
+Ryujun's advice of solving the easy mode first!
+</div>
+
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200802_b.png" alt="Level of the month" border="0">
 <div class="imagetitle">&hellip; and the second!
@@ -132,39 +205,78 @@
 </div>
 
 <div class="quote">
-I began with solving the easy mode first. I had to become a civil engineer to
-make a bridge across the sea to solve the level. But unexpectedly, it was
-difficult for me to fulfill these tasks, because of the X-shaped wire netting
-(st-grate1) and the slopes (fl-gradient) around the island with the puzzle
-stones and broken bottles (it-booze-broken).  And this wasn't all&mdash;the
-level provides more obstacles, for example, it was difficult for me to operate an
-invisible marble, as doing this needs dexterity, patience, and speed. So these
-have high ratings on the level, as well as intelligence and knowledge. I like
-such levels which require various high abilities very much.
+And secondly I learned that Enigma is missing a stone that lets the author
+easily enforce that only marbles without a given critical item in their
+inventory can pass. Meanwhile we detected a lot of other situations where this
+stone is missing, e.g. combined effort levels would profit a lot from this
+stone. So this level may have initiated a useful addition to our object zoo.
 </div>
 
+<div class="author">Ronald Lamprecht</div>
+
+<p>And another comment by a fellow LotM author:</p>
+
 <div class="quote">
-After solving easy mode, I was not able to solve difficult mode at once because
-the structures are quite different. So I needed much time to become a more
-excellent civil engineer. 'To become' is the most difficult, but is also the most
-enjoyable. And the X-shaped wire netting (st-grate1) is an important barricade,
-so if it wasn't there, I would have solved it earlier. Additionally, I was
-conscious excessively how to solve of easy mode, can you understand what this
-means?</div>
+When you play &quot;Puzzle Puzzles&quot; the first time, you probably have no
+idea what to do. But once you faced the oxyd stones, you'll know, what this
+level is all about: A stone has to be transported across the whole map. And
+while this already sounds difficult enough, an even larger challenge awaits the
+gamer, once the stone is at its destined location. But these are exactly the
+levels, I like to play. You see, what to do, think about the various solving
+methods, and yet none of them seems to work somehow and you finally sit much
+longer before this level than you originally planed.
+</div>
 
 <div class="quote">
-Last I admire Raoul Bourquin very much, and I think that people who
-make such a splendid level have an abundant creative ability, and
-without them, I could not spend happy times with Enigma, and expect
-new splendid levels in the future.
+&quot;Puzzle Puzzles&quot; distinguishes itself particularly through a good
+design and fantastic puzzles (which is already given by the name). In my
+opinion, this level is one of the best in Enigma altogether, and because of
+this it get a full 10 points from me. Let's hope we'll see more levels of this
+kind in future!
 </div>
 
-<div class="author">Ryujun</div>
+<div class="author">Manuel K&ouml;nig</div>
 
+<p>
+Yes, the design of &quot;Puzzle Puzzles&quot; is as Raoul as possible: Most of
+his levels are in some way connected to water, but this time he combined it with
+bright white floors, with glass and light blue stones. Open, and flooded by
+light, only broken by two darkish platforms, reminding us of his other preferred
+combination of dark materials and abyss.
+</p>
 
-
 <h4>&quot;I intended the start to be particularly difficult&quot;</h4>
 
+<p>
+And another very typical element of Raoul's levels is highly prominent in
+&quot;Puzzle Puzzles&quot: puzzles. This started when Raoul rewrote an old Oxyd
+level, and searched for some way to randomize the puzzle stones. Although such
+a function already existed in ant.lua, we came into discussing the maths behind
+puzzle stones and under which circumstances its possible to solve a freely
+randomized puzzle. This was in December 2005, when the first early version of
+&quot;Oxyd-Puzzle&quot; (V/19) came into life. Raoul extracted the randomizing
+functions and build the first version of libpuzzle, which was soon followed by
+libpuzzle 2. He revitalized the use of puzzle stones with this library, which
+is now included by 15 levels in the Enigma level packs. I was inspired by
+libpuzzle as well, and created &quot;Procrustes&quot; with it, using its option
+to reduce the number of permutations used to scramble the puzzle.
+</p>
+
+<p>
+(By the way: The maths behind the solvability of a given puzzle stone puzzle is
+highly interesting, as it's merely a question of odd and even permutations (as
+in the case of the famous 15 puzzle), but also of the similarity of puzzle
+stones with each other: A cross build from 5 puzzle stones is not solvable in
+general, but the ring of 8 stones is&mdash;although both make use of even
+permutations only.)
+</p>
+
+<p>
+Now let's listen to what Raoul himself can tell us about this level, which
+holds the record of second highest overall difficulty with 83 points out of 100
+(&quot;Aztec Temple&quot; has 84):
+</p>
+
 <div class="quote">
 I want to talk a little bit about the history of origins of the (from a
 mathematical standpoint) second most difficult level in the world of Enigma.
@@ -210,7 +322,7 @@
 
 <div class="quote">
 I intended the start to be particularly difficult, even to be the most
-difficult element of the level. Hence, I utterly immured the &quot;VIM&quot;
+difficult element of the level. Hence, I utterly immured the &quot;VIS&quot;
 (very important stone). The gamer is supposed to exert himself to free it.
 </div>
 
@@ -246,7 +358,7 @@
 <div class="quote">
 When the level was completed to this point, the strenuous part only begun. I
 presented the level to a small circle of brave adventurers. For some, this
-level wasn't difficult enough, and the VIM to easy to reach. Until Ronald came
+level wasn't difficult enough, and the VIS to easy to reach. Until Ronald came
 up with the idea of the cherry island. Another ingenious riddle, which demands
 some skills in recycling already used objects as well.
 </div>
@@ -258,6 +370,9 @@
 
 <div class="author">Raoul Bourquin</div>
 
+<p>Of which we all are especially happy and grateful! Thank you very much,
+Raoul, for this brilliant level, we're all looking forward to your next
+masterpieces!</p>
 
 <p>Best greets,<br>
 <i>Andreas &amp; Harry</i></p>

Modified: feature_branches/hp_lotm/input/lotm/lotm_200802_de.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802_de.html	2008-02-06 00:02:56 UTC (rev 1024)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802_de.html	2008-02-06 01:54:18 UTC (rev 1025)
@@ -33,8 +33,8 @@
     <tr><td class="num">16:16</td>
         <td class="left">Tarim</td></tr>
     <tr><td class="num">16:26</td>
-        <td class="left">ryujun</td></tr>
-</table>
+        <td class="left">ryujun</td>
+</tr> </table>
 
 <p></p>
 
@@ -53,12 +53,21 @@
     <tr><td class="num">13:02</td>
         <td class="left">ryujun</td></tr>
     <tr><td class="num">13:58</td>
-        <td class="left">Taztunes</td></tr>
-</table>
+        <td class="left">Taztunes</td>
+</tr> </table>
 
-<p>libpuzzle</p>
+<p>&quot;Puzzle Puzzles&quot; listet sich auf unserer Favoritentabelle auf
+Platz sechs ein, kurz vor seinem Namensvetter &quot;Labyrinth of Puzzles&quot;.
+Unser Level des Jahres 2007, &quot;Island Labyrinth&quot; zeigte diesen Monat
+eine kleine Schw?che, und sank in seinem Rating um maginale 0.05 Punkte ab -
+genug f?r &quot;Quadropolis&quot;, seine F?hrungsposition zur?ckzufordern, die
+es sich nun mit &quot;Island Labyrinth&quot; teilt. Auf den mittleren R?ngen
+erfuhren einige Levels ?hnliche Abstufungen, nur &quot;Pneumatic Delivery&quot;
+war in der Lage, ein paar positive Bewertungen zu ergattern und sprang damit
+?ber die 8-Punkte-Marke, das erste Mal wieder seit Juli '07.
+</p>
 
-<h4>Headline</h4>
+<h4>&quot;Ich musste ein Bauingenieur werden&quot;</h4>
 
 <p>
 You can see much about Raoul developing his mastery of level design: Starting
@@ -71,7 +80,54 @@
 now reached his first Level of the Month.
 </p>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; ist eines derjenigen Level, die ich f?r lange Zeit
+nicht l?sen konnte, und auch in seinen R?tseln sehr schwer ist. Der Level, der
+in einer Meereslandschaft spielt, statt einem von W?nden umgebenen Raum,
+unterscheidet sich in ausgepr?gter Weise von anderen &quot;Leveln des
+Monats&quot;, und das macht es uns fast einfach, diese Meereslandschaft als
+Ganzes zu erblicken. Als ich nun den Level zum ersten Mal gespielt hatte, schien
+der Level nicht viele komplexe Schwierigkeiten aufzuwerfen. Dazu kam, dass ich
+vielleicht gedacht habe, ich k?nnte ihn auf einfache Weise l?sen. Aber ich lag
+falsch, und f?hlte mich etwas eingebildet. Es war schwer f?r mich, den Level zu
+l?sen.
+</div>
 
+<div class="quote">
+Ich begann mit dem einfachen Modus. Ich musste ein Bauingenieur werden, um eine
+Br?cke ?ber den See zu bauen, und den Level zu l?sen. Aber unerwarteterweise
+fand ich es schwierig, diese Aufgaben zu erf?llen, aufgrund der X-f?rmigen
+Drahtgestelle (st-grate1) und Abh?nge (fl-gradient) um die Insel mit den
+Puzzlesteinen und zerbrochenen Flaschen (it-booze-broken). Und das war noch
+nicht mal alles - der Level bietet weitere Hindernisse, beispielsweise fand ich
+es schwierig, eine unsichtbare Murmel zu man?vrieren, den das ben?tigt
+Geschicklichkeit, Geduld und Schnelligkeit. Folglich haben diese auch hohe
+Schwierigkeits-Bewertungen f?r den Level, ebenso wie Intelligenz und Wissen.
+Ich mag solche Levels, die einem gleich mehrere F?higkeiten stark abverlangen.
+</div>
+
+<div class="quote">
+Nachdem ich den einfachen Modus gel?st hatte, war ich nicht sogleich in der
+Lage, den schweren Modus zu l?sen, da die Strukturen ziemlich verschieden sind.
+So brauchte ich viel Zeit, ein noch exzellenterer Bauingenieur zu werden. 'Zu
+werden' ist h?chst schwierig, aber auch h?chst unterhaltsam. Und die X-f?rmigen
+Drahtgestelle (st-grate1) sind ein wichtiges Hindernis, w?ren sie nicht da,
+h?tte ich es fr?her gel?st. Au?erdem wusste ich schon, wie der einfache Modus
+zu l?sen ist, und war entsprechend verwirrt, als dieser Ansatz im schwierigen
+Modus nicht mehr funktionierte.
+</div>
+
+<div class="quote">
+Abschlie?end bewundere ich Raoul Bourquin sehr stark, und ich denke, dass
+Leute, die so pr?chtige Levels erschaffen, reichliche kreative F?higkeiten
+besitzen, und ohne diese, k?nnte ich nicht so gl?ckliche Zeiten mit Enigma
+verbringen, und neue gro?artige Levels in der Zukunft erwarten.
+</div>
+
+<div class="author">Ryujun</div>
+
+<p>Ja, hoffen wir das! :-)</p>
+
 <h4>&quot;'Puzzle Puzzles' ?bt schon eine gewisse Faszination auf mich
 aus&quot;</h4>
 
@@ -106,32 +162,48 @@
 Tausende von Enigma-Fans k?nnen nicht irren: Willkommen LotM 2/2008. ;-) </p>
 </div>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; ist einer von den 7 Leveln aus Ronalds geheimer Top
+60 Liste, die ich noch nicht meistern konnte. 3 davon entstammen Ronalds Level
+Lab, und ich kann mich nicht des Eindrucks erwehren, dass Ronald nach
+&quot;Temple of Gold&quot; auch bei &quot;Puzzle Puzzles&quot; die Finger im
+Spiel hatte!? Anders allerdings als bei &quot;Temple of Gold&quot; kommt es mir
+so vor, als w?re PP der einzige Level in ganz Enigma, bei dem die einfache
+Variante schwieriger ist als die schwierige! Ich kann mich nat?rlich t?uschen,
+da ich weder die einfache schwierige noch die schwierige einfache Variante
+bisher bew?ltigen konnte. *leise lach*
+</div>
+
 <div class="author">Daydreamer</div>
 
 <p>
-Ja, das Design von &quot;Puzzle Puzzles&quot; ist so Raoul wie nur denkbar: Die
-meisten seiner Level haben in irgendeiner Weise etwas mit Wasser zu tun, aber
-dieses Mal hat er es mit hellem wei?en Boden kombiniert, mit Glas und
-hellblauen Steinen. Offen, und von Licht durchflutet, nur gebrochen durch zwei
-dunkle Plattformen, die uns an seine andere bevorzugte Kombination von dunklen
-Materialien und Abyss erinnern.
+Indeed, Harry was right. Here are Ronald's experiences with putting the final
+cream topping onto our Level of the Month:
 </p>
 
-<h4>&quot;Ich musste ein Bauingenieur werden&quot;</h4>
+<div class="quote">
+On November 23rd, 2006, just a day after the beta release of Enigma 1.00 Raoul
+did sent me a first version of his &quot;Puzzle Puzzles&quot; asking for a quick
+shortcut scan as he intended to add this level to the final 1.00 release that
+was due within a fortnight.
+</div>
 
 <div class="quote">
-&quot;Puzzle Puzzles&quot; ist eines derjenigen Level, die ich f?r lange Zeit
-nicht l?sen konnte, und auch in seinen R?tseln sehr schwer ist. Der Level, der
-in einer Meereslandschaft spielt, statt einem von W?nden umgebenen Raum,
-unterscheidet sich in ausgepr?gter Weise von anderen &quot;Leveln des
-Monats&quot;, und vielleicht werden wir in der Lage sein, einfacher auf die
-gesamte Landschaft zu blicken. Als ich nun den Level zum ersten Mal gespielt
-hatte, schien der Level nicht viele komplexe Schwierigkeiten aufzuwerfen. Dazu
-kam, habe ich vielleicht gedacht, ich k?nnte ihn auf einfache Weise l?sen. Aber
-ich lag falsch, und f?hlte mich eingebildet. Es war schwer f?r mich, den Level
-zu l?sen.
+It was quite obvious to me that the control of the mighty magic wand was a key
+factor for this level. The user needs it, but it should not be usable at any
+time and anywhere. It took us 17 revisions with proposals and detected shortcuts
+from both sides until we had a lower right part of the level that fulfilled all
+demands.
 </div>
 
+<div class="quote">
+But the fixing had two other side effects. First I come up with the idea of
+adding &quot;cherry island&quot; in a manner that forces locally another more
+complicated solution for the difficult mode than in easy mode. Yes, you may call
+me a reapter as I did the same with &quot;Temple of Gold&quot;. Stick to
+Ryujun's advice of solving the easy mode first!
+</div>
+
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200802_b.png" alt="Level of the month" border="0">
 <div class="imagetitle">&hellip; und das zweite!
@@ -139,40 +211,82 @@
 </div>
 
 <div class="quote">
-Ich begann mit dem einfachen Modus. Ich musste ein Bauingenieur werden, um eine
-Br?cke ?ber den See zu bauen, und den Level zu l?sen. Aber unerwarteterweise
-fand ich es schwierig, diese Aufgaben zu erf?llen, aufgrund der X-f?rmigen
-Drahtgestelle (st-grate1) und Abh?nge (fl-gradient) um die Insel mit den
-Puzzlesteinen und zerbrochenen Flaschen (it-booze-broken). Und das war noch
-nicht mal alles - der Level bietet weitere Hindernisse, beispielsweise fand ich
-es schwierig, eine unsichtbare Murmel zu man?vrieren, den das ben?tigt
-Geschicklichkeit, Geduld und Schnelligkeit. Folglich haben diese auch hohe
-Schwierigkeits-Bewertungen f?r den Level, ebenso wie Intelligenz und Wissen.
-Ich mag solche Levels, die einem gleich mehrere F?higkeiten stark abverlangen.
+And secondly I learned that Enigma is missing a stones that lets the author
+easily enforce that only marbles without a given critical item in their
+inventory can pass. Meanwhile we detected a lot of other situations where this
+stone is missing, e.g. combined effort levels would profit a lot from this
+stone. So this level may have initiated a useful addition to our object zoo.
 </div>
 
+<div class="author">Ronald Lamprecht</div>
+
+<p>Und ein weiterer Kommentar von einem LotM-Autorenkollegen:</p>
+
 <div class="quote">
-Nachdem ich den einfachen Modus gel?st hatte, war ich nicht sogleich in der
-Lage, den schweren Modus zu l?sen, da die Strukturen ziemlich verschieden sind.
-So brauchte ich viel Zeit, ein noch exzellenterer Bauingenieur zu werden. 'Zu
-werden' ist h?chst schwierig, aber auch h?chst unterhaltsam. Und die X-f?rmigen
-Drahtgestelle (st-grate1) sind ein wichtiges Hindernis, w?ren sie nicht da,
-h?tte ich es fr?her gel?st. Au?erdem, war ich conscious excessively how to solve
-of easy mode, can you understand what this means?
+Wenn man &quot;Puzzle Puzzles&quot; zum ersten Mal spielt, hat man
+wahrscheinlich zun?chst keine Ahnung, was man eigentlich machen soll. Doch
+sobald man einmal die Oxydsteine zu Gesicht bekommen hat, wird man wissen, worum
+es geht: Ein Stein soll quer ?ber die gesamte Karte bef?rdert werden. Und obwohl
+sich das alleine schon schwierig genug anh?rt, wartet noch eine weitaus gr??ere
+Herausforderung auf den Spieler, wenn sich der Stein erst an seiner vorgesehenen
+Stelle befindet. Doch das sind genau die Levels, die ich gerne spiele. Man
+sieht, was man machen muss, ?berlegt sich die verschiedensten
+L?sungsm?glichkeiten, aber irgendwie scheint keine zu funktionieren und man
+sitzt viel l?nger vor dem Level als man eigentlich geplant hatte.
 </div>
 
 <div class="quote">
-Abschlie?end bewundere ich Raoul Bourquin sehr stark, und ich denke, dass
-Leute, die so pr?chtige Levels erschaffen, reichliche kreative F?higkeiten
-besitzen, und ohne diese, k?nnte ich nicht so gl?ckliche Zeiten mit Enigma
-verbringen, und neue gro?artige Levels in der Zukunft erwarten.
+&quot;Puzzle Puzzles&quot; besticht dabei vor allem durch gutes Design und tolle
+R?tsel (das sagt ja schon der Name). Meiner Meinung nach ist diese Landschaft
+eine der besten ?berhaupt in Enigma und bekommt deshalb von mir auch volle 10
+Punkte. Hoffentlich bekommen wir in Zukunft noch mehr Levels dieser Art zu
+sehen!
 </div>
 
-<div class="author">Ryujun</div>
+<div class="author">Manuel K&ouml;nig</div>
 
+<p>
+Ja, das Design von &quot;Puzzle Puzzles&quot; ist so Raoul wie nur denkbar: Die
+meisten seiner Level haben in irgendeiner Weise etwas mit Wasser zu tun, aber
+dieses Mal hat er es mit hellem wei?en Boden kombiniert, mit Glas und
+hellblauen Steinen. Offen, und von Licht durchflutet, nur gebrochen durch zwei
+dunkle Plattformen, die uns an seine andere bevorzugte Kombination von dunklen
+Materialien und Abyss erinnern.
+</p>
 
 <h4>&quot;Den Start wollte ich m?glichst schwer machen&quot;</h4>
 
+<p>
+Und ein weiteres typisches Element aus Raouls Landschaften erscheint in
+prominenter Stellung in &quot;Puzzle Puzzles&quot: Puzzles. Dies fing an, als
+Raoul einen alten Oxydlevel neu schreiben wollte, und nach einem Weg suchte,
+die Puzzlesteine zuf?llig zu mischen. Obwohl so eine Funktion bereits in
+ant.lua existierte, gerieten wir in eine Diskussion ?ber die Mathematik hinter
+den Puzzlesteinen und unter welchen Umst?nden es m?glich ist, ein beliebig
+zuf?lliges Puzzle zu l?sen. Dies war im Dezember 2005, als die erste fr?he
+Version von &quot;Oxyd-Puzzle&quot; (V/19) ins Leben kam. Raoul extrahierte die
+Zufallsfunktionen und baute daraus die erste Version von libpuzzle, auf die
+bald schon libpuzzle 2 folgte. Mit dieser Bibliothek brachte er neues Leben in
+die Verwendung der Puzzlesteine, sie wird heute von 15 Levels in den
+Enigma-Levelpaketen eingebunden. Auch ich wurde von libpuzzle inspiriert, und
+schrieb &quot;Procrustes&quot; auf ihrer Basis, wobei ich die besondere Option
+verwendete, die Zahl der Permutationen zu verringern, die zum Mischen des
+Puzzles verwendet wurde.
+</p>
+
+<p>
+(Nebenbei: Die Mathematik hinter der L?sbarkeit eines gegebenen
+Puzzlestein-Puzzles ist hoch interessant, da es nicht nur eine Fragen von
+geraden und ungeraden Permutationen ist (wie im Fall des ber?hmten 15-Puzzles),
+sondern auch der ?hnlichkeit der Puzzlesteine untereinander: Ein Kreuz aus 5
+Puzzlesteinen ist im allgemeinen nicht l?sbar, ein Ring aus 8 Steinen aber
+schon - obwohl beide nur gerade Permutationen verwenden.)
+</p>
+
+<p>
+Now let's listen to what Raoul himself can tell us about his level:
+</p>
+
 <div class="quote">
 Ich will hier etwas ?ber die Entstehungsgeschichte des (rein 
 mathematisch betrachtet) zweitschwersten Levels aus der Enigmawelt 
@@ -221,7 +335,7 @@
 
 <div class="quote">
 Den Start wollte ich m?glichst schwer machen, er sollte sogar das schwerste
-Element im Level sein. So mauerte ich den &quot;VIM&quot; (very important
+Element im Level sein. So mauerte ich den &quot;VIS&quot; (very important
 stone) schlichtweg ein. Der Spieler soll sich schon etwas bem?hen, ihn frei zu
 bekommen.
 </div>
@@ -263,7 +377,7 @@
 Als das Level nun so weit fertig war, kam erst der m?hsame Teil.
 Ich stellte also das Level einem kleinen Kreis von mutigen
 Abenteurern vor. F?r gewisse war das Level nicht schwer genug und
-der VIM viel zu einfach zu bekommen. Bis Ronald die Kirscheninsel 
+der VIS viel zu einfach zu bekommen. Bis Ronald die Kirscheninsel 
 vorschlug. Ein geniales, weiteres R?tsel, das auch gewisse
 F?higkeiten beim recyclen von verwendeten Objekten erfordert.
 </div>
@@ -276,6 +390,10 @@
 
 <div class="author">Raoul Bourquin</div>
 
+<p>Wor?ber wir ?ber alle Ma?en froh und dankbar sind! Vielen, vielen Dank an
+Dich, Raoul, f?r diesen brillianten Level, wir freuen uns jetzt schon alle auf
+Deine n?chsten Meisterwerke!</p>
+
 <p>Sch?ne Gr??e,<br>
 <i>Andreas &amp; Harry</i></p>
 

Modified: feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-02-06 00:02:56 UTC (rev 1024)
+++ feature_branches/hp_lotm/input/lotm/lotm_archive_data.lua	2008-02-06 01:54:18 UTC (rev 1025)
@@ -106,21 +106,21 @@
 -- LotM variable data
 -- format: Level Title, current_rating, current_votes, additional text
 
-lotm_rating(    "Island Labyrinth",  9.25,   8,  "")
-lotm_rating(  "Pneumatic Delivery",  7.86,  14,  "")
-lotm_rating(    "The Aztec Temple",  9.10,  10,  "")
-lotm_rating("Labyrinth of Puzzles",  8.92,  13,  "")
+lotm_rating(    "Island Labyrinth",  9.20,  10,  "")
+lotm_rating(  "Pneumatic Delivery",  8.07,  14,  "")
+lotm_rating(    "The Aztec Temple",  9.00,  11,  "")
+lotm_rating("Labyrinth of Puzzles",  8.81,  16,  "")
 lotm_rating(           "Elaborate",  8.63,   8,  "")
 lotm_rating(             "Houdini",  9.18,  10,  "")
-lotm_rating(           "Tool Time",  8.60,  20,  "")
-lotm_rating(         "Quadropolis",  9.20,  10,  "")
-lotm_rating(      "Big Adventures",  8.43,  21,  "")
+lotm_rating(           "Tool Time",  8.52,  21,  "")
+lotm_rating(         "Quadropolis",  9.20,  10,  "(1 up)")
+lotm_rating(      "Big Adventures",  8.39,  23,  "")
 lotm_rating(      "Temple of Gold",  9.17,   6,  "")
-lotm_rating(      "Puzzle Puzzles",  8.40,   5,  "<b>(newcomer)</b>")
+lotm_rating(      "Puzzle Puzzles",  8.83,   6,  "<b>(newcomer)</b>")
 
 -- Don't forget to adjust the archive dates:
 
-lotm_archive_data_from = { month = 12, year = 2007 }
+lotm_archive_data_from = { month = 1, year = 2008 }
 
 lotm_current = lotm_archive_data[table.getn(lotm_archive_data)]
 



From ged at mail.berlios.de  Thu Feb  7 23:02:27 2008
From: ged at mail.berlios.de (ged at mail.berlios.de)
Date: Thu, 7 Feb 2008 23:02:27 +0100
Subject: [Enigma-game-svn] r1026 - in feature_branches/hp_lotm/input: . lotm
Message-ID: <200802072202.m17M2RtF027933@sheep.berlios.de>

Author: ged
Date: 2008-02-07 23:02:24 +0100 (Thu, 07 Feb 2008)
New Revision: 1026

Modified:
   feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html
   feature_branches/hp_lotm/input/lotm/lotm_core_ru.html
   feature_branches/hp_lotm/input/output-files.lua
Log:
Homepage: Updated Russian translation of LotM + revisions of Russian strings at output-strings and lotm_core_ru.

Modified: feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html	2008-02-06 01:54:18 UTC (rev 1025)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html	2008-02-07 22:02:24 UTC (rev 1026)
@@ -5,11 +5,11 @@
 &quot;Puzzle Puzzles&quot; ?? Raoul Bourquin
 </h3>
 
-<p>? ?????? ??? ??????????? ??????? ?????? 2008 ??????? ?????????? &quot;Sierpinsky&quot;&mdash;?????????
-?????? ?????? ???? ???????, ??? ??????? ????????? ?????
+<p>? ?????? ??? ??????????? ??????? ?????? 2008 ??????? ?????????? &quot;Sierpinsky&quot;&mdash;???????
+?? ?????? ???? ???????, ??? ??????? ????????? ?????
 ????? ?????????? ? ?????? ????????? ?? ????????. ??, ????? ?? ??????? ??
 ????????, ? ????? ? ?????????? ??????, ??????? ????????????? ???
-Julia ????? ??????? ?? ???????????? ? ??????? ??? ????? ?????????, ???????? ?????????????,
+Julia? ????? ??????? ?? ???????????? ? ??????? ??? ????? ?????????, ??????? ?????????????,
 ?????????? ??????, ??? ????? ???????. ????? ?????????? ? &quot;Puzzle
 Puzzles&quot;!</p>
 
@@ -56,14 +56,22 @@
         <td class="left">Taztunes</td></tr>
 </table>
 
-<p>libpuzzle</p>
+<p>&quot;Puzzle Puzzles&quot; ?????????? ? ????? ?????? ??????????? ????????? ??? ???????
+?????, ????? ????? ????? ?????? &quot;Labyrinth of Puzzles&quot;. ??? ??????? ????
+2007, &quot;Island Labyrinth&quot; ? ???? ?????? ???????? ???? ??????????????? ????????,
+? ???? ?? ????????? ? ???????? ????? ?? 0.05 ??????&mdash;????? ????????? ??????????,
+????? &quot;Quadropolis&quot; ????? ?????? ? ????? ?????? ?? ????? ??????, ??????? ?? ??????
+????? ? &quot;Island Labyrinth&quot;. ? ???????? ?????? ????????? ???????, ???? ?????????? ? ????????,
+?????? &quot;Pneumatic Delivery&quot; ???? ???????? ????? ????????????????? ????????? ? ???????
+? ???? 2007-?? ?????? 8 ??????.
+</p>
 
-<h4>Headline</h4>
+<h4>&quot;? ?????? ??? ????? ?????????&quot;</h4>
 
 <p>
 ?? ?????? ?????? ?????? ? ???????? ?????????? Raoul'? ? ?????????????? ???????:
 ??????? ? ???????????? ????????????? &quot;Life's Cross&quot;, ? ???????? ???????
-??????????? ??????, ??????? ? ?????????? ????????????? ? &quot;?????????? ???????&quot;,
+??????????? ??????, ??????? ? ???????????? ? &quot;?????????? ??????&quot;,
 ??? ?????? ??????????? ????? ? ????? ???????? ? ????????. ??? ?????? ???????? ????
 ????????????? ??? ??????? ??????, ? ??? ???????? (? ????? ???????) ???????? ?????? ?????
 ? ??????????? &quot;Industrial Puzzles&quot;. ? ????? &quot;Space
@@ -71,6 +79,44 @@
 ?? ??????? ???? ?????? ??????? ??????? ??????.
 </p>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; - ???? ?? ???????, ??????? ? ?????? ????? ?? ??? ??????
+? ????? ??????? ?? ???? ???????????. ???????, ????????? ?? ???????? ???????, ? ?? ??
+???????, ?????????? ??????? ?????????? ? ????????? ? ??????? ????????, ????????
+&quot;??????? ??????&quot;, ? ???????? ?? ?????? ?????? ????????? ?? ????????? ??????? ??????.
+????, ????? ? ??????? ????? ?? ???? ??????, ??? ??????????, ??? ? ?????? ?? ??? ????? ??????????.
+? ???? ??, ? ???????, ??? ???? ????? ??? ??????. ?? ??? ???? ?? ??? ? ? ??????? ???? ???. ??? ????
+???? ????? ?????? ??? ??????.
+</div>
+
+<div class="quote">
+??????? ? ????????? ? ??????? ??????????? ??????. ? ?????? ??? ????? ?????????, ????? ????????? ????
+????? ???? ? ?????? ???????. ?? ??????????, ??? ???? ????? ?????? ????????? ??? ?????? ??-??
+X-???????? ????? ???????? (st-grate1) ? ??????? (fl-gradient) ?? ????? ??????? ? ???????-?????????????
+? ????????? ????????? (it-booze-broken).  ? ??? ?? ???&mdash;??????? ????????? ??? ??????
+???????, ????????, ??? ???? ?????? ??????????? ????????? ???????, ?????? ??? ??? ??????? ????????,
+???????? ? ????????. ??????? ??? ????? ????? ??? ????? ??????, ??? ?? ??? ? ????????? ? ??????.
+??? ???????? ??????, ??????? ??????? ????? ??????? ???????? ????????? ????????????.
+</div>
+
+<div class="quote">
+????? ???? ??? ? ????? ?????????? ?????, ? ?? ???? ????? ?????? ??????? ??-?? ????????? ?????? ????????? ??????.
+??????? ??? ????? ???? ?????? ???????, ????? ????? ????? ??????????? ?????????. '?????' ????????? ????? ???????,
+?? ? ????? ?????????????. ? X-???????? ????? ???????? (st-grate1) ??? ?????? ???????????, ? ???? ?? ?? ????? ?? ????,
+? ????? ?? ??????? ??????. ? ???? ??, ??? ???? ????? ????????? ??, ??? ? ??????? ?????? ????? ??? ?????? ?????????? ?????, ?? ?????? ???? ??? ????????????</div>
+
+<div class="quote">
+???????, ? ????? ?????? ?????????? Raoul Bourquin ? ?????, ??? ? ?????, ??????? ?????? ????? ?????????????? ??????
+??????? ?????????? ?????????, ? ??? ???, ? ?? ?? ?????? ??????? ?????????? ????? ?? Enigma ? ? ??? ?????
+?????????????? ??????? ? ???????.
+</div>
+
+<div class="author">Ryujun</div>
+
+<p>
+??, ????? ?????????! :-)
+</p>
+
 <h4>&quot;'Puzzle Puzzles' ??? ??? ??????????? ????&quot;</h4>
 
 <div class="lotmpic">
@@ -92,7 +138,7 @@
 
 <div class="quote">
 ? ?????, ??? ??????? ???????????. ? ???? ????? ?? fl-water ? ???????? ????????????? ?????
-???? ???-?? ??????????????? ? ???????? ??????????????? ?? ?????? ??????????
+???? ???-?? ??????????????? ? ???????? ????????????? ? ??????? ??????????
 &quot;Island Labyrinth&quot; ? &quot;Temple of Gold&quot;. ??????? ???????? ??????? ???????.
 ???? ????, ????????? ?? ??????????? ???????? ????? ?????, ?????????? ??? ?????? ???????????????
 ???????????????? ??????.
@@ -100,28 +146,47 @@
 ?? ?????? ??????? Enigma ?? ????? ?????????: ????? ?????????? ? LotM 2/2008. ;-)
 </div>
 
+<div class="quote">
+&quot;Puzzle Puzzles&quot; - ???? ?? 7 ??????? ? ????????? ?????? top-60
+Ronald'?, ???????? ? ??? ?? ????. 3 ?? ??? - ????????? ??????????? ??????? Ronald'?
+? ? ?? ???? ???????? ???????? ????, ??? ????? &quot;Temple of Gold&quot;,
+Ronald ????????? ???????? ???? &quot;Puzzle Puzzles&quot;!?
+??????, ? ??????? ?? &quot;Temple of Gold&quot;, ? ?????, ??? &quot;Puzzle
+Puzzles&quot; ??? ???????????? ??????? Enigma, ? ??????? ?????????? ????? ???????
+????????! ???????, ? ???? ?????????, ?????? ??? ? ??? ?? ????? ?? ???????, ?? ???????.
+*????? ??????*
+</div>
+
 <div class="author">Daydreamer</div>
 
 <p>
-??, ?????????? &quot;Puzzle Puzzles&quot; ????????????? Raoul'?, ????????? ??? ????????:
-??????????? ??? ??????? ? ?????-?? ??????? ??????? ? ?????, ?? ? ???? ??? ?? ?????? ?? ?
-????-????? ?????????, ?? ??????? ? ??????-???????? ???????. ????????, ? ??????? ??????,
-?????????? ?????? ????? ??????? ??????? ?????????, ?????????? ??? ? ?????? ??? ??????? ??????????
-?????? ?????????? ? ??????.
+???????, Harry ????. ??? ???????? Ronald'? ? ??????????? ????????? ???????, ??? ????? ? ?????
+?? ??????? ?????? ?????? ??????:
 </p>
 
-<h4>&quot;??? ????? ???? ????? ?????????&quot;</h4>
+<div class="quote">
+23 ?????? 2006 ????, ?? ????????? ???? ????? ??????? ????-?????? Enigma 1.00 Raoul
+??????? ??? ?????? ?????? ??? &quot;Puzzle Puzzles&quot;, ???????? ?????? ????????? ??? ??
+??????? ???????? ?????, ???? ?? ???????? ???????? ???? ??????? ? ????????????? ??????
+1.00, ??????? ?????? ???? ????? ????? ??? ??????.
+</div>
 
 <div class="quote">
-&quot;Puzzle Puzzles&quot; - ???? ?? ???????, ??????? ? ?????? ????? ?? ??? ??????
-? ????? ??????? ?? ???? ???????????. ???????, ????????? ?? ???????? ???????, ? ?? ??
-???????, ?????????? ??????? ?????????? ? ????????? ? ??????? ????????, ????????
-&quot;??????? ??????&quot;, ? ???????? ?? ?????? ?????? ????????? ?? ????????? ??????? ??????.
-????, ????? ? ??????? ????? ?? ???? ??????, ??? ??????????, ??? ? ?????? ?? ??? ????? ??????????.
-? ???? ??, ? ?????, ??? ???? ????? ??? ??????. ?? ??? ???? ?? ??? ? ? ??????? ???? ???. ??? ????
-???? ????? ?????? ??? ??????.
+??? ???? ???? ??????? ?????????, ??? ?????????? ?????????????? ????????? ???????? ????
+?????? ? ????? ??????. ??? ???? ????? ?????????????, ?? ?? ?????? ???? ??????????????
+?????? ? ?????. ?? 17 ??? ???????????? ??????? ?????????????? ??? ?????? ?????????????,
+??? ? ???????????? ????????? ???????? ?????, ???? ??? ?????? ?????? ???? ?? ???? ?????????????
+???? ???????????.
 </div>
 
+<div class="quote">
+?? ? ??????????? ???? ??? ???????? ???????. ??????? ? ???????? ???? ? ??????????
+&quot;??????? ?????&quot;, ?? ??????? ? ?????????? ??????, ? ?????-?? ????, ?????????????? ??
+?????? ????? ??????? ??????? ?? ???????? ??????. ??, ?? ?????? ??????? ??? ? ????????, ??
+??? ??????? ? &quot;Temple of Gold&quot;. ???????? ?????? Ryujun'? ? ???, ??? ?????? ?????
+?????? ?????????? ?????!
+</div>
+
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200802_b.png" alt="Level of the month" border="0">
 <div class="imagetitle">&hellip; ? ??????!
@@ -129,35 +194,74 @@
 </div>
 
 <div class="quote">
-??????? ? ????????? ? ??????? ??????????? ??????. ??? ????? ???? ????? ?????????, ????? ????????? ????
-????? ???? ? ?????? ???????. ?? ??????????, ??? ???? ????? ?????? ????????? ??? ?????? ??-??
-X-???????? ????? ???????? (st-grate1) ? ??????? (fl-gradient) ?? ????? ??????? ? ???????-?????????????
-? ????????? ????????? (it-booze-broken).  ? ??? ?? ???&mdash;??????? ????????? ??? ??????
-???????, ????????, ??? ???? ?????? ??????????? ????????? ???????, ?????? ??? ??? ??????? ????????,
-???????? ? ????????. ??????? ??? ????? ????? ??? ????? ??????, ??? ?? ??? ? ????????? ? ??????.
-??? ???????? ??????, ??????? ??????? ????? ??????? ???????? ????????? ????????????.
+? ??? ? ?????, ??? ? Enigma ??? ?????, ??????? ????????? ?????? ?????
+?????????? ?????? ?????? ??? ?????? ??? ??????? ???????? ? ??? ?????????.
+????? ???, ?? ????? ????????? ?????? ????????, ? ??????? ????? ?????? ?????????? ??,
+???????? ?????? ? ????????????? ???????? ????? ??????? ?????? ?? ?????? ?????.
+??????? ???? ??????? ????? ?????????????? ???????? ?????????? ? ?????? ?????? ????????.
 </div>
 
+<div class="author">Ronald Lamprecht</div>
+
+<p>? ??? ???? ??????????? ?????? ???????, ?????? ???:</p>
+
 <div class="quote">
-????? ???? ??? ? ????? ?????????? ?????, ? ?? ???? ????? ?????? ??????? ??-?? ????????? ?????? ????????? ??????.
-??????? ??? ????? ???? ?????? ???????, ????? ????? ????? ??????????? ?????????. '?????' ????????? ????? ???????,
-?? ? ????? ?????????????. ? X-???????? ????? ???????? (st-grate1) ??? ?????? ???????????, ? ???? ?? ?? ????? ?? ????,
-? ????? ?? ??????? ??????. ? ???? ??, ??????? ?????? ????? ??? ?????? ?????????? ?????, ?? ?????? ???? ??? ????????????</div>
+????? ?? ??????? ??????? ? &quot;Puzzle Puzzles&quot;, ? ??? ???????? ??? ???? ? ???? ?? ??????.
+?? ??? ?????? ?? ????????? ????? oxyd, ?? ??????? ? ??? ???? ???????:
+?????? ????? ??????????? ????? ??? ?????. ? ???? ??? ??? ?????? ?????????? ??????, ??? ???????
+????? ??????? ??????, ??? ?????? ?????? ??????? ? ????? ??????????. ?? ??? ??? ??? ?? ??????,
+? ??????? ??? ???????? ??????. ?? ??????, ??? ????? ???????, ??????? ? ????????? ???????? ???????
+? ???? ??? ?? ???? ?? ???, ???????, ????? ?? ???????? ? ? ????? ?? ?????? ?? ???? ??????? ??????,
+??? ??????????? ???????.
+</div>
 
 <div class="quote">
-???????, ? ????? ?????? ?????????? Raoul Bourquin ? ?????, ??? ? ?????, ??????? ?????? ????? ?????????????? ??????
-??????? ?????????? ?????????, ? ??? ???, ? ?? ?? ?????? ??????? ?????????? ????? ?? Enigma ? ? ??? ?????
-?????????????? ??????? ? ???????.
+&quot;Puzzle Puzzles&quot; ?????????? ????????? ????????????? ???????? ? ??????????????? ?????????????
+(??????? ??? ????? ? ????????). ??-?????, ???? ??????? ???? ?? ?????? ?????? ??????? Enigma, ? ???????
+?? ???????? ?? ???? ??? 10 ??????. ??????? ? ??????? ?? ?????? ?????? ??????? ?????? ????!
 </div>
 
-<div class="author">Ryujun</div>
+<div class="author">Manuel K&ouml;nig</div>
 
+<p>
+??, ?????????? &quot;Puzzle Puzzles&quot; ????????????? Raoul'?, ????????? ??? ????????:
+??????????? ??? ??????? ? ?????-?? ??????? ??????? ? ?????, ? ? ???? ??? ?? ?????? ?? ?
+????-????? ?????????, ?? ??????? ? ??????-???????? ???????. ????????, ? ??????? ??????,
+?????????? ?????? ????? ??????? ??????? ?????????, ?????????? ??? ? ?????? ??? ??????? ??????????
+?????? ?????????? ? ??????.
+</p>
 
-
 <h4>&quot;? ?????????? ?????? ?????? ????? ???????&quot;</h4>
 
+<p>
+? ?????? ?????? ???????? ??????? ??????? Raoul'? ????? ??????????????? ? ????????????
+&quot;Puzzle Puzzles&quot;. ??? ????????, ????? Raoul ????????? ?????? ??????? Oxyd
+? ????? ?????-???? ?????? ?????? ??????? ??????????? ? ???????????? ??????-???????????.
+???? ????? ??????? ??? ???????????? ? ant.lua, ?? ????? ????????? ????????? ?????????? ??????-???????????
+?, ????????? ????? ??????????????, ????? ????????? ?????? ??????????? ???????????? ???????????.
+??? ????????? ? ??????? 2005, ????? ?????? ???????? ?????? &quot;Oxyd-Puzzle&quot; (V/19)
+????? ? ????. Raoul ????????? ??????? ???????????? ? ?????? ?????? ?????? libpuzzle, ??????? ??????
+???????? libpuzzle 2. ???? ??????????? ?? ??????? ????? ????? ? ????????????? ??????-???????????,
+? ?????? ??? ?????????? ???????? ? 15 ??????? ? ??????? ??????? Enigma. ? ???? ??? ???????????
+libpuzzle ? ?????? ? ?? ??????? &quot;Procrustes&quot;, ????????? ?? ???????????
+????????? ????? ????????????, ????????????, ????? ???????? ???????????.
+</p>
+
+<p>
+(??????: ?????????, ??? ????????? ?? ??????????? ? ??????????? ???????????? ?????? ? ???????? ???????????,
+?? ?????? ??-?? ????, ??? ??? ?????? ?????? ? ???? ???????????? (??? ? ?????? ????????? ???????????
+15("????????")), ?? ??? ??-?? ????????? ??????-??????????? ???? ?? ?????:
+???????? ?????? ?? 5 ??????-??????????? ?? ???????? ??????, ?????? ?????? ?? 8 ?????? ?????????? &mdash;
+???? ? ??, ? ?????? ?????? ?????????? ?????? ????????????.)
+</p>
+
+<p>
+?????? ??????? ?????????, ??? ??? Raoul ????? ?????????? ?? ???? ??????, ??????? ??????? ??????
+??????? ?? ????????? ?????? ?? ???? ? 83 ??????? ?? 100 (? &quot;Aztec Temple&quot; 84 ?????):
+</p>
+
 <div class="quote">
-? ???? ??????? ?????????? ?? ??????? ????????????? (? ?????????????? ????? ??????)
+? ???? ??????? ?????????? ?? ??????? ????????????? (? ??????????????? ????? ??????)
 ??????? ?????? ???????? ?????? ? ???? Enigma.
 </div>
 
@@ -170,13 +274,13 @@
 <div class="quote">
 ?????? ?????? ????? ?????? ???? &quot;Z&quot;- ?
 &quot;W&quot;-???????????. ??????? ?????? ? ???????, ??????? ????????? ? ????? ???? ????,
-??????? ???????? ??? ????? ???????? ? ??????-???????????.
+??????? ???????? ??? ????? ???????? ? ??????-???????????.
 </div>
 
 <div class="quote">
-???????? ???? ???? ??? ????????? ??? ????????, ?????????, ???? ???????? ????????, ??????, ? ???????
+???????? ???? ???? ??? ????????? ??? ????????, ?????????, ?? ??????????? ????????, ??????, ? ???????
 ??????? ????? ??????????? ??????????? ?? ???? ?? ??????, ? ??????? ?????. ????? ?????? ???? ???? ???????????
-?????????? ?????, ???????? ???????? ??????????? ?????, ????? ?????? ? ????????? ??? ? ????????? ??????
+?????????? ?????, ???????? ???????? ??????????? ?????, ????? ?????? ? ?????????? ??? ? ????????? ??????
 ????????? ?????.
 </div>
 
@@ -187,12 +291,13 @@
 </div>
 
 <div class="quote">
-??????? ? ?????????? ????????? ??????? ??????? ???????? ??????? ??? ????? ????? ????????. ??????????? ????? ???,
-????? ???????????? ?? 8x8 ?????? ??????? ?????, ?? ??????? ??????? ???? ??????? &quot;Puzzle Puzzles&quot;.
+??????? ? ?????????? ????????? ??????? ??????? ???????? ??????? ??? ????? ????? ????????. ??????????? ?????
+??? ???????, ????? ???????????? ?? 8x8 ?????? ??????? ?????, ?? ??????? ??????? ???? ???????
+&quot;Puzzle Puzzles&quot;.
 </div>
 
 <div class="quote">
-?????? ? ??? ???? ????????? ??????? ?? ???? ?????? ?????. ??? ?? ????????????? ???????? ?????? ? ????.
+?????? ? ??? ???? ????????? ??????? ?? ???? ?????? ?????. ??? ?? ????????????? ???????? ??????? ? ????.
 ????? ??????? ??? ?????, ?????? ?????? ??????-?? ??????? ? ???? ????-?? ??????????.
 </div>
 
@@ -216,7 +321,7 @@
 ? ???????? ?????? ???????? ????????????? ?????, ? ??????,
 ??????? ? ????? ? ????? ?? ??????? oxyd, ?? ?? ? Enigma. ??? ??? ? ????, ??? ??????, ???????? ?????.
 ??????, ????? ????, ??? ? ????????? ????????? ????? ? ????? ???????????, ????? ???? ? ????????? ??????????????,
-? ??????? ??????? ??? ? ???????. ????? ?????????? ?????????? ????????? ??? ?????? ??????-???????????,
+? ????????????????? ??????? ? ??????? ???. ????? ?????????? ?????????? ????????? ??? ?????? ??????-???????????,
 ???? ????????? ?????? ??????? ? ?????? ??? ??????????? ???????? ???? ??????? &hellip;
 </div>
 
@@ -228,7 +333,7 @@
 </div>
 
 <div class="quote">
-????? ??????? ??? ??????? ?? ????? ???????, ?????????? ????? ?????? ????????. ? ?????????? ???????
+????? ??????? ??? ??????? ?? ????? ???????, ????????? ????? ?????? ????????. ? ?????????? ???????
 ?????????? ????? ???????? ????????? ???????????. ??? ????????? ???? ??????? ??? ?? ??????????
 ???????, ? ?? ??? ???? ?????? ?????????. ???? Ronald ?? ???????? ???? ? ???????? ???????.
 ?????? ?????????? ???????, ??????? ????? ??????? ????????? ??????? ?????????? ???????? ??? ?????????.

Modified: feature_branches/hp_lotm/input/lotm/lotm_core_ru.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_core_ru.html	2008-02-06 01:54:18 UTC (rev 1025)
+++ feature_branches/hp_lotm/input/lotm/lotm_core_ru.html	2008-02-07 22:02:24 UTC (rev 1026)
@@ -1,15 +1,15 @@
 <div class="lotm">
 <h2>?????? ?????? -- ?????</h2>
 
-  <p>?? ????? ?????? ????? ????? ?????????? ??????????????? 
-  ? ???????????? ???????. ???????????? ?????? ??? ??, ? ??????? ????????? ??????? ?????? ???????????? ? ??????
-  ????? ??????. ????????????? ??? ??? ?????. ??????? ?????????? ?????????? ??????,
-  ?? ??????? ?? ??????? ? ?? ????????? ????????? ???? ?????? ?????? ? ???????????? ? ????? ??????? ??????.</p>
+  <p>?? ????? ?????? ????? ??????? ?????? ???????? ???????????? ???????. ???????????? ?????? ??? ??,
+  ? ??????? ??????? ?????? ????????????? ????? ??????? ? ? ????? ????? ??????. ????????????? ??? ??? ?????.
+  ???????, ??????????, ?????????? ??????, ? ??????? ?? ??????? ? ?? ????????? ????????? ???? ??????
+  ?????? ? ???????????? ? ????? ??????? ??????.</p>
 
   <p>????? ??????????? ?????? ??????. ? ?????? ???? ??????? ???????? ???????? ?????????????,
-  ????? ? ??????? ?? ??? - ?????????? ????????? ???? ???????.</p>
+  ????? ? ??????? ?? ??? - ?????????? ?????????????, ????????? ???? ???????.</p>
 
-  <p>? <b>$$lotm_archive_data_from$$</b> ?????? ??????????? ?? $$kind_of_order$$:</p>
+  <p>?????? ?? <b>$$lotm_archive_data_from$$</b>, ??????????? ?? $$kind_of_order$$:</p>
 
   <table>
     <colgroup>
@@ -29,8 +29,8 @@
 $$parse_lotm$$
   </table>
 
-  <p>You may find the article about the <b>End-of-Year-Awards 2007</b>
-  <a href="$$eoya_2007$$">here</a>.</p>
+  <p>?? ?????? ????? ?????? ? <b>???????? ????? ???? 2007</b>
+  <a href="$$eoya_2007$$">?????</a>.</p>
   
   <div class="lotmhistory">
     <a href="$$imagedir$$/lotm/lotm-history.png">

Modified: feature_branches/hp_lotm/input/output-files.lua
===================================================================
--- feature_branches/hp_lotm/input/output-files.lua	2008-02-06 01:54:18 UTC (rev 1025)
+++ feature_branches/hp_lotm/input/output-files.lua	2008-02-07 22:02:24 UTC (rev 1026)
@@ -467,7 +467,7 @@
     outfile = "eoya_2007.html",
     title = "End of Year Awards 2007",
     title_de = "Jahresendauszeichnungen 2007",
-    --ru-- title_ru = "End of Year Awards 2007",
+    title_ru = "??????? ????? ???? 2007",
     --es-- title_es = "End of Year Awards 2007",
     rightcolumn = {},
     body = {"articles/eoya_2007"}
@@ -477,7 +477,7 @@
     outfile = "eoya_2007_statistics.html",
     title = "End of Year Awards 2007 - Pure Statistics",
     title_de = "Jahresendauszeichnungen 2007 - Pure Statistiken",
-    --ru-- title_ru = "End of Year Awards 2007",
+    title_ru = "??????? ????? ???? 2007",
     --es-- title_es = "End of Year Awards 2007",
     rightcolumn = {},
     body = {"articles/eoya_2007_statistics"}



From ral at mail.berlios.de  Thu Feb  7 23:55:32 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Thu, 7 Feb 2008 23:55:32 +0100
Subject: [Enigma-game-svn] r1027 - team_levelpacks/team_test_new_api
Message-ID: <200802072255.m17MtW9r000445@sheep.berlios.de>

Author: ral
Date: 2008-02-07 23:55:32 +0100 (Thu, 07 Feb 2008)
New Revision: 1027

Added:
   team_levelpacks/team_test_new_api/ralT033_1.xml
Log:
Test Level new API:
- features added by validation


Added: team_levelpacks/team_test_new_api/ralT033_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-07 22:02:24 UTC (rev 1026)
+++ team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-07 22:55:32 UTC (rev 1027)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Validator new API" el:subtitle="" el:id="20080131ral378"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["#"] = ti[" "] .. {"st-rock1"}
+
+ti["T"] = ti[" "] .. {"st_switch", target="dotoggle"}
+ti["t"] = ti[" "] .. {"st_switch", target="sw", action="toggle"}
+ti["U"] = ti[" "] .. {"st_switch", target="doopen"}
+ti["V"] = ti[" "] .. {"st_switch", target="sw", action="close"}  -- unknown action
+ti["S"] = ti[" "] .. {"st_switch_black", "sw"}
+ti["R"] = ti[" "] .. {"st_switch", target="dorecolor"}
+ti["r"] = ti[" "] .. {"st_switch", target="dorecolor", inverse=true}
+ti["L"] = ti[" "] .. {"st-laser-s", "laser#"}
+ti["l"] = ti[" "] .. {"st-laser-s", "laserI#"}
+ti["K"] = ti[" "] .. {"st_switch", target="getkind"}
+ti["I"] = ti[" "] .. {"st_switch", target="iskind"}
+
+
+ti["1"] = (ti[" "] .. {"it-magicwand"}) .. {"#ac-blackball"}
+
+
+w, h = wo(ti, " ", {
+"                    ",
+"    S               ",
+"                    ",
+"                    ",
+"                    ",
+" Rr T  U  t  V      ",
+"                    ",
+"      1             ",
+"                    ",
+" K    I             ",
+"                    ",
+" LLL  lllll         ",
+"                    "
+})
+
+function dotoggle(value, sender)
+    no["sw"]:toggle()
+end
+
+function doopen(value, sender)
+    no["sw"]:open()  -- unknown message
+end
+
+function dorecolor(value, sender)
+    if sender["inverse"] then
+        no["sw"]["color"] = nil
+    else
+        no["sw"]["color"] = 1
+    end
+end
+
+function getkind(value, sender)
+    local kind = no["sw"]:kind()
+    print (kind)
+    no["laser#*"]:off()
+    if kind == "st_switch" then
+        no["laser#1"]:on()
+    elseif kind == "st_switch_black" then
+        no["laser#2"]:on()
+    elseif kind == "st_switch_white" then
+        no["laser#3"]:on()
+    end
+end
+
+function iskind(value, sender)
+    no["laserI#*"]:off()
+    if no["sw"]:is("st") then
+        no["laserI#1"]:on()
+    end
+    if no["sw"]:is("st_switch") then
+        no["laserI#2"]:on()
+    end
+    if no["sw"]:is("st_switch_black") then
+        no["laserI#3"]:on()
+    end
+    if no["sw"]:is("st_fourswitch") then
+        no["laserI#4"]:on()
+    end
+    if no["sw"]:is("st_switch_white") then
+        no["laserI#5"]:on()
+    end
+  
+end
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT033_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From ral at mail.berlios.de  Fri Feb  8 00:04:00 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 8 Feb 2008 00:04:00 +0100
Subject: [Enigma-game-svn] r1028 - trunk/src
Message-ID: <200802072304.m17N40Mj001509@sheep.berlios.de>

Author: ral
Date: 2008-02-08 00:03:59 +0100 (Fri, 08 Feb 2008)
New Revision: 1028

Modified:
   trunk/src/KindDescriptor.cc
   trunk/src/lua.cc
Log:
Trunk 1.1: new API fixes
- fix validation kind identification - a copy typo
- fix world attributes read access - a copy typo


Modified: trunk/src/KindDescriptor.cc
===================================================================
--- trunk/src/KindDescriptor.cc	2008-02-07 22:55:32 UTC (rev 1027)
+++ trunk/src/KindDescriptor.cc	2008-02-07 23:03:59 UTC (rev 1028)
@@ -26,7 +26,7 @@
 namespace enigma {
     KindDescriptor::KindDescriptor(std::string name, std::string superKind, bool abstract, 
             int states, bool initOnly) : kind (name), isAbstract (abstract), 
-            isInitOnly (isInitOnly), numStates (states) {
+            isInitOnly (initOnly), numStates (states) {
         // find super kind
         if (superKind != "-") {
             // an explicit super kind is given

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-07 22:55:32 UTC (rev 1027)
+++ trunk/src/lua.cc	2008-02-07 23:03:59 UTC (rev 1028)
@@ -1685,7 +1685,7 @@
         std::string keyStr = lua_tostring(L, 2);
         // TODO check string
         MethodMap::iterator iter = worldMethodeMap.find(keyStr);
-        if (iter != positionMethodeMap.end()) {
+        if (iter != worldMethodeMap.end()) {
             // call method
             lua_pushcfunction(L, iter->second);
         } else {



From andreasl at mail.berlios.de  Fri Feb  8 00:40:27 2008
From: andreasl at mail.berlios.de (andreasl at BerliOS)
Date: Fri, 8 Feb 2008 00:40:27 +0100
Subject: [Enigma-game-svn] r1029 - feature_branches/hp_lotm/input/lotm
Message-ID: <200802072340.m17NeRZW022525@sheep.berlios.de>

Author: andreasl
Date: 2008-02-08 00:40:25 +0100 (Fri, 08 Feb 2008)
New Revision: 1029

Modified:
   feature_branches/hp_lotm/input/lotm/lotm_200802.html
   feature_branches/hp_lotm/input/lotm/lotm_200802_de.html
Log:
LotM:
 - LotM 2/2008:
    - Proofread English
    - Completed German and replaced umlauts
Todo:
 - Validation
 - Merge branch
 - Upload


Modified: feature_branches/hp_lotm/input/lotm/lotm_200802.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802.html	2008-02-07 23:03:59 UTC (rev 1028)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802.html	2008-02-07 23:40:25 UTC (rev 1029)
@@ -5,12 +5,12 @@
 &quot;Puzzle Puzzles&quot; by Raoul Bourquin
 </h3>
 
-<p>It starts a little bit like &quot;Sierpinsky&quot;, our Level of the Month
-February 2008&mdash;curling its way through the first two screens, our dear
-black marble might think of yet another dexterity challenge. But as it
-approaches the third, and then the fourth screen, the level unfolds like a
-Julia set we were pilgrimaging, and ahead of us lies a landscape filled with
-puzzles, convoluted more than any fractal could be. Welcome to &quot;Puzzle
+<p>Our Level of the Month February 2008 starts a little bit like
+&quot;Sierpinsky&quot;&mdash;curling its way through the first
+two screens. Our dear black marble might think that this is yet another dexterity
+challenge. But as it approaches the third, and then the fourth screen, the level
+unfolds like a Julia set, and ahead of us lies a landscape filled with puzzles,
+more convoluted than any fractal could be. Welcome to &quot;Puzzle
 Puzzles&quot;!</p>
 
 <div class="lotmpic">
@@ -60,9 +60,9 @@
 six, shortly before its namesake &quot;Labyrinth of Puzzles&quot;. Our Level of
 the Year 2007, &quot;Island Labyrinth&quot; had a slight weakness this month,
 and saw its ratings sink by only 0.05 points&mdash;enough for
-&quot;Quadropolis&quot; to claim back the leading position, which it now shares
-with &quot;Island Labyrinth&quot;. On the middle ranks, some levels experienced
-similar downratings, only &quot;Pneumatic Delivery&quot; was able to win some
+&quot;Quadropolis&quot; to win back the leading position, which it now shares
+with &quot;Island Labyrinth&quot;. In the middle ranks, some levels experienced
+similar downturns. Only &quot;Pneumatic Delivery&quot; was able to win some
 more positive ratings and hit the 8-point-mark for the first time since July
 '07.
 </p>
@@ -71,7 +71,7 @@
 
 <p>
 You can see much about Raoul developing his mastery of level design: Starting
-with the relatively uninteresting &quot;Life's Cross&quot; as first released
+with the relatively uninteresting &quot;Life's Cross&quot; as his first released
 level, working through various meditations and &quot;Eternal circulation&quot;,
 his levels became more and more complex and subtle. His early creations were
 onescreeners or near-to onescreeners, and this tradition (until now) culminates
@@ -82,9 +82,9 @@
 
 <div class="quote">
 &quot;Puzzle Puzzles&quot; is one of the levels that I was not able to solve for
-a long time and has a very high difficulty in its puzzles. The level which is
-made from seascape not room surrounded by walls is distinct in comparison with
-other levels chosen &quot;Level of the Month&quot;, and this enables us
+a long time&mdash;it's puzzles have a high level of difficulty. The level which is
+made from seascape rather than a room surrounded by walls, is distinct in comparison with
+other levels chosen as &quot;Level of the Month&quot;, and this enables us
 to almost look at the seascape as a whole easily. So when I played the
 level for the first time, it didn't seem to have lots of complex difficulties.
 Additionally, I may have thought that I could solve it easily. But it was wrong,
@@ -98,26 +98,26 @@
 (st-grate1) and the slopes (fl-gradient) around the island with the puzzle
 stones and broken bottles (it-booze-broken).  And this wasn't all&mdash;the
 level provides more obstacles, for example, it was difficult for me to operate an
-invisible marble, as doing this needs dexterity, patience, and speed. So these
+invisible marble, as doing this requires dexterity, patience, and speed. So these
 have high ratings on the level, as well as intelligence and knowledge. I like
-such levels which require various high abilities very much.
+such levels which require various high level abilities very much.
 </div>
 
 <div class="quote">
 After solving easy mode, I was not able to solve difficult mode at once because
 the structures are quite different. So I needed much time to become a more
-excellent civil engineer. 'To become' is the most difficult, but is also the most
-enjoyable. And the X-shaped wire netting (st-grate1) is an important barricade,
-so if it wasn't there, I would have solved it earlier. Additionally, I was
-troubled as I knew how to solve the easy mode, but this showed up to not work
-in difficult mode.
+excellent civil engineer. 'To become' is the most difficult, but is also the
+most enjoyable. And the X-shaped wire netting (st-grate1) is a significant
+barricade&mdash;if it hadn't been there, I would have solved it earlier.
+Additionally, I was troubled as I knew how to solve the easy mode, but this
+solution did not work in difficult mode.
 </div>
 
 <div class="quote">
-Last I admire Raoul Bourquin very much, and I think that people who
-make such a splendid level have an abundant creative ability, and
-without them, I could not spend happy times with Enigma, and expect
-new splendid levels in the future.
+I admire Raoul Bourquin very much, and I think that people who
+create such splendid levels have abundant creative ability, and
+without them, I could not spend happy times enjoying Enigma, and look forward
+to new splendid levels in the future.
 </div>
 
 <div class="author">Ryujun</div>
@@ -136,33 +136,33 @@
 <div class="quote">
 Indeed, &quot;Puzzle Puzzles&quot; is such a strange mix of difficult and
 easy, that I just sit there, astonished, and ask myself, why I have
-difficulties with such a simple and easy to see through level. Then, there are
+difficulties with such a simple and transparent level. Then, there are
 days, when I don't understand anything at all, and ask myself, how this level
 achieved &quot;only&quot; 84 points in the total difficulty rating.
 </div>
 
 <div class="quote">
 However, &quot;Puzzle Puzzles&quot; still fascinates me, not that much as
-&quot;Houdini&quot; does, but yet I tried more than a dozen times, to get
-wise on those puzzles of Raoul's &quot;Puzzle Puzzles&quot;.
+&quot;Houdini&quot; does, but yet I tried more than a dozen times to get
+wise to those puzzles in Raoul's &quot;Puzzle Puzzles&quot;.
 </div>
 
 <div class="quote">
-I think, it's caused by the design. This mixture of fl-water and the bright
-sand-like floor has something charismatic, and can definitely keep up with the
+I think, it's a result of the design. This mixture of fl-water and the bright
+sand-like floor has something charismatic, and can definitely hold its own with the
 designs of &quot;Island Labyrinth&quot; and &quot;Temple of Gold&quot;. The
-level starts promising. This passage, as it winds through the ocean in
+level starts promisingly. This passage, as it snakes through the ocean in
 serpentines, reminds me of the beginning of some fantasy-adventure-movie.
 Whether &quot;Puzzle Puzzles&quot; will fulfill its promises? - I don't know.
-But thousands of Enigma fans can't err: Welcome LotM 2/2008. ;-)
+But thousands of Enigma fans can't be wrong: Welcome LotM 2/2008. ;-)
 </div>
 
 <div class="quote">
-&quot;Puzzle Puzzles&quot; is one of the 7 levels on Ronalds secret top-60
+&quot;Puzzle Puzzles&quot; is one of the 7 levels on Ronald's secret top-60
 list, which I couldn't master yet. 3 of those are results of Ronald's level
 lab, and I can't suppress the feeling, that, after &quot;Temple of Gold&quot;,
-Ronald had a finger in the pie at &quot;Puzzle Puzzles&quot; as well!?
-However, contrasting to &quot;Temple of Gold&quot;, I think that &quot;Puzzle
+Ronald had a finger in the &quot;Puzzle Puzzles&quot; pie as well!?
+However, compared to &quot;Temple of Gold&quot;, I think that &quot;Puzzle
 Puzzles&quot; is the only level in Enigma where the easy version is more
 difficult than the difficult one! Of course, I might be wrong, as I couldn't
 solve the easy difficult nor the difficult easy version yet. *silent laughter*
@@ -171,8 +171,8 @@
 <div class="author">Daydreamer</div>
 
 <p>
-Indeed, Harry was right. Here are Ronald's experiences with putting the final
-cream topping onto our Level of the Month:
+Indeed, Harry was right. Here are Ronald's experiences with putting the icing
+on the cake of our Level of the Month:
 </p>
 
 <div class="quote">
@@ -191,8 +191,8 @@
 </div>
 
 <div class="quote">
-But the fixing had two other side effects. First I came up with the idea of
-adding &quot;cherry island&quot; in a manner that forces locally another more
+But the fix had two other side effects. First I came up with the idea of
+adding &quot;cherry island&quot; in a manner that locally forces another more
 complicated solution for the difficult mode than in easy mode. Yes, you may call
 me a repeater as I did the same with &quot;Temple of Gold&quot;. Stick to
 Ryujun's advice of solving the easy mode first!
@@ -217,19 +217,19 @@
 <p>And another comment by a fellow LotM author:</p>
 
 <div class="quote">
-When you play &quot;Puzzle Puzzles&quot; the first time, you probably have no
-idea what to do. But once you faced the oxyd stones, you'll know, what this
+When you play &quot;Puzzle Puzzles&quot; for the first time, you probably have no
+idea what to do. But once you face the oxyd stones, you'll know what this
 level is all about: A stone has to be transported across the whole map. And
 while this already sounds difficult enough, an even larger challenge awaits the
 gamer, once the stone is at its destined location. But these are exactly the
-levels, I like to play. You see, what to do, think about the various solving
-methods, and yet none of them seems to work somehow and you finally sit much
-longer before this level than you originally planed.
+levels, I like to play. You see what to do and think about the various
+solutions, and yet none of them seems to work somehow and you finally sit much
+longer before this level than you originally planned.
 </div>
 
 <div class="quote">
 &quot;Puzzle Puzzles&quot; distinguishes itself particularly through a good
-design and fantastic puzzles (which is already given by the name). In my
+design and fantastic puzzles (as its name suggests). In my
 opinion, this level is one of the best in Enigma altogether, and because of
 this it get a full 10 points from me. Let's hope we'll see more levels of this
 kind in future!
@@ -240,8 +240,8 @@
 <p>
 Yes, the design of &quot;Puzzle Puzzles&quot; is as Raoul as possible: Most of
 his levels are in some way connected to water, but this time he combined it with
-bright white floors, with glass and light blue stones. Open, and flooded by
-light, only broken by two darkish platforms, reminding us of his other preferred
+bright white floors, with glass and light blue stones: Open and flooded with
+light, only broken by two darker platforms, reminding us of his other preferred
 combination of dark materials and abyss.
 </p>
 
@@ -251,8 +251,8 @@
 And another very typical element of Raoul's levels is highly prominent in
 &quot;Puzzle Puzzles&quot: puzzles. This started when Raoul rewrote an old Oxyd
 level, and searched for some way to randomize the puzzle stones. Although such
-a function already existed in ant.lua, we came into discussing the maths behind
-puzzle stones and under which circumstances its possible to solve a freely
+a function already existed in ant.lua, we came into discussing the mathematics behind
+puzzle stones and under which circumstances it is possible to solve a freely
 randomized puzzle. This was in December 2005, when the first early version of
 &quot;Oxyd-Puzzle&quot; (V/19) came into life. Raoul extracted the randomizing
 functions and build the first version of libpuzzle, which was soon followed by
@@ -263,8 +263,8 @@
 </p>
 
 <p>
-(By the way: The maths behind the solvability of a given puzzle stone puzzle is
-highly interesting, as it's merely a question of odd and even permutations (as
+(By the way: The mathematics behind the solvability of a given puzzle stone puzzle is
+highly interesting, as it's not just a question of odd and even permutations (as
 in the case of the famous 15 puzzle), but also of the similarity of puzzle
 stones with each other: A cross build from 5 puzzle stones is not solvable in
 general, but the ring of 8 stones is&mdash;although both make use of even
@@ -285,7 +285,7 @@
 <div class="quote">
 First of all, a warning: This description contains lots of hints for the level
 and its puzzles. When I see, what small number of players solved the level till
-now, I think, it's not too bad to include some additional hints here.
+now, I think it's not a bad idea to include some additional hints here.
 </div>
 
 <div class="quote">
@@ -295,8 +295,8 @@
 </div>
 
 <div class="quote">
-At the core of this idea were a kind of passages, small, closed if possible,
-rooms, in which a bulky puzzle piece didn't block the course of the marble, but
+At the core of this idea were the kind of passages; small rooms, closed if possible,
+in which a bulky puzzle piece didn't block the course of the marble, but
 of another stone. The goal should be, to push some stone, for example a simple
 wood stone, through such a passage, and place it on some well-defined
 destination.
@@ -309,9 +309,9 @@
 </div>
 
 <div class="quote">
-Thus I have started several attempts to build as difficult as possible such
-passages. The result are the two, just under 8x8 tiles large components, around
-which the whole level &quot;Puzzle Puzzles&quot; is centered.
+Thus I have started several attempts to build such passages to be as difficult
+as possible. The result are the two large components, just under 8X8 tiles,
+around which the whole level &quot;Puzzle Puzzles&quot; is centered.
 </div>
 
 <div class="quote">
@@ -322,12 +322,12 @@
 
 <div class="quote">
 I intended the start to be particularly difficult, even to be the most
-difficult element of the level. Hence, I utterly immured the &quot;VIS&quot;
+difficult element of the level. Hence, I utterly embedded the &quot;VIS&quot;
 (very important stone). The gamer is supposed to exert himself to free it.
 </div>
 
 <div class="quote">
-For the goal I soon had the idea, how to hide the seldom oxyd stones in an
+I soon had the idea for the goal: How to hide the oxyd stones in an
 inaccessible cave. The entrance was blocked by a special lock.
 </div>
 
@@ -349,17 +349,17 @@
 
 <div class="quote">
 As of now, the whole lower left part was still empty. But, as I considered the
-puzzles to be complete, and didn't came up with another reasonable idea to
+puzzles to be complete, and didn't come up with another reasonable idea to
 build some, I decided to create a simple, nearly meditative path, which wasn't
 a portent to what might follow. For all explorers, this is the last moment of
 tranquility, and the best place to limber up the mouse.
 </div>
 
 <div class="quote">
-When the level was completed to this point, the strenuous part only begun. I
+When the level was completed to this point, the strenuous part only began. I
 presented the level to a small circle of brave adventurers. For some, this
 level wasn't difficult enough, and the VIS to easy to reach. Until Ronald came
-up with the idea of the cherry island. Another ingenious riddle, which demands
+up with the idea of the cherry island&mdash;another ingenious riddle, which demands
 some skills in recycling already used objects as well.
 </div>
 

Modified: feature_branches/hp_lotm/input/lotm/lotm_200802_de.html
===================================================================
--- feature_branches/hp_lotm/input/lotm/lotm_200802_de.html	2008-02-07 23:03:59 UTC (rev 1028)
+++ feature_branches/hp_lotm/input/lotm/lotm_200802_de.html	2008-02-07 23:40:25 UTC (rev 1029)
@@ -5,13 +5,13 @@
 &quot;Puzzle Puzzles&quot; von Raoul Bourquin
 </h3>
 
-<p>It starts a little bit like &quot;Sierpinsky&quot;, our Level of the Month
-February 2008&mdash;curling its way through the first two screens, our dear
-black marble might think of yet another dexterity challenge. But as it
-approaches the third, and then the fourth screen, the level unfolds like a
-Julia set we were pilgrimaging, and ahead of us lies a landscape filled with
-puzzles, convoluted more than any fractal could be. Welcome to &quot;Puzzle
-Puzzles&quot;!</p>
+<p>Es beginnt ein wenig wie &quot;Sierpinsky&quot;, unser Level des Monats
+Februar 2008 - w&auml;hrend sie sich ihren Weg durch die ersten zwei Bildschirme
+schl&auml;ngelt, mag unsere schwarze Murmel an einen weiteren
+Geschicklichkeits-Parcour denken. Aber sobald sie den dritten erreicht, und
+dann den vierten, entfaltet sich der Level wie eine Juliamenge, und vor uns
+liegt eine Landschaft angef&uuml;llt mit R&auml;tseln, st&auml;rker miteinander verwickelt,
+als jedes Fraktal sein k&ouml;nnte. Willkommen zu &quot;Puzzle Puzzles&quot;!</p>
 
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200802_a.png" alt="Level des Monats" border="0">
@@ -59,76 +59,77 @@
 <p>&quot;Puzzle Puzzles&quot; listet sich auf unserer Favoritentabelle auf
 Platz sechs ein, kurz vor seinem Namensvetter &quot;Labyrinth of Puzzles&quot;.
 Unser Level des Jahres 2007, &quot;Island Labyrinth&quot; zeigte diesen Monat
-eine kleine Schw?che, und sank in seinem Rating um maginale 0.05 Punkte ab -
-genug f?r &quot;Quadropolis&quot;, seine F?hrungsposition zur?ckzufordern, die
-es sich nun mit &quot;Island Labyrinth&quot; teilt. Auf den mittleren R?ngen
-erfuhren einige Levels ?hnliche Abstufungen, nur &quot;Pneumatic Delivery&quot;
+eine kleine Schw&auml;che, und sank in seinem Rating um maginale 0.05 Punkte ab -
+genug f&uuml;r &quot;Quadropolis&quot;, seine F&uuml;hrungsposition zur&uuml;ckzufordern, die
+es sich nun mit &quot;Island Labyrinth&quot; teilt. Auf den mittleren R&auml;ngen
+erfuhren einige Levels &auml;hnliche Abstufungen, nur &quot;Pneumatic Delivery&quot;
 war in der Lage, ein paar positive Bewertungen zu ergattern und sprang damit
-?ber die 8-Punkte-Marke, das erste Mal wieder seit Juli '07.
+&uuml;ber die 8-Punkte-Marke, das erste Mal wieder seit Juli '07.
 </p>
 
 <h4>&quot;Ich musste ein Bauingenieur werden&quot;</h4>
 
 <p>
-You can see much about Raoul developing his mastery of level design: Starting
-with the relatively uninteresting &quot;Life's Cross&quot; as first released
-level, working through various meditations and &quot;Eternal circulation&quot;,
-his levels became more and more complex and subtle. His early creations were
-onescreeners or near-to onescreeners, and this tradition (until now) culminates
-in the incredible &quot;Industrial Puzzles&quot;. I think &quot;Space
-Station&quot; was his first larger level, and with &quot;Puzzle Puzzles&quot; he
-now reached his first Level of the Month.
+Man sieht viel von Raouls Entwicklung hin zum Meister des Leveldesigns:
+Beginnend mit dem relativ uninteressanten &quot;Life's Cross&quot; als erstem
+ver&ouml;ffentlichten Level, arbeitete er sich durch verschiedene
+Meditationslandschaften und &quot;Eternal circulation&quot;, wobei seine Levels
+immer komplizierter und subtiler wurden. Seine fr&uuml;hen Werke waren Onescreener
+oder beinahe Onescreener, und diese Tradition erreichte ihren (bisherigen)
+H&ouml;hepunkt im unglaublichen &quot;Industrial Puzzles&quot;. Ich denke,
+&quot;Space Station&quot; war sein erster gr&ouml;&szlig;erer Level, und mit &quot;Puzzle
+Puzzles&quot; errang er nun seinen ersten Level des Monats.
 </p>
 
 <div class="quote">
-&quot;Puzzle Puzzles&quot; ist eines derjenigen Level, die ich f?r lange Zeit
-nicht l?sen konnte, und auch in seinen R?tseln sehr schwer ist. Der Level, der
-in einer Meereslandschaft spielt, statt einem von W?nden umgebenen Raum,
-unterscheidet sich in ausgepr?gter Weise von anderen &quot;Leveln des
+&quot;Puzzle Puzzles&quot; ist eines derjenigen Level, die ich f&uuml;r lange Zeit
+nicht l&ouml;sen konnte, und auch in seinen R&auml;tseln sehr schwer ist. Der Level, der
+in einer Meereslandschaft spielt, statt einem von W&auml;nden umgebenen Raum,
+unterscheidet sich in ausgepr&auml;gter Weise von anderen &quot;Leveln des
 Monats&quot;, und das macht es uns fast einfach, diese Meereslandschaft als
 Ganzes zu erblicken. Als ich nun den Level zum ersten Mal gespielt hatte, schien
 der Level nicht viele komplexe Schwierigkeiten aufzuwerfen. Dazu kam, dass ich
-vielleicht gedacht habe, ich k?nnte ihn auf einfache Weise l?sen. Aber ich lag
-falsch, und f?hlte mich etwas eingebildet. Es war schwer f?r mich, den Level zu
-l?sen.
+vielleicht gedacht habe, ich k&ouml;nnte ihn auf einfache Weise l&ouml;sen. Aber ich lag
+falsch, und f&uuml;hlte mich etwas eingebildet. Es war schwer f&uuml;r mich, den Level zu
+l&ouml;sen.
 </div>
 
 <div class="quote">
 Ich begann mit dem einfachen Modus. Ich musste ein Bauingenieur werden, um eine
-Br?cke ?ber den See zu bauen, und den Level zu l?sen. Aber unerwarteterweise
-fand ich es schwierig, diese Aufgaben zu erf?llen, aufgrund der X-f?rmigen
-Drahtgestelle (st-grate1) und Abh?nge (fl-gradient) um die Insel mit den
+Br&uuml;cke &uuml;ber den See zu bauen, und den Level zu l&ouml;sen. Aber unerwarteterweise
+fand ich es schwierig, diese Aufgaben zu erf&uuml;llen, aufgrund der X-f&ouml;rmigen
+Drahtgestelle (st-grate1) und Abh&auml;nge (fl-gradient) um die Insel mit den
 Puzzlesteinen und zerbrochenen Flaschen (it-booze-broken). Und das war noch
 nicht mal alles - der Level bietet weitere Hindernisse, beispielsweise fand ich
-es schwierig, eine unsichtbare Murmel zu man?vrieren, den das ben?tigt
+es schwierig, eine unsichtbare Murmel zu man&ouml;vrieren, den das ben&ouml;tigt
 Geschicklichkeit, Geduld und Schnelligkeit. Folglich haben diese auch hohe
-Schwierigkeits-Bewertungen f?r den Level, ebenso wie Intelligenz und Wissen.
-Ich mag solche Levels, die einem gleich mehrere F?higkeiten stark abverlangen.
+Schwierigkeits-Bewertungen f&uuml;r den Level, ebenso wie Intelligenz und Wissen.
+Ich mag solche Levels, die einem gleich mehrere F&auml;higkeiten stark abverlangen.
 </div>
 
 <div class="quote">
-Nachdem ich den einfachen Modus gel?st hatte, war ich nicht sogleich in der
-Lage, den schweren Modus zu l?sen, da die Strukturen ziemlich verschieden sind.
+Nachdem ich den einfachen Modus gel&ouml;st hatte, war ich nicht sogleich in der
+Lage, den schweren Modus zu l&ouml;sen, da die Strukturen ziemlich verschieden sind.
 So brauchte ich viel Zeit, ein noch exzellenterer Bauingenieur zu werden. 'Zu
-werden' ist h?chst schwierig, aber auch h?chst unterhaltsam. Und die X-f?rmigen
-Drahtgestelle (st-grate1) sind ein wichtiges Hindernis, w?ren sie nicht da,
-h?tte ich es fr?her gel?st. Au?erdem wusste ich schon, wie der einfache Modus
-zu l?sen ist, und war entsprechend verwirrt, als dieser Ansatz im schwierigen
+werden' ist h&ouml;chst schwierig, aber auch h&ouml;chst unterhaltsam. Und die X-f&ouml;rmigen
+Drahtgestelle (st-grate1) sind ein wichtiges Hindernis, w&auml;ren sie nicht da,
+h&auml;tte ich es fr&uuml;her gel&ouml;st. Au&szlig;erdem wusste ich schon, wie der einfache Modus
+zu l&ouml;sen ist, und war entsprechend verwirrt, als dieser Ansatz im schwierigen
 Modus nicht mehr funktionierte.
 </div>
 
 <div class="quote">
-Abschlie?end bewundere ich Raoul Bourquin sehr stark, und ich denke, dass
-Leute, die so pr?chtige Levels erschaffen, reichliche kreative F?higkeiten
-besitzen, und ohne diese, k?nnte ich nicht so gl?ckliche Zeiten mit Enigma
-verbringen, und neue gro?artige Levels in der Zukunft erwarten.
+Abschlie&szlig;end bewundere ich Raoul Bourquin sehr stark, und ich denke, dass
+Leute, die so pr&auml;chtige Levels erschaffen, reichliche kreative F&auml;higkeiten
+besitzen, und ohne diese, k&ouml;nnte ich nicht so gl&uuml;ckliche Zeiten mit Enigma
+verbringen, und neue gro&szlig;artige Levels in der Zukunft erwarten.
 </div>
 
 <div class="author">Ryujun</div>
 
 <p>Ja, hoffen wir das! :-)</p>
 
-<h4>&quot;'Puzzle Puzzles' ?bt schon eine gewisse Faszination auf mich
+<h4>&quot;'Puzzle Puzzles' &uuml;bt schon eine gewisse Faszination auf mich
 aus&quot;</h4>
 
 <div class="lotmpic">
@@ -140,15 +141,15 @@
 Doch, &quot;Puzzle Puzzles&quot; ist wirklich eine so seltsame Mischung aus
 schwierig und leicht, dass ich oft verwundert dasitze und mich frage, warum ich
 mich denn mit einem so einfachen und leicht zu durchschauenden Level so schwer
-tue, dann wieder gibt es die Tage, wo ich ?berhaupt nichts mehr kapiere, und ich
+tue, dann wieder gibt es die Tage, wo ich &uuml;berhaupt nichts mehr kapiere, und ich
 mich frage, warum der Level &quot;nur&quot; mit 84 Punkten in der
 Gesamtschwierigkeitsskala eingestuft wird.
 </div>
 
 <div class="quote">
-Trotzdem, &quot;Puzzle Puzzles&quot; ?bt schon eine gewisse Faszination auf mich
+Trotzdem, &quot;Puzzle Puzzles&quot; &uuml;bt schon eine gewisse Faszination auf mich
 aus, zwar nicht so stark wie beispielsweise &quot;Houdini&quot;, aber dennoch
-hab' ich mehr als ein Dutzend mal versucht, den R?tseln von Raouls &quot;Puzzle
+hab' ich mehr als ein Dutzend mal versucht, den R&auml;tseln von Raouls &quot;Puzzle
 Puzzles&quot; auf die Schliche zu kommen.
 </div>
 
@@ -158,8 +159,8 @@
 von &quot;Island Labyrinth&quot; und &quot;Temple of Gold&quot; mithalten kann.
 Der Level beginnt vielversprechend. Dieser sich in Serpentinen durch das Meer
 windende Weg erinnert an den Beginn eines Fantasy-Adventure-Movies. Ob
-&quot;Puzzle Puzzles&quot; h?lt, was es verspricht? - Ich wei? es nicht. Aber
-Tausende von Enigma-Fans k?nnen nicht irren: Willkommen LotM 2/2008. ;-) </p>
+&quot;Puzzle Puzzles&quot; h&auml;lt, was es verspricht? - Ich wei&szlig; es nicht. Aber
+Tausende von Enigma-Fans k&ouml;nnen nicht irren: Willkommen LotM 2/2008. ;-) </p>
 </div>
 
 <div class="quote">
@@ -168,40 +169,42 @@
 Lab, und ich kann mich nicht des Eindrucks erwehren, dass Ronald nach
 &quot;Temple of Gold&quot; auch bei &quot;Puzzle Puzzles&quot; die Finger im
 Spiel hatte!? Anders allerdings als bei &quot;Temple of Gold&quot; kommt es mir
-so vor, als w?re PP der einzige Level in ganz Enigma, bei dem die einfache
-Variante schwieriger ist als die schwierige! Ich kann mich nat?rlich t?uschen,
+so vor, als w&auml;re PP der einzige Level in ganz Enigma, bei dem die einfache
+Variante schwieriger ist als die schwierige! Ich kann mich nat&uuml;rlich t&auml;uschen,
 da ich weder die einfache schwierige noch die schwierige einfache Variante
-bisher bew?ltigen konnte. *leise lach*
+bisher bew&auml;ltigen konnte. *leise lach*
 </div>
 
 <div class="author">Daydreamer</div>
 
 <p>
-Indeed, Harry was right. Here are Ronald's experiences with putting the final
-cream topping onto our Level of the Month:
+Tats&auml;chlich liegt Harry absolut richtig. Hier sind Ronalds Erfahrungen zum
+Feinschliff unseres Levels des Monats:
 </p>
 
 <div class="quote">
-On November 23rd, 2006, just a day after the beta release of Enigma 1.00 Raoul
-did sent me a first version of his &quot;Puzzle Puzzles&quot; asking for a quick
-shortcut scan as he intended to add this level to the final 1.00 release that
-was due within a fortnight.
+Am 23. November 2006, nur ein Tag nach dem Betarelease von Enigma 1.00,
+schickte Raoul mir eine erste Version seines &quot;Puzzle Puzzles&quot;, und
+fragte nach einer kurzen Suche nach Abk&uuml;rzungen, da er plante, diesen Level noch
+zum finalen 1.00-Release hinzuzuf&uuml;gen, der zwei Wochen sp&auml;ter kommen sollte.
 </div>
 
 <div class="quote">
-It was quite obvious to me that the control of the mighty magic wand was a key
-factor for this level. The user needs it, but it should not be usable at any
-time and anywhere. It took us 17 revisions with proposals and detected shortcuts
-from both sides until we had a lower right part of the level that fulfilled all
-demands.
+Es war mir recht offenkundig, dass die Kontrolle &uuml;ber den m&auml;chtgen Zauberstab
+it-wand der Schl&uuml;sselfaktor zu diesem Level war. Der Spieler ben&ouml;tigt ihn, aber
+er sollte zu keinem anderen Zeitpunkt oder anderswo benutzt werden k&ouml;nnen. Wir
+brauchten 17 Revisionen von Vorschl&auml;gen und erkannten Abk&uuml;rzungen von beiden
+Seiten, bis wir den Levelteil unten rechts so weit hatten, dass er alle unsere
+Anforderungen erf&uuml;llte.
 </div>
 
 <div class="quote">
-But the fixing had two other side effects. First I come up with the idea of
-adding &quot;cherry island&quot; in a manner that forces locally another more
-complicated solution for the difficult mode than in easy mode. Yes, you may call
-me a reapter as I did the same with &quot;Temple of Gold&quot;. Stick to
-Ryujun's advice of solving the easy mode first!
+Aber die Reparatur hatte zwei Nebeneffekte. Zum einen schlug ich vor, die
+&quot;Kirschen-Insel&quot; auf eine Weise hinzuzuf&uuml;gen, die lokal eine
+kompliziertere L&ouml;sung im schwierigen Modus als im einfachen erzwang. Ja, man
+kann mich wohl Wiederholungst&auml;ter nennen, da ich dasselbe mit &quot;Temple of
+Gold&quot; gemacht habe. Halten Sie sich an Ryujuns Rat, und l&ouml;sen Sie zuerst
+den einfachen Modus!
 </div>
 
 <div class="lotmpic">
@@ -211,11 +214,13 @@
 </div>
 
 <div class="quote">
-And secondly I learned that Enigma is missing a stones that lets the author
-easily enforce that only marbles without a given critical item in their
-inventory can pass. Meanwhile we detected a lot of other situations where this
-stone is missing, e.g. combined effort levels would profit a lot from this
-stone. So this level may have initiated a useful addition to our object zoo.
+Zweitens habe ich gesehen, dass es Enigma an einem Stein mangelt, mit dem der
+Autor auf einfache Weise erzwingen kann, dass die Murmel nur ohne einen
+bestimmten kritischen Gegenstand in ihrem Inventar passieren kann.
+Inzwischen haben wir viele weitere Situationen entdekct, in denen solch ein
+Stein fehlt, z.B. w&uuml;rden Gemeinschafts-Levels enorm von so einem Stein
+profitieren. Folglich hat dieser Level m&ouml;glicherweise eine sinnvolle Erg&auml;nzung
+unseres Objektzoos initiiert.
 </div>
 
 <div class="author">Ronald Lamprecht</div>
@@ -224,21 +229,21 @@
 
 <div class="quote">
 Wenn man &quot;Puzzle Puzzles&quot; zum ersten Mal spielt, hat man
-wahrscheinlich zun?chst keine Ahnung, was man eigentlich machen soll. Doch
+wahrscheinlich zun&auml;chst keine Ahnung, was man eigentlich machen soll. Doch
 sobald man einmal die Oxydsteine zu Gesicht bekommen hat, wird man wissen, worum
-es geht: Ein Stein soll quer ?ber die gesamte Karte bef?rdert werden. Und obwohl
-sich das alleine schon schwierig genug anh?rt, wartet noch eine weitaus gr??ere
+es geht: Ein Stein soll quer &uuml;ber die gesamte Karte bef&ouml;rdert werden. Und obwohl
+sich das alleine schon schwierig genug anh&ouml;rt, wartet noch eine weitaus gr&ouml;&szlig;ere
 Herausforderung auf den Spieler, wenn sich der Stein erst an seiner vorgesehenen
 Stelle befindet. Doch das sind genau die Levels, die ich gerne spiele. Man
-sieht, was man machen muss, ?berlegt sich die verschiedensten
-L?sungsm?glichkeiten, aber irgendwie scheint keine zu funktionieren und man
-sitzt viel l?nger vor dem Level als man eigentlich geplant hatte.
+sieht, was man machen muss, &uuml;berlegt sich die verschiedensten
+L&ouml;sungsm&ouml;glichkeiten, aber irgendwie scheint keine zu funktionieren und man
+sitzt viel l&auml;nger vor dem Level als man eigentlich geplant hatte.
 </div>
 
 <div class="quote">
 &quot;Puzzle Puzzles&quot; besticht dabei vor allem durch gutes Design und tolle
-R?tsel (das sagt ja schon der Name). Meiner Meinung nach ist diese Landschaft
-eine der besten ?berhaupt in Enigma und bekommt deshalb von mir auch volle 10
+R&auml;tsel (das sagt ja schon der Name). Meiner Meinung nach ist diese Landschaft
+eine der besten &uuml;berhaupt in Enigma und bekommt deshalb von mir auch volle 10
 Punkte. Hoffentlich bekommen wir in Zukunft noch mehr Levels dieser Art zu
 sehen!
 </div>
@@ -248,22 +253,22 @@
 <p>
 Ja, das Design von &quot;Puzzle Puzzles&quot; ist so Raoul wie nur denkbar: Die
 meisten seiner Level haben in irgendeiner Weise etwas mit Wasser zu tun, aber
-dieses Mal hat er es mit hellem wei?en Boden kombiniert, mit Glas und
+dieses Mal hat er es mit hellem wei&szlig;en Boden kombiniert, mit Glas und
 hellblauen Steinen. Offen, und von Licht durchflutet, nur gebrochen durch zwei
 dunkle Plattformen, die uns an seine andere bevorzugte Kombination von dunklen
 Materialien und Abyss erinnern.
 </p>
 
-<h4>&quot;Den Start wollte ich m?glichst schwer machen&quot;</h4>
+<h4>&quot;Den Start wollte ich m&ouml;glichst schwer machen&quot;</h4>
 
 <p>
 Und ein weiteres typisches Element aus Raouls Landschaften erscheint in
 prominenter Stellung in &quot;Puzzle Puzzles&quot: Puzzles. Dies fing an, als
 Raoul einen alten Oxydlevel neu schreiben wollte, und nach einem Weg suchte,
-die Puzzlesteine zuf?llig zu mischen. Obwohl so eine Funktion bereits in
-ant.lua existierte, gerieten wir in eine Diskussion ?ber die Mathematik hinter
-den Puzzlesteinen und unter welchen Umst?nden es m?glich ist, ein beliebig
-zuf?lliges Puzzle zu l?sen. Dies war im Dezember 2005, als die erste fr?he
+die Puzzlesteine zuf&auml;llig zu mischen. Obwohl so eine Funktion bereits in
+ant.lua existierte, gerieten wir in eine Diskussion &uuml;ber die Mathematik hinter
+den Puzzlesteinen und unter welchen Umst&auml;nden es m&ouml;glich ist, ein beliebig
+zuf&auml;lliges Puzzle zu l&ouml;sen. Dies war im Dezember 2005, als die erste fr&uuml;he
 Version von &quot;Oxyd-Puzzle&quot; (V/19) ins Leben kam. Raoul extrahierte die
 Zufallsfunktionen und baute daraus die erste Version von libpuzzle, auf die
 bald schon libpuzzle 2 folgte. Mit dieser Bibliothek brachte er neues Leben in
@@ -275,40 +280,40 @@
 </p>
 
 <p>
-(Nebenbei: Die Mathematik hinter der L?sbarkeit eines gegebenen
+(Nebenbei: Die Mathematik hinter der L&ouml;sbarkeit eines gegebenen
 Puzzlestein-Puzzles ist hoch interessant, da es nicht nur eine Fragen von
-geraden und ungeraden Permutationen ist (wie im Fall des ber?hmten 15-Puzzles),
-sondern auch der ?hnlichkeit der Puzzlesteine untereinander: Ein Kreuz aus 5
-Puzzlesteinen ist im allgemeinen nicht l?sbar, ein Ring aus 8 Steinen aber
+geraden und ungeraden Permutationen ist (wie im Fall des ber&uuml;hmten 15-Puzzles),
+sondern auch der &Auml;hnlichkeit der Puzzlesteine untereinander: Ein Kreuz aus 5
+Puzzlesteinen ist im allgemeinen nicht l&ouml;sbar, ein Ring aus 8 Steinen aber
 schon - obwohl beide nur gerade Permutationen verwenden.)
 </p>
 
 <p>
-Now let's listen to what Raoul himself can tell us about his level:
+H&ouml;ren wir nun, was Raoul uns selbst &uuml;ber seinen Level berichten kann:
 </p>
 
 <div class="quote">
-Ich will hier etwas ?ber die Entstehungsgeschichte des (rein 
+Ich will hier etwas &uuml;ber die Entstehungsgeschichte des (rein 
 mathematisch betrachtet) zweitschwersten Levels aus der Enigmawelt 
-erz?hlen.
+erz&auml;hlen.
 </div>
 
 <div class="quote">
-Vorab als Warnung: Diese Beschreibung enth?lt etliche Hinweise auf
+Vorab als Warnung: Diese Beschreibung enth&auml;lt etliche Hinweise auf
 das Level und seine Puzzles. Wenn ich sehe, wie wenig Spieler das
-Level bisher gel?st haben, wie schwer es offenbar ist, dann denke ich,
-ist es nicht zu schlimm, wenn es hier einige zus?tzliche Hinweise hat.
+Level bisher gel&ouml;st haben, wie schwer es offenbar ist, dann denke ich,
+ist es nicht zu schlimm, wenn es hier einige zus&auml;tzliche Hinweise hat.
 </div>
 
 <div class="quote">
 Die ersten Teile dieses Levels waren das &quot;Z&quot;- und das
-&quot;W&quot;-Puzzle. Ich arbeitete an einem sp?ten Abend daran, eine Idee
+&quot;W&quot;-Puzzle. Ich arbeitete an einem sp&auml;ten Abend daran, eine Idee
 umzusetzten, die als Mixtur aus Sokoban und Puzzlesteinen begonnen hatte.
 </div>
 
 <div class="quote">
-Kern der Sache waren eine Art Durchg?nge, also kleine, m?glichst  geschlossene
-R?ume, in denen ein unhandliches Puzzlest?ck nicht den Weg  der Kugel, sondern
+Kern der Sache waren eine Art Durchg&auml;nge, also kleine, m&ouml;glichst  geschlossene
+R&auml;ume, in denen ein unhandliches Puzzlest&uuml;ck nicht den Weg  der Kugel, sondern
 den Weg eines anderen Steines verstellt. Das Ziel sollte sein, einen Stein,
 beispielsweise einen simplen Holzstein, durch einen solchen Durchgang zu
 bekommen und an einem wohldefinierten Zielort zu plazieren.
@@ -316,85 +321,85 @@
 
 <div class="lotmpic">
 <img src="$$imagedir$$/lotm/lotm_200802_c.png" alt="Level of the month" border="0">
-<div class="imagetitle">Eine Kirsche! Wof?r mag die gut sein? <br>
-Das schaue ich mir n?her an!</div>
+<div class="imagetitle">Eine Kirsche! Wof&uuml;r mag die gut sein? <br>
+Das schaue ich mir n&auml;her an!</div>
 </div>
 
 <div class="quote">
-So hatte ich also verschiedene Versuche unternommen, m?glichst schwere solcher
-Durchg?nge zu bauen. Das Resultat sind diese beiden, knapp 8x8 Felder gro?en
+So hatte ich also verschiedene Versuche unternommen, m&ouml;glichst schwere solcher
+Durchg&auml;nge zu bauen. Das Resultat sind diese beiden, knapp 8x8 Felder gro&szlig;en
 Bestandteile, um die herum dann das ganze Level &quot;Puzzle Puzzles&quot;
 gewachsen war.
 </div>
 
 <div class="quote">
-Nun haben wir also einen Hindernisslauf f?r einen Stein. Was als n?chstes noch
+Nun haben wir also einen Hindernisslauf f&uuml;r einen Stein. Was als n&auml;chstes noch
 fehlte, waren ein Start und vor allem ein Ziel. Der Stein muss irgendwoher
-kommen und irgendwohin gebracht werden, damit das Level gel?st werden kann.
+kommen und irgendwohin gebracht werden, damit das Level gel&ouml;st werden kann.
 </div>
 
 <div class="quote">
-Den Start wollte ich m?glichst schwer machen, er sollte sogar das schwerste
+Den Start wollte ich m&ouml;glichst schwer machen, er sollte sogar das schwerste
 Element im Level sein. So mauerte ich den &quot;VIS&quot; (very important
-stone) schlichtweg ein. Der Spieler soll sich schon etwas bem?hen, ihn frei zu
+stone) schlichtweg ein. Der Spieler soll sich schon etwas bem&uuml;hen, ihn frei zu
 bekommen.
 </div>
 
 <div class="quote">
-F?r das Ziel kam mir dann bald die Idee, wie ich die seltenen Oxydsteine in
-einer unzug?nglichen H?hle verstecken k?nnte. Der Eingang ist mit einem
+F&uuml;r das Ziel kam mir dann bald die Idee, wie ich die seltenen Oxydsteine in
+einer unzug&auml;nglichen H&ouml;hle verstecken k&ouml;nnte. Der Eingang ist mit einem
 Spezialschloss versperrt.
 </div>
 
 <div class="quote">
 Nun suchte ich nach einer Idee, wie man dieses Schloss interessanter 
-gestalten k?nnte. Denn sobald man den &quot;Schl?ssel&quot; am Ort hatte, war
-die H?hle in der ersten Version des Levels bereits zug?nglich.
+gestalten k&ouml;nnte. Denn sobald man den &quot;Schl&uuml;ssel&quot; am Ort hatte, war
+die H&ouml;hle in der ersten Version des Levels bereits zug&auml;nglich.
 </div>
 
 <div class="quote">
 Ich erinnerte mich an die speziellen Eigenschaften des verwendeten 
-T?rmaterials und an ein Pattern, das ich mal in einem Oxydlevel gesehen 
+T&uuml;rmaterials und an ein Pattern, das ich mal in einem Oxydlevel gesehen 
 hatte, und das in Enigma bisher kaum verwendet wird.
-So kam der Laser in Spiel, oder ins Level. Auch hier bem?hte ich mich 
-nun, den Laser nicht nur f?r das Schlussr?tsel hinzustellen, und den
-Anschalter wom?glich gleich daneben, sondern den Strahl geschickt ins 
+So kam der Laser in Spiel, oder ins Level. Auch hier bem&uuml;hte ich mich 
+nun, den Laser nicht nur f&uuml;r das Schlussr&auml;tsel hinzustellen, und den
+Anschalter wom&ouml;glich gleich daneben, sondern den Strahl geschickt ins 
 Level einzuflechten. Nachdem ich verschiedene andere Puzzlesteine mit 
-L?chern versehen hatte, kam ein weiteres R?tsel dazu und der Strahl muss 
+L&ouml;chern versehen hatte, kam ein weiteres R&auml;tsel dazu und der Strahl muss 
 aufwendig durchs ganze Level geleitet werden &hellip;
 </div>
 
 <div class="quote">
 Nun war noch der ganze linke untere Teil leer. Da ich die Puzzles aber 
-als fertig betrachtete, und auch keine vern?nftige Idee mehr hatte,
-weitere einzubauen, entschloss ich mich f?r den simplen, fast schon 
-meditativen Pfad, der einen nicht ahnen l?sst, was alles kommen wird.
-Hier ist f?r alle Erkunder der letzte Moment der Ruhe und der beste Ort, 
+als fertig betrachtete, und auch keine vern&uuml;nftige Idee mehr hatte,
+weitere einzubauen, entschloss ich mich f&uuml;r den simplen, fast schon 
+meditativen Pfad, der einen nicht ahnen l&auml;sst, was alles kommen wird.
+Hier ist f&uuml;r alle Erkunder der letzte Moment der Ruhe und der beste Ort, 
 schon mal die Maus fit zu machen.
 </div>
 
 <div class="quote">
-Als das Level nun so weit fertig war, kam erst der m?hsame Teil.
+Als das Level nun so weit fertig war, kam erst der m&uuml;hsame Teil.
 Ich stellte also das Level einem kleinen Kreis von mutigen
-Abenteurern vor. F?r gewisse war das Level nicht schwer genug und
+Abenteurern vor. F&uuml;r gewisse war das Level nicht schwer genug und
 der VIS viel zu einfach zu bekommen. Bis Ronald die Kirscheninsel 
-vorschlug. Ein geniales, weiteres R?tsel, das auch gewisse
-F?higkeiten beim recyclen von verwendeten Objekten erfordert.
+vorschlug. Ein geniales, weiteres R&auml;tsel, das auch gewisse
+F&auml;higkeiten beim recyclen von verwendeten Objekten erfordert.
 </div>
 
 <div class="quote">
-Nachdem noch viele kleinere und gr??ere Abk?rzungen versperrt
-worden waren, war das Level gerade noch rechtzeitig f?r das nahende
+Nachdem noch viele kleinere und gr&ouml;&szlig;ere Abk&uuml;rzungen versperrt
+worden waren, war das Level gerade noch rechtzeitig f&uuml;r das nahende
 grosse Enigmarelease 1.0 fertig geworden.
 </div>
 
 <div class="author">Raoul Bourquin</div>
 
-<p>Wor?ber wir ?ber alle Ma?en froh und dankbar sind! Vielen, vielen Dank an
-Dich, Raoul, f?r diesen brillianten Level, wir freuen uns jetzt schon alle auf
-Deine n?chsten Meisterwerke!</p>
+<p>Wor&uuml;ber wir &uuml;ber alle Ma&szlig;en froh und dankbar sind! Vielen, vielen Dank an
+Dich, Raoul, f&uuml;r diesen brillianten Level, wir freuen uns jetzt schon alle auf
+Deine n&auml;chsten Meisterwerke!</p>
 
-<p>Sch?ne Gr??e,<br>
+<p>Sch&ouml;ne Gr&uuml;&szlig;e,<br>
 <i>Andreas &amp; Harry</i></p>
 
 </div>



From raoul at mail.berlios.de  Fri Feb  8 16:06:04 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Fri, 8 Feb 2008 16:06:04 +0100
Subject: [Enigma-game-svn] r1030 - in homepage: images/lotm input
	input/articles input/lotm
Message-ID: <200802081506.m18F64s6011410@sheep.berlios.de>

Author: raoul
Date: 2008-02-08 16:06:02 +0100 (Fri, 08 Feb 2008)
New Revision: 1030

Added:
   homepage/images/lotm/lotm_200802.png
   homepage/images/lotm/lotm_200802_a.png
   homepage/images/lotm/lotm_200802_b.png
   homepage/images/lotm/lotm_200802_c.png
   homepage/images/lotm/lotm_200802_d.png
   homepage/input/lotm/lotm_200802.html
   homepage/input/lotm/lotm_200802_de.html
   homepage/input/lotm/lotm_200802_ru.html
Modified:
   homepage/images/lotm/lotm-history.png
   homepage/input/articles/eoya_2007.html
   homepage/input/articles/eoya_2007_de.html
   homepage/input/articles/eoya_2007_ru.html
   homepage/input/infobox.html
   homepage/input/infobox_de.html
   homepage/input/infobox_ru.html
   homepage/input/lotm/lotm_200711.html
   homepage/input/lotm/lotm_200711_de.html
   homepage/input/lotm/lotm_200712.html
   homepage/input/lotm/lotm_200712_de.html
   homepage/input/lotm/lotm_archive_data.lua
   homepage/input/lotm/lotm_core.html
   homepage/input/lotm/lotm_core_de.html
   homepage/input/lotm/lotm_core_ru.html
   homepage/input/output-files.lua
Log:
-> Merged lotm-branch to homepage


Modified: homepage/images/lotm/lotm-history.png
===================================================================
(Binary files differ)

Copied: homepage/images/lotm/lotm_200802.png (from rev 1029, feature_branches/hp_lotm/images/lotm/lotm_200802.png)

Copied: homepage/images/lotm/lotm_200802_a.png (from rev 1029, feature_branches/hp_lotm/images/lotm/lotm_200802_a.png)

Copied: homepage/images/lotm/lotm_200802_b.png (from rev 1029, feature_branches/hp_lotm/images/lotm/lotm_200802_b.png)

Copied: homepage/images/lotm/lotm_200802_c.png (from rev 1029, feature_branches/hp_lotm/images/lotm/lotm_200802_c.png)

Copied: homepage/images/lotm/lotm_200802_d.png (from rev 1029, feature_branches/hp_lotm/images/lotm/lotm_200802_d.png)

Modified: homepage/input/articles/eoya_2007.html
===================================================================
--- homepage/input/articles/eoya_2007.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/articles/eoya_2007.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -1,12 +1,19 @@
 <div class="lotm">
+
+<table border="0">
+<tr><td>
 <h2>End of Year Awards 2007</h2>
-
 <p>During the past month, we asked our dear readers to vote for the best levels
 Enigma has to offer, in five categories, and to answer some questions of a
 general nature. Many thanks to all those who took the time (and it was a long
 questionnaire after all) and gave us the answers we were longing for. Instead of
 a Level-of-the-Month-January article, we now present the results of this
 poll.</p>
+</td><td>
+<p><img class="leftimage" src="$$imagedir$$/articles/eoya_2007.png"
+alt="EoYA 2007" border="0"></p>
+</td></tr>
+</table>
 
 <h3>Results of the general questions</h3>
 

Modified: homepage/input/articles/eoya_2007_de.html
===================================================================
--- homepage/input/articles/eoya_2007_de.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/articles/eoya_2007_de.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -1,4 +1,7 @@
 <div class="lotm">
+
+<table border="0">
+<tr><td>
 <h2>Jahresendauszeichnungen 2007</h2>
 
 <p>W&auml;hrend des vergangenen Monats haben wir unsere lieben Leser gebeten,
@@ -8,6 +11,11 @@
 ein ziemlich langer Fragebogen) und uns die Antworten gaben, nach denen wir
 suchten. Anstelle eines Level-des-Monats-Januar-Artikel, pr&auml;sentieren wir
 nun die Ergebnisse dieser Umfrage. </p>
+</td><td>
+<p><img class="leftimage" src="$$imagedir$$/articles/eoya_2007.png"
+alt="EoYA 2007" border="0"></p>
+</td></tr>
+</table>
 
 <h3>Ergebnisse der allgemeinen Fragen</h3>
 

Modified: homepage/input/articles/eoya_2007_ru.html
===================================================================
--- homepage/input/articles/eoya_2007_ru.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/articles/eoya_2007_ru.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -1,7 +1,15 @@
 <div class="lotm">
+
+<table border="0">
+<tr><td>
 <h2>??????? ????? ???? 2007</h2>
 
 <p>?? ?????????? ?????????? ?????? ?? ??????? ????? ????????? ????????? ????????????? ?? ?????? ?? ???????????? ??????? Enigma, ? ???? ??????????, ? ???????? ?? ????????? ????? ????????. ??????? ??????? ???? ???, ??? ?????? ????? (? ??? ? ????? ??? ??????? ?????) ? ??? ??? ????????? ??????. ?????? ??????, ??????????? ?????????? ?????? ??????, ?????? ?? ?????????? ?????????? ????? ??????.</p>
+</td><td>
+<p><img class="leftimage" src="$$imagedir$$/articles/eoya_2007.png"
+alt="EoYA 2007" border="0"></p>
+</td></tr>
+</table>
 
 <h3>?????????? ????? ????????</h3>
 

Modified: homepage/input/infobox.html
===================================================================
--- homepage/input/infobox.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/infobox.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -3,12 +3,12 @@
          <h3>100% Solved!</h3>
          Congratulations to our Japanese user Ryujun who succeeded first
          in solving all levels of Enigma 1.01 in easy and difficult mode.
-         <!--<h3>Level of the Month</h3>
+         <h3>Level of the Month</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>
          <div class="imagetitle">
            <a href="$$lotm_current$$">&quot;$$lotm_current_name$$&quot;</a>
-         </div>  -->
+         </div>
          <h3>End-of-Year Awards</h3>
          <a href="$$eoya_2007$$"><img src="images/articles/eoya_2007.png"
          alt="Which might be the Level of the Year?" border="0"></a>

Modified: homepage/input/infobox_de.html
===================================================================
--- homepage/input/infobox_de.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/infobox_de.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -4,12 +4,12 @@
          Gl&uuml;ckwunsch an unseren japanischen Spieler Ryujun, dem es
 	 als erstem gelungen ist, alle Level von Enigma 1.01 im einfachen
 	 und im schwierigen Modus zu l?sen.
-         <!--<h3>Level des Monats</h3>
+         <h3>Level des Monats</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>
          <div class="imagetitle">
            <a href="$$lotm_current$$">&quot;$$lotm_current_name$$&quot;</a>
-         </div>-->
+         </div>
          <h3>Jahresend-<br>auszeichnungen</h3>
          <a href="$$eoya_2007$$"><img src="images/articles/eoya_2007.png"
          alt="Welches mag der Level des Jahres sein?" border="0"></a>

Modified: homepage/input/infobox_ru.html
===================================================================
--- homepage/input/infobox_ru.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/infobox_ru.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -3,12 +3,12 @@
          <h3>100% ??????!</h3>
          ??????????? ?????? ????????? ???????????? Ryujun, ??????? ?????? ??????? ?????
 	 ??? ?????? Enigma 1.01 ? ?????????? ? ??????? ???????.
-         <!--<h3>Level of the Month</h3>
+         <h3>Level of the Month</h3>
          <a href="$$lotm_current$$"><img src="$$lotm_current_image$$"
          alt="$$lotm_expansion$$" border="0"></a>
          <div class="imagetitle">
            <a href="$$lotm_current$$">&quot;$$lotm_current_name$$&quot;</a>
-         </div>  -->
+         </div>
          <h3>??????? ????? ????</h3>
          <a href="$$eoya_2007$$"><img src="images/articles/eoya_2007.png"
          alt="????? ????? ???? ??????? ?????" border="0"></a>

Modified: homepage/input/lotm/lotm_200711.html
===================================================================
--- homepage/input/lotm/lotm_200711.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_200711.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -3,7 +3,7 @@
 
 <h3 class="lotm">
 <span class="date">November 2007: </span>
-&quot;Big Adventures&quot;, by Jon 'WB' Sneyers
+&quot;Big Adventures&quot; by Jon 'WB' Sneyers
 </h3>
 
 <p>&quot;Greetings, adventurer! The road ahead is long and dangerous, so be

Modified: homepage/input/lotm/lotm_200711_de.html
===================================================================
--- homepage/input/lotm/lotm_200711_de.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_200711_de.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -3,7 +3,7 @@
 
 <h3 class="lotm">
 <span class="date">November 2007: </span>
-&quot;Big Adventures&quot;, von Jon 'WB' Sneyers
+&quot;Big Adventures&quot; von Jon 'WB' Sneyers
 </h3>
 
 <p>&quot;Willkommen, Abenteurer! Der Weg ist lang und gef&auml;hrlich, sei

Modified: homepage/input/lotm/lotm_200712.html
===================================================================
--- homepage/input/lotm/lotm_200712.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_200712.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -2,7 +2,7 @@
 $$lotm_header$$
 <h3 class="lotm">
 <span class="date">December 2007: </span>
-&quot;Temple of Gold&quot;, by Jacob Scott &amp; Ronald Lamprecht
+&quot;Temple of Gold&quot; by Jacob Scott &amp; Ronald Lamprecht
 </h3>
 
 <div class="lotmpic">

Modified: homepage/input/lotm/lotm_200712_de.html
===================================================================
--- homepage/input/lotm/lotm_200712_de.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_200712_de.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -3,7 +3,7 @@
 
 <h3 class="lotm">
 <span class="date">Dezember 2007: </span>
-&quot;Temple of Gold&quot;, von Jacob Scott und Ronald Lamprecht
+&quot;Temple of Gold&quot; von Jacob Scott und Ronald Lamprecht
 </h3>
 
 <div class="lotmpic">

Copied: homepage/input/lotm/lotm_200802.html (from rev 1029, feature_branches/hp_lotm/input/lotm/lotm_200802.html)

Copied: homepage/input/lotm/lotm_200802_de.html (from rev 1029, feature_branches/hp_lotm/input/lotm/lotm_200802_de.html)

Copied: homepage/input/lotm/lotm_200802_ru.html (from rev 1029, feature_branches/hp_lotm/input/lotm/lotm_200802_ru.html)

Modified: homepage/input/lotm/lotm_archive_data.lua
===================================================================
--- homepage/input/lotm/lotm_archive_data.lua	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_archive_data.lua	2008-02-08 15:06:02 UTC (rev 1030)
@@ -94,24 +94,33 @@
   position_num   = "7024"
 }
 
+lotm_archive_data[11] = {
+  date           = { month = 2, year = 2008 },
+  chronological  = 11,
+  name           = "Puzzle Puzzles",
+  author         = "Raoul Bourquin",
+  position       = "VI/55",
+  position_num   = "6055"
+}
 
 -- LotM variable data
 -- format: Level Title, current_rating, current_votes, additional text
 
-lotm_rating(    "Island Labyrinth",  9.25,   8,  "")
-lotm_rating(  "Pneumatic Delivery",  7.86,  14,  "")
-lotm_rating(    "The Aztec Temple",  9.10,  10,  "(3 down)")
-lotm_rating("Labyrinth of Puzzles",  8.92,  13,  "(1 down)")
+lotm_rating(    "Island Labyrinth",  9.20,  10,  "")
+lotm_rating(  "Pneumatic Delivery",  8.07,  14,  "")
+lotm_rating(    "The Aztec Temple",  9.00,  11,  "")
+lotm_rating("Labyrinth of Puzzles",  8.81,  16,  "")
 lotm_rating(           "Elaborate",  8.63,   8,  "")
-lotm_rating(             "Houdini",  9.18,  10,  "(3 up)")
-lotm_rating(           "Tool Time",  8.60,  20,  "")
+lotm_rating(             "Houdini",  9.18,  10,  "")
+lotm_rating(           "Tool Time",  8.52,  21,  "")
 lotm_rating(         "Quadropolis",  9.20,  10,  "(1 up)")
-lotm_rating(      "Big Adventures",  8.43,  21,  "")
+lotm_rating(      "Big Adventures",  8.39,  23,  "")
 lotm_rating(      "Temple of Gold",  9.17,   6,  "")
+lotm_rating(      "Puzzle Puzzles",  8.83,   6,  "<b>(newcomer)</b>")
 
 -- Don't forget to adjust the archive dates:
 
-lotm_archive_data_from = { month = 12, year = 2007 }
+lotm_archive_data_from = { month = 1, year = 2008 }
 
 lotm_current = lotm_archive_data[table.getn(lotm_archive_data)]
 

Modified: homepage/input/lotm/lotm_core.html
===================================================================
--- homepage/input/lotm/lotm_core.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_core.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -32,6 +32,9 @@
 $$parse_lotm$$
   </table>
 
+  <p>You may find the article about the <b>End-of-Year-Awards 2007</b>
+  <a href="$$eoya_2007$$">here</a>.</p>
+  
   <div class="lotmhistory">
     <a href="$$imagedir$$/lotm/lotm-history.png">
     <img src="$$imagedir$$/lotm/lotm-thumbnail.png" alt="$$lotm_history$$" border="0">

Modified: homepage/input/lotm/lotm_core_de.html
===================================================================
--- homepage/input/lotm/lotm_core_de.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_core_de.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -34,6 +34,9 @@
 $$parse_lotm$$
   </table>
 
+  <p>Sie finden den Artikel zu den <b>Jahresendauszeichnungen 2007</b>
+  <a href="$$eoya_2007$$">hier</a>.</p>
+
   <div class="lotmhistory">
     <a href="$$imagedir$$/lotm/lotm-history.png">
     <img src="$$imagedir$$/lotm/lotm-thumbnail.png" alt="$$lotm_history$$" border="0">

Modified: homepage/input/lotm/lotm_core_ru.html
===================================================================
--- homepage/input/lotm/lotm_core_ru.html	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/lotm/lotm_core_ru.html	2008-02-08 15:06:02 UTC (rev 1030)
@@ -1,15 +1,15 @@
 <div class="lotm">
 <h2>?????? ?????? -- ?????</h2>
 
-  <p>?? ????? ?????? ????? ????? ?????????? ??????????????? 
-  ? ???????????? ???????. ???????????? ?????? ??? ??, ? ??????? ????????? ??????? ?????? ???????????? ? ??????
-  ????? ??????. ????????????? ??? ??? ?????. ??????? ?????????? ?????????? ??????,
-  ?? ??????? ?? ??????? ? ?? ????????? ????????? ???? ?????? ?????? ? ???????????? ? ????? ??????? ??????.</p>
+  <p>?? ????? ?????? ????? ??????? ?????? ???????? ???????????? ???????. ???????????? ?????? ??? ??,
+  ? ??????? ??????? ?????? ????????????? ????? ??????? ? ? ????? ????? ??????. ????????????? ??? ??? ?????.
+  ???????, ??????????, ?????????? ??????, ? ??????? ?? ??????? ? ?? ????????? ????????? ???? ??????
+  ?????? ? ???????????? ? ????? ??????? ??????.</p>
 
   <p>????? ??????????? ?????? ??????. ? ?????? ???? ??????? ???????? ???????? ?????????????,
-  ????? ? ??????? ?? ??? - ?????????? ????????? ???? ???????.</p>
+  ????? ? ??????? ?? ??? - ?????????? ?????????????, ????????? ???? ???????.</p>
 
-  <p>? <b>$$lotm_archive_data_from$$</b> ?????? ??????????? ?? $$kind_of_order$$:</p>
+  <p>?????? ?? <b>$$lotm_archive_data_from$$</b>, ??????????? ?? $$kind_of_order$$:</p>
 
   <table>
     <colgroup>
@@ -29,6 +29,9 @@
 $$parse_lotm$$
   </table>
 
+  <p>?? ?????? ????? ?????? ? <b>???????? ????? ???? 2007</b>
+  <a href="$$eoya_2007$$">?????</a>.</p>
+  
   <div class="lotmhistory">
     <a href="$$imagedir$$/lotm/lotm-history.png">
     <img src="$$imagedir$$/lotm/lotm-thumbnail.png" alt="$$lotm_history$$" border="0">

Modified: homepage/input/output-files.lua
===================================================================
--- homepage/input/output-files.lua	2008-02-07 23:40:25 UTC (rev 1029)
+++ homepage/input/output-files.lua	2008-02-08 15:06:02 UTC (rev 1030)
@@ -467,7 +467,7 @@
     outfile = "eoya_2007.html",
     title = "End of Year Awards 2007",
     title_de = "Jahresendauszeichnungen 2007",
-    --ru-- title_ru = "End of Year Awards 2007",
+    title_ru = "??????? ????? ???? 2007",
     --es-- title_es = "End of Year Awards 2007",
     rightcolumn = {},
     body = {"articles/eoya_2007"}
@@ -477,7 +477,7 @@
     outfile = "eoya_2007_statistics.html",
     title = "End of Year Awards 2007 - Pure Statistics",
     title_de = "Jahresendauszeichnungen 2007 - Pure Statistiken",
-    --ru-- title_ru = "End of Year Awards 2007",
+    title_ru = "??????? ????? ???? 2007",
     --es-- title_es = "End of Year Awards 2007",
     rightcolumn = {},
     body = {"articles/eoya_2007_statistics"}



From raoul at mail.berlios.de  Fri Feb  8 16:38:52 2008
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Fri, 8 Feb 2008 16:38:52 +0100
Subject: [Enigma-game-svn] r1031 - homepage/input/lotm
Message-ID: <200802081538.m18Fcqjw014397@sheep.berlios.de>

Author: raoul
Date: 2008-02-08 16:38:51 +0100 (Fri, 08 Feb 2008)
New Revision: 1031

Modified:
   homepage/input/lotm/lotm_200802.html
   homepage/input/lotm/lotm_200802_de.html
Log:
-> Validated html of current lotm page


Modified: homepage/input/lotm/lotm_200802.html
===================================================================
--- homepage/input/lotm/lotm_200802.html	2008-02-08 15:06:02 UTC (rev 1030)
+++ homepage/input/lotm/lotm_200802.html	2008-02-08 15:38:51 UTC (rev 1031)
@@ -249,7 +249,7 @@
 
 <p>
 And another very typical element of Raoul's levels is highly prominent in
-&quot;Puzzle Puzzles&quot: puzzles. This started when Raoul rewrote an old Oxyd
+&quot;Puzzle Puzzles&quot; puzzles. This started when Raoul rewrote an old Oxyd
 level, and searched for some way to randomize the puzzle stones. Although such
 a function already existed in ant.lua, we came into discussing the mathematics behind
 puzzle stones and under which circumstances it is possible to solve a freely

Modified: homepage/input/lotm/lotm_200802_de.html
===================================================================
--- homepage/input/lotm/lotm_200802_de.html	2008-02-08 15:06:02 UTC (rev 1030)
+++ homepage/input/lotm/lotm_200802_de.html	2008-02-08 15:38:51 UTC (rev 1031)
@@ -160,7 +160,7 @@
 Der Level beginnt vielversprechend. Dieser sich in Serpentinen durch das Meer
 windende Weg erinnert an den Beginn eines Fantasy-Adventure-Movies. Ob
 &quot;Puzzle Puzzles&quot; h&auml;lt, was es verspricht? - Ich wei&szlig; es nicht. Aber
-Tausende von Enigma-Fans k&ouml;nnen nicht irren: Willkommen LotM 2/2008. ;-) </p>
+Tausende von Enigma-Fans k&ouml;nnen nicht irren: Willkommen LotM 2/2008. ;-)
 </div>
 
 <div class="quote">
@@ -263,7 +263,7 @@
 
 <p>
 Und ein weiteres typisches Element aus Raouls Landschaften erscheint in
-prominenter Stellung in &quot;Puzzle Puzzles&quot: Puzzles. Dies fing an, als
+prominenter Stellung in &quot;Puzzle Puzzles&quot; Puzzles. Dies fing an, als
 Raoul einen alten Oxydlevel neu schreiben wollte, und nach einem Weg suchte,
 die Puzzlesteine zuf&auml;llig zu mischen. Obwohl so eine Funktion bereits in
 ant.lua existierte, gerieten wir in eine Diskussion &uuml;ber die Mathematik hinter



From ral at mail.berlios.de  Fri Feb  8 18:30:01 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 8 Feb 2008 18:30:01 +0100
Subject: [Enigma-game-svn] r1032 - trunk/src
Message-ID: <200802081730.m18HU1P3023903@sheep.berlios.de>

Author: ral
Date: 2008-02-08 18:30:00 +0100 (Fri, 08 Feb 2008)
New Revision: 1032

Modified:
   trunk/src/world.cc
Log:
Trunk 1.1: fix Svn error in r1023
- world.cc did miss changes of r997, r1000, r1002 on a workarea svn update
 (all other revision updates and files did got updated correctly) but the
 file got marked as correctly updated r1022 - thus on the commit of r1023
 the changes got reverted within the svn repository!!
 This resubmit of the changes should correct the error.
 

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-08 15:38:51 UTC (rev 1031)
+++ trunk/src/world.cc	2008-02-08 17:30:00 UTC (rev 1032)
@@ -347,6 +347,10 @@
 
 void World::name_object(Object *obj, const std::string &name)
 {
+    Object *old = get_named(name);
+    if (old != NULL)
+        unname(old);
+    
     std::string unique_name = name;
     if (server::EnigmaCompatibility >= 1.10 && name.size() > 0 && name[name.size() - 1] == '#') {
         // auto name object with a unique name
@@ -1851,7 +1855,7 @@
     // activate which key hole
     if (src->getObjectType() == Object::ITEM) {
         ItemID src_id = get_id(dynamic_cast<Item *>(src));
-        if (src_id >= it_key_a && src_id <= it_key_c && dst->is_kind("st-key")) {
+        if (src_id >= it_key_a && src_id <= it_key_c && dst->is_kind("st_key")) {
             dst->set_attrib("keycode", src->getAttr("keycode"));
             return;
         }
@@ -1917,17 +1921,17 @@
     void explosion (GridPos p, ItemID explosion_item)
     {
         if (Stone *stone = GetStone(p))
-            SendMessage(stone, "expl");
+            SendMessage(stone, "_explosion");
         if (Item  *item  = GetItem(p)) {
             if (has_flags(item, itf_indestructible))
-                SendMessage(item, "expl");
+                SendMessage(item, "_explosion");
             else
                 SetItem(p, explosion_item);
         }
         else
             SetItem(p, explosion_item);
         if (Floor *floor = GetFloor(p))
-            SendMessage(floor, "expl");
+            SendMessage(floor, "_explosion");
     }
 }
 
@@ -1968,9 +1972,9 @@
 
         case EXPLOSION_BOMBSTONE:
             if (direct_neighbor) {
-                if (stone) SendMessage(stone, "bombstone");
-                if (item) SendMessage(item, "bombstone");
-                if (floor) SendMessage(floor, "bombstone");
+                if (stone) SendMessage(stone, "_bombstone");
+                if (item) SendMessage(item, "_bombstone");
+                if (floor) SendMessage(floor, "_bombstone");
             }
             break;
 



From ral at mail.berlios.de  Sat Feb  9 19:41:58 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 9 Feb 2008 19:41:58 +0100
Subject: [Enigma-game-svn] r1033 - in trunk/src: . stones
Message-ID: <200802091841.m19IfwaA029087@sheep.berlios.de>

Author: ral
Date: 2008-02-09 19:41:37 +0100 (Sat, 09 Feb 2008)
New Revision: 1033

Modified:
   trunk/src/GridObject.cc
   trunk/src/GridObject.hh
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/StateObject.cc
   trunk/src/StateObject.hh
   trunk/src/WorldProxy.cc
   trunk/src/WorldProxy.hh
   trunk/src/actors.cc
   trunk/src/actors.hh
   trunk/src/floors.cc
   trunk/src/floors.hh
   trunk/src/items.cc
   trunk/src/laser.cc
   trunk/src/lua.cc
   trunk/src/oxyd.cc
   trunk/src/st_switches.cc
   trunk/src/stones.cc
   trunk/src/stones/BlockerStone.cc
   trunk/src/stones/BoulderStone.cc
   trunk/src/stones/BoulderStone.hh
   trunk/src/stones/ClusterStone.cc
   trunk/src/stones/ClusterStone.hh
   trunk/src/stones/ConnectiveStone.hh
   trunk/src/stones/KeySwitch.cc
   trunk/src/stones/OxydStone.cc
   trunk/src/stones/OxydStone.hh
   trunk/src/stones/Switch.cc
   trunk/src/stones/Switch.hh
   trunk/src/stones/WindowStone.cc
   trunk/src/stones_complex.cc
   trunk/src/stones_internal.hh
   trunk/src/stones_simple.cc
   trunk/src/world.cc
Log:
Trunk 1.1: 
- finish up of switch from "get_attrib" to "getAttr" + "getAttrChecked"


Modified: trunk/src/GridObject.cc
===================================================================
--- trunk/src/GridObject.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/GridObject.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -112,7 +112,7 @@
         va_end(arg_ptr);
     }
     
-    void GridObject::set_attrib(const string& key, const Value &val) {
+    void GridObject::setAttr(const string& key, const Value &val) {
         if (key == "connections" || key == "faces") {
             int d = NODIRBIT;
             std::string vs(val);
@@ -121,15 +121,15 @@
             if (vs.find('s') != std::string::npos) d |= SOUTHBIT;
             if (vs.find('w') != std::string::npos) d |= WESTBIT;
             if (key == "faces") d ^= ALL_DIRECTIONS;
-            Object::set_attrib("$connections", d);
+            Object::setAttr("$connections", d);
             if (isDisplayable())
                 init_model();
         } else if (key == "$connections") {
-            Object::set_attrib("$connections", val);
+            Object::setAttr("$connections", val);
             if (isDisplayable())
                 init_model();
         } else
-            StateObject::set_attrib(key, val);
+            StateObject::setAttr(key, val);
     }
     
     Value GridObject::getAttr(const string &key) const {

Modified: trunk/src/GridObject.hh
===================================================================
--- trunk/src/GridObject.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/GridObject.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -45,7 +45,7 @@
         GridObject(const char * kind) : StateObject(kind), pos (GridPos(-1, -1)) {}
 
         // Object interface
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         virtual Value getAttr(const string &key) const;
 
         // StateObject interface

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/Object.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -95,7 +95,7 @@
     }
     
     Object::Object(const char *kind) {
-        set_attrib("kind", Value(kind));
+        setAttr("kind", Value(kind));
         id = getNextId(this, false);
     }
     
@@ -152,7 +152,7 @@
     
     
     
-    void Object::set_attrib(const string& key, const Value& val) {
+    void Object::setAttr(const std::string& key, const Value& val) {
         if (val) {        // only set non-default values
             if (val.getType() == Value::NIL && server::EnigmaCompatibility >= 1.10)
                 // delete attribute
@@ -169,10 +169,6 @@
             setAttr(key, val);
     }
     
-    void Object::setAttr(const std::string& key, const Value &val) {
-        set_attrib(key, val);
-    }
-    
     Value Object::getAttrChecked(const std::string &key) const {
         // allow all user attributes and those system attributes with read allowance
         if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeRead(this, key))
@@ -225,7 +221,7 @@
             // target and actions including their stated versions
             if ( it->first.find("_") == 0 || it->first.find("target") == 0
                     || it->first.find("action") == 0) {
-                target->set_attrib(it->first, it->second);
+                target->setAttr(it->first, it->second);
 //                Log << "Identity transfer key " << it->first << " - value " << it->second.to_string() << "\n";
             }
         }

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/Object.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -130,9 +130,7 @@
          * 
          */
         virtual Value message(const Message &m);
-        
-        virtual void set_attrib(const string &key, const Value &val);
-        
+                
         /**
          * Store the value information for the given key with prior checking of
          * write allowance. All level code attribute settings should pass this

Modified: trunk/src/StateObject.cc
===================================================================
--- trunk/src/StateObject.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/StateObject.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -55,13 +55,13 @@
         return Object::getAttr(key);
     }
     
-    void StateObject::set_attrib(const string& key, const Value &val) {
+    void StateObject::setAttr(const string& key, const Value &val) {
         if (key == "state") {
             if (val >= minState() && val <= maxState())
                 setState(val);
             return;
         }
-        Object::set_attrib(key, val);
+        Object::setAttr(key, val);
     }
     
     int StateObject::maxState() {

Modified: trunk/src/StateObject.hh
===================================================================
--- trunk/src/StateObject.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/StateObject.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -78,7 +78,7 @@
          * shall not interfere with this attribute but override the method
          * "setState()". New state values are checked against min and max. 
          */
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         
     protected:
         /**

Modified: trunk/src/WorldProxy.cc
===================================================================
--- trunk/src/WorldProxy.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/WorldProxy.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -88,7 +88,7 @@
         return Value(Value::DEFAULT);
     }  
 
-    void WorldProxy::set_attrib(const string& key, const Value &val) {
+    void WorldProxy::setAttr(const string& key, const Value &val) {
         if (key == "AllowSingleOxyds") {
             server::AllowSingleOxyds = val;
         } else if (key == "AllowTogglePlayer") {

Modified: trunk/src/WorldProxy.hh
===================================================================
--- trunk/src/WorldProxy.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/WorldProxy.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -28,7 +28,7 @@
         static WorldProxy *instance();
         static void shutdown();
         virtual Value getAttr(const string& key) const;
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         
     protected:
         WorldProxy();

Modified: trunk/src/actors.cc
===================================================================
--- trunk/src/actors.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/actors.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -100,7 +100,7 @@
   respawnpos(), use_respawnpos(false),
   spikes(false), controllers (0), left (NULL), right (NULL)
 {
-    set_attrib("mouseforce", 0.0);
+    setAttr("mouseforce", 0.0);
 
     // copy default properties to dynamic properties
     m_actorinfo.mass = tr.default_mass;
@@ -276,13 +276,13 @@
     return sound::EmitSoundEvent (name, get_pos(), getVolume(name, this, vol));
 }
 
-void Actor::set_attrib(const string& key, const Value &val)
+void Actor::setAttr(const string& key, const Value &val)
 {
     if (key == "controllers")
         controllers = to_int (val);
     else if (key == "mouseforce") 
         mouseforce = to_double (val);
-    Object::set_attrib (key, val);
+    Object::setAttr(key, val);
 }
 
 
@@ -293,7 +293,7 @@
     /*! The base class for rotors and spinning tops. */
     class RotorBase : public Actor {
     public:
-        void   set_attrib (const string& key, const Value &val);
+        void   setAttr (const string& key, const Value &val);
     protected:
         RotorBase(const ActorTraits &tr);
     private:
@@ -321,14 +321,14 @@
 RotorBase::RotorBase(const ActorTraits &tr)
 : Actor(tr), attackCurrentOnly(false), timeKeepAttackStrategy(0)
 {
-    set_attrib ("range", 5.0);
-    set_attrib ("force", 10.0);
-    set_attrib ("gohome", 1.0);
-    set_attrib ("attacknearest", 1.0);
-    set_attrib ("prefercurrent", 0.0);
+    setAttr("range", 5.0);
+    setAttr("force", 10.0);
+    setAttr("gohome", 1.0);
+    setAttr("attacknearest", 1.0);
+    setAttr("prefercurrent", 0.0);
 }
 
-void RotorBase::set_attrib(const string& key, const Value &val)
+void RotorBase::setAttr(const string& key, const Value &val)
 {
     if (key == "range")
         range = to_double(val);
@@ -340,7 +340,7 @@
         attacknearest = (to_int(val) != 0);
     else if (key == "prefercurrent") 
         prefercurrent = to_double(val);
-    Actor::set_attrib (key, val);
+    Actor::setAttr(key, val);
 }
 
 void RotorBase::think (double dtime)
@@ -495,7 +495,7 @@
   m_targetidx(-1),
   m_target()
 {
-    set_attrib("force", Value(10.0));
+    setAttr("force", Value(10.0));
 }
  
 void Horse::think (double /* dtime */) 
@@ -1176,10 +1176,10 @@
     public:
         BlackBall() : BasicBall(traits)
         {
-            set_attrib("mouseforce", Value(1.0));
-            set_attrib("color", Value(0.0));
-            set_attrib("player", Value(0.0));
-            set_attrib("controllers", Value(1.0));
+            setAttr("mouseforce", Value(1.0));
+            setAttr("color", Value(0.0));
+            setAttr("player", Value(0.0));
+            setAttr("controllers", Value(1.0));
         }
     };
 
@@ -1189,10 +1189,10 @@
     public:
         WhiteBall() : BasicBall(traits)
         {
-            set_attrib("mouseforce", Value(1.0));
-            set_attrib("color", Value(1.0));
-            set_attrib("player", Value(1.0));
-            set_attrib("controllers", Value(2.0));
+            setAttr("mouseforce", Value(1.0));
+            setAttr("color", Value(1.0));
+            setAttr("player", Value(1.0));
+            setAttr("controllers", Value(2.0));
         }
     };
 
@@ -1202,9 +1202,9 @@
     public:
         WhiteBall_Small() : BasicBall(traits)
         {
-            set_attrib("mouseforce", Value(1.0));
-            set_attrib("color", Value(1.0));
-            set_attrib("controllers", Value(3.0));
+            setAttr("mouseforce", Value(1.0));
+            setAttr("color", Value(1.0));
+            setAttr("controllers", Value(3.0));
             maxSinkDepth = 4;
         }
     };
@@ -1216,9 +1216,9 @@
 
         Killerball() : Actor (traits)
         {
-            set_attrib("mouseforce", Value(2.0));
-            set_attrib("color", Value(1.0));
-            set_attrib("controllers", Value(3.0));
+            setAttr("mouseforce", Value(2.0));
+            setAttr("color", Value(1.0));
+            setAttr("controllers", Value(3.0));
         }
         bool is_dead() const { return false; }
 

Modified: trunk/src/actors.hh
===================================================================
--- trunk/src/actors.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/actors.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -116,7 +116,7 @@
         /* ---------- Object interface ---------- */
         Actor *clone() = 0;
         virtual Value message(const Message &m);
-        void   set_attrib (const string& key, const Value &val);
+        void   setAttr(const string& key, const Value &val);
 
         /* ---------- Actor interface ---------- */
         virtual const ActorTraits &get_traits() const = 0;

Modified: trunk/src/floors.cc
===================================================================
--- trunk/src/floors.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/floors.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -85,7 +85,7 @@
         return ecl::V2();
 }
 
-void Floor::set_attrib (const string& key, const Value &val)
+void Floor::setAttr(const string& key, const Value &val)
 {
     if (key == "mousefactor")
         var_mousefactor = to_double(val);
@@ -95,7 +95,7 @@
         var_floorforce[0] = to_double(val);
     else if (key == "force_y")
         var_floorforce[1] = to_double(val);
-    Object::set_attrib (key, val);
+    Object::setAttr(key, val);
 }
 
 void Floor::get_sink_speed (double &sinkspeed, double &raisespeed) const {
@@ -280,7 +280,7 @@
                     if(has_firetype(flft_fastfire))
                         return force_fire();
                     else
-                        this->set_attrib("burnable", Value(1.0));
+                        this->setAttr("burnable", Value(1.0));
             }
         }
     }
@@ -598,7 +598,7 @@
         enum { MINTYPE=1, MAXTYPE=24 };
 
         // Object interface
-        virtual void set_attrib (const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
 
         // GridObject interface.
         virtual void init_model();
@@ -614,11 +614,11 @@
   use_forcefac (false),
   forcefac (1.0)
 {
-    set_attrib ("type", Value(type_));
-//    set_attrib ("force", Value(1.0));
+    setAttr("type", Value(type_));
+//    setAttr ("force", Value(1.0));
 }
 
-void Gradient::set_attrib (const string& key, const Value &val)
+void Gradient::setAttr(const string& key, const Value &val)
 {
     if (key == "type") {
         int t=to_int (val);
@@ -632,7 +632,7 @@
         use_forcefac = true;
         forcefac = to_double (val);
     }
-    Floor::set_attrib (key, val);
+    Floor::setAttr(key, val);
 }
 
 
@@ -731,7 +731,7 @@
 
 Bridge::Bridge(bool open) : Floor("fl-bridge", 5, 1)
 {
-    set_attrib("type", "a");
+    setAttr("type", "a");
     state=open ? OPEN : CLOSED;
 }
 

Modified: trunk/src/floors.hh
===================================================================
--- trunk/src/floors.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/floors.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -95,7 +95,7 @@
         Floor *clone();
         void dispose();
         virtual Value message(const Message &m);
-        virtual void set_attrib (const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
 
         // Floor interface
         virtual ecl::V2 process_mouseforce (Actor *a, ecl::V2 force);

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/items.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -180,7 +180,7 @@
     protected:
         OnOffItem (bool onoff = false)
         {
-            set_attrib("on", onoff);
+            setAttr("on", onoff);
         }
 
         bool is_on() const {
@@ -189,7 +189,7 @@
 
         void set_on (bool newon) {
             if (newon != is_on()) {
-                set_attrib("on", Value(newon));
+                setAttr("on", Value(newon));
                 init_model();
                 notify_onoff(newon);
             }
@@ -457,7 +457,7 @@
     	Key(SubType type = KEY1)
         : subtype(type)
         {
-            set_attrib("keycode", subtype+1);
+            setAttr("keycode", subtype+1);
         }
     };
 
@@ -563,7 +563,7 @@
 
     public:
         Coin1() {
-            set_attrib ("value", 3.0);
+            setAttr("value", 3.0);
         }
     };
     DEF_TRAITS(Coin1, "it-coin1", it_coin1);
@@ -583,7 +583,7 @@
 
     public:
         Coin2() {
-            set_attrib("value", 6.0);
+            setAttr("value", 6.0);
         }
     };
     DEF_TRAITS(Coin2, "it-coin2", it_coin2);
@@ -598,7 +598,7 @@
         }
     public:
         Coin4() {
-            set_attrib("value", 12.0);
+            setAttr("value", 12.0);
         }
     };
     DEF_TRAITS(Coin4, "it-coin4", it_coin4);
@@ -861,7 +861,7 @@
 }
 
 void Hollow::setup_successor(Item *newitem) {
-    newitem->set_attrib("essential", getAttr("essential"));
+    newitem->setAttr("essential", getAttr("essential"));
 }
 
 
@@ -1095,7 +1095,7 @@
         }
     public:
         Document() {
-            set_attrib("text", "");
+            setAttr("text", "");
         }
     };
     DEF_TRAITSF(Document, "it-document", it_document, itf_inflammable);
@@ -1362,7 +1362,7 @@
     DEF_TRAITSF(Trigger, "it_trigger", it_trigger, itf_static | itf_indestructible);
     
     Trigger::Trigger() {
-        set_attrib("invisible", false);
+        setAttr("invisible", false);
     }
     
     Value Trigger::message (const Message &m) {
@@ -1960,10 +1960,10 @@
 }
 
 Vortex::Vortex(bool open) : state(open ? OPEN : CLOSED) {
-    set_attrib("autoclose", !open);
-    set_attrib("$dest_idx", 0);
-    set_attrib("$dest_vortex", (Object *)NULL);
-    set_attrib("$grabbed_actor", (Object *)NULL);
+    setAttr("autoclose", !open);
+    setAttr("$dest_idx", 0);
+    setAttr("$dest_vortex", (Object *)NULL);
+    setAttr("$grabbed_actor", (Object *)NULL);
 }
 
 Vortex::~Vortex() {
@@ -1983,8 +1983,8 @@
 
 void Vortex::prepare_for_warp (Actor *actor) {
     SendMessage(actor, "fallvortex");
-    set_attrib("$dest_idx", 0);
-    set_attrib("$grabbed_actor", actor);
+    setAttr("$dest_idx", 0);
+    setAttr("$grabbed_actor", actor);
     state = SWALLOWING;
 
     GameTimer.set_alarm(this, 0.4, false);
@@ -2113,7 +2113,7 @@
     if (this != destVortex)
         performAction(getAttr("$grabbed_actor"));
 
-    set_attrib("$grabbed_actor", (Object *)NULL);
+    setAttr("$grabbed_actor", (Object *)NULL);
 }
 
 void Vortex::warp_to(const V2 &target) {
@@ -2131,7 +2131,7 @@
         close();
 
     performAction(getAttr("$grabbed_actor"));
-    set_attrib("$grabbed_actor", (Object *)NULL);
+    setAttr("$grabbed_actor", (Object *)NULL);
 }
 
 void Vortex::perform_warp() {
@@ -2155,7 +2155,7 @@
 
             if (st && !st->is_floating()) {
                 // is destination vortex blocked? redirect
-                set_attrib("$dest_idx", dest_idx + 1);
+                setAttr("$dest_idx", dest_idx + 1);
                 client::Msg_Sparkle(v_target);
                 WarpActor(actor, v_target[0], v_target[1], false);
                 GameTimer.set_alarm(this, 0.4, false);
@@ -2172,7 +2172,7 @@
                     case CLOSING:
                         // destination is closed
                         SendMessage(v, "open");
-                        set_attrib("$dest_vortex", v);
+                        setAttr("$dest_vortex", v);
                         state = EMITTING;
                         GameTimer.set_alarm(this, 0.4, false);
                         break;
@@ -2370,8 +2370,8 @@
         Crack(int type=0)
         : state(IDLE), anim_end(false)
             {
-                set_attrib("type", type);
-                set_attrib("fixed", 0.0);
+                setAttr("type", type);
+                setAttr("fixed", 0.0);
              }
 
         enum State { IDLE, CRACKING1, CRACKING2 } state;
@@ -2441,7 +2441,7 @@
             if (m.message == "crack" && state==IDLE && !is_fixed()) {
                 int type = get_type();
                 if ((type == 0 && do_crack()) || (type > 0)) {
-                    set_attrib("type", Value((int)getAttr("type") + 1));
+                    setAttr("type", Value((int)getAttr("type") + 1));
                     sound_event ("crack");
                     init_model();
                 return Value();
@@ -2593,11 +2593,11 @@
 
     private:
         Extinguisher (int load) {
-    	    set_attrib("load", load);
+    	    setAttr("load", load);
         }
 
         int get_load() const { return ecl::Clamp<int>(getAttr("load"),0,2); }
-        void set_load (int load) { set_attrib("load", ecl::Clamp<int>(load,0,2)); }
+        void set_load (int load) { setAttr("load", ecl::Clamp<int>(load,0,2)); }
 
         void extinguish (GridPos p) {
             if (Item *it = GetItem(p)) {
@@ -2914,7 +2914,7 @@
         SetStone(get_pos(), st);
         transferIdentity(st);
         if (Value v = getAttr("autoclose"))
-            st->set_attrib("autoclose", v); 
+            st->setAttr("autoclose", v); 
         SendMessage(st, "_performaction");
         kill();
     }
@@ -3009,9 +3009,9 @@
         
         virtual Value message(const Message &m) {
             if (m.message == "hit") {   // door knocking forward to black/whitballstone
-                set_attrib("$hitactor", m.value);
+                setAttr("$hitactor", m.value);
                 performAction(true);
-                set_attrib("$hitactor", (Object *)NULL);
+                setAttr("$hitactor", (Object *)NULL);
                 return Value();
             } else if (m.message == "_hitactor") {
                 return getAttr("$hitactor");
@@ -3658,18 +3658,18 @@
                 // Kill ALL rubberbands connected with the actor:
                 KillRubberBands (a);
                 Actor *rotor = MakeActor (ac_rotor);
-                rotor->set_attrib ("mouseforce", Value (1.0));
-                rotor->set_attrib ("controllers", Value (iplayer+1));
-                rotor->set_attrib ("player", Value (iplayer));
-                rotor->set_attrib ("gohome", Value (0.0));
-                rotor->set_attrib ("essential", a->getAttr("essential"));
+                rotor->setAttr("mouseforce", Value (1.0));
+                rotor->setAttr("controllers", Value (iplayer+1));
+                rotor->setAttr("player", Value (iplayer));
+                rotor->setAttr("gohome", Value (0.0));
+                rotor->setAttr("essential", a->getAttr("essential"));
                 std::string essId;
                 if (Value v = a->getAttr("essential_id")) {
                     essId = v.to_string();
                 } else {
                     essId = a->get_traits().name;
                 }
-                rotor->set_attrib ("essential_id", Value(essId));
+                rotor->setAttr("essential_id", Value(essId));
 
                 replace_actor (a, rotor);
 

Modified: trunk/src/laser.cc
===================================================================
--- trunk/src/laser.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/laser.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -392,7 +392,7 @@
 LaserStone::LaserStone (Direction dir)
 : OnOffStone("st-laser")
 {
-    set_attrib("dir", Value(dir));
+    setAttr("dir", Value(dir));
 }
 
 DirectionBits
@@ -451,7 +451,7 @@
 
         bool is_transparent() const { return getAttr("transparent") != 0; }
 
-        void set_orientation(int o) { set_attrib("orientation", o); }
+        void set_orientation(int o) { setAttr("orientation", o); }
         int get_orientation() { return getAttr("orientation"); }
 
         void emit_light(Direction dir) {
@@ -463,7 +463,7 @@
         }
 
         void init_model();
-        void set_attrib(const string& key, const Value &val);
+        void setAttr(const string& key, const Value &val);
 
     private:
 
@@ -500,15 +500,15 @@
 MirrorStone::MirrorStone(const char *name, bool movable, bool transparent)
 : Stone(name), outdirs(NODIRBIT)
 {
-    set_attrib("transparent", transparent);
-    set_attrib("movable", movable);
-    set_attrib("orientation", Value(1));
+    setAttr("transparent", transparent);
+    setAttr("movable", movable);
+    setAttr("orientation", Value(1));
     traits.name = "st-mirror";
     traits.id = st_INVALID;
     traits.flags = stf_none;
     traits.material = material_stone;
     traits.restitution = 1.0;
-    //traits.movable is already set via set_attrib("movable", ...);
+    //traits.movable is already set via setAttr("movable", ...);
 }
 
 void MirrorStone::init_model() {
@@ -584,8 +584,8 @@
     sound_event ("mirrorturn");
 }
 
-void MirrorStone::set_attrib(const string& key, const Value &val) {
-    Stone::set_attrib(key, val);
+void MirrorStone::setAttr(const string& key, const Value &val) {
+    Stone::setAttr(key, val);
     if (key == "movable")
         traits.movable = to_bool(val) ? MOVABLE_STANDARD : MOVABLE_PERSISTENT;
 }

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/lua.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -1877,7 +1877,7 @@
         std::string name = lua_tostring(L, 2);
         // TODO check string
         
-        WorldProxy::instance()->set_attrib(name, to_value(L, 3));
+        WorldProxy::instance()->setAttr(name, to_value(L, 3));
         return 0;
     } else if ((is_object(L, 2) || is_position(L, 2) || is_table(L, 2) || is_group(L, 2)) && 
             ((is_table(L, 3)) || is_tile(L, 3))) {

Modified: trunk/src/oxyd.cc
===================================================================
--- trunk/src/oxyd.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/oxyd.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -271,7 +271,7 @@
         string lasername("st-laser");
         lasername += to_suffix(dir);
         st         = MakeStone(lasername.c_str());
-        st->set_attrib("on", Value(on)); // OnOffStone attribute
+        st->setAttr("on", Value(on)); // OnOffStone attribute
     }
     return st;
 }
@@ -280,15 +280,15 @@
 {
     const OscillatorMap &oscillators = level.getOscillators(config.gamemode);
     Stone *st = MakeStone ("st-timer");
-    st->set_attrib("interval", Value(0.2));
+    st->setAttr("interval", Value(0.2));
 
     Block block(x, y);
     OscillatorMap::const_iterator i = oscillators.find(block);
     if (i != oscillators.end()) {
         const Oscillator &o = i->second;
-        st->set_attrib("on", Value(o.getOn()));
+        st->setAttr("on", Value(o.getOn()));
         double interval = (1 + o.getPeriod()) * config.timer_factor;
-        st->set_attrib("interval", Value(interval));
+        st->setAttr("interval", Value(interval));
     }
     return st;
 }
@@ -306,8 +306,8 @@
         color[0] += (type-1) / 2; 
 
         st = MakeStone("st_oxyd");
-        st->set_attrib("oxydcolor", color);
-        st->set_attrib("flavor", config.oxyd_flavor);
+        st->setAttr("oxydcolor", color);
+        st->setAttr("flavor", config.oxyd_flavor);
     }
     else if (type == config.id_timer) {
         st = make_timer (x, y);
@@ -321,7 +321,7 @@
         if (name == 0) {
             Log << ecl::strf("Unknown stone %X\n", type);
             st = MakeStone ("st-dummy");
-            st->set_attrib("code", type);
+            st->setAttr("code", type);
         }
         else if (name[0] != '\0') { // ignore if name==""
             st = MakeStone (name);
@@ -378,14 +378,14 @@
 	{
 	    it = MakeItem (it_document);
 	    string text = convert_encoding(level.getNoteText(0, lang));
-	    it->set_attrib ("text", text.c_str());
+	    it->setAttr ("text", text.c_str());
 	}
         break;
     case 0x03:                  // note 2
 	{
 	    it = MakeItem (it_document);
 	    string text = convert_encoding(level.getNoteText(1, lang));
-	    it->set_attrib ("text", text.c_str());
+	    it->setAttr ("text", text.c_str());
 	}
 	break;
     default:
@@ -394,7 +394,7 @@
             if (id == it_INVALID) {
                 Log << ecl::strf ("Unknown item %X\n",type);
                 it = MakeItem (it_dummy);
-                it->set_attrib("code", type);
+                it->setAttr("code", type);
             }
             else
                 it = MakeItem (id);
@@ -417,7 +417,7 @@
             if( name == 0) {
                 Log << ecl::strf ("Unknown floor %X\n",code);
                 fl = MakeFloor("fl-dummy");
-                fl->set_attrib("code", code);
+                fl->setAttr("code", code);
             }
             else {
                 fl = MakeFloor(name);
@@ -487,47 +487,47 @@
         switch (marble.getMarbleType()) {
         case MarbleType_Black:
             ac = MakeActor (ac_blackball);
-            ac->set_attrib ("player", Value(0.0));
+            ac->setAttr ("player", Value(0.0));
             break;
         case MarbleType_White:
             ac = MakeActor (ac_whiteball);
-            ac->set_attrib ("player", Value(1.0));
+            ac->setAttr ("player", Value(1.0));
             break;
         case MarbleType_Meditation:
             if (have_black_marble && !level.getHarmlessMeditationMarbles()) {
                 // # example: Oxyd Extra #28
                 ac = MakeActor (ac_killerball);
-//                ac->set_attrib ("player", Value(0.0));
-                ac->set_attrib ("mouseforce", Value (1.0));
-                ac->set_attrib ("controllers", Value (3.0));
+//                ac->setAttr ("player", Value(0.0));
+                ac->setAttr ("mouseforce", Value (1.0));
+                ac->setAttr ("controllers", Value (3.0));
             }
             else {
                 ac = MakeActor (ac_meditation);
                 nmeditationmarbles += 1;
 
                 if (config.twoplayers && (nmeditationmarbles % 2) == 0)
-                    ac->set_attrib("player", Value(1.0));
+                    ac->setAttr("player", Value(1.0));
                 else
-                    ac->set_attrib ("player", Value(0.0));
+                    ac->setAttr ("player", Value(0.0));
             }
 
             if (minfo.is_default(MI_FORCE)) {
-                ac->set_attrib("mouseforce", Value(1.0));
+                ac->setAttr("mouseforce", Value(1.0));
             }
             else {
-                ac->set_attrib("mouseforce", Value(minfo.get_value(MI_FORCE) / 32.0)); // just a guess
+                ac->setAttr("mouseforce", Value(minfo.get_value(MI_FORCE) / 32.0)); // just a guess
             }
             break;
         case MarbleType_Jack:
             ac = MakeActor (ac_top);
             if (!minfo.is_default(MI_FORCE)) {
                 double force = minfo.get_value(MI_FORCE) / 4; // just a guess
-                ac->set_attrib("force", Value(force) );
+                ac->setAttr("force", Value(force) );
                 enigma::Log << "Set jack force to " << force << endl;
             }
             if (!minfo.is_default(MI_RANGE)) {
                 double range = minfo.get_value(MI_RANGE) / 32.0; // value seems to contain distance in pixels
-                ac->set_attrib("range", Value(range) );
+                ac->setAttr("range", Value(range) );
                 enigma::Log << "Set jack range to " << range << endl;
             }
             break;
@@ -539,9 +539,9 @@
             double range = minfo.get_value (MI_RANGE, 100) / 32.0;
             int gohome = minfo.get_value (MI_GOHOME, 1);
 
-            ac->set_attrib ("force", force);
-            ac->set_attrib ("range", range);
-            ac->set_attrib ("gohome", Value (gohome));
+            ac->setAttr ("force", force);
+            ac->setAttr ("range", range);
+            ac->setAttr ("gohome", Value (gohome));
 
             enigma::Log << "rotor force " << force << endl;
             enigma::Log << "rotor range " << range << endl;
@@ -554,25 +554,25 @@
             int levelw = level.getWidth();
             if (!minfo.is_default(MI_HORSETARGET1)) {
                 int targetpos = minfo.get_value(MI_HORSETARGET1);
-                ac->set_attrib("target1", ecl::strf("%d %d", 
+                ac->setAttr("target1", ecl::strf("%d %d", 
                                                    targetpos % levelw, 
                                                    int(targetpos / levelw)));
             }
             if (!minfo.is_default(MI_HORSETARGET2)) {
                 int targetpos = minfo.get_value(MI_HORSETARGET2);
-                ac->set_attrib("target2", ecl::strf("%d %d", 
+                ac->setAttr("target2", ecl::strf("%d %d", 
                                                    targetpos % levelw, 
                                                    int(targetpos / levelw)));
             }
             if (!minfo.is_default(MI_HORSETARGET3)) {
                 int targetpos = minfo.get_value(MI_HORSETARGET3);
-                ac->set_attrib("target3", ecl::strf("%d %d", 
+                ac->setAttr("target3", ecl::strf("%d %d", 
                                                    targetpos % levelw, 
                                                    int(targetpos / levelw)));
             }
             if (!minfo.is_default(MI_HORSETARGET4)) {
                 int targetpos = minfo.get_value(MI_HORSETARGET4);
-                ac->set_attrib("target4", ecl::strf("%d %d", 
+                ac->setAttr("target4", ecl::strf("%d %d", 
                                                    targetpos % levelw, 
                                                    int(targetpos / levelw)));
             }

Modified: trunk/src/st_switches.cc
===================================================================
--- trunk/src/st_switches.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/st_switches.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -195,7 +195,7 @@
 LaserTimeSwitch::LaserTimeSwitch(const char *kind)
     : LaserTimeSwitchBase(kind)
 {
-    set_attrib("delay", 1.8);
+    setAttr("delay", 1.8);
 }
 
 const char *LaserTimeSwitch::get_active_model() const { 

Modified: trunk/src/stones/BlockerStone.cc
===================================================================
--- trunk/src/stones/BlockerStone.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/BlockerStone.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -94,7 +94,7 @@
                 SetItem(get_pos(), it);
                 transferIdentity(it);
                 if (Value v = getAttr("autoclose"))
-                    it->set_attrib("autoclose", v); 
+                    it->setAttr("autoclose", v); 
                 SendMessage(it, "_performaction");
                 KillStone(get_pos());
                 break;
@@ -141,7 +141,7 @@
                 state = newState;
                 init_model();
                 if (newState == SOLID) {
-                    Object::set_attrib("kind", "st_blocker");
+                    Object::setAttr("kind", "st_blocker");
                 }
             }
         }

Modified: trunk/src/stones/BoulderStone.cc
===================================================================
--- trunk/src/stones/BoulderStone.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/BoulderStone.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -27,18 +27,18 @@
     BoulderStone::BoulderStone(Direction dir) {
         state = INIT;
         // do not use set_dir, because this will set the state to ACTIVE
-        Object::set_attrib("direction", dir);
+        Object::setAttr("direction", dir);
     }
     
-    void BoulderStone::set_attrib(const string& key, const Value &val) {
+    void BoulderStone::setAttr(const string& key, const Value &val) {
         if (key == "direction") {
             if (isDisplayable())
                 setDir(to_direction(val));
             else
-                Object::set_attrib(key, val);
+                Object::setAttr(key, val);
             return;
         }
-        PhotoStone::set_attrib(key, val);
+        PhotoStone::setAttr(key, val);
     }
 
     Value BoulderStone::message(const Message &m) {
@@ -150,7 +150,7 @@
     
     void BoulderStone::setDir(Direction d) {
         if (d != getDir() && (state != FALLING)) {
-            Object::set_attrib("direction", d);
+            Object::setAttr("direction", d);
             state = ACTIVE;   // if turned by it-magicwand -> allow triggering
             triggerObstacle(getDir(), true);
             init_model();

Modified: trunk/src/stones/BoulderStone.hh
===================================================================
--- trunk/src/stones/BoulderStone.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/BoulderStone.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -44,7 +44,7 @@
         BoulderStone(Direction dir = NORTH);
         
         // Object interface
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         virtual Value message(const Message &m);
         
         // StateObject interface

Modified: trunk/src/stones/ClusterStone.cc
===================================================================
--- trunk/src/stones/ClusterStone.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/ClusterStone.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -22,19 +22,19 @@
 
 namespace enigma {
     ClusterStone::ClusterStone(std::string classname, std::string connections) : Stone(classname.c_str()) {
-        set_attrib("connections", connections);
+        setAttr("connections", connections);
     }
     
-    void ClusterStone::set_attrib(const string& key, const Value &val) {
+    void ClusterStone::setAttr(const string& key, const Value &val) {
         if (key == "connections" || key == "faces" || key == "cluster") {
-            Stone::set_attrib(key, val);
+            Stone::setAttr(key, val);
             if (isDisplayable()) {
                 autoLeaveCluster();
                 autoJoinCluster();
             }
             return;
         }
-        Stone::set_attrib(key, val);
+        Stone::setAttr(key, val);
     }
     
     Value ClusterStone::message(const Message &m) {
@@ -68,21 +68,21 @@
                 Value neighbourCluster = neighbour->getAttr("cluster");
                 if (myCluster) {
                     if (myCluster == neighbourCluster) {
-                        set_attrib("$connections", getConnections() | to_bits(d));
-                        neighbour->set_attrib("$connections", neighbour->getConnections() | to_bits(reverse(d)));
+                        setAttr("$connections", getConnections() | to_bits(d));
+                        neighbour->setAttr("$connections", neighbour->getConnections() | to_bits(reverse(d)));
                     } else if (!neighbourCluster && neighbour->getConnections() & to_bits(reverse(d))) {
-                        set_attrib("$connections", getConnections() | to_bits(d));
+                        setAttr("$connections", getConnections() | to_bits(d));
                     } else {
-                        set_attrib("$connections", getConnections() & (ALL_DIRECTIONS ^ to_bits(d))); // clear connection
+                        setAttr("$connections", getConnections() & (ALL_DIRECTIONS ^ to_bits(d))); // clear connection
                     }
                 } else if (neighbourCluster)  {// I have fixed connections -> adapt neighbour
                     if (getConnections() & to_bits(d))
-                        neighbour->set_attrib("$connections", neighbour->getConnections() | to_bits(reverse(d)));
+                        neighbour->setAttr("$connections", neighbour->getConnections() | to_bits(reverse(d)));
                     else
-                        neighbour->set_attrib("$connections", neighbour->getConnections() & (ALL_DIRECTIONS ^ to_bits(reverse(d))));
+                        neighbour->setAttr("$connections", neighbour->getConnections() & (ALL_DIRECTIONS ^ to_bits(reverse(d))));
                 }
             } else if (myCluster) { // no neighbour -> no connection
-                set_attrib("$connections", getConnections() & (ALL_DIRECTIONS ^ to_bits(d))); // clear connection
+                setAttr("$connections", getConnections() & (ALL_DIRECTIONS ^ to_bits(d))); // clear connection
             }
         }
     }
@@ -94,7 +94,7 @@
             Stone *neighbour = GetStone(move(p, d));
             if (neighbour != NULL && std::string(neighbour->get_kind()) == get_kind() 
                     && neighbour->getAttr("cluster")) {
-                neighbour->set_attrib("$connections", neighbour->getConnections() & (ALL_DIRECTIONS ^ to_bits(reverse(d))));
+                neighbour->setAttr("$connections", neighbour->getConnections() & (ALL_DIRECTIONS ^ to_bits(reverse(d))));
             }
         }
     }

Modified: trunk/src/stones/ClusterStone.hh
===================================================================
--- trunk/src/stones/ClusterStone.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/ClusterStone.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -34,7 +34,7 @@
         ClusterStone(std::string classname, std::string connections);
         
         // Object interface
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         virtual Value message(const Message &m);
         // GridObject interface
         virtual void on_creation(GridPos p);

Modified: trunk/src/stones/ConnectiveStone.hh
===================================================================
--- trunk/src/stones/ConnectiveStone.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/ConnectiveStone.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -31,10 +31,10 @@
     class ConnectiveStone : public Stone {
     public:
         ConnectiveStone(const char *kind, int connections): Stone(kind) {
-            set_attrib("connections", connections);
+            setAttr("connections", connections);
         }
         ConnectiveStone(int connections) {
-            set_attrib("connections", connections);
+            setAttr("connections", connections);
         }
 
         DirectionBits get_connections() const {
@@ -46,11 +46,11 @@
         }
 
         // temp. workarounds until this class gets eliminated
-        virtual void set_attrib(const string& key, const Value &val) {
+        virtual void setAttr(const string& key, const Value &val) {
             if (key == "connections")
-                Object::set_attrib(key, val);  // bypass GridObject
+                Object::setAttr(key, val);  // bypass GridObject
             else
-                Stone::set_attrib(key, val);
+                Stone::setAttr(key, val);
         }
         
         virtual Value getAttr(const string &key) const {

Modified: trunk/src/stones/KeySwitch.cc
===================================================================
--- trunk/src/stones/KeySwitch.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/KeySwitch.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -26,7 +26,7 @@
 
 namespace enigma {
     KeySwitch::KeySwitch() : Stone () {
-        set_attrib("keycode", Value(1));
+        setAttr("keycode", Value(1));
     }
 
     void KeySwitch::setState(int extState) {
@@ -61,7 +61,7 @@
             if (state == ON) {
                 if (!inv->is_full()) {
                     Item *key = MakeItem("it-key");
-                    key->set_attrib ("keycode", getAttr("keycode"));
+                    key->setAttr("keycode", getAttr("keycode"));
                     inv->add_item(key);
                     toggle = true;
                 }

Modified: trunk/src/stones/OxydStone.cc
===================================================================
--- trunk/src/stones/OxydStone.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/OxydStone.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -151,7 +151,7 @@
         for (int i = 0; i < numColors; i++) {
             if (colorsUsageCount[i] % 2 == 1) {
                 if (autocoloredOxyds.size() > 0) {
-                    autocoloredOxyds.back()->set_attrib("oxydcolor", i);
+                    autocoloredOxyds.back()->setAttr("oxydcolor", i);
                     autocoloredOxyds.pop_back();
                     colorsUsageCount[i]++;
                 } else if (onlyPairs) {
@@ -176,7 +176,7 @@
             if (colorsUsageCount[c] <= 2*(dc/2/numColors) + 1) {
                 lastColor = c;
                 lastObject = autocoloredOxyds.back();
-                lastObject->set_attrib("oxydcolor", c);
+                lastObject->setAttr("oxydcolor", c);
                 autocoloredOxyds.pop_back();
                 colorsUsageCount[c]++;
             }
@@ -184,7 +184,7 @@
         }
         // substitute odd oxyd with a fake one
         if (!onlyPairs && lastObject != NULL) {
-            lastObject->set_attrib("oxydcolor", FAKE);
+            lastObject->setAttr("oxydcolor", FAKE);
             colorsUsageCount[lastColor]--;
             shuffledFakeCount++;
         } else {
@@ -234,8 +234,8 @@
     
                 Value icolor = o1->getAttr("oxydcolor"); 
     
-                o1->set_attrib("oxydcolor", o2->getAttr("oxydcolor"));
-                o2->set_attrib("oxydcolor", icolor);
+                o1->setAttr("oxydcolor", o2->getAttr("oxydcolor"));
+                o2->setAttr("oxydcolor", icolor);
             }
         }
     }
@@ -676,13 +676,13 @@
                     int i = IntegerRand(1, remainFakeCount + remainFartCount + remainBoldCount);  // use enigma's internal rand!
                     if (i <= remainFakeCount) {
                         remainFakeCount--;
-                        oxyd->set_attrib("oxydcolor", FAKE);
+                        oxyd->setAttr("oxydcolor", FAKE);
                     } else if ( i <= remainFakeCount + remainFartCount) {
                         remainFartCount--;
-                        oxyd->set_attrib("oxydcolor", FART);
+                        oxyd->setAttr("oxydcolor", FART);
                     } else {
                         remainBoldCount--;
-                        oxyd->set_attrib("oxydcolor", BOLD);
+                        oxyd->setAttr("oxydcolor", BOLD);
                     }
                     (*itr).isColored = true;
                 } else {
@@ -700,13 +700,13 @@
                     else if (to_bool(oxyd1->getAttr("noshuffle")) || oxyd1->state != CLOSED) {
                         // a standard oxyd (pseudo is impossible) that requires a color
                         c = oxyd1->getAttr("oxydcolor");
-                        oxyd2->set_attrib("oxydcolor", c);
+                        oxyd2->setAttr("oxydcolor", c);
                         colorsRemainCount[c] -= 2;
                         (*itr).isColored = true;
                     }
                     else if (to_bool(oxyd2->getAttr("noshuffle")) || oxyd2->state != CLOSED) {
                         c = oxyd2->getAttr("oxydcolor");
-                        oxyd1->set_attrib("oxydcolor", c);
+                        oxyd1->setAttr("oxydcolor", c);
                         colorsRemainCount[c] -= 2;
                         (*itr).isColored = true;
                     }
@@ -733,8 +733,8 @@
         int ci = 0;
         for (std::list<ShuffleFrame>::iterator itr = shuffleStack.begin(); itr != shuffleStack.end(); ++itr) {
             if (!(*itr).isColored && (*itr).selOxyd1Mask != 0) {
-                levelOxyds[oxydId((*itr).selOxyd1Mask)]->set_attrib("oxydcolor", colorPairs[ci]);
-                levelOxyds[oxydId((*itr).selOxyd2Mask)]->set_attrib("oxydcolor", colorPairs[ci]);
+                levelOxyds[oxydId((*itr).selOxyd1Mask)]->setAttr("oxydcolor", colorPairs[ci]);
+                levelOxyds[oxydId((*itr).selOxyd2Mask)]->setAttr("oxydcolor", colorPairs[ci]);
                 ci++;
             }
         }
@@ -837,8 +837,8 @@
     // Instance Methods
     
     OxydStone::OxydStone(std::string flavor) : PhotoStone("st_oxyd") {
-        set_attrib("flavor", flavor);
-        set_attrib("oxydcolor", AUTO);
+        setAttr("flavor", flavor);
+        setAttr("oxydcolor", AUTO);
     }
     
     OxydStone * OxydStone::clone() { 
@@ -874,14 +874,14 @@
         return PhotoStone::message(m);
     }
     
-    void OxydStone::set_attrib(const string& key, const Value &val) {
+    void OxydStone::setAttr(const string& key, const Value &val) {
         if (key == "oxydcolor") 
             ASSERT(state == CLOSED, XLevelRuntime, "OxydStone error - recoloring of an not closed stone");
         else if (key == "flavor") {
             ASSERT(state == CLOSED, XLevelRuntime, "OxydStone error - reflavoring of an not closed stone");
         }
         
-        PhotoStone::set_attrib(key, val);   // do value checking
+        PhotoStone::setAttr(key, val);   // do value checking
         
         if (key == "flavor" && IsInsideLevel(get_pos()))
             set_model(string("st-oxyd")+(std::string)val);

Modified: trunk/src/stones/OxydStone.hh
===================================================================
--- trunk/src/stones/OxydStone.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/OxydStone.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -84,7 +84,7 @@
         virtual OxydStone * clone();
         virtual void dispose();
         virtual Value message(const Message &m);
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
 
         // StateObject interface
         virtual int maxState();

Modified: trunk/src/stones/Switch.cc
===================================================================
--- trunk/src/stones/Switch.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/Switch.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -25,9 +25,9 @@
 namespace enigma {
     Switch::Switch(Value color, bool instant) : Stone () {
         if (color.getType() != Value::NIL)
-            set_attrib("color", color);
+            setAttr("color", color);
         if (instant)
-            set_attrib("instant", true);
+            setAttr("instant", true);
         state = OFF;
     }
 
@@ -35,14 +35,14 @@
         return "st_switch";
     }
     
-    void Switch::set_attrib(const string& key, const Value &val) {
+    void Switch::setAttr(const string& key, const Value &val) {
         if (isDisplayable())
             if (key == "color" && state <= ON) {   // recoloring of a switch
-                Stone::set_attrib(key, val);
+                Stone::setAttr(key, val);
                 init_model();
                 return;
             }
-        Stone::set_attrib(key, val);
+        Stone::setAttr(key, val);
     }
     
     Value Switch::message(const Message &m) {

Modified: trunk/src/stones/Switch.hh
===================================================================
--- trunk/src/stones/Switch.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/Switch.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -51,7 +51,7 @@
         
         // Object interface
         virtual std::string getClass() const;
-        virtual void set_attrib(const string& key, const Value &val);
+        virtual void setAttr(const string& key, const Value &val);
         virtual Value message(const Message &m);
         
         // StateObject interface

Modified: trunk/src/stones/WindowStone.cc
===================================================================
--- trunk/src/stones/WindowStone.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones/WindowStone.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -25,7 +25,7 @@
 
 namespace enigma {
     WindowStone::WindowStone(std::string faces) : Stone(), breakingFaces(NODIRBIT) {
-        set_attrib("faces", faces);
+        setAttr("faces", faces);
     }
     
     Value WindowStone::message(const Message &m) {
@@ -55,7 +55,7 @@
 
             else if (impulse > 20) {
                 DirectionBits remainigFaces = (DirectionBits)(getFaces() & ~sc.faces);  // remove breaking face
-                Object::set_attrib("$connections", ALL_DIRECTIONS ^ remainigFaces);     // avoid init of model
+                Object::setAttr("$connections", ALL_DIRECTIONS ^ remainigFaces);     // avoid init of model
                 sound_event ("shatter");
                 state = (remainigFaces == NODIRBIT) ? FINALBREAK : BREAK;
                 set_anim("st_window_anim");  // TODO anim with remaining unbroken faces
@@ -101,7 +101,7 @@
                     !has_dir(stone->getFaces(), reverse(dir)))) {
                 DirectionBits remainigFaces = (DirectionBits)((faces & ~to_bits(reverse(dir)))
                         |to_bits(dir));  // move face
-                Object::set_attrib("$connections", ALL_DIRECTIONS ^ remainigFaces);     // avoid init of model
+                Object::setAttr("$connections", ALL_DIRECTIONS ^ remainigFaces);     // avoid init of model
                 init_model();
                 return true;
             }

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -360,7 +360,7 @@
         ChargeStone(const char *kind, double charge)
         : Stone(kind)
         {
-            set_attrib("charge", charge);
+            setAttr("charge", charge);
         }
         virtual Value message(const Message &m) {
             if (server::GameCompatibility == enigma::GAMET_PEROXYD && m.message == "signal") {

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones_complex.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -363,7 +363,7 @@
             return to_direction(getAttr("orientation"));
         }
         void set_orientation(Direction dir) {
-            set_attrib("orientation", Value(dir));
+            setAttr("orientation", Value(dir));
         }
 
         virtual bool actor_may_pass (Actor *a) = 0;
@@ -737,7 +737,7 @@
   state (IDLE), 
   illumination (NODIRBIT)
 {
-    set_attrib("oxyd", int(oxyd1_compatible_));
+    setAttr("oxyd", int(oxyd1_compatible_));
 }
 
 
@@ -972,10 +972,10 @@
         int cn = GetStone(c[size-1])->getAttr("connections");
         for (size_t i=size-1; i>0; --i) {
             PuzzleStone *st = dynamic_cast<PuzzleStone*> (GetStone (c[i]));
-            st->set_attrib ("connections", GetStone(c[i-1])->getAttr("connections"));
+            st->setAttr("connections", GetStone(c[i-1])->getAttr("connections"));
             st->init_model();
         }
-        GetStone(c[0])->set_attrib ("connections", cn);
+        GetStone(c[0])->setAttr("connections", cn);
         dynamic_cast<PuzzleStone*> (GetStone(c[0]))->init_model();
     }
 }
@@ -1395,7 +1395,7 @@
         Door(const char *type="h", bool open=false)
         : DoorBase("st-door", open ? OPEN : CLOSED)
         {
-            set_attrib("type", type);
+            setAttr("type", type);
         }
     private:
         virtual string opening_sound() const { return "dooropen"; }
@@ -1498,7 +1498,7 @@
 
         enum Holes { SMALL = 1, MEDIUM = 2, LARGE = 4};
         static Holes smallest_hole(Holes s);
-        void set_holes(Holes h) { set_attrib("holes", h); }
+        void set_holes(Holes h) { setAttr("holes", h); }
 
     public:
         ShogunStone(int holes=SMALL) {
@@ -1517,7 +1517,7 @@
         }
 
         void add_hole(Holes h) {
-            set_attrib("holes", get_holes() | h);
+            setAttr("holes", get_holes() | h);
             init_model();
             notify_item();
         }
@@ -2470,7 +2470,7 @@
     public:
         ChessStone (int color) {
             newcolor = color;
-            Stone::set_attrib("color", color);
+            Stone::setAttr("color", color);
             destination = GridPos(0,0);
             capture_retry = 0;
             rememberFalling = false;
@@ -2482,7 +2482,7 @@
         }
         void init_model();
         void animcb();
-        void set_attrib(const string& key, const Value &val);
+        void setAttr(const string& key, const Value &val);
         virtual Value message(const Message &m);
         void actor_hit(const StoneContact &sc);
         void on_impulse(const Impulse& impulse) {}
@@ -2714,11 +2714,11 @@
         return state == newstate;
     }
 
-    void ChessStone::set_attrib(const string& key, const Value &val) {
+    void ChessStone::setAttr(const string& key, const Value &val) {
         if(key == "color") {
             set_color(to_int(val));
         } else
-            Stone::set_attrib(key, val);
+            Stone::setAttr(key, val);
     }
 
     void ChessStone::set_color(int color) {
@@ -2726,7 +2726,7 @@
             ASSERT(0, XLevelRuntime, "ChessStone: argument to color not 0 or 1");
         }
         if(state == IDLE) {
-            Stone::set_attrib("color", color);
+            Stone::setAttr("color", color);
             newcolor = color;
             init_model();
         } else {

Modified: trunk/src/stones_internal.hh
===================================================================
--- trunk/src/stones_internal.hh	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones_internal.hh	2008-02-09 18:41:37 UTC (rev 1033)
@@ -85,7 +85,7 @@
         OnOffStone(const char *kind) 
         : Stone (kind) 
         { 
-            set_attrib("on", 0.0); 
+            setAttr("on", 0.0); 
         }
 
         bool is_on() const { 
@@ -94,7 +94,7 @@
 
         virtual void set_on(bool newon) {
             if (newon != is_on()) {
-                set_attrib("on", enigma::Value(newon));
+                setAttr("on", enigma::Value(newon));
                 init_model();
                 notify_onoff(newon);
             }

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/stones_simple.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -1218,8 +1218,8 @@
         }
     public:
         RubberBandStone () {
-            set_attrib("length", 1.0);
-            set_attrib("strength", 10.0);
+            setAttr("length", 1.0);
+            setAttr("strength", 10.0);
         }
     };
     DEF_TRAITSM(RubberBandStone, "st-rubberband", st_rubberband, MOVABLE_STANDARD);
@@ -1268,10 +1268,10 @@
         CLONEOBJ(TimerStone);
     public:
         TimerStone() : OnOffStone("st-timer"), m_signalvalue(1) {
-            set_attrib("interval", 1.0);
-            set_attrib("loop", true);
-            set_attrib("on", 1.0);
-            set_attrib("invisible", false);
+            setAttr("interval", 1.0);
+            setAttr("loop", true);
+            setAttr("on", 1.0);
+            setAttr("invisible", false);
 
             // set_on(true);   DOESN'T WORK! calls init_model()
         }
@@ -1546,7 +1546,7 @@
     class ActorImpulseBase : public Stone {
     public:
         ActorImpulseBase(const char *kind) : Stone(kind), state(IDLE) {
-//             set_attrib("force", Value());
+//             setAttr("force", Value());
         }
 
     protected:
@@ -1662,7 +1662,7 @@
         CLONEOBJ(FakeOxydStone);
     public:
         FakeOxydStone() : Stone("st-fakeoxyd"), state(IDLE) {
-            set_attrib("blinking", 0.0);
+            setAttr("blinking", 0.0);
         }
     private:
         enum State { IDLE, BLINKING } state;
@@ -1671,7 +1671,7 @@
                 set_anim("st-fakeoxyd-blink");
                 sound_event ("fakeoxyd");
                 state = BLINKING;
-                set_attrib("blinking", 1.0);
+                setAttr("blinking", 1.0);
             }
         }
         const char *collision_sound() {
@@ -1680,7 +1680,7 @@
         void animcb() {
             set_model("st-fakeoxyd");
             state = IDLE;
-            set_attrib("blinking", 0.0);
+            setAttr("blinking", 0.0);
         }
     };
 }

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-08 17:30:00 UTC (rev 1032)
+++ trunk/src/world.cc	2008-02-09 18:41:37 UTC (rev 1033)
@@ -359,7 +359,7 @@
         unique_name = name + ecl::strf("%d",i);
     }
     m_objnames.insert(unique_name, obj); // [name] = obj;
-    obj->set_attrib("name", unique_name);
+    obj->setAttr("name", unique_name);
 }
 
 void World::unname (Object *obj)
@@ -367,7 +367,7 @@
     ASSERT(obj, XLevelRuntime, "unname: no object given");
     if (Value v = obj->getAttr("name")) {
         m_objnames.remove(v.to_string());
-        obj->set_attrib("name", "");   // TODO alist.hh add delete op
+        obj->setAttr("name", "");   // TODO alist.hh add delete op
     }
 }
 
@@ -1787,7 +1787,7 @@
         if (src_id >= it_wormhole_off && src_id <= it_wormhole_on) {
 //            Log << ecl::strf("AddSignal: Wormhole signal destination src=%i/%i-%d dest=%i/%i-%d msg='%s'\n",
 //                srcloc.pos.x, srcloc.pos.y, srcloc.layer, dstloc.pos.x, dstloc.pos.y, dstloc.layer, msg.c_str());
-            src->set_attrib("destination", GetFloor(dstloc.pos));  // use floor to guarantee existence
+            src->setAttr("destination", GetFloor(dstloc.pos));  // use floor to guarantee existence
             return;
         }
     }
@@ -1798,7 +1798,7 @@
 //                srcloc.pos.x, srcloc.pos.y, srcloc.layer, dstloc.pos.x, dstloc.pos.y, dstloc.layer, msg.c_str());
             TokenList tl = src->getAttr("destination");  // may be empty or may contain some tokens
             tl.push_back(GetFloor(dstloc.pos));  // use floor to guarantee existence);
-            src->set_attrib("destination", tl);
+            src->setAttr("destination", tl);
             return;
         }
     }
@@ -1832,7 +1832,7 @@
         Log << "AddSignal for st-actorimpulse\n";
         ObjectList ol = src->getDefaultedAttr("$!oxyd!destinations", Value(Value::GROUP));
         ol.push_back(dstValue);
-        src->set_attrib("$!oxyd!destinations", ol);
+        src->setAttr("$!oxyd!destinations", ol);
         return;
     }
     
@@ -1856,7 +1856,7 @@
     if (src->getObjectType() == Object::ITEM) {
         ItemID src_id = get_id(dynamic_cast<Item *>(src));
         if (src_id >= it_key_a && src_id <= it_key_c && dst->is_kind("st_key")) {
-            dst->set_attrib("keycode", src->getAttr("keycode"));
+            dst->setAttr("keycode", src->getAttr("keycode"));
             return;
         }
     }
@@ -1865,10 +1865,10 @@
     // are not set by other means than this function:
     TokenList targets = src->getDefaultedAttr(target_key, Value(Value::TOKENS));    
     targets.push_back(dstValue);   // add this target to existing ones
-    src->set_attrib(target_key, Value(targets));
+    src->setAttr(target_key, Value(targets));
     TokenList actions = src->getDefaultedAttr(action_key, Value(Value::TOKENS));    
     actions.push_back(Value("signal"));   // add this target to existing ones
-    src->set_attrib(action_key, Value(actions));
+    src->setAttr(action_key, Value(actions));
 }
 
 



From ral at mail.berlios.de  Sun Feb 10 12:49:25 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 10 Feb 2008 12:49:25 +0100
Subject: [Enigma-game-svn] r1034 - in trunk/src: . stones
Message-ID: <200802101149.m1ABnPxG012656@sheep.berlios.de>

Author: ral
Date: 2008-02-10 12:49:24 +0100 (Sun, 10 Feb 2008)
New Revision: 1034

Modified:
   trunk/src/ObjectValidator.cc
   trunk/src/WorldProxy.cc
   trunk/src/items.cc
   trunk/src/lua.cc
   trunk/src/lua.hh
   trunk/src/stones/Switch.cc
   trunk/src/world.cc
   trunk/src/world.hh
Log:
Trunk 1.1: new API
- default floor full support - every grid will always have a floor:
  - no need of specification of a floor on every tile
  - the default tile needs a floor
  - the default tile may define a checkerboard with mutiple floors
  - the default tile may have other objects - just the floors will be
    set on missing floors
- resolver support: the first arg on wo(resolver, default, map) can be
  - "ti" the tiles map
  - a function resolver(key, x, y) that returns a tile definition
- mapless world creation: wo(resolver, default, x, y) creates a world
  of given size just filled with default floors
- wo:_register(methodname, function) allows registration of library functions
  within the world context: additional functions like drawmap, drawborder,...
  can be written in Lua and hooked into the world. (see testlevel for example)
- add world read only attributes Width, Height
- allow world size smaller 20x13 for new API
- fix attribute read error on objects that are do not yet have a valid
  xml declaration.


Modified: trunk/src/ObjectValidator.cc
===================================================================
--- trunk/src/ObjectValidator.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/ObjectValidator.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -152,7 +152,11 @@
     bool ObjectValidator::validateMessage(Object *obj, std::string msg, Value val) {
         KindDescriptor *kind = getKindDesc(obj->getClass());
         if (kind == NULL) {
-            return true;    // object is not under validator control
+            // object is not under validator control
+            if (obj->getAttr(msg))
+                return false;       // default attribute value - try message
+            else
+                return true;        // existing attribute value - deny message
         }
         return kind->validateMessage(msg);
     }

Modified: trunk/src/WorldProxy.cc
===================================================================
--- trunk/src/WorldProxy.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/WorldProxy.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -18,8 +18,9 @@
  */
 
 #include "WorldProxy.hh"
+#include "display.hh"
 #include "server.hh"
-#include "display.hh"
+#include "world.hh"
 
 namespace enigma {
  
@@ -48,14 +49,16 @@
             return server::ConserveLevel;
         } else if (key == "CreatingPreview") {
             return server::CreatingPreview;  // read only
+        } else if (key == "Height") {
+            return Height();
         } else if (key == "IsDifficult") {
             return (server::GetDifficulty() == DIFFICULTY_HARD);  // read only
         } else if (key == "LevelTime") {   
             return server::LevelTime;    // read only
         } else if (key == "ShowMoves") {
             return server::ShowMoves;
-        } else if (key == "ShowMoves") {
-            return server::ShowMoves;
+        } else if (key == "Width") {
+            return Width();
         } else if (key == "Brittleness") {
             return server::Brittleness;
         } else if (key == "BumperForce") {

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/items.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -1366,9 +1366,10 @@
     }
     
     Value Trigger::message (const Message &m) {
-        if (m.message == "signal") {
+        if (m.message == "signal" && (server::GameCompatibility != GAMET_ENIGMA || 
+                server::EnigmaCompatibility < 1.10)) {
             performAction(m.value.to_bool());  // convert 1/0 values to true/false
-            return Value();                
+            return Value();
         } else if (m.message == "_init") {
             // the state count at init is wrong as some actors on the grid may
             // already have existed on_creation, but all are reported via

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/lua.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2002,2003,2004 Daniel Heck
- * Copyright (C) 2007 Ronald Lamprecht
+ * Copyright (C) 2007,2008 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -60,6 +60,11 @@
 #define LUA_ID_GROUP    "_GROUP"
 #define LUA_ID_TILES    "_TILES"
 #define LUA_ID_TILE     "_TILE"
+/**
+ * The tile dictionary or function that should be used to resolve tile keys.
+ */
+#define LUA_ID_RESOLVER "_RESOLVER"
+#define LUA_ID_FLOORKEY "_FLOORKEY"
 
 using namespace std;
 
@@ -1678,9 +1683,28 @@
 
 MethodMap worldMethodeMap;
 
+static int registerWorldUserMethod(lua_State *L) {
+    // object, name, function
+    if (!(lua_isstring(L, 2) && lua_isfunction(L, 3))) {
+        throwLuaError(L, "World register method argument error");
+        return 0;
+    }
+    lua_getmetatable(L, 1);  // world metatable
+    lua_getfield(L, -1, "_usermethods");
+    if (lua_isnil(L, -1)) {
+        lua_pop(L, 1);      // the bogus nil
+        lua_newtable(L);    // create usermethods
+        lua_pushvalue(L, -1);   // dup to be poped by setfield
+        lua_setfield(L, -3, "_usermethods");
+    }
+    lua_pushvalue(L, 2);  // the key string as index
+    lua_pushvalue(L, 3);  // the function as value
+    lua_settable(L, -3);
+    return 0;
+}
 
 static int dispatchWorldReadAccess(lua_State *L) {
-    // 
+    // world, key
     if (lua_isstring(L, 2)) {
         std::string keyStr = lua_tostring(L, 2);
         // TODO check string
@@ -1689,8 +1713,20 @@
             // call method
             lua_pushcfunction(L, iter->second);
         } else {
-            Value v = WorldProxy::instance()->getAttr(keyStr);
-            push_value(L, v);
+            if (Value v = WorldProxy::instance()->getAttr(keyStr))
+                push_value(L, v);
+            else {
+                lua_getmetatable(L, 1);  // world metatable
+                lua_getfield(L, -1, "_usermethods");
+                if (!lua_isnil(L, -1)) {
+                    lua_pushvalue(L, 2);
+                    lua_gettable(L, -2);
+                    if (lua_isfunction(L, -1))
+                        return 1;
+                }
+                throwLuaError(L, "World read access without a valid key");
+                return 0;
+            }
         }
         return 1;
     } else {
@@ -1700,7 +1736,7 @@
 }
 
 
-static int setObjectByTable(lua_State *L, double x, double y) {
+static int setObjectByTable(lua_State *L, double x, double y, bool onlyFloors = false) {
     // table at -1 
     int xi = round_down<int>(x);
     int yi = round_down<int>(y);
@@ -1719,15 +1755,18 @@
     }
     
     if (name == "fl_nil") {
-        KillFloor(GridPos(xi, yi));
+        if (!onlyFloors)
+            KillFloor(GridPos(xi, yi));
         lua_pop(L, 1);   // object type
         return 0;
     } else if (name == "st_nil") {
-        KillStone(GridPos(xi, yi));
+        if (!onlyFloors)
+            KillStone(GridPos(xi, yi));
         lua_pop(L, 1);   // object type
         return 0;
     } else if (name == "it_nil") {
-        KillItem(GridPos(xi, yi));
+        if (!onlyFloors)
+            KillItem(GridPos(xi, yi));
         lua_pop(L, 1);   // object type
         return 0;
     }
@@ -1748,23 +1787,30 @@
             SetFloor(GridPos(xi,yi), dynamic_cast<Floor *>(obj));
             break;
         case Object::STONE :
-            SetStone(GridPos(xi,yi), dynamic_cast<Stone *>(obj));
+            if (!onlyFloors)
+                SetStone(GridPos(xi,yi), dynamic_cast<Stone *>(obj));
+            else
+                DisposeObject(obj);
             break;
         case Object::ITEM  :
-            SetItem(GridPos(xi,yi), dynamic_cast<Item *>(obj));
+            if (!onlyFloors)
+                SetItem(GridPos(xi,yi), dynamic_cast<Item *>(obj));
             break;
         case Object::ACTOR :
-            lua_rawgeti(L, -1, 2);
-            if (lua_isnumber(L, -1))
-                x += lua_tonumber(L, -1);
-            lua_rawgeti(L, -2, 3);
-            if (lua_isnumber(L, -1))
-                y += lua_tonumber(L, -1);
-            lua_pop(L, 2);               
-            if (IsInsideLevel(GridPos(round_down<int>(x), round_down<int>(y)))) 
-                AddActor(x, y, dynamic_cast<Actor *>(obj));
-            else
-                throwLuaError(L, "World: actor addition to position outside of world");
+            if (!onlyFloors) {
+                lua_rawgeti(L, -1, 2);
+                if (lua_isnumber(L, -1))
+                    x += lua_tonumber(L, -1);
+                lua_rawgeti(L, -2, 3);
+                if (lua_isnumber(L, -1))
+                    y += lua_tonumber(L, -1);
+                lua_pop(L, 2);               
+                if (IsInsideLevel(GridPos(round_down<int>(x), round_down<int>(y)))) 
+                    AddActor(x, y, dynamic_cast<Actor *>(obj));
+                else
+                    throwLuaError(L, "World: actor addition to position outside of world");
+            } else
+                DisposeObject(obj);
             break;
         default :
             throwLuaError(L, "World set of unknown object");
@@ -1772,7 +1818,7 @@
     return 0;
 }
 
-static int setObjectByTile(lua_State *L, double x, double y) {
+static int setObjectByTile(lua_State *L, double x, double y, bool onlyFloors = false) {
     // tile at -1
     
     // this is a recursive function - ensure enough space on the stack
@@ -1782,25 +1828,88 @@
     lua_getmetatable(L, -1);
     lua_rawgeti(L, -1, 1);    // first tile part
     if (is_tile(L, -1))
-        setObjectByTile(L, x, y);
+        setObjectByTile(L, x, y, onlyFloors);
     else
-        setObjectByTable(L, x, y);
+        setObjectByTable(L, x, y, onlyFloors);
     lua_pop(L, 1);  // tile or table
     lua_rawgeti(L, -1, 2);    // second optional tile part
     if (!lua_isnil(L, -1)) {
         if (is_tile(L, -1))
-            setObjectByTile(L, x, y);
+            setObjectByTile(L, x, y, onlyFloors);
         else
-            setObjectByTable(L, x, y);
+            setObjectByTable(L, x, y, onlyFloors);
     }
     lua_pop(L, 2);  // tile or table or nil + metatable
     return 0;
 }
 
-static int initWorld(lua_State *L) {
+static int setObjectByKey(lua_State *L, std::string key, int j, int i, bool onlyFloors = false) {
+    lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_RESOLVER);
+    lua_pushvalue(L, -1);
+    lua_pushstring(L, key.c_str());
+    if (is_tiles(L, -2)) {
+        lua_gettable(L, -2);        // get tile entry in table
+        lua_remove(L, -2);          // remove extra copy of tile as resolver
+    } else {
+        lua_pushinteger(L, j);
+        lua_pushinteger(L, i);
+        int retval=lua_pcall(L, 3, 1, 0);
+        if (retval!=0) {
+            throwLuaError(L, "Error within tile key resolver");
+            return 0;
+        }
+        // check result - must be tile or table
+        if (!(is_tile(L, -1) || is_table(L, -1))) {
+            throwLuaError(L, "Tile key resolver error - expected tile or table as return value");
+            return 0;
+        }
+    }   
+    if (lua_isnil(L, -1)) {
+        throwLuaError(L, ecl::strf("World init undefined tile '%s' at %d, %d", 
+                key.c_str(), j, i).c_str());
+        return 0;
+    }
+    setObjectByTile(L, j, i, onlyFloors);
+    lua_pop(L, 1);  // tile
+    if (GetFloor(GridPos(j, i)) == NULL) {
+        lua_pushvalue(L, -1);
+        lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_FLOORKEY);
+        if (is_tiles(L, -2)) {
+            lua_gettable(L, -2);        // get tile entry in table
+            lua_remove(L, -2);          // remove extra copy of tile as resolver
+        } else {
+            lua_pushinteger(L, j);
+            lua_pushinteger(L, i);
+            int retval=lua_pcall(L, 3, 1, 0);
+            if (retval!=0) {
+                throwLuaError(L, "Error within tile key resolver");
+                return 0;
+            }
+            // check result - must be tile or table
+            if (!(is_tile(L, -1) || is_table(L, -1))) {
+                throwLuaError(L, "Tile key resolver error - expected tile or table as return value");
+                return 0;
+            }
+        }   
+        if (lua_isnil(L, -1)) {
+            throwLuaError(L, ecl::strf("World init undefined default tile at %d, %d",  j, i).c_str());
+            return 0;
+        }
+        setObjectByTile(L, j, i, true);   // limit to floor set
+        lua_pop(L, 1);  // default tile
+        if (GetFloor(GridPos(j, i)) == NULL) {
+            throwLuaError(L, ecl::strf("World no floor at %d, %d", j, i).c_str());
+            return 0;
+        }
+    }
+    lua_pop(L, 1);  // resolver
+    return 0;
+}
+
+static int createWorld(lua_State *L) {
     // world, (ti|function), string, table
     if (server::WorldSized) {
-        throwLuaError(L, "World reinitialization not allowed");
+        throwLuaError(L, "World recreation not allowed");
         return 0;
     }
     
@@ -1808,61 +1917,74 @@
     int height = 0;
     int keyLength = 1;
     std::string defaultKey;
-    if (!(is_tiles(L, 2) && lua_isstring(L, 3) && is_table(L, 4))) {
-        throwLuaError(L, "World init with false argument types");
+    if (!((is_tiles(L, 2)||lua_isfunction(L, 2)) && lua_isstring(L, 3) && 
+            (is_table(L, 4) || (lua_isnumber(L, 4) && lua_isnumber(L, 5))))) {
+        throwLuaError(L, "World create with false argument types");
         return 0;
     }
+    
+    // remember resolver and default key for missing floors
+    lua_pushvalue(L, 2);
+    lua_setfield(L, LUA_REGISTRYINDEX, LUA_ID_RESOLVER);  
+    lua_pushvalue(L, 3);
+    lua_setfield(L, LUA_REGISTRYINDEX, LUA_ID_FLOORKEY);  
+    
     defaultKey = lua_tostring(L, 3);
     keyLength = defaultKey.length();
-    height = lua_objlen(L, 4);
     std::vector<std::string> lines;
-    Log << "initWorld  keyLength " << keyLength <<"\n";
-    for (int i = 1; i <= height; i++) {
-        lua_pushinteger(L, i);
-        lua_gettable(L, -2);
-        if (!lua_isstring(L, -1)) {
-            throwLuaError(L, "World init table has enties that are no strings");
+    Log << "createWorld  keyLength " << keyLength <<"\n";
+    
+    if (is_table(L, 4)) {
+        height = lua_objlen(L, 4);
+        for (int i = 1; i <= height; i++) {
+            lua_pushinteger(L, i);
+            lua_gettable(L, -2);
+            if (!lua_isstring(L, -1)) {
+                throwLuaError(L, "World create map has enties that are no strings");
+                return 0;
+            }
+            lines.push_back(lua_tostring(L, -1));
+            lua_pop(L, 1);
+            width = ecl::Max(width, (int)lines.back().length());
+        }
+        if (width % keyLength != 0) {
+            throwLuaError(L, "World create map row with odd length");
             return 0;
         }
-        lines.push_back(lua_tostring(L, -1));
-        lua_pop(L, 1);
-        width = ecl::Max(width, (int)lines.back().length());
+        width = width/keyLength;
+    } else {
+        width = lua_tointeger(L, 4);
+        height = lua_tointeger(L, 5);
+        if (width <= 0 || height <= 0) {
+            throwLuaError(L, "World create with bad size");
+            return 0;
+        }
+        for (int i = 0; i < height; i++)
+            lines.push_back(""); 
     }
-    if (width % keyLength != 0) {
-        throwLuaError(L, "World init table row with odd length");
-        return 0;
-    }
-    width = width/keyLength;
-    Log << "initWorld  - w " << width << "  - h " << height << "\n";
-
+    
+    Log << "createWorld  - w " << width << "  - h " << height << "\n";
     Resize(width, height);
+    display::ResizeGameArea(ecl::Min<int>(20, width), ecl::Min<int>(13, height));
     
-    luaL_getmetatable(L, LUA_ID_TILES);
-    lua_rawgeti(L, -1, 1);               // tiles content table
     for (int i = 0; i < height; i++) {
         std::string &line = lines[i];
         int lineLength = line.length();
         if (lineLength % keyLength != 0) {
-            throwLuaError(L, "World init table row with odd length");
+            throwLuaError(L, "World create map row with odd length");
             return 0;
         }
         lineLength = lineLength / keyLength;
         for (int j = 0; j < width; j++) {
             std::string key;
+            bool isDefault = false;
             if (j < lineLength) {
                 key = line.substr(j*keyLength, keyLength);  // tiles key
             } else {
                 key = defaultKey;
+                isDefault = true;
             }
-            lua_pushstring(L, key.c_str());
-            lua_rawget(L, -2);        // get tile entry in table
-            if (lua_isnil(L, -1)) {
-                throwLuaError(L, ecl::strf("World init undefined tile '%s' at %d, %d", 
-                        key.c_str(), j, i).c_str());
-                return 0;
-            }
-            setObjectByTile(L, j, i);
-            lua_pop(L, 1);  // tile
+            setObjectByKey(L, key, j, i, isDefault);
         }
     }
     lua_pushinteger(L, width);
@@ -2387,12 +2509,13 @@
 static CFunction worldOperations[] = {
     {dispatchWorldWriteAccess,      "__newindex"}, //  obj[key]=value
     {dispatchWorldReadAccess,       "__index"},    //  obj[key]
-    {initWorld,                     "__call"},
+    {createWorld,                   "__call"},
     {0,0}
 };
 
 static CFunction worldMethods[] = {
-    {initWorld,                     "init"},
+    {createWorld,                   "create"},
+    {registerWorldUserMethod,       "_register"},
     {getFloor,                      "fl"},
     {getItem,                       "it"},
     {getStone,                      "st"},
@@ -2559,6 +2682,13 @@
     return result;
 }
 
+void SetDefaultFloor(lua_State *L, int x, int y) {
+    lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_FLOORKEY);
+    std::string key = lua_tostring(L, -1);
+    setObjectByKey(L, key, x, y, true);
+    lua_pop(L, 1);
+}
+
 Error DoAbsoluteFile(lua_State *L, const string &filename)
 {
     int oldtop = lua_gettop(L);

Modified: trunk/src/lua.hh
===================================================================
--- trunk/src/lua.hh	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/lua.hh	2008-02-10 11:49:24 UTC (rev 1034)
@@ -98,6 +98,8 @@
     Error CallFunc (lua_State *L, const char *funcname, const ByteVec &arg);
     
     std::string NewMessageName(lua_State *L, const Object *obj, const std::string &message);
+    
+    void SetDefaultFloor(lua_State *L, int x, int y);
 
     /**
      * Run a Lua script using a given absolute path.

Modified: trunk/src/stones/Switch.cc
===================================================================
--- trunk/src/stones/Switch.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/stones/Switch.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -138,8 +138,8 @@
         {"st_switch_black", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
         {"st_switch_white", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
         {"st_switch_instant", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
-        {"st_switch_instantblack", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
-        {"st_switch_instantwhite", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
+        {"st_switch_instant_black", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
+        {"st_switch_instant_white", st_switch, stf_none, material_stone, 1.0, MOVABLE_PERSISTENT},
     };
     
     BOOT_REGISTER_START

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/world.cc	2008-02-10 11:49:24 UTC (rev 1034)
@@ -1560,6 +1560,15 @@
     server::WorldSized = true;
 }
 
+int Width() {
+    return level->w;
+}
+
+int Height() {
+    return level->h;
+}
+
+
 void WorldPrepareLevel ()
 {
     GameTimer.clear();
@@ -2006,6 +2015,7 @@
 void KillFloor(GridPos p) 
 {
     level->fl_layer.kill(p);
+    lua::SetDefaultFloor(lua::LevelState(), p.x, p.y);
 }
 
 Floor *GetFloor(GridPos p) 

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-02-09 18:41:37 UTC (rev 1033)
+++ trunk/src/world.hh	2008-02-10 11:49:24 UTC (rev 1034)
@@ -154,6 +154,8 @@
 
     /* Create a new, empty world with width `w' and height `h`. */
     void Resize (int w, int h);
+    int Width();
+    int Height();
 
     /* Initialize the world after loading it.  Call this after loading
        the world to force laser beams to be recalculated etc. */



From ral at mail.berlios.de  Sun Feb 10 13:29:05 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 10 Feb 2008 13:29:05 +0100
Subject: [Enigma-game-svn] r1035 - team_levelpacks/team_test_new_api
Message-ID: <200802101229.m1ACT5GT003571@sheep.berlios.de>

Author: ral
Date: 2008-02-10 13:29:05 +0100 (Sun, 10 Feb 2008)
New Revision: 1035

Added:
   team_levelpacks/team_test_new_api/ralT024_1.xml
   team_levelpacks/team_test_new_api/ralT034_1.xml
   team_levelpacks/team_test_new_api/ralT035_1.xml
   team_levelpacks/team_test_new_api/ralT036_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT033_1.xml
Log:
Test Level new API:
- default floor
- resolver usage
- lib world method registration
- small world


Added: team_levelpacks/team_test_new_api/ralT024_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-10 11:49:24 UTC (rev 1034)
+++ team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-10 12:29:05 UTC (rev 1035)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Switch new API" el:subtitle="" el:id="20071231ral454"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2006 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["#"] = {"st-rock1"}
+ti["y"] = {"it-yinyang"}
+
+ti["D"] = {"st-door-v", "door1"}
+ti["d"] = {"st-door-v", "door2"}
+
+ti["L"] = {"st-laserswitch", target="door1", action="signal"}
+ti["I"] = {"st-laserswitch", inverse=true, target="door2", action="signal"}
+ti["E"] = {"st-laser", "laser"}
+ti["M"] = {"st-mirror-p|"}
+ti["e"] = {"st_switch", target="laser", action="onoff"}
+ti["F"] = {"st-laser", "laser2"}
+ti["f"] = {"st_switch_black_instant", state=1, inverse=true, target="laser2", action="signal"}
+ti["G"] = {"st-laser", "laser3"}
+ti["g"] = {"st_switch_black", target="laser3", action="signal", name="colorswitch"}
+ti["H"] = {"st-laser", "laser4"}
+ti["h"] = {"st_switch_white", state=1, target="laser4", action="signal"}
+ti["s"] = {"st_switch", target="recolor"}
+
+ti["1"] = ti["y"] .. {"#ac-blackball"}
+ti["2"] = ti["y"] .. {"#ac-whiteball"}
+
+w, h = wo(ti, " ", {
+"                    ",
+"            D  L    ",
+"                    ",
+"E              M    ",
+"e                   ",
+"            d  I    ",
+"s                   ",
+"       1 2   g  h   ",
+"             G  H   ",
+"f                   ",
+"F                   ",
+"                    ",
+"                    "
+})
+
+function recolor(value, sender)
+    no["colorswitch"]["color"] = value
+end
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT024_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Modified: team_levelpacks/team_test_new_api/ralT033_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-10 11:49:24 UTC (rev 1034)
+++ team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-10 12:29:05 UTC (rev 1035)
@@ -20,22 +20,22 @@
 wo["ConserveLevel"] = true
 
 ti[" "] = {"fl-sahara"}
-ti["#"] = ti[" "] .. {"st-rock1"}
+ti["#"] = {"st-rock1"}
 
-ti["T"] = ti[" "] .. {"st_switch", target="dotoggle"}
-ti["t"] = ti[" "] .. {"st_switch", target="sw", action="toggle"}
-ti["U"] = ti[" "] .. {"st_switch", target="doopen"}
-ti["V"] = ti[" "] .. {"st_switch", target="sw", action="close"}  -- unknown action
-ti["S"] = ti[" "] .. {"st_switch_black", "sw"}
-ti["R"] = ti[" "] .. {"st_switch", target="dorecolor"}
-ti["r"] = ti[" "] .. {"st_switch", target="dorecolor", inverse=true}
-ti["L"] = ti[" "] .. {"st-laser-s", "laser#"}
-ti["l"] = ti[" "] .. {"st-laser-s", "laserI#"}
-ti["K"] = ti[" "] .. {"st_switch", target="getkind"}
-ti["I"] = ti[" "] .. {"st_switch", target="iskind"}
+ti["T"] = {"st_switch", target="dotoggle"}
+ti["t"] = {"st_switch", target="sw", action="toggle"}
+ti["U"] = {"st_switch", target="doopen"}
+ti["V"] = {"st_switch", target="sw", action="close"}  -- unknown action
+ti["S"] = {"st_switch_black", "sw"}
+ti["R"] = {"st_switch", target="dorecolor"}
+ti["r"] = {"st_switch", target="dorecolor", inverse=true}
+ti["L"] = {"st-laser-s", "laser#"}
+ti["l"] = {"st-laser-s", "laserI#"}
+ti["K"] = {"st_switch", target="getkind"}
+ti["I"] = {"st_switch", target="iskind"}
 
 
-ti["1"] = (ti[" "] .. {"it-magicwand"}) .. {"#ac-blackball"}
+ti["1"] = ti({"it-magicwand"}) .. {"#ac-blackball"}
 
 
 w, h = wo(ti, " ", {

Added: team_levelpacks/team_test_new_api/ralT034_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-10 11:49:24 UTC (rev 1034)
+++ team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-10 12:29:05 UTC (rev 1035)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test default floor new API" el:subtitle="" el:id="20080206ral636"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+
+wo["ConserveLevel"] = true
+
+ti["r"] = {"fl-rough-red"}
+ti["b"] = {"fl-rough-blue"}
+ti["."] = ti({"fl-rough-blue", checkerboard=0}) .. {"fl-rough-red", checkerboard=1}
+
+ti[" "] = ti["."] .. {"it_blocker"}
+ti["w"] = {"st-wood"}
+ti["s"] = {"st_switch", target="rmfloor"}
+ti["i"] = {"st_switch", target="icefloor"}
+
+ti["1"] = ti["b"] .. {"#ac-blackball"}
+ti["2"] = ti["b"] .. {"#ac-bug", "mybug"}
+
+function myresolver(key, x, y)
+    if key == " " then
+        if math.random() >= 0.5 then
+            return ti["b"]
+        else
+            return ti["r"]
+        end
+    else
+        return ti[key]
+    end
+end
+
+resolver = ti
+if wo["IsDifficult"] then
+    resolver = myresolver
+end
+
+w, h = wo(resolver, " ", {
+"                    ",
+" w     bbbbb        ",
+" w  bbbrrrrrbbb  ",
+"   bbrr.....rrbb ",
+"   br.........rb    ",
+"  br...........rb   ",
+"  br...........rb   ",
+"  br...........rb   ",
+"   br.........rb    ",
+"   bbrr.....rrbb    ",
+"    b2brrrrrb1b     ",
+"       bbbbb        ",
+"si                  "
+})
+
+function icefloor(value, sender)
+    wo[no["mybug"]] = {"fl-ice"}
+end
+
+function rmfloor(value, sender)
+    wo[no["mybug"]] = {"fl_nil"}
+end
+  
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT034_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Added: team_levelpacks/team_test_new_api/ralT035_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-10 11:49:24 UTC (rev 1034)
+++ team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-10 12:29:05 UTC (rev 1035)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test create world new API" el:subtitle="" el:id="20080208ral451"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["1"] = ti[" "] .. {"#ac-blackball"}
+
+-- sample of create world without a given map - just default floors
+w, h = wo(ti, " ", 20, 13)
+
+wo[{14, 7}] = ti["1"]
+
+-- sample of registry of a world lib function and its usage
+function hurra(world, pos)
+    world[pos] = {"it-magicwand"}
+end
+
+wo:_register("hurra", hurra)
+
+wo:hurra(po({2,3}))
+
+-- first version of a general draw map
+-- TODO distinguish resolver ti/function, call function
+-- TODO accept key length greater 1 (detect on ignore string length)
+-- TODO check behaviour on errors and add usable reports
+
+ti["#"] = {"it_blocker"}
+
+function drawmap(world, origin, resolver, ignore, map)
+    local len = string.len(ignore)
+    for y=1, #map do
+        local linelen = string.len(map[y])
+        for x = 1, linelen do
+            local key = string.sub(map[y], x, x)
+            if key ~= ignore then
+                world[origin + {x-1, y-1}] = resolver[key]
+            end
+        end
+    end
+end
+
+wo:_register("drawmap", drawmap)
+
+wo:drawmap(po({wo.Width-10, wo.Height-5}), ti, "-", {
+  "--###",
+  "###--###",
+  "---###"
+})
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT035_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Added: team_levelpacks/team_test_new_api/ralT036_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT036_1.xml	2008-02-10 11:49:24 UTC (rev 1034)
+++ team_levelpacks/team_test_new_api/ralT036_1.xml	2008-02-10 12:29:05 UTC (rev 1035)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test small world new API" el:subtitle="" el:id="20080209ral784"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["1"] = ti[" "] .. {"#ac-blackball"}
+
+w, h = wo(ti, " ", {
+"  ",
+" 1"
+})
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT036_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From andreasl at mail.berlios.de  Thu Feb 14 17:06:35 2008
From: andreasl at mail.berlios.de (andreasl at BerliOS)
Date: Thu, 14 Feb 2008 17:06:35 +0100
Subject: [Enigma-game-svn] r1036 - in trunk/data: . levels/lib
Message-ID: <200802141606.m1EG6ZkR024509@sheep.berlios.de>

Author: andreasl
Date: 2008-02-14 17:06:34 +0100 (Thu, 14 Feb 2008)
New Revision: 1036

Modified:
   trunk/data/init.lua
   trunk/data/levels/lib/libsoko-designlist.xml
   trunk/data/levels/lib/libsoko-endphase.xml
Log:
Trunk:
 - libsoko:
    - Refined vortex endphase (bound number of vortices in non-oxyd areas).
    - Changes in designs to comply with chessobans (hopefully).
 - init.lua:
    - Added type-check in set_attribs to return a more
      helpful error message (still without line number).


Modified: trunk/data/init.lua
===================================================================
--- trunk/data/init.lua	2008-02-10 12:29:05 UTC (rev 1035)
+++ trunk/data/init.lua	2008-02-14 16:06:34 UTC (rev 1036)
@@ -377,6 +377,9 @@
 
 function set_attribs(obj, attrs)
     if not attrs then return end
+    if type(attrs) ~= "table" then
+        error("Can't assign attributes, expected table but got "..type(attrs)..".")
+    end
     for key,val in pairs(attrs) do
 	set_attrib(obj, key, val)
     end

Modified: trunk/data/levels/lib/libsoko-designlist.xml
===================================================================
--- trunk/data/levels/lib/libsoko-designlist.xml	2008-02-10 12:29:05 UTC (rev 1035)
+++ trunk/data/levels/lib/libsoko-designlist.xml	2008-02-14 16:06:34 UTC (rev 1036)
@@ -123,21 +123,21 @@
      endp={goal="st-glass1_hole", alg="ralf"}},
 [3]={box="st-wood-growing", wall="st-bluegray", inf="fl-bluegray",
      outf="fl-abyss", door="st-door_c", oxyd="a",
-     endp={goal={"fl-abyss", "it-none"}, wall="st-thief", give="it-hammer",
+     endp={goal={"st-none", "fl-stwood", "it-none"}, wall="st-thief", give="it-hammer",
            alg="block:st-plain_cracked"}},
 [4]={box="st-brownie", wall="st-bluegray", inf="fl-white",
      outf="fl-sahara", door="st-door_a", oxyd="c",
      endp={goal="st-none", wall={"st-none", "fl-bluegray"}, alg="outside"}},
 [5]={box="st-wood", wall="st-bluegray", inf="fl-white",
      outf="fl-space", door="st-door_c", oxyd="c",
-     endp={goal={"fl-abyss", "it-none"}, wall={"st-bluegray_hole"}, alg="outside:3"}},
+     endp={goal={"st-none", "fl-stwood", "it-none"}, wall={"st-bluegray_hole"}, alg="outside:3"}},
 [6]={box="st-greenbrown_move", wall="st-bluegray", inf="fl-white",
      outf="fl-space", door="st-door_b", oxyd="c",
      endp={goal="st-greenbrown_hole", wall="st-thief", give="it-sword",
            alg="block:st-knight"}},
 [7]={box="st-wood", wall="st-bluegray", inf="fl-white",
      outf="fl-space", door="st-door_c", oxyd="c",
-     endp={goal={"fl-abyss", "it-none"}, alg="fourswitch"}},
+     endp={goal={"st-none", "fl-stwood", "it-none"}, alg="fourswitch"}},
 
 [8]={box="st-rock3_move", wall="st-blue-sand", inf="fl-light",
      outf="fl-rough-blue", door="st-door_b", oxyd="d",
@@ -211,7 +211,7 @@
       endp={goal="st-pull", give="it-sword", alg="block:st-knight"}},
 [30]={box="st-wood-growing", wall="st-likeoxydc-open", inf="fl-tigris",
       outf="fl-sahara", door="st-door_c", oxyd="a",
-      endp={goal={"fl-abyss", "it-none"}, give="it-hammer", alg="block:st-stone_break"}},
+      endp={goal={"st-none", "fl-stwood", "it-none"}, give="it-hammer", alg="block:st-stone_break"}},
 [31]={box="st-glass_move", wall="st-likeoxydc-open", inf="fl-tigris",
       outf="fl-space", door="st-door_b", oxyd="a",
       endp={wall="st-grate1", give="it-cherry", alg="outside:3"}},
@@ -324,7 +324,7 @@
       endp={goal="st-marble_hole", alg="gradients"}},
 [65]={box="st-wood-growing", wall="st-rock5", inf="fl-samba",
       outf="fl-space", door="st-door_c", oxyd="a",
-      endp={goal={"fl-water", "it-none"}, alg="ralf"}},
+      endp={goal={"st-none", "fl-stwood", "it-none"}, alg="ralf"}},
 [66]={box="st-greenbrown_move", wall="st-rock5", inf="fl-samba",
       outf="fl-leaves", door="st-door_b", oxyd="c",
       endp={goal="st-greenbrown", alg="vortex"}},
@@ -380,7 +380,7 @@
       endp={goal="st-yinyang2", open_door="st-white4", alg="ralf"}},
 [82]={box="st-wood", wall={"st-glass1", "fl-water"}, inf="fl-sand",
       outf="fl-water", door="st-door_a", oxyd="c",
-      endp={goal={"fl-water", "it-none"}, alg="fourswitch"}},
+      endp={goal={"st-none", "fl-stwood", "it-none"}, alg="fourswitch"}},
 [83]={box="st-camouflage_move", wall="st-glass2", inf="fl-lightgray",
       outf={"fl-leavesb", "st-disco-medium"}, door="st-glass2", oxyd="b",
       endp={goal="st-camouflage_hole", open_door="st-glass1_hole",
@@ -619,7 +619,7 @@
 
 [150]={box="st-flrock", wall="st-redrock", inf="fl-brick",
        outf="fl-space", door="st-blocker", oxyd="a", white=true,
-       endp={goal={"fl-abyss", "it-none"}, alg="ralf"}},
+       endp={goal={"st-none", "fl-rock", "it-none"}, alg="ralf"}},
 }
 
 -- endp-algs: circle, ralf, hide, outside, allcrack, block, fourswitch

Modified: trunk/data/levels/lib/libsoko-endphase.xml
===================================================================
--- trunk/data/levels/lib/libsoko-endphase.xml	2008-02-10 12:29:05 UTC (rev 1035)
+++ trunk/data/levels/lib/libsoko-endphase.xml	2008-02-14 16:06:34 UTC (rev 1036)
@@ -369,8 +369,10 @@
           return false
         end
       end
-      table.insert(oxyds, {lx = x-dx, ly = y-dy,
-          blocker = {lx = x, ly = y, oxyd = {lx = x-dx, ly = y-dy}}})
+      table.insert(oxyds,
+         {lx = x-dx, ly = y-dy,
+          blocker = {lx = x, ly = y, oxyd = {lx = x-dx, ly = y-dy}},
+          way = {lx = x+dx, ly = y+dy}})
       return true
     end
     return false
@@ -681,6 +683,7 @@
   for p, v in pairs(list_way) do
     list_way[p].component = nil
   end
+
   -- Analyse connected components of list_way, separated by goals.
   local function mark_component(lx, ly)
     if     (list_way[lx.."/"..ly])
@@ -700,20 +703,55 @@
   for p, v in pairs(list_way) do
     if (not list_way[p].component) and (not sokoarea[nr].list_goal[p]) then
       components = components + 1
-      component[components] = {}
+      component[components] = {oxyds = 0}
       mark_component(v.lx, v.ly)      
     end    
   end
-  -- If only one component, exit, player will find his way alone.
+
+  -- If only one component, exit, player will find his or her way alone.
   if components < 2 then
     return
   end
+
+  -- Analyse oxyds and to which components they belong to.
+  for p, v in pairs(sokoarea[nr].list_oxyd) do
+    local component_number = list_way[v.blocker.lx.."/"..v.blocker.ly].component or -1
+    if component_number == -1 then
+      set_item("it-banana", v.blocker.lx, v.blocker.ly)
+      mydebug("Banana on "..v.blocker.lx.."/"..v.blocker.ly)
+    else
+      component[component_number].oxyds = component[component_number].oxyds + 1
+    end
+  end  
+
+  -- Let there be at most max(5, number-of-oxyd-components)
+  -- components, plus the one the marble actually occupies.
+  local t = {}  -- helper table: components with oxyds or marble
+  local u = {}  -- helper table: all components except t
+  local mx, my = enigma.GetPos(enigma.GetNamedObject("marble_"..nr.."_1"))
+  local marble_component = (list_way[mx.."/"..my] or {}).component
+  for j = 1, components do
+    if (component[j].oxyds > 0) or (j == marble_component) then
+      table.insert(t, component[j])
+    else
+      table.insert(u, component[j])
+    end
+  end
+  luatools.shuffle_table(u)
+  while (table.getn(t) < 5) and (table.getn(u) > 0) do
+    table.insert(t, u[table.getn(u)])
+    table.remove(u)
+  end
+  component = t
+  components = table.getn(component)
+  u = nil
+
   -- From each component, choose one tile and save the {lx,ly}-entry
   local vortex = {}
   for j = 1, components do
     table.insert(vortex, component[j][random(1, table.getn(component[j]))])
   end
-
+  
   -- Find a cyclic permutation (i.e. with only one cycle) to connect the
   -- vortices (each vortex shall be reached by starting from any other).
   local sequence = {}



From ral at mail.berlios.de  Fri Feb 15 18:51:49 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 15 Feb 2008 18:51:49 +0100
Subject: [Enigma-game-svn] r1037 - trunk/src
Message-ID: <200802151751.m1FHpng2003696@sheep.berlios.de>

Author: ral
Date: 2008-02-15 18:51:48 +0100 (Fri, 15 Feb 2008)
New Revision: 1037

Modified:
   trunk/src/stones_simple.cc
Log:
Trunk 1.1: 
- fix boulder - st-break_boulder problem (missed message renaming)


Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-02-14 16:06:34 UTC (rev 1036)
+++ trunk/src/stones_simple.cc	2008-02-15 17:51:48 UTC (rev 1037)
@@ -677,7 +677,7 @@
             return player::WieldedItemIs (a, "it-hammer");
         }
         virtual Value message(const Message &m) {
-            if (m.message == "trigger") {
+            if (m.message == "_trigger") {
                 break_me();
                 return Value();
             }



From ral at mail.berlios.de  Fri Feb 15 20:45:11 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 15 Feb 2008 20:45:11 +0100
Subject: [Enigma-game-svn] r1038 - trunk/src
Message-ID: <200802151945.m1FJjBAo029549@sheep.berlios.de>

Author: ral
Date: 2008-02-15 20:45:10 +0100 (Fri, 15 Feb 2008)
New Revision: 1038

Modified:
   trunk/src/lua.cc
Log:
Trunk 1.1: new API
- empty table {} as a tile definition that sets nothing (nil is an error
  to detect undefined tiles)
- wo:_evaluate(context, key, x, y) to allow chaining of resolvers
  (see testlevels and upcoming docs)


Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-15 17:51:48 UTC (rev 1037)
+++ trunk/src/lua.cc	2008-02-15 19:45:10 UTC (rev 1038)
@@ -1741,6 +1741,10 @@
     int xi = round_down<int>(x);
     int yi = round_down<int>(y);
     Object *obj = NULL;
+    
+    if (lua_objlen(L, -1) == 0) {  // empty table as set nothing operation
+        return 0;
+    }
     lua_rawgeti(L, -1, 1);
     if (!lua_isstring(L, -1)) {
         throwLuaError(L, "World: object type string missing");
@@ -1843,17 +1847,24 @@
     return 0;
 }
 
-static int setObjectByKey(lua_State *L, std::string key, int j, int i, bool onlyFloors = false) {
-    lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_RESOLVER);
-    lua_pushvalue(L, -1);
-    lua_pushstring(L, key.c_str());
-    if (is_tiles(L, -2)) {
-        lua_gettable(L, -2);        // get tile entry in table
-        lua_remove(L, -2);          // remove extra copy of tile as resolver
-    } else {
-        lua_pushinteger(L, j);
-        lua_pushinteger(L, i);
-        int retval=lua_pcall(L, 3, 1, 0);
+static int evaluateKey(lua_State *L) {
+    // resolver, key, x, y
+    // (ti|function|table), string, int, int
+    if (!(lua_isnumber(L, -1) && lua_isnumber(L, -2) && lua_isstring(L, -3) &&
+            (is_tiles(L, -4) || lua_isfunction(L, -4) || is_table(L, -4)))) {
+        throwLuaError(L, "Resolver with false argument types");
+        return 0;
+    }
+    if (is_tiles(L, -4)) {
+        lua_pushvalue(L, -3);       // duplicate key
+        lua_gettable(L, -5);        // get tile entry in table, remove key duplicate
+        return 1;
+    } else if (lua_isfunction(L, -4)) {
+        lua_pushvalue(L, -4);       // duplicate function
+        lua_pushvalue(L, -4);       // duplicate key
+        lua_pushvalue(L, -4);       // duplicate x
+        lua_pushvalue(L, -4);       // duplicate y
+        int retval=lua_pcall(L, 3, 1, 0);     // resolver(key,x,y) ->  tile
         if (retval!=0) {
             throwLuaError(L, "Error within tile key resolver");
             return 0;
@@ -1863,40 +1874,60 @@
             throwLuaError(L, "Tile key resolver error - expected tile or table as return value");
             return 0;
         }
-    }   
+        return 1;
+    } else {
+        lua_rawgeti(L, -4, 1);      // get resolver implementation at index 1
+        lua_pushvalue(L, -5);       // duplicate table as resolver context
+        lua_pushcfunction(L, evaluateKey);  // this evaluator for subsequent calls
+        lua_pushvalue(L, -6);       // duplicate key
+        lua_pushvalue(L, -6);       // duplicate x
+        lua_pushvalue(L, -6);       // duplicate y
+        int retval=lua_pcall(L, 5, 1, 0);     // resolver(context,evaluator,key,x,y) ->  tile
+        if (retval!=0) {
+            throwLuaError(L, "Error within tile key resolver");
+            return 0;
+        }        
+        // check result - must be tile or table
+        if (!(is_tile(L, -1) || is_table(L, -1))) {
+            throwLuaError(L, "Tile key resolver error - expected tile or table as return value");
+            return 0;
+        }
+        return 1;
+    }
+    return 0;
+}
+
+static int setObjectByKey(lua_State *L, std::string key, int j, int i, bool onlyFloors = false) {
+    lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_RESOLVER);
+    lua_pushvalue(L, -1);
+    lua_pushstring(L, key.c_str());
+    lua_pushinteger(L, j);
+    lua_pushinteger(L, i);
+    
+    evaluateKey(L);
+
     if (lua_isnil(L, -1)) {
         throwLuaError(L, ecl::strf("World init undefined tile '%s' at %d, %d", 
                 key.c_str(), j, i).c_str());
         return 0;
     }
     setObjectByTile(L, j, i, onlyFloors);
-    lua_pop(L, 1);  // tile
+    lua_pop(L, 5);  // tile, y, x, key, resolver
+
     if (GetFloor(GridPos(j, i)) == NULL) {
         lua_pushvalue(L, -1);
         lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_FLOORKEY);
-        if (is_tiles(L, -2)) {
-            lua_gettable(L, -2);        // get tile entry in table
-            lua_remove(L, -2);          // remove extra copy of tile as resolver
-        } else {
-            lua_pushinteger(L, j);
-            lua_pushinteger(L, i);
-            int retval=lua_pcall(L, 3, 1, 0);
-            if (retval!=0) {
-                throwLuaError(L, "Error within tile key resolver");
-                return 0;
-            }
-            // check result - must be tile or table
-            if (!(is_tile(L, -1) || is_table(L, -1))) {
-                throwLuaError(L, "Tile key resolver error - expected tile or table as return value");
-                return 0;
-            }
-        }   
+        lua_pushinteger(L, j);
+        lua_pushinteger(L, i);
+        
+        evaluateKey(L);
+        
         if (lua_isnil(L, -1)) {
             throwLuaError(L, ecl::strf("World init undefined default tile at %d, %d",  j, i).c_str());
             return 0;
         }
         setObjectByTile(L, j, i, true);   // limit to floor set
-        lua_pop(L, 1);  // default tile
+        lua_pop(L, 5);  // default tile
         if (GetFloor(GridPos(j, i)) == NULL) {
             throwLuaError(L, ecl::strf("World no floor at %d, %d", j, i).c_str());
             return 0;
@@ -1907,7 +1938,8 @@
 }
 
 static int createWorld(lua_State *L) {
-    // world, (ti|function), string, table
+    // world, resolver, default key, map
+    // world, (ti|function|table), string, table
     if (server::WorldSized) {
         throwLuaError(L, "World recreation not allowed");
         return 0;
@@ -1917,7 +1949,7 @@
     int height = 0;
     int keyLength = 1;
     std::string defaultKey;
-    if (!((is_tiles(L, 2)||lua_isfunction(L, 2)) && lua_isstring(L, 3) && 
+    if (!((is_tiles(L, 2)||lua_isfunction(L, 2)||is_table(L, 2)) && lua_isstring(L, 3) && 
             (is_table(L, 4) || (lua_isnumber(L, 4) && lua_isnumber(L, 5))))) {
         throwLuaError(L, "World create with false argument types");
         return 0;
@@ -2516,6 +2548,7 @@
 static CFunction worldMethods[] = {
     {createWorld,                   "create"},
     {registerWorldUserMethod,       "_register"},
+    {evaluateKey,                    "_evaluate"},
     {getFloor,                      "fl"},
     {getItem,                       "it"},
     {getStone,                      "st"},



From ral at mail.berlios.de  Fri Feb 15 20:49:36 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 15 Feb 2008 20:49:36 +0100
Subject: [Enigma-game-svn] r1039 - team_levelpacks/team_test_new_api
Message-ID: <200802151949.m1FJnad3029818@sheep.berlios.de>

Author: ral
Date: 2008-02-15 20:49:35 +0100 (Fri, 15 Feb 2008)
New Revision: 1039

Modified:
   team_levelpacks/team_test_new_api/ralT034_1.xml
   team_levelpacks/team_test_new_api/ralT035_1.xml
Log:
Test Level new API:
- resolver testlevel updates

Modified: team_levelpacks/team_test_new_api/ralT034_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-15 19:45:10 UTC (rev 1038)
+++ team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-15 19:49:35 UTC (rev 1039)
@@ -19,11 +19,13 @@
 
 wo["ConserveLevel"] = true
 
+ti["_"] = {"fl-sahara"}
 ti["r"] = {"fl-rough-red"}
 ti["b"] = {"fl-rough-blue"}
 ti["."] = ti({"fl-rough-blue", checkerboard=0}) .. {"fl-rough-red", checkerboard=1}
 
 ti[" "] = ti["."] .. {"it_blocker"}
+ti["n"] = {}       -- just nothing
 ti["w"] = {"st-wood"}
 ti["s"] = {"st_switch", target="rmfloor"}
 ti["i"] = {"st_switch", target="icefloor"}
@@ -33,7 +35,7 @@
 
 function myresolver(key, x, y)
     if key == " " then
-        if math.random() >= 0.5 then
+        if math.random() >= 0.3 then
             return ti["b"]
         else
             return ti["r"]
@@ -43,9 +45,97 @@
     end
 end
 
+res = {}
+
+function res.random_implementation(context, evaluator, key, x, y)
+    for hit_itr, hit_pair in ipairs(context[3]) do
+        if key == hit_pair[1] then
+            local super = nil
+            if hit_pair[2] ~= nil then
+                super = evaluator(context[2], hit_pair[2], x, y)
+            end
+            local repl_key
+            -- dummy test implementation with 2 keys
+            local r = math.random(context[5])
+            local i = 1
+            local s = context[4][i][2]
+            while s < r do
+                i = i + 1
+                s = s + context[4][i][2]
+            end
+            repl_key = context[4][i][1]
+            local replacement = evaluator(context[2], repl_key, x, y)
+            if super == nil then
+                return replacement
+            elseif type(super) == "table" then
+                return ti(super) .. replacement
+            else
+                return super .. replacement
+            end
+        end
+    end
+    -- key not found
+    return evaluator(context[2], key, x, y)
+end
+
+function res.random(subresolver, hits, replacements)
+    -- syntax: hits = key | {key, [key]*, [{key, superkey}]*}
+    --         replacements = {key, [key]*, [{key, frequency}]*}
+    -- TODO check args!
+    
+    local hit_table = {}
+    if type(hits) == "string" then
+        hit_table[1] = {hits, nil}
+    else
+        for i, v in ipairs(hits) do
+            if type(v) == "string" then
+                hit_table[i] = {v, nil}
+            elseif type(v) == "table" then
+                hit_table[i] = v
+            end
+        end
+    end
+    
+    local repl_table = {}
+    for i, v in ipairs(replacements) do
+        if type(v) == "string" then
+            repl_table[i] = {v, 1}
+        elseif type(v) == "table" then
+            repl_table[i] = v
+        end
+    end
+    local repl_sum = 0
+    for i, v in ipairs(repl_table) do
+        repl_sum = repl_sum + v[2]
+    end
+    local context = {res.random_implementation, subresolver, hit_table, 
+                      repl_table, repl_sum}
+    return context
+end
+
+
+function fullresolver_implementation(context, evaluator, key, x, y)
+    if key == "b" then
+        return ti["r"]
+    elseif key == "r" then
+        return ti["b"]
+    else
+        return evaluator(context[2], key, x, y)
+    end
+end
+
+function fullresolver(subresolver)
+    local context = {fullresolver_implementation, subresolver}
+    return context
+end
+
 resolver = ti
 if wo["IsDifficult"] then
-    resolver = myresolver
+--    resolver = fullresolver(myresolver)
+--    resolver = res.random(ti, " ", {"r","b"})
+--    resolver = res.random(ti, " ", {"r",{"b", 4},"_"})
+--    resolver = res.random(ti, {" ","w"}, {"r",{"b", 4},"_"})
+    resolver = res.random(ti, {" ",{"w","w"}}, {"r",{"b", 2},{"_",4}})
 end
 
 w, h = wo(resolver, " ", {
@@ -61,7 +151,7 @@
 "   bbrr.....rrbb    ",
 "    b2brrrrrb1b     ",
 "       bbbbb        ",
-"si                  "
+"si             n    "
 })
 
 function icefloor(value, sender)

Modified: team_levelpacks/team_test_new_api/ralT035_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-15 19:45:10 UTC (rev 1038)
+++ team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-15 19:49:35 UTC (rev 1039)
@@ -16,16 +16,15 @@
     </el:info>
     <el:luamain><![CDATA[
 
-
 wo["ConserveLevel"] = true
 
-ti[" "] = {"fl-sahara"}
-ti["1"] = ti[" "] .. {"#ac-blackball"}
+ti["  "] = {"fl-sahara"}
+ti[" 1"] = ti["  "] .. {"#ac-blackball"}
 
 -- sample of create world without a given map - just default floors
-w, h = wo(ti, " ", 20, 13)
+w, h = wo(ti, "  ", 20, 13)
 
-wo[{14, 7}] = ti["1"]
+wo[{14, 7}] = ti[" 1"]
 
 -- sample of registry of a world lib function and its usage
 function hurra(world, pos)
@@ -36,21 +35,37 @@
 
 wo:hurra(po({2,3}))
 
--- first version of a general draw map
--- TODO distinguish resolver ti/function, call function
--- TODO accept key length greater 1 (detect on ignore string length)
--- TODO check behaviour on errors and add usable reports
+-- second version of a general draw map
+-- TODO argument check with error on faults
 
-ti["#"] = {"it_blocker"}
+ti[".."] = {"it_blocker"}
+ti["::"] = {"it-cross"}
 
-function drawmap(world, origin, resolver, ignore, map)
+function myresolver(key, x, y)
+    if key == "##" then
+        if math.random() >= 0.5 then
+            return ti[".."]
+        else
+            return ti["::"]
+        end
+    else
+        return ti[key]
+    end
+end
+
+function drawmap(world, resolver, origin, ignore, map)
     local len = string.len(ignore)
     for y=1, #map do
         local linelen = string.len(map[y])
-        for x = 1, linelen do
-            local key = string.sub(map[y], x, x)
+        if math.fmod(linelen, len) ~= 0 then
+            error("drawmap map line ".. y .. " with odd length", 2)
+        end
+        for x = 1, linelen/len do
+            local key = string.sub(map[y], len*(x-1)+1, len*x)
             if key ~= ignore then
-                world[origin + {x-1, y-1}] = resolver[key]
+                world[origin + {x-1, y-1}] =  
+                        world:_evaluate(resolver, key, origin.x + x - 1, 
+                                origin.y + y-1)
             end
         end
     end
@@ -58,10 +73,10 @@
 
 wo:_register("drawmap", drawmap)
 
-wo:drawmap(po({wo.Width-10, wo.Height-5}), ti, "-", {
-  "--###",
-  "###--###",
-  "---###"
+wo:drawmap(myresolver, po({wo.Width-10, wo.Height-5}), "--", {
+  "----######",
+  "######----######",
+  "------######"
 })
 
   ]]></el:luamain>



From ral at mail.berlios.de  Sun Feb 17 23:01:25 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 17 Feb 2008 23:01:25 +0100
Subject: [Enigma-game-svn] r1040 - trunk/src
Message-ID: <200802172201.m1HM1P0X016170@sheep.berlios.de>

Author: ral
Date: 2008-02-17 23:01:24 +0100 (Sun, 17 Feb 2008)
New Revision: 1040

Modified:
   trunk/src/items.cc
   trunk/src/world.cc
   trunk/src/world.hh
   trunk/src/world_internal.hh
Log:
Trunk 1.1: Performance Tuning 
- Hollow speedup of evaluation of meditation finish check
  (replace quadratic algorithm by a constant one)
- fix Hollow: any actor leaving grid did reset hollow whiteball reference
  even if whiteball was still in hollow.
Note:
- reengineering of hollow is still necessary - see TODOs

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-15 19:49:35 UTC (rev 1039)
+++ trunk/src/items.cc	2008-02-17 22:01:24 UTC (rev 1040)
@@ -672,11 +672,13 @@
      * if they have each a small white marble inside them.
      */
     class Hollow : public HillHollow {
+        CLONEOBJ(Hollow);
         DECL_TRAITS;
     public:
         Hollow(Type t = HOLLOW);
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
     protected:
-        INSTANCELISTOBJ(Hollow);    // TinyHollow needs access
         virtual void setup_successor(Item *newitem);
     private:
         // Item interface.
@@ -685,7 +687,6 @@
 
         // Functions.
         bool near_center_p (Actor *a);
-        void check_if_level_finished();
 
         // Variables.
         Actor *whiteball;   // The small white ball that is currently being tracked
@@ -695,15 +696,7 @@
 
 
     class TinyHollow : public Hollow {
-        TinyHollow *clone() {
-            TinyHollow *o = new TinyHollow(*this);
-            instances.push_back(o);
-            return o;
-        }
-        void dispose() {
-            instances.erase(find(instances.begin(), instances.end(), this));
-            delete this;
-        }
+        CLONEOBJ(TinyHollow);
         DECL_TRAITS;
     public:
         TinyHollow() : Hollow(TINYHOLLOW) {}
@@ -791,12 +784,24 @@
 
 /* ---------- Hollow ---------- */
 
-Hollow::InstanceList Hollow::instances;
+// TODO handle set of essential attribute
 
 Hollow::Hollow(Type t)
 : HillHollow(t), whiteball(0)
 {}
 
+void Hollow::on_creation(GridPos p) {
+    if (getDefaultedAttr("essential", 0) == 1)
+        ChangeMeditation(0, +1, 0, 0);
+    HillHollow::on_creation(p);
+}
+
+void Hollow::on_removal(GridPos p) {   //TODO a change from Hollow to TinyHollow is critical -> single class with state reengineering
+    if (getDefaultedAttr("essential", 0) == 1)
+        ChangeMeditation(0, -1, 0, 0);
+    HillHollow::on_removal(p);
+}
+
 bool Hollow::near_center_p (Actor *a)
 {
     return (length(vec_to_center(a->get_pos())) < get_radius()*0.8);
@@ -804,62 +809,46 @@
 
 bool Hollow::actor_hit(Actor *a)
 {
+    const double MINTIME = 1.0;
     ItemID id = get_id (this);
 
     if (id == it_hollow || id == it_tinyhollow) {
-        if (whiteball==0 && get_id(a)==ac_meditation && near_center_p(a))
-        {
+        if (whiteball==NULL && get_id(a)==ac_meditation && near_center_p(a)) {
+            // meditatist entered a free hollow
             whiteball  = a;
             enter_time = server::LevelTime;
+        } else if (whiteball == a) {
+            if (!near_center_p(a)) {
+                // meditatist left hollow
+                whiteball = NULL;
+                if (enter_time == 0) {   // meditatist is registered
+                    bool indispensable = (getDefaultedAttr("essential", 0) == 1);
+                    ChangeMeditation(0, 0, indispensable ? -1 : 0, indispensable ? 0 : -1);
+                }
+            } else  if (enter_time != 0 && (server::LevelTime - enter_time) >= MINTIME) {
+                    // just meditated enough to mark hollow as engaged
+                    bool indispensable = (getDefaultedAttr("essential", 0) == 1);
+                    ChangeMeditation(0, 0, indispensable ? +1 : 0, indispensable ? 0 : +1);
+                    enter_time = 0;  // mark as registered
+            }
         }
-        else if (whiteball==a) {
-            if (!near_center_p(a))
-                whiteball = 0;
-            else
-                check_if_level_finished();
-        }
     }
 
     return false;
 }
 
-void Hollow::actor_leave(Actor *)
-{
-    whiteball = 0;
-}
-
-/* If (a) every small white ball is in a hollow and (b) each ball has
-   been inside the hollow for at least MINTIME milliseconds, finish
-   the level. */
-void Hollow::check_if_level_finished()
-{
-    const double MINTIME = 1.0;
-
-    unsigned wcnt     = 0;      // counts normal hollows with whiteball
-    unsigned ess_wcnt = 0;      // counts essential hollows with whiteball
-    unsigned ess_cnt  = 0;      // counts all essential hollows
-
-    for (Hollow::InstanceList::const_iterator hi = instances.begin();
-         hi != instances.end(); ++hi)
-    {
-        const Hollow& h         = **hi;
-        bool          essential = (h.getAttr("essential") != 0);
-
-        if (h.whiteball && (server::LevelTime - h.enter_time) >= MINTIME) {
-            if (essential) ess_wcnt++;
-            else           wcnt++;
+void Hollow::actor_leave(Actor *a) {
+    if (whiteball == a) {
+        // meditatist left hollow (warp, ...)
+        whiteball = NULL;
+        if (enter_time == 0) {   // meditatist is registered
+            bool indispensable = (getDefaultedAttr("essential", 0) == 1);
+            ChangeMeditation(0, 0, indispensable ? -1 : 0, indispensable ? 0 : -1);
         }
-
-        if (essential) ess_cnt++;
     }
-
-    if (ess_cnt == ess_wcnt &&
-        (wcnt+ess_wcnt) == CountActorsOfKind (ac_meditation))
-    {
-        server::FinishLevel();
-    }
 }
 
+
 void Hollow::setup_successor(Item *newitem) {
     newitem->setAttr("essential", getAttr("essential"));
 }

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-15 19:49:35 UTC (rev 1039)
+++ trunk/src/world.cc	2008-02-17 22:01:24 UTC (rev 1040)
@@ -297,11 +297,9 @@
 
 const double World::contact_e = 0.02;  // epsilon distant limit for contacts
 
-World::World(int ww, int hh) 
-: fields(ww,hh),
-  preparing_level(true),
-  leftmost_actor (NULL), rightmost_actor (NULL)
-{
+World::World(int ww, int hh) : fields(ww,hh), preparing_level(true),
+        leftmost_actor (NULL), rightmost_actor (NULL), numMeditatists (0), 
+        indispensableHollows (0), engagedIndispensableHollows(0), engagedDispensableHollows (0) {
     w = ww;
     h = hh;
 
@@ -403,6 +401,9 @@
         // if game is already running, call on_creation() from here
         a->on_creation(pos);
     }
+    
+    if (get_id(a) == ac_meditation)
+        ChangeMeditation(+1, 0, 0, 0);
 }
 
 Actor * World::yield_actor(Actor *a) {
@@ -2249,6 +2250,21 @@
 
 /* -------------------- Functions -------------------- */
 
+void ChangeMeditation(int diffMeditatists, int diffIndispensableHollows,
+        int diffEngagedIndispensableHollows, int diffEngagedDispensableHollows) {
+    level->numMeditatists += diffMeditatists;
+    level->indispensableHollows += diffIndispensableHollows;
+    level->engagedIndispensableHollows += diffEngagedIndispensableHollows;
+    level->engagedDispensableHollows += diffEngagedDispensableHollows;
+
+    if (!level->preparing_level 
+            && level->indispensableHollows == level->engagedIndispensableHollows
+            && (level->engagedIndispensableHollows + level->engagedDispensableHollows) == level->numMeditatists) {
+        server::FinishLevel();
+    }
+    
+}
+
 void addDelayedImpulse (const Impulse& impulse, double delay, 
                                const Stone *estimated_receiver) 
 {

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-02-15 19:49:35 UTC (rev 1039)
+++ trunk/src/world.hh	2008-02-17 22:01:24 UTC (rev 1040)
@@ -234,6 +234,11 @@
       and `st'. */
     bool HasRubberBand (Actor *a, Stone *st);
 
+/* -------------------- Meditation Control ---------------------- */
+
+    void ChangeMeditation(int diffMeditatists, int diffIndispensableHollows,
+            int diffEngagedIndispensableHollows, int diffEngagedDispensableHollows);
+
 /* -------------------- Puzzle Stone Scrambling -------------------- */
 
     void SetScrambleIntensity(int intensity);

Modified: trunk/src/world_internal.hh
===================================================================
--- trunk/src/world_internal.hh	2008-02-15 19:49:35 UTC (rev 1039)
+++ trunk/src/world_internal.hh	2008-02-17 22:01:24 UTC (rev 1040)
@@ -340,6 +340,10 @@
         MouseForce           m_mouseforce;
         ConstantForce        m_flatforce;
         int                  scrambleIntensity;
+        int                  numMeditatists; 
+        int                  indispensableHollows;
+        int                  engagedIndispensableHollows;
+        int                  engagedDispensableHollows;
 
         //! True if game is not running yet
         bool                 preparing_level;



From ral at mail.berlios.de  Tue Feb 19 23:29:09 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 19 Feb 2008 23:29:09 +0100
Subject: [Enigma-game-svn] r1041 - trunk/lib-src/oxydlib
Message-ID: <200802192229.m1JMT9oI009226@sheep.berlios.de>

Author: ral
Date: 2008-02-19 23:29:09 +0100 (Tue, 19 Feb 2008)
New Revision: 1041

Modified:
   trunk/lib-src/oxydlib/Makefile.am
Log:
trunk 1.1:
- fix #11225 EnigmaNames.cpp missing in distrib



Modified: trunk/lib-src/oxydlib/Makefile.am
===================================================================
--- trunk/lib-src/oxydlib/Makefile.am	2008-02-17 22:01:24 UTC (rev 1040)
+++ trunk/lib-src/oxydlib/Makefile.am	2008-02-19 22:29:09 UTC (rev 1041)
@@ -1,4 +1,4 @@
-EXTRA_DIST = README README.enigma
+EXTRA_DIST = README README.enigma EnigmaNames.cpp EnigmaNames.h
 
 noinst_LIBRARIES = liboxyd.a
 



From ral at mail.berlios.de  Wed Feb 20 00:34:51 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 20 Feb 2008 00:34:51 +0100
Subject: [Enigma-game-svn] r1042 - in trunk: data src src/lev
Message-ID: <200802192334.m1JNYpGH029641@sheep.berlios.de>

Author: ral
Date: 2008-02-20 00:34:47 +0100 (Wed, 20 Feb 2008)
New Revision: 1042

Added:
   trunk/data/api1init.lua
   trunk/data/api2init.lua
Removed:
   trunk/data/init.lua
Modified:
   trunk/src/lev/Proxy.cc
   trunk/src/server.cc
   trunk/src/server.hh
Log:
Trunk 1.1: new API
- rename init.lua to api1init.lua
- add api2init.lua for new api basic lua code:
  - constants
  - methods: drawmap
  - resolvers: random
Note:
- Just the level specific api init code is loaded.


Copied: trunk/data/api1init.lua (from rev 1040, trunk/data/init.lua)

Added: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2008-02-19 22:29:09 UTC (rev 1041)
+++ trunk/data/api2init.lua	2008-02-19 23:34:47 UTC (rev 1042)
@@ -0,0 +1,195 @@
+------------------------------------------------------------------------
+-- Copyright (C) 2008 Ronald Lamprecht
+--
+-- This program is free software; you can redistribute it and/or
+-- modify it under the terms of the GNU General Public License
+-- as published by the Free Software Foundation; either version 2
+-- of the License, or (at your option) any later version.
+--
+-- This program is distributed in the hope that it will be useful,
+-- but WITHOUT ANY WARRANTY; without even the implied warranty of
+-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+-- GNU General Public License for more details.
+--
+-- You should have received a copy of the GNU General Public License along
+-- with this program; if not, write to the Free Software Foundation, Inc.,
+-- 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
+--
+------------------------------------------------------------------------
+
+-------------------------------------------------
+-- Level API 2 as of Enigma 1.10 compatibility --
+-------------------------------------------------
+
+
+-----------------------------------------------
+-- Use Enigma internal random implementation --
+-----------------------------------------------
+
+math.random = en.random
+random = math.random
+-- randseed is issued by Enigma application and must not be disturbed
+math.randomseed = function () end
+
+-----------------------------
+-- old stuff to be checked --
+-----------------------------
+
+-- TODO remove Tick
+function Tick (deltatime)
+    -- do nothing by default
+end
+
+
+
+function PrintTable(t)
+    for i,v in pairs(t) do
+        if type(v)=="table" then
+            print (i.." - "..v[1]..","..v[2])
+        else
+            print (i.." - "..v)
+        end
+    end
+end
+
+
+function Require(filename)
+    enigma.LoadLib(string.sub(filename,8,string.len(filename)-4))
+end
+
+---------------
+-- Constants --
+----------------
+
+-- state
+OFF = 0
+ON  = 1
+CLOSED = 0
+OPEN   = 1
+
+-- color
+BLACK = 0
+WHITE = 1
+NOCOLOR = nil
+
+-- oxyd color
+OXYD_BLUE   =  0
+OXYD_RED    =  1
+OXYD_GREEN  =  2
+OXYD_YELLOW =  3
+OXYD_CYAN   =  4
+OXYD_PURPLE =  5
+OXYD_WHITE  =  6
+OXYD_BLACK  =  7
+OXYD_AUTO   = -1
+OXYD_FAKE   = -2
+OXYD_FART   = -3
+OXYD_BOLD   = -4
+
+-- direction
+WEST  = 0
+SOUTH = 1
+EAST  = 2
+NORTH = 3
+
+-- essential
+DISPENSIBLE   = 0
+INDISPENSIBLE = 1
+PERKIND       = 2
+
+---------------------
+-- Utility Methods --
+---------------------
+
+function drawmap(world, resolver, origin, ignore, map)
+    local len = string.len(ignore)
+    for y=1, #map do
+        local linelen = string.len(map[y])
+        if math.fmod(linelen, len) ~= 0 then
+            error("drawmap map line ".. y .. " with odd length", 2)
+        end
+        for x = 1, linelen/len do
+            local key = string.sub(map[y], len*(x-1)+1, len*x)
+            if key ~= ignore then
+                world[origin + {x-1, y-1}] =  
+                        world:_evaluate(resolver, key, origin.x + x - 1, 
+                                origin.y + y-1)
+            end
+        end
+    end
+end
+
+wo:_register("drawmap", drawmap)
+
+---------------
+-- Resolvers --
+---------------
+
+res = {}
+
+function res.random_implementation(context, evaluator, key, x, y)
+    for hit_itr, hit_pair in ipairs(context[3]) do
+        if key == hit_pair[1] then
+            local super = nil
+            if hit_pair[2] ~= nil then
+                super = evaluator(context[2], hit_pair[2], x, y)
+            end
+            local repl_key
+            local r = math.random(context[5])
+            local i = 1
+            local s = context[4][i][2]
+            while s < r do
+                i = i + 1
+                s = s + context[4][i][2]
+            end
+            repl_key = context[4][i][1]
+            local replacement = evaluator(context[2], repl_key, x, y)
+            if super == nil then
+                return replacement
+            elseif type(super) == "table" then
+                return ti(super) .. replacement
+            else
+                return super .. replacement
+            end
+        end
+    end
+    -- key not found
+    return evaluator(context[2], key, x, y)
+end
+
+function res.random(subresolver, hits, replacements)
+    -- syntax: hits = key | {key, [key]*, [{key, superkey}]*}
+    --         replacements = {key, [key]*, [{key, frequency}]*}
+    -- TODO check args!
+    
+    local hit_table = {}
+    if type(hits) == "string" then
+        hit_table[1] = {hits, nil}
+    else
+        for i, v in ipairs(hits) do
+            if type(v) == "string" then
+                hit_table[i] = {v, nil}
+            elseif type(v) == "table" then
+                hit_table[i] = v
+            end
+        end
+    end
+    
+    local repl_table = {}
+    for i, v in ipairs(replacements) do
+        if type(v) == "string" then
+            repl_table[i] = {v, 1}
+        elseif type(v) == "table" then
+            repl_table[i] = v
+        end
+    end
+    local repl_sum = 0
+    for i, v in ipairs(repl_table) do
+        repl_sum = repl_sum + v[2]
+    end
+    local context = {res.random_implementation, subresolver, hit_table, 
+                      repl_table, repl_sum}
+    return context
+end
+
+


Property changes on: trunk/data/api2init.lua
___________________________________________________________________
Name: svn:eol-style
   + native

Deleted: trunk/data/init.lua
===================================================================
--- trunk/data/init.lua	2008-02-19 22:29:09 UTC (rev 1041)
+++ trunk/data/init.lua	2008-02-19 23:34:47 UTC (rev 1042)
@@ -1,714 +0,0 @@
-------------------------------------------------------------------------
--- Copyright (C) 2002,2003,2004,2005 Daniel Heck
--- Copyright (C) 2007,2008 Ronald Lamprecht
---
--- This program is free software; you can redistribute it and/or
--- modify it under the terms of the GNU General Public License
--- as published by the Free Software Foundation; either version 2
--- of the License, or (at your option) any later version.
---
--- This program is distributed in the hope that it will be useful,
--- but WITHOUT ANY WARRANTY; without even the implied warranty of
--- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--- GNU General Public License for more details.
---
--- You should have received a copy of the GNU General Public License along
--- with this program; if not, write to the Free Software Foundation, Inc.,
--- 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
---
-------------------------------------------------------------------------
-
------------------------------------------------
--- Use Enigma internal random implementation --
------------------------------------------------
-
-if type(en) == "table" then
-    math.random = en.random
-else
-    math.random = enigma.random
-end
-random = math.random
--- randseed is issued by Enigma application and must not be disturbed
-math.randomseed = function () end
-
--------------------------------
--- Compatibility for old API --
--------------------------------
-
-enigma._MakeObject = enigma.MakeObject
-enigma._GetKind = enigma.GetKind
-enigma._SetAttrib = enigma.SetAttrib
-enigma._GetAttrib = enigma.GetAttrib
-enigma._GetObjectTemplate = enigma.GetObjectTemplate
-
-RenamingObjectsOld2New = {
-}
-
-RenamingObjectsNew2Old = {
-    it_blocker = "it-blocker",
-    it_blocker_new = "it-blocker-new",
-    it_trigger = "it-trigger",
-    st_blocker = "st-blocker",
-    st_blocker_new = "st-blocker-growing",
-    st_boulder = "st-bolder",
-    st_boulder_n = "st-bolder-n",
-    st_boulder_e = "st-bolder-e",
-    st_boulder_s = "st-bolder-s",
-    st_boulder_w = "st-bolder-w",
-    st_coinslot = "st-coinslot",
-    st_floppy = "st-floppy",
-    st_fourswitch = "st-fourswitch",
-    st_oxyd = "st-oxyd",
-    st_switch_instant = "st-switch",
-    st_switch_black_instant = "st-switch_black",
-    st_switch_white_instant = "st-switch_white",
-    st_window = "st-window"
-}
-
-for k,v in pairs(RenamingObjectsNew2Old) do
-    RenamingObjectsOld2New[v] = k
-end
-
-function enigma.MakeObject(name)
-    if name == "st-key" then
-        local obj = enigma._MakeObject("st_key")
-        -- Old API keycode default was 0 for st-key, but 1 for it-key!
-        enigma._SetAttrib(obj, "keycode", 0)
-        return obj
-    elseif name == "st-key_a" then
-        local obj = enigma._MakeObject("st_key")
-        enigma._SetAttrib(obj, "keycode", 1)
-        return obj
-    elseif name == "st-key_b" then
-        local obj = enigma._MakeObject("st_key")
-        enigma._SetAttrib(obj, "keycode", 2)
-        return obj
-    elseif name == "st-key_c" then
-        local obj = enigma._MakeObject("st_key")
-        enigma._SetAttrib(obj, "keycode", 3)
-        return obj
-    end
-
-    newname = RenamingObjectsOld2New[name]
-    if newname ~= nil then
-        return enigma._MakeObject(newname)
-    else
-        return enigma._MakeObject(name)
-    end
-end
-
-function enigma.GetKind(obj)
-    local _newname = enigma._GetKind(obj)
-    local _oldname = RenamingObjectsNew2Old[_newname]
-
-    if _newname == "st_key" then
-        local code = enigma._GetAttrib(obj, "keycode")
-        if code == 0 then
-            return "st-key"
-        elseif code == 1 then
-            return "st-key_a"
-        elseif code == 2 then
-            return "st-key_b"
-        elseif code == 3 then
-            return "st-key_c"
-        else -- arbitrary keycodes
-            return "st-key"
-        end
-    end
-    if _oldname ~= nil then
-        return _oldname
-    else
-        return _newname
-    end
-end
-
-function enigma.SetAttrib(obj, key, val)
-     local _val = val
-     local _key = key
-     local _obj_name = enigma.GetKind(obj)
-
-     if _obj_name == "st-oxyd" then
-         if key == "color" then
-	     _val = 0 + val   -- convert to int
-             _key = "oxydcolor"
-	 end
-     end
-     if (_obj_name == "st-switch") or (_obj_name == "st-switch_black")
-             or (_obj_name == "st-switch_white") 
-             or (_obj_name == "st-floppy") then
-         if key == "on" then
-	     _key = "state"   -- new attr name
-	 end
-     end
-     if key == "targetx" then
-         local d = enigma._GetAttrib(obj, "destination")
-         if (en.usertype(d) == "position") then
-             _val = po(val + 0, d.y)
-         else
-             _val = po(val + 0, 0)
-         end
-         _key = "destination"
-     end
-     if key == "targety" then
-         local d = enigma._GetAttrib(obj, "destination")
-         if (en.usertype(d) == "position") then
-             _val = po(d.x, val + 0)
-         else
-             _val = po(0, val + 0)
-         end
-         _key = "destination"
-     end
-     if key == "target1" or key == "target2" or key == "target3" or key == "target4" then
-        local i = 0 + string.sub(key, -1)  -- the target number
-        local d = enigma._GetAttrib(obj, "destination")
-        if (d == nil) or (type(d) ~= "table") then
-            d = {}
-        end
-
-        local c = {}
-
-        for str in string.gmatch(val, "%d+") do
-            table.insert(c, 0 + str)
-        end
-        d[i] = enigma.GetFloor(c[1], c[2]) -- requires floor to be set first (invalid for Nat method - level Bodyguard)
-        if d[i] == nil then
-             error("Actor Horse without floor error")
-        end
-        for j = 1, i do
-           if d[j] == nil then
-              d[j] = d[i]
-           end
-        end
-        _key = "destination"
-        _val = d
-     end
-     enigma._SetAttrib(obj, _key, _val)
-end
-
-function enigma.GetAttrib(obj, key)
-     local _key = key
-     local _obj_name = enigma.GetKind(obj)
-     if (_obj_name == "st-switch") or (_obj_name == "st-switch_black")
-             or (_obj_name == "st-switch_white") 
-             or (_obj_name == "st-floppy") then
-         if key == "on" then
-	     _key = "state"
-	     end
-     end
-     if key == "blackball" or key == "whiteball" then
-         _key = "color"
-     end
-     if _obj_name == "st-oxyd" then
-         _key = "oxydcolor"
-     end
-
-     local val = enigma._GetAttrib(obj, _key)
-     
-     if key == "blackball" then
-        if val == 0 then val = 1 else val = 0 end
-     end
-     if key == "whiteball" then
-        if val == 1 then val = 1 else val = 0 end
-     end
-     if _obj_name == "st-oxyd" then
-         if key == "color" then
-	     val = "" .. val   -- convert to string
-	 end
-     end
-     if key == "targetx" then
-         local d = enigma._GetAttrib(obj, "destination")
-         if (en.usertype(d) == "position") then
-             val = d.x
-         end
-     end
-     if key == "targety" then
-         local d = enigma._GetAttrib(obj, "destination")
-         if (en.usertype(d) == "position") then
-             val = d.y
-         end
-     end
-     if key == "invisible" then
-         if val == false then val = 0 else val = 1 end
-     end
-     return val
-end
-
-function enigma.GetObjectTemplate(kind)
-    local _kind = RenamingObjectsOld2New[kind]
-    if _kind == nil then
-        _kind = kind
-    end
-    if kind == "st-key" or kind == "st-key_a" or kind == "st-key_b" or kind == "st-key_c" then
-        _kind = "st_key"
-    end
-    return enigma._GetObjectTemplate(_kind)
-end
-
-MessageRenaming = {
-    it_blocker__trigger = "toggle",
-    it_blocker__openclose = "toggle",
-    ["it-burnable__trigger"] = "ignite",
-    ["it-burnable_ignited__trigger"] = "ignite",
-    ["it-burnable_burning__trigger"] = "ignite",
-    ["it-burnable_fireproof__trigger"] = "ignite",
-    ["it-burnable_ash__trigger"] = "ignite",
-    ["it-burnable_oil__trigger"] = "ignite",
-    ["it-hill__trigger"] = "flip",
-    ["it-hollow__trigger"] = "flip",
-    ["it-tinyhill__trigger"] = "flip",
-    ["it-tinyhollow__trigger"] = "flip",
-    ["it-vortex-open__trigger"] = "toggle",
-    ["it-vortex-closed__trigger"] = "toggle",
-    ["st-black1__trigger"] = "signal",
-    ["st-black2__trigger"] = "signal",
-    ["st-black3__trigger"] = "signal",
-    ["st-black4__trigger"] = "signal",
-    st_blocker__openclose = "toggle",
-    st_blocker__trigger = "toggle",
-    st_blocker_new__openclose = "toggle",
-    st_blocker_new__trigger = "toggle",
-    st_boulder__direction = "orientate",
-    ["st-fart__trigger"] = "toggle",
-    st_fourswitch__trigger = "toggle",
-    st_floppy__onoff = "toggle",
-    st_key__onoff = "toggle",
-    ["st-stoneimpulse__trigger"] = "signal",
-    ["st-stoneimpulse-hollow__trigger"] = "signal",
-    ["st-stoneimpulse_movable__trigger"] = "signal",
-    ["st-lightpassenger__trigger"] = "toggle",
-    ["st-lightpassenger__onoff"] = "toggle",
-    ["st-mirror__trigger"] = "turn",
-    ["st-oxyd__trigger"] = "toggle",
-    ["st-plain__trigger"] = "signal",
-    ["st-plain_hole__trigger"] = "signal",
-    st_switch_instant__onoff = "toggle",
-    st_switch_black_instant__onoff = "toggle",
-    st_switch_white_instant__onoff = "toggle",
-    ["st-volcano__trigger"] = "toggle",
-    ["st-white1__trigger"] = "signal",
-    ["st-white2__trigger"] = "signal",
-    ["st-white3__trigger"] = "signal",
-    ["st-white4__trigger"] = "signal"
-}
-----------------------
--- old API 1.0      --
-----------------------
-
-TRUE = 1
-FALSE = 0
-
-EASY = 1
-HARD = 2
-
-difficult = options.Difficulty==2
-
-function Tick (deltatime)
-    -- do nothing by default
-end
-
-
-----------------------
--- Global variables --
-----------------------
-
-level_width = 0
-level_height = 0
-
-oxyd_default_flavor = "b"       -- Default flavor for oxyd stones.
-oxyd_count = 0
-oxyd_current_color = 0
-
-DefaultAttribs = {}
-
----------------------
--- Helper routines --
----------------------
-
-function PrintTable(t)
-    for i,v in pairs(t) do
-        if type(v)=="table" then
-            print (i.." - "..v[1]..","..v[2])
-        else
-            print (i.." - "..v)
-        end
-    end
-end
-
-
-function Require(filename)
-    enigma.LoadLib(string.sub(filename,8,string.len(filename)-4))
-end
-
-
-----------------------------------
--- Routines for creating levels --
-----------------------------------
-
-function CreateWorld(w, h)
-    oxyd_default_flavor = "b"
-    oxyd_count = 0
-    oxyd_current_color = 0
-    DefaultAttribs = {}
-
-    level_width = w
-    level_height = h
-    world.Resize(w, h)
-end
-
-
-function SetDefaultAttribs(objname, attribs)
-    local list = DefaultAttribs[objname]
-    if list then
-        for key,val in pairs(attribs) do list[key] = val end
-    else
-        DefaultAttribs[objname]= attribs
-    end
-end
-
-function SetAttrib(obj, key,val)
-    if key == "name" then
-        enigma.NameObject(obj, val)
-    end
-    enigma.SetAttrib(obj, key, val)
-end
-
-GetAttrib = enigma.GetAttrib
-GetKind   = enigma.GetKind
-
-function set_attribs(obj, attrs)
-    if not attrs then return end
-    if type(attrs) ~= "table" then
-        error("Can't assign attributes, expected table but got "..type(attrs)..".")
-    end
-    for key,val in pairs(attrs) do
-	set_attrib(obj, key, val)
-    end
-end
-
-function MakeObject(name, attrs)
-    local obj = enigma.MakeObject(name)
-    local a=DefaultAttribs[name]
-    if a then set_attribs(obj, a) end
-    set_attribs(obj, attrs)
-    return obj
-end
-
-function set_floor(name, x, y, attrs)
-    local obj = make_object(name, attrs)
-    enigma.SetFloor(x,y,obj)
-    return obj
-end
-function set_item(name, x, y, attrs)
-    local obj = make_object(name, attrs)
-    enigma.SetItem(x,y,obj)
-    return obj
-end
-function set_stone(name, x,y, attrs)
-    local obj=make_object(name, attrs)
-    enigma.SetStone(x,y,obj)
-    return obj
-end
-
-kill_stone = enigma.KillStone
-kill_item = enigma.KillItem
-
-function SendMessage (target, msg, arg)
-    if type(target) == "string" then
-        enigma.SendMessage (enigma.GetNamedObject (target), msg, arg)
-    else
-        enigma.SendMessage (target, msg, arg)
-    end
-end
-
-function SetAttribs (target, attribs)
-    if type (target) == "string" then
-        set_attribs(enigma.GetNamedObject(target), attribs)
-    else
-        set_attribs(target, attribs)
-    end
-end
-
-
-function AddRubberBand(obj1,obj2, strength,length, minlen)
-    enigma.AddRubberBand(obj1,obj2, strength or 10, length or 2, minlen or 0)
-end
-
-function fill_floor(name, x0,y0, w,h)
-    if x0 == nil then x0 = 0 end
-    if y0 == nil then y0 = 0 end
-    if w  == nil then w  = level_width end
-    if h  == nil then h  = level_height end
-    for y=y0,y0+h-1 do
-	for x=x0,x0+w-1 do
-            set_floor(name, x, y) 
-        end
-    end
-end
-
-function fill_items(name, x0,y0,w,h)
-    for y=y0,y0+h-1 do
-	for x=x0,x0+w-1 do set_item(name, x, y) end
-    end
-end
-
-function fill_stones(name, x0,y0, w,h)
-    for y=y0,y0+h-1 do
-        for x=x0,x0+w-1 do set_stone(name, x, y) end
-    end
-end
-
-function draw_floor(name, xy0, xystep, n, attrs)
-    local x,y = xy0[1],xy0[2]
-    for i=1,n do
-	set_floor(name, x, y, attrs)
-	x = x+xystep[1]
-	y = y+xystep[2]
-    end
-end
-
-function draw_checkerboard_floor (name1, name2, x, y, w, h, attrs)
-    for i=1,h do
-        for j=1,w do
-             if mod(i,2) == mod(j,2) then
-                 set_floor (name1, x+j-1, y+i-1, attrs )
-             else
-                 set_floor (name2, x+j-1, y+i-1, attrs )
-            end
-        end
-    end
-end
-
-function draw_items(name, xy0, xystep, n, attrs)
-    local x,y = xy0[1],xy0[2]
-    for i=1,n do
-	set_item(name, x, y, attrs)
-	x = x+xystep[1]
-	y = y+xystep[2]
-    end
-end
-
-function draw_stones(name, xy0, xystep, n, attrs)
-    local x,y = xy0[1],xy0[2]
-    for i=1,n do
-	set_stone(name, x, y, attrs)
-	x = x+xystep[1]
-	y = y+xystep[2]
-    end
-end
-
-function draw_border(stonename, x0, y0, w, h)
-    if x0 == nil then x0 = 0 end
-    if y0 == nil then y0 = 0 end
-    if w  == nil then w  = level_width end
-    if h  == nil then h  = level_height end
-    draw_stones(stonename, {x0,y0}, {1,0}, w)
-    draw_stones(stonename, {x0,y0+h-1},{1,0}, w)
-    draw_stones(stonename, {x0,y0}, {0,1}, h)
-    draw_stones(stonename, {x0+w-1,y0},{0,1}, h)
-end
-
-function set_stones(name, poslist, attrs)
-    for i,xy in pairs(poslist) do
-	set_stone(name, xy[1], xy[2], attrs)
-    end
-end
-
-function SetActor(name, x, y, attrs)
-    local obj=make_object(name, attrs)
-    enigma.SetActor(x, y,obj)
-    return obj
-end
-
----------------------------------------------
--- Creation of particular kinds of objects --
----------------------------------------------
-function fakeoxyd(x,y) 
-    return set_stone("st-fakeoxyd",x,y) 
-end
-
-
--- Create an oxyd stone with the current default flavor.
-function oxyd(x, y, flavor, color)
-    local f = flavor or oxyd_default_flavor
-    local c = color or oxyd_current_color
-    local a = {flavor=f, color=""..c}
-    local obj = set_stone("st-oxyd", x, y, a)
-
-    -- if "color" argument not provided, use next available color
-    if not color then
-        oxyd_count = oxyd_count +1
-
-        if oxyd_count == 2 then
-            oxyd_count = 0
-            oxyd_current_color = oxyd_current_color + 1
-        end
-    end
-
-    return obj
-end
-
--- Shuffle the colors of all oxyd stones in the current landscape.
-function oxyd_shuffle()
-    enigma.SendMessage(enigma.GetObjectTemplate("st-oxyd"), "shuffle", nil)
-end
-
--- Close all oxyd stones in the current landscape
-function oxyd_closeall()
-    enigma.SendMessage(enigma.GetObjectTemplate("st-oxyd"), "closeall", nil)
-end
-
-function oneway(x,y,orient)
-    return set_stone("st-oneway",x,y,{orientation=orient})
-end
-function laser(x,y,is_on,dir)
-    return set_stone("st-laser",x,y,{on=is_on, dir=dir})
-end
-
-function mirrorp(x,y,movable, transp,orient)
-    return set_stone("st-pmirror", x, y, {movable=movable, transparent=transp,
-                         orientation=orient})
-end
-function mirror3(x,y,movable, transp, orient)
-    return set_stone("st-3mirror", x, y, {movable=movable, transparent=transp,
-                         orientation = orient})
-end
-
-PUZ_0000=1                      -- hollow
-PUZ_0001=2                      -- w
-PUZ_0010=3                      -- s
-PUZ_0011=4                      -- sw
-PUZ_0100=5                      -- e
-PUZ_0101=6                      -- ew
-PUZ_0110=7                      -- es
-PUZ_0111=8                      -- esw
-PUZ_1000=9                      -- n
-PUZ_1001=10                     -- nw
-PUZ_1010=11                     -- ns
-PUZ_1011=12                     -- nsw
-PUZ_1100=13                     -- ne
-PUZ_1101=14                     -- new
-PUZ_1110=15                     -- nes
-PUZ_1111=16                     -- nesw
-
--- functions using puzzle-style tiles:
-
-function puzzle(x, y, conn)
-    return set_stone("st-puzzle", x,y, {connections=conn})
-end
-function puzzle2(x, y, conn)
-    return set_stone("st-puzzle", x,y, {connections=conn,oxyd=1})
-end
-function bigbrick(x, y, conn)
-   return set_stone("st-bigbrick-n",x,y,{connections=conn})
-end
-
---
-
-function switch(x,y,target,action)
-    return set_stone("st-switch", x,y, {target=target, action=action})
-end
-
-function abyss(x,y) set_floor("fl-abyss",x,y) end
-
-
-
-
------------
--- ITEMS --
------------
-function hollow(x,y) set_item("it-hollow", x,y) end
-function Document(x,y,t) set_item("it-document", x, y, {text=t}) end
-function hammer(x,y) set_item("it-hammer",x,y) end
-function dynamite(x,y) set_item("it-dynamite",x,y) end
-function bomb(x,y) set_item("it-blackbomb",x,y) end
-function keya(x,y) set_item("it-key", x,y, {keycode=1.0}) end
-function keyb(x,y) set_item("it-key", x,y, {keycode=2.0}) end
-function keyc(x,y) set_item("it-key", x,y, {keycode=3.0}) end
-
-function shogundot1(x,y,attrs) set_item("it-shogun-s", x, y, attrs) end
-function shogundot2(x,y,attrs) set_item("it-shogun-m", x, y, attrs) end
-function shogundot3(x,y,attrs) set_item("it-shogun-l", x, y, attrs) end
-
-function Wormhole(x,y,targetx, targety, attribs)
-    local attrs = attribs or {}
-    attrs.targetx = targetx
-    attrs.targety = targety
-
-    set_item("it-wormhole", x,y, attrs)
-end
-
-function Doorh(x,y,attrs)
-    local attrs = attrs or {}
-    attrs.type="h"
-    set_stone("st-door",x,y,attrs)
-end
-function Doorv(x,y,attrs)
-    local attrs = attrs or {}
-    attrs.type="v"
-    set_stone("st-door",x,y,attrs)
-end
-
-EAST = enigma.EAST
-NORTH = enigma.NORTH
-SOUTH = enigma.SOUTH
-WEST = enigma.WEST
-
----------------
--- GRADIENTS --
----------------
-
-SLOPE_S         = 1
-SLOPE_N         = 2
-SLOPE_E         = 3
-SLOPE_W         = 4
-SLOPE_LARGE_SE  = 5
-SLOPE_LARGE_SW  = 6
-SLOPE_LARGE_NE  = 7
-SLOPE_LARGE_NW  = 8
-SLOPE_SMALL_SE  = 9
-SLOPE_SMALL_NE  = 10
-SLOPE_SMALL_SW  = 11
-SLOPE_SMALL_NW  = 12
-SLOPE_S_FORCE_W = 13
-SLOPE_N_FORCE_W = 14
-SLOPE_S_FORCE_E = 15
-SLOPE_N_FORCE_E = 16
-SLOPE_E_FORCE_N = 17
-SLOPE_W_FORCE_N = 18
-SLOPE_E_FORCE_S = 19
-SLOPE_W_FORCE_S = 20
-FLAT_FORCE_S    = 21
-FLAT_FORCE_N    = 22
-FLAT_FORCE_E    = 23
-FLAT_FORCE_W    = 24
-
-function Gradient( x, y, type )
-   if (type==nil) then error("Illegal gradient type"); end
-   if (type>=1 and type<=24) then
-      set_floor( "fl-gradient", x, y, {type=type} )
-   else
-      error("Unknown gradient type '"..type.."'");
-   end
-end
-
-
-Signal = enigma.AddSignal
-SetItem = set_item
-
-----------------------------------------------------
--- Define lowercase aliases for various functions --
-----------------------------------------------------
-
-create_world = CreateWorld
-get_attrib = GetAttrib
-get_kind = GetKind
-set_attrib = SetAttrib
-make_object = MakeObject
-set_actor = SetActor
-
-document = Document
-doorh    = Doorh
-doorv    = Doorv
-gradient = Gradient
-wormhole = Wormhole
-

Modified: trunk/src/lev/Proxy.cc
===================================================================
--- trunk/src/lev/Proxy.cc	2008-02-19 22:29:09 UTC (rev 1041)
+++ trunk/src/lev/Proxy.cc	2008-02-19 23:34:47 UTC (rev 1042)
@@ -626,6 +626,7 @@
             server::LevelStatus = getLevelStatus();
             if (server::EnigmaCompatibility < 1.10)
                 server::AllowSingleOxyds = true;
+            server::PrepareLua();
         }
         processDependencies();
         loadLuaCode();

Modified: trunk/src/server.cc
===================================================================
--- trunk/src/server.cc	2008-02-19 22:29:09 UTC (rev 1041)
+++ trunk/src/server.cc	2008-02-19 23:34:47 UTC (rev 1042)
@@ -260,15 +260,18 @@
     server::WorldSized = false;
 
     player::PrepareLevel();
+}
 
-    /* Restart the Lua environment so symbol definitions from
-       different levels do not get in each other's way.*/
+void server::PrepareLua() {
+    // Restart the Lua environment so symbol definitions from
+    // different levels do not get in each other's way.
+    int api = (server::EnigmaCompatibility < 1.10) ? 1 : 2;
     lua::ShutdownLevel();
     lua_State *L = lua::InitLevel();
     if (lua::DoSysFile(L, "compat.lua") != lua::NO_LUAERROR) {
         throw XLevelLoading("While processing 'compat.lua':\n"+lua::LastError(L));
     }
-    if (lua::DoSysFile(L, "init.lua") != lua::NO_LUAERROR) {
+    if (lua::DoSysFile(L, ecl::strf("api%dinit.lua", api)) != lua::NO_LUAERROR) {
         throw XLevelLoading("While processing 'init.lua':\n"+lua::LastError(L));
     }
     if (lua::DoSysFile(L, "security.lua") != lua::NO_LUAERROR) {

Modified: trunk/src/server.hh
===================================================================
--- trunk/src/server.hh	2008-02-19 22:29:09 UTC (rev 1041)
+++ trunk/src/server.hh	2008-02-19 23:34:47 UTC (rev 1042)
@@ -138,6 +138,7 @@
 
     /** Prepare the server for a new game. */
     void InitNewGame();
+    void PrepareLua();
 
     void Tick (double dtime);
     void RestartLevel();



From ral at mail.berlios.de  Thu Feb 21 00:15:28 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Thu, 21 Feb 2008 00:15:28 +0100
Subject: [Enigma-game-svn] r1043 - in trunk: data data/schemas src
Message-ID: <200802202315.m1KNFS4l030220@sheep.berlios.de>

Author: ral
Date: 2008-02-21 00:15:27 +0100 (Thu, 21 Feb 2008)
New Revision: 1043

Modified:
   trunk/data/Makefile.am
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/data/schemas/objects.xsd
   trunk/src/items.cc
   trunk/src/lua.cc
   trunk/src/world.cc
   trunk/src/world.hh
   trunk/src/world_internal.hh
Log:
Trunk 1.1: new API reengineering magnet
- rename it-magnet to it_magnet
- magnet as StateObject - on,off,signal,toggle,state support
- magnet as direct multiinherited ForceField instead of FF helper object
- magnet range and strength can be reset during the game
- magnet slight performance optimization
- abolish ConstantForce object
- fix r1042 compile problems due to missing data/Makefile.am changes
- use classname for methodmapping in api1init - no more need to list all subkinds


Modified: trunk/data/Makefile.am
===================================================================
--- trunk/data/Makefile.am	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/data/Makefile.am	2008-02-20 23:15:27 UTC (rev 1043)
@@ -1,6 +1,8 @@
-SUBDIRS = gfx fonts schemas levels sound soundsets gfx16 gfx32 gfx40 gfx48 
+SUBDIRS = gfx fonts schemas levels sound soundsets gfx16 gfx32 gfx40 gfx48 gfx64
 
 pkgdata_DATA = \
+	api1init.lua \
+	api2init.lua \
 	enigma_conf.lua \
 	models.lua \
 	models-2d.lua \
@@ -10,7 +12,6 @@
 	models-32.lua \
 	models-40.lua \
 	models-48.lua \
-	init.lua \
 	startup.lua \
 	sound-defaults.lua \
 	compat.lua \

Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/data/api1init.lua	2008-02-20 23:15:27 UTC (rev 1043)
@@ -47,6 +47,9 @@
 RenamingObjectsNew2Old = {
     it_blocker = "it-blocker",
     it_blocker_new = "it-blocker-new",
+    it_magnet = "it-magnet",
+    it_magnet_on = "it-magnet-on",
+    it_magnet_off = "it-magnet-off",
     it_trigger = "it-trigger",
     st_blocker = "st-blocker",
     st_blocker_new = "st-blocker-growing",
@@ -135,7 +138,9 @@
      end
      if (_obj_name == "st-switch") or (_obj_name == "st-switch_black")
              or (_obj_name == "st-switch_white") 
-             or (_obj_name == "st-floppy") then
+             or (_obj_name == "st-floppy") 
+             or (_obj_name == "it-magnet") or (_obj_name == "it-magnet-on")
+             or (_obj_name == "it-magnet-off") then
          if key == "on" then
 	     _key = "state"   -- new attr name
 	 end
@@ -190,7 +195,9 @@
      local _obj_name = enigma.GetKind(obj)
      if (_obj_name == "st-switch") or (_obj_name == "st-switch_black")
              or (_obj_name == "st-switch_white") 
-             or (_obj_name == "st-floppy") then
+             or (_obj_name == "st-floppy")
+             or (_obj_name == "it-magnet") or (_obj_name == "it-magnet-on")
+             or (_obj_name == "it-magnet-off") then
          if key == "on" then
 	     _key = "state"
 	     end
@@ -255,6 +262,7 @@
     ["it-burnable_oil__trigger"] = "ignite",
     ["it-hill__trigger"] = "flip",
     ["it-hollow__trigger"] = "flip",
+    it_magnet__onoff = "toggle",
     ["it-tinyhill__trigger"] = "flip",
     ["it-tinyhollow__trigger"] = "flip",
     ["it-vortex-open__trigger"] = "toggle",
@@ -281,9 +289,7 @@
     ["st-oxyd__trigger"] = "toggle",
     ["st-plain__trigger"] = "signal",
     ["st-plain_hole__trigger"] = "signal",
-    st_switch_instant__onoff = "toggle",
-    st_switch_black_instant__onoff = "toggle",
-    st_switch_white_instant__onoff = "toggle",
+    st_switch__onoff = "toggle",
     ["st-volcano__trigger"] = "toggle",
     ["st-white1__trigger"] = "signal",
     ["st-white2__trigger"] = "signal",

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/data/schemas/objects.xml	2008-02-20 23:15:27 UTC (rev 1043)
@@ -7,7 +7,9 @@
     <attr name="counterclock" type="bool" default="false" rw="rw"/>
     <attr name="inverse" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
+    <attr name="range" type="double" default="1.0" rw="rw"/>
     <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
+    <attr name="strength" type="double" default="1" rw="rw"/>
     <attr name="target" type="tokens" default="nil" rw="rw"/>
   </attributes>
   <messages>
@@ -52,6 +54,19 @@
     </object>
     <object name="it_blocker_new" init="true">
     </object>
+    <object name="it_magnet">
+      <attr name="range" default="nil"/>
+      <attr name="strength" default="nil"/>
+      <msg name="on"/>
+      <msg name="off"/>
+      <msg name="signal"/>
+    </object>
+    <object name="it_magnet_off">
+      <attr name="state" value="0"/>
+    </object>
+    <object name="it_magnet_on">
+      <attr name="state" value="1"/>
+    </object>
     <object name="st" abstract="true"/>
     <object name="st_blocker">
       <attr name="autoclose"/>

Modified: trunk/data/schemas/objects.xsd
===================================================================
--- trunk/data/schemas/objects.xsd	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/data/schemas/objects.xsd	2008-02-20 23:15:27 UTC (rev 1043)
@@ -23,8 +23,8 @@
                   <xs:attribute name="name" type="xs:string" use="required"/>
                   <xs:attribute name="type" type="valueType" use="required"/>
                   <xs:attribute name="default" type="xs:string" use="required"/>
-                  <xs:attribute name="min" type="xs:string" use="optional"/>
-                  <xs:attribute name="max" type="xs:string" use="optional"/>
+                  <xs:attribute name="min" type="xs:string" use="optional" default="0"/>
+                  <xs:attribute name="max" type="xs:string" use="optional" default="1"/>
                   <xs:attribute name="rw" type="xs:string" use="required"/>
                   <xs:anyAttribute namespace="##targetNamespace" processContents="skip"/>
                 </xs:complexType>

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/src/items.cc	2008-02-20 23:15:27 UTC (rev 1043)
@@ -1626,72 +1626,87 @@
 
 
 /* -------------------- Magnet -------------------- */
-namespace
-{
-    class Magnet : public OnOffItem {
-        class Magnet_FF : public ForceField {
-        public:
-            Magnet_FF()
-            : m_active(false), strength(30), range(1000)
-            {}
 
-            void set_pos(GridPos p) { center = p.center(); }
-            void set_range(double r) { range = r; }
-            void set_strength(double s) { strength = s; }
+    class Magnet : public Item, public ForceField {
+    private:
+        enum iState {
+            OFF,
+            ON
+        };
+       
+    public:
+        CLONEOBJ(Magnet);
+        DECL_TRAITS_ARRAY(2, state);
 
-            void add_force(Actor *a, V2 &f) {
-                if (m_active) {
-                    V2 dv = center - a->get_pos_force();
-                    double dist = length(dv);
+        Magnet(bool onoff);
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
 
-                    if (dist >= 0.2 && dist < range)
-                        f += 0.6* strength * dv / (dist*dist);
-                }
-            }
+        // GridObject interface
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        virtual void init_model();
 
-            bool   m_active;
-            V2     center;
-            double strength;
-            double range;
-        };
-
-        CLONEOBJ(Magnet);
-        DECL_TRAITS_ARRAY(2, is_on());
-    public:
-        Magnet(bool onoff) : OnOffItem (onoff) {
-        }
+        // ForceField interface
+        virtual void add_force(Actor *a, V2 &f);
+        
     private:
-        void on_creation (GridPos p) {
-            double range = getDefaultedAttr("range", server::MagnetRange);
-            double strength = getDefaultedAttr("strength", server::MagnetForce);
+        double correctedStrength;     // 0.6 * strength
+        double squareRange;
+    };
+    
+    Magnet::Magnet(bool isOn) : Item(), correctedStrength (0.6 * 30), squareRange (1000 * 1000) {
+        state = isOn ? ON : OFF;
+    }
 
-            ff.m_active = is_on();
-            ff.set_pos (p);
-	        ff.set_range (range);
-	        ff.set_strength (strength);
+    std::string Magnet::getClass() const {
+        return "it_magnet";
+    }
+    
+    void Magnet::setAttr(const std::string &key, const Value &val) {
+        if (key == "range") {
+            double range = (val.getType() == Value::NIL) ? server::MagnetRange : (double)val;
+            squareRange = range * range;
+        } else if (key == "strength") {
+            correctedStrength = 0.6 * ((val.getType() == Value::NIL) ? server::MagnetForce : (double)val);
+        } else
+            Item::setAttr(key, val);
+    }
+    
+    void Magnet::init_model() {
+        set_model(ecl::strf("it-magnet%s", state == ON ? "-on" : "-off"));
+    }
+    
+    void Magnet::on_creation(GridPos p) {
+        double range = getDefaultedAttr("range", server::MagnetRange);
+        squareRange = range * range;
+        correctedStrength = 0.6 * (double)getDefaultedAttr("strength", server::MagnetForce);
 
-            AddForceField(&ff);
-            Item::on_creation (p);
-        }
-        
-        void on_removal (GridPos p) {
-            Item::on_removal(p);
-            RemoveForceField(&ff);
-        }
+        AddForceField(this);
+        Item::on_creation(p);
+    }
+    
+    void Magnet::on_removal(GridPos p) {
+        Item::on_removal(p);
+        RemoveForceField(this);
+    }
+    
+    void Magnet::add_force(Actor *a, V2 &f) {
+        if (state == ON) {
+            V2 dv = get_pos().center() - a->get_pos_force();
+            double squareDist = square(dv);
 
-        virtual void notify_onoff(bool on) {
-            ff.m_active = on;
+            if (squareDist >= 0.04 && squareDist < squareRange)
+                f += (correctedStrength / squareDist) * dv;
         }
-
-
-        Magnet_FF ff;
-    };
-
+    }
+    
     ItemTraits Magnet::traits[2] = {
-        { "it-magnet-off", it_magnet_off, itf_static | itf_indestructible, 0.0 },
-        { "it-magnet-on",  it_magnet_on,  itf_static | itf_indestructible, 0.0 },
+        { "it_magnet_off", it_magnet_off, itf_static | itf_indestructible, 0.0 },
+        { "it_magnet_on",  it_magnet_on,  itf_static | itf_indestructible, 0.0 },
     };
-}
 
 
 /* -------------------- Wormhole -------------------- */
@@ -1783,7 +1798,7 @@
 
         V2 vec_to_center (V2 v) {return v-get_pos().center();}
         bool near_center_p (Actor *a) {
-            return (length(vec_to_center(a->get_pos())) < 0.5/4);
+            return (length(vec_to_center(a->get_pos())) < 0.5/4);   // TODO use square!
         }
         bool get_target (V2 &targetpos);
 
@@ -3787,9 +3802,9 @@
     RegisterItem (new Key(Key::KEY3));
     RegisterItem (new Landmine);
     RegisterItem (new MagicWand);
-    Register ("it-magnet", new Magnet (false));
-    RegisterItem (new Magnet (true));
-    RegisterItem (new Magnet (false));
+    Register ("it_magnet", new Magnet(false));
+    RegisterItem (new Magnet(true));
+    RegisterItem (new Magnet(false));
     RegisterItem (new Odometer);
     RegisterItem (new OnePKillStone);
     RegisterItem (new OxydBridge);

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/src/lua.cc	2008-02-20 23:15:27 UTC (rev 1043)
@@ -74,7 +74,6 @@
 using enigma::GridPos;
 using enigma::Object;
 using enigma::GridObject;
-using enigma::ForceField;
 using enigma::WorldProxy;
 
 namespace enigma { namespace lua {
@@ -2703,7 +2702,7 @@
     std::string result;
     lua_getglobal(L, "MessageRenaming");
     if (lua_istable(L, -1)) {
-        lua_pushstring(L, ecl::strf("%s__%s", obj->get_kind(), message.c_str()).c_str());
+        lua_pushstring(L, ecl::strf("%s__%s", obj->getClass().c_str(), message.c_str()).c_str());
         lua_gettable(L, -2);
         if (!lua_isnil(L, -1))
             result = lua_tostring(L, -1);

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/src/world.cc	2008-02-20 23:15:27 UTC (rev 1043)
@@ -530,7 +530,7 @@
     if (a->is_on_floor()) {
         if (Floor *floor = a->m_actorinfo.field->floor) {
             // Constant force
-            m_flatforce.add_force(a, f);
+            f += flatForce;
 
             // Mouse force
             add_mouseforce (a, floor, f);
@@ -1671,7 +1671,7 @@
 }
 
 void SetConstantForce (V2 force) {
-    level->m_flatforce.set_force(force);
+    level->flatForce = force;
 }
 
 

Modified: trunk/src/world.hh
===================================================================
--- trunk/src/world.hh	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/src/world.hh	2008-02-20 23:15:27 UTC (rev 1043)
@@ -117,16 +117,6 @@
         virtual void tick(double /*dtime*/) {}
     };
 
-    class ConstantForce : public ForceField {
-    public:
-        ConstantForce(V2 f=V2()) : force(f) {}
-        void add_force(Actor * /*a*/, V2 &f) {
-            f += force;
-        }
-        void set_force (const V2 &force_) { force = force_; }
-    private:
-        V2 force;
-    };
 
 //----------------------------------------------------------------------
 // GLOBAL VARIABLES

Modified: trunk/src/world_internal.hh
===================================================================
--- trunk/src/world_internal.hh	2008-02-19 23:34:47 UTC (rev 1042)
+++ trunk/src/world_internal.hh	2008-02-20 23:15:27 UTC (rev 1043)
@@ -336,9 +336,8 @@
         Actor               *leftmost_actor;   // sorted double linked list of actors
         Actor               *rightmost_actor;  
         vector<RubberBand *> m_rubberbands;
-//        SignalList           m_signals;
         MouseForce           m_mouseforce;
-        ConstantForce        m_flatforce;
+        V2                   flatForce;
         int                  scrambleIntensity;
         int                  numMeditatists; 
         int                  indispensableHollows;



From andreasl at mail.berlios.de  Fri Feb 22 00:37:38 2008
From: andreasl at mail.berlios.de (andreasl at BerliOS)
Date: Fri, 22 Feb 2008 00:37:38 +0100
Subject: [Enigma-game-svn] r1044 - trunk/src
Message-ID: <200802212337.m1LNbcbx001883@sheep.berlios.de>

Author: andreasl
Date: 2008-02-22 00:37:37 +0100 (Fri, 22 Feb 2008)
New Revision: 1044

Modified:
   trunk/src/floors.cc
   trunk/src/items.cc
   trunk/src/stones_complex.cc
   trunk/src/stones_simple.cc
Log:
Trunk:
 - Replacing several "Value(1)" by "true",
   see also revision 957:
    - messages connected to fire
    - messages connected to capturing chess-stones and thiefs
    - messages connected to moving chess-stones


Modified: trunk/src/floors.cc
===================================================================
--- trunk/src/floors.cc	2008-02-20 23:15:27 UTC (rev 1043)
+++ trunk/src/floors.cc	2008-02-21 23:37:37 UTC (rev 1044)
@@ -280,7 +280,7 @@
                     if(has_firetype(flft_fastfire))
                         return force_fire();
                     else
-                        this->setAttr("burnable", Value(1.0));
+                        this->setAttr("burnable", true);
             }
         }
     }
@@ -615,7 +615,6 @@
   forcefac (1.0)
 {
     setAttr("type", Value(type_));
-//    setAttr ("force", Value(1.0));
 }
 
 void Gradient::setAttr(const string& key, const Value &val)
@@ -969,7 +968,7 @@
             SetItem(get_pos(), bag);
         bag = NULL;
         set_anim(get_modelname() + string("-captured"));
-        return Value(1);
+        return true;
     }
     return Floor::message(m);
 }

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-20 23:15:27 UTC (rev 1043)
+++ trunk/src/items.cc	2008-02-21 23:37:37 UTC (rev 1044)
@@ -1141,7 +1141,7 @@
                 return Value();
             } else if (m.message == "heat") {  // used by fire-system
                 change_state(BURNING);
-                return Value(1.0);  // caught message -> no fire!
+                return true;  // caught message -> no fire!
             }
             return Item::message(m);
         }
@@ -1184,7 +1184,7 @@
                 return Value();
             } else if (m.message == "heat") {  // used by fire-system
                 burn();
-                return Value(1.0);  // caught message -> no fire!
+                return true;  // caught message -> no fire!
             }
             return Item::message(m);
         }
@@ -2454,7 +2454,7 @@
             } else if (m.message == "heat") {
                 sound_event ("crack");
                 replace(it_debris);
-                return Value(1.0);
+                return true;
             }
             return Item::message(m);
         }

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-02-20 23:15:27 UTC (rev 1043)
+++ trunk/src/stones_complex.cc	2008-02-21 23:37:37 UTC (rev 1044)
@@ -2609,7 +2609,7 @@
                 // Simple case: Just move.
                 if(try_state(DISAPPEARING)) {
                     set_anim(get_model_name() + "-disappearing");
-                    return Value(1);
+                    return true;
                 } else
                     return Value();
             } else {
@@ -2622,7 +2622,7 @@
                     // must work, because state is IDLE
                     GameTimer.set_alarm(this, capture_interval, false);
                     capture_retry = 0;
-                    return Value(1);
+                    return true;
                 }
                 return Value();
             }
@@ -2656,7 +2656,7 @@
             if(state == IDLE && m.value.to_string() != get_model_name())
                 if(try_state(CAPTURED)) {
                     set_anim(get_model_name() + "-captured");
-                    return Value(1);
+                    return true;
                 }
             return Value();
         } else if(m.message == "move_nne") { return message_move(NORTH, EAST); }

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-02-20 23:15:27 UTC (rev 1043)
+++ trunk/src/stones_simple.cc	2008-02-21 23:37:37 UTC (rev 1044)
@@ -1024,9 +1024,9 @@
         virtual Value message(const Message &m) {
             if (m.message == "fire" && !blockfire) {
                 KillStone(get_pos());
-                return Value(1.0);  // allow fire to spread
+                return true;  // allow fire to spread
             } else if (m.message == "heat" && blockfire) {
-                return Value(1.0);  // block fire
+                return true;  // block fire
             } else if (m.message == "fall") {
                 maybe_fall_or_stopfire();
                 return Value();
@@ -1532,7 +1532,7 @@
             SetItem(get_pos(), bag);
         bag = NULL;
         set_anim(string(get_kind()) + "-captured");
-        return Value(1);
+        return true;
     }
     return Stone::message(m);
 }
@@ -2237,7 +2237,7 @@
         virtual Value message(const Message &m) {
             if (m.message =="heat" || m.message == "fire") {
                 break_me();
-                return Value(1.0);
+                return true;
             }
             return Stone::message(m);
         }



From ral at mail.berlios.de  Fri Feb 22 23:16:55 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 22 Feb 2008 23:16:55 +0100
Subject: [Enigma-game-svn] r1045 - team_levelpacks/team_test_new_api
Message-ID: <200802222216.m1MMGtZF014703@sheep.berlios.de>

Author: ral
Date: 2008-02-22 23:16:54 +0100 (Fri, 22 Feb 2008)
New Revision: 1045

Added:
   team_levelpacks/team_test_new_api/ralT037_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT024_1.xml
   team_levelpacks/team_test_new_api/ralT034_1.xml
   team_levelpacks/team_test_new_api/ralT035_1.xml
Log:
Test Level new API:
- demo laser problem in Switch test level
- resolver demo levels now api2init based
- add rubberband level - demo problems to be solved in new api

Modified: team_levelpacks/team_test_new_api/ralT024_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-21 23:37:37 UTC (rev 1044)
+++ team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-22 22:16:54 UTC (rev 1045)
@@ -32,12 +32,13 @@
 ti["M"] = {"st-mirror-p|"}
 ti["e"] = {"st_switch", target="laser", action="onoff"}
 ti["F"] = {"st-laser", "laser2"}
-ti["f"] = {"st_switch_black_instant", state=1, inverse=true, target="laser2", action="signal"}
+ti["f"] = {"st_switch_black", instant=true, state=1, inverse=true, target="laser2", action="signal"}
 ti["G"] = {"st-laser", "laser3"}
 ti["g"] = {"st_switch_black", target="laser3", action="signal", name="colorswitch"}
 ti["H"] = {"st-laser", "laser4"}
 ti["h"] = {"st_switch_white", state=1, target="laser4", action="signal"}
 ti["s"] = {"st_switch", target="recolor"}
+ti["w"] = {"it-hammer"}
 
 ti["1"] = ti["y"] .. {"#ac-blackball"}
 ti["2"] = ti["y"] .. {"#ac-whiteball"}
@@ -53,7 +54,7 @@
 "       1 2   g  h   ",
 "             G  H   ",
 "f                   ",
-"F                   ",
+"F         w         ",
 "                    ",
 "                    "
 })

Modified: team_levelpacks/team_test_new_api/ralT034_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-21 23:37:37 UTC (rev 1044)
+++ team_levelpacks/team_test_new_api/ralT034_1.xml	2008-02-22 22:16:54 UTC (rev 1045)
@@ -45,75 +45,6 @@
     end
 end
 
-res = {}
-
-function res.random_implementation(context, evaluator, key, x, y)
-    for hit_itr, hit_pair in ipairs(context[3]) do
-        if key == hit_pair[1] then
-            local super = nil
-            if hit_pair[2] ~= nil then
-                super = evaluator(context[2], hit_pair[2], x, y)
-            end
-            local repl_key
-            -- dummy test implementation with 2 keys
-            local r = math.random(context[5])
-            local i = 1
-            local s = context[4][i][2]
-            while s < r do
-                i = i + 1
-                s = s + context[4][i][2]
-            end
-            repl_key = context[4][i][1]
-            local replacement = evaluator(context[2], repl_key, x, y)
-            if super == nil then
-                return replacement
-            elseif type(super) == "table" then
-                return ti(super) .. replacement
-            else
-                return super .. replacement
-            end
-        end
-    end
-    -- key not found
-    return evaluator(context[2], key, x, y)
-end
-
-function res.random(subresolver, hits, replacements)
-    -- syntax: hits = key | {key, [key]*, [{key, superkey}]*}
-    --         replacements = {key, [key]*, [{key, frequency}]*}
-    -- TODO check args!
-    
-    local hit_table = {}
-    if type(hits) == "string" then
-        hit_table[1] = {hits, nil}
-    else
-        for i, v in ipairs(hits) do
-            if type(v) == "string" then
-                hit_table[i] = {v, nil}
-            elseif type(v) == "table" then
-                hit_table[i] = v
-            end
-        end
-    end
-    
-    local repl_table = {}
-    for i, v in ipairs(replacements) do
-        if type(v) == "string" then
-            repl_table[i] = {v, 1}
-        elseif type(v) == "table" then
-            repl_table[i] = v
-        end
-    end
-    local repl_sum = 0
-    for i, v in ipairs(repl_table) do
-        repl_sum = repl_sum + v[2]
-    end
-    local context = {res.random_implementation, subresolver, hit_table, 
-                      repl_table, repl_sum}
-    return context
-end
-
-
 function fullresolver_implementation(context, evaluator, key, x, y)
     if key == "b" then
         return ti["r"]

Modified: team_levelpacks/team_test_new_api/ralT035_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-21 23:37:37 UTC (rev 1044)
+++ team_levelpacks/team_test_new_api/ralT035_1.xml	2008-02-22 22:16:54 UTC (rev 1045)
@@ -53,26 +53,6 @@
     end
 end
 
-function drawmap(world, resolver, origin, ignore, map)
-    local len = string.len(ignore)
-    for y=1, #map do
-        local linelen = string.len(map[y])
-        if math.fmod(linelen, len) ~= 0 then
-            error("drawmap map line ".. y .. " with odd length", 2)
-        end
-        for x = 1, linelen/len do
-            local key = string.sub(map[y], len*(x-1)+1, len*x)
-            if key ~= ignore then
-                world[origin + {x-1, y-1}] =  
-                        world:_evaluate(resolver, key, origin.x + x - 1, 
-                                origin.y + y-1)
-            end
-        end
-    end
-end
-
-wo:_register("drawmap", drawmap)
-
 wo:drawmap(myresolver, po({wo.Width-10, wo.Height-5}), "--", {
   "----######",
   "######----######",

Added: team_levelpacks/team_test_new_api/ralT037_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT037_1.xml	2008-02-21 23:37:37 UTC (rev 1044)
+++ team_levelpacks/team_test_new_api/ralT037_1.xml	2008-02-22 22:16:54 UTC (rev 1045)
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Rubberband new API" el:subtitle="" el:id="20080211ral151"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 1035 $" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["~"] = {"fl-water"}
+ti["s"] = {"st-shogun", "him"}
+ti["w"] = {"st-wood", "you"}
+ti["r"] = {"it-rubberband", target="you", length=4}
+ti["S"] = {"st_switch", target="killwood"}
+ti["T"] = {"st-turnstile"}
+ti["t"] = {"st-turnstile-n","it"}
+ti["R"] = {"it-rubberband", target="it", length=4}
+ti["p"] = {"st-swap", "you"}
+ti["1"] = {"#ac-blackball", "me"}
+
+w, h = wo(ti, " ", {
+"                    ",
+"               t    ",
+"           R   T    ",
+"                    ",
+"        ~           ",
+"                    ",
+"     S pw  s        ",
+"                    ",
+"        r  1        ",
+"                    ",
+"                    ",
+"                    ",
+"                    "
+})
+
+enigma.AddRubberBand(no["me"], no["him"], 5, 4)
+
+function killwood()
+    no["you"]:kill()
+end
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT037_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native



From ral at mail.berlios.de  Sat Feb 23 00:59:10 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 23 Feb 2008 00:59:10 +0100
Subject: [Enigma-game-svn] r1046 - trunk/src
Message-ID: <200802222359.m1MNxAob032611@sheep.berlios.de>

Author: ral
Date: 2008-02-23 00:59:09 +0100 (Sat, 23 Feb 2008)
New Revision: 1046

Modified:
   trunk/src/laser.cc
Log:
Trunk 1.1: Performance Tuning 
- LaserBeam replace algorithms with O(n^2) and O(n log n) with O(n) ones,
  n being number LaserBeam items
- LaserBeam efficient beam lists management
Note/TODO:
- static lists should be ivars of world
- in case of assertions within laser calc some beam items might not be freed


Modified: trunk/src/laser.cc
===================================================================
--- trunk/src/laser.cc	2008-02-22 22:16:54 UTC (rev 1045)
+++ trunk/src/laser.cc	2008-02-22 23:59:09 UTC (rev 1046)
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -16,6 +17,7 @@
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
  *
  */
+#include "errors.hh"
 #include "laser.hh"
 #include "sound.hh"
 #include "stones_internal.hh"
@@ -65,9 +67,11 @@
 
         // Variables
         DirectionBits directions;
-
-        static vector<LaserBeam*> instances;
-        static map<GridPos, int>  old_laser_positions;
+        
+        static list<LaserBeam *> beamList1;
+        static list<LaserBeam *> beamList2;
+        static list<LaserBeam *> *gridBeams;
+        static list<LaserBeam *> *lastBeams;
     };
     ItemTraits LaserBeam::traits = {"it-laserbeam", it_laserbeam, 
                                     itf_static | itf_indestructible, 0.0 };
@@ -248,8 +252,10 @@
 //   when the laser goes on or off, use the `PhotoStone'
 //   mixin.
 
-vector<LaserBeam*> LaserBeam::instances;
-map<GridPos, int>  LaserBeam::old_laser_positions;
+list<LaserBeam *> LaserBeam::beamList1;
+list<LaserBeam *> LaserBeam::beamList2;
+list<LaserBeam *> *LaserBeam::gridBeams = &LaserBeam::beamList1;
+list<LaserBeam *> *LaserBeam::lastBeams = &LaserBeam::beamList2;
 
 void LaserBeam::init_model()
 {
@@ -297,9 +303,9 @@
         if (Item *it = GetItem(p))
             it->on_laserhit (dir);
         else {
-            LaserBeam *lb = new LaserBeam (dir);
+            LaserBeam *lb = new LaserBeam(dir);
             SetItem(p, lb);
-            instances.push_back(lb);
+            gridBeams->push_back(lb);
         }
     }
 }
@@ -324,47 +330,46 @@
 }
 
 void LaserBeam::kill_all()
-{
-    assert(old_laser_positions.empty());
-
-    while (!instances.empty())
-    {
-        LaserBeam *lb  = instances[0];
-        GridPos    pos = lb->get_pos();
-
-        old_laser_positions[pos] = static_cast<int>(lb->directions);
-        KillItem(pos);
+{    
+    list<LaserBeam *> *tmpBeamList = lastBeams;
+    ASSERT(tmpBeamList->empty(), XLevelRuntime, "Laser Beam - old list not empty");
+    lastBeams = gridBeams;
+    for (list<LaserBeam *>::iterator itr = lastBeams->begin(); itr != lastBeams->end(); ++itr) {
+        LaserBeam *beam = *itr;
+        GridPos pos = beam->get_pos();
+        YieldItem(pos);          // now we are the owner of the object!
+        beam->setOwnerPos(pos);  // remember old pos
     }
+    gridBeams = tmpBeamList;
 }
 
 void LaserBeam::all_emitted()
 {
-    vector<LaserBeam*>::const_iterator end  = instances.end();
-    map<GridPos, int>::iterator        none = old_laser_positions.end();
-
-    double x     = 0, y = 0;
+    double x = 0, y = 0;
     int    count = 0;
-
-    for (vector<LaserBeam*>::const_iterator i = instances.begin(); i != end; ++i) {
-        LaserBeam                   *lb    = *i;
-        GridPos                      pos   = lb->get_pos();
-        map<GridPos, int>::iterator  found = old_laser_positions.find(pos);
-
-        if (found != none) {
-            // a beam was at the current position (during last kill_all())
-            DirectionBits old_dir = static_cast<DirectionBits>(found->second);
-
-            if ((old_dir&lb->directions) != lb->directions) {
+    
+    for (list<LaserBeam *>::iterator itr = lastBeams->begin(); itr != lastBeams->end(); ++itr) {
+        LaserBeam *oldBeam = *itr;
+        GridPos p = oldBeam->getOwnerPos();
+        Item * newItem = GetItem(p);
+        if (newItem != NULL && newItem->get_traits().id == it_laserbeam) {
+            LaserBeam *newBeam = dynamic_cast<LaserBeam *>(newItem);
+            newBeam->state = 1; // mark as visited
+            if ((oldBeam->directions & newBeam->directions) != newBeam->directions) {
                 // a beam has been added here
-                x += pos.x;
-                y += pos.y;
+                x += p.x;
+                y += p.y;
                 ++count;
-            }
+            }            
         }
-        else {
-            // store newly created LaserBeams
-            x += pos.x;
-            y += pos.y;
+        delete oldBeam;
+    }
+    for (list<LaserBeam *>::iterator itr = gridBeams->begin(); itr != gridBeams->end(); ++itr) {
+        LaserBeam *newBeam = *itr;
+        GridPos p = newBeam->get_pos();
+        if (newBeam->state == 0) {
+            x += p.x;
+            y += p.y;
             ++count;
         }
     }
@@ -373,13 +378,13 @@
         sound::EmitSoundEvent ("laseron", ecl::V2(x/count+.5, y/count+.5),
                                getVolume("laseron", NULL));
     }
-
-    old_laser_positions.clear();
+    
+    lastBeams->clear();
 }
 
 void LaserBeam::dispose()
 {
-    instances.erase(std::find(instances.begin(), instances.end(), this));
+    gridBeams->erase(std::find(gridBeams->begin(), gridBeams->end(), this));
     delete this;
 }
 



From ral at mail.berlios.de  Sat Feb 23 21:50:04 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 23 Feb 2008 21:50:04 +0100
Subject: [Enigma-game-svn] r1047 - in trunk: data data/schemas src src/lev
Message-ID: <200802232050.m1NKo4H4007624@sheep.berlios.de>

Author: ral
Date: 2008-02-23 21:50:03 +0100 (Sat, 23 Feb 2008)
New Revision: 1047

Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/items.cc
   trunk/src/lev/Proxy.cc
   trunk/src/stones_internal.hh
Log:
Trunk 1.1: new API reengineering wormhole
- rename it-wormhole to it_wormhole
- added missing it_wormhole_on variant
- wormhole as StateObject - on,off,signal,toggle,state support
- wormhole as direct multiinherited ForceField instead of FF helper object
- wormhole range and strength can be reset during the game
- wormhole slight performance optimization
- wormhole added scissor attribute to cut rubberbands
- remove OnOffItem
- fix r1042 crashes on load of dat files


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-02-22 23:59:09 UTC (rev 1046)
+++ trunk/data/api1init.lua	2008-02-23 20:50:03 UTC (rev 1047)
@@ -51,6 +51,8 @@
     it_magnet_on = "it-magnet-on",
     it_magnet_off = "it-magnet-off",
     it_trigger = "it-trigger",
+    it_wormhole_on = "it-wormhole",
+    it_wormhole_off = "it-wormhole-off",
     st_blocker = "st-blocker",
     st_blocker_new = "st-blocker-growing",
     st_boulder = "st-bolder",
@@ -62,9 +64,9 @@
     st_floppy = "st-floppy",
     st_fourswitch = "st-fourswitch",
     st_oxyd = "st-oxyd",
-    st_switch_instant = "st-switch",
-    st_switch_black_instant = "st-switch_black",
-    st_switch_white_instant = "st-switch_white",
+    st_switch = "st-switch",
+    st_switch_black = "st-switch_black",
+    st_switch_white = "st-switch_white",
     st_window = "st-window"
 }
 
@@ -90,6 +92,26 @@
         local obj = enigma._MakeObject("st_key")
         enigma._SetAttrib(obj, "keycode", 3)
         return obj
+    elseif name == "st-switch" then
+        local obj = enigma._MakeObject("st_switch")
+        enigma._SetAttrib(obj, "instant", true)
+        return obj
+    elseif name == "st-switch_black" then
+        local obj = enigma._MakeObject("st_switch_black")
+        enigma._SetAttrib(obj, "instant", true)
+        return obj
+    elseif name == "st-switch_white" then
+        local obj = enigma._MakeObject("st_switch_white")
+        enigma._SetAttrib(obj, "instant", true)
+        return obj
+    elseif name == "it-wormhole" then
+        local obj = enigma._MakeObject("it_wormhole_on")
+        enigma._SetAttrib(obj, "scissor", false)
+        return obj
+    elseif name == "it-wormhole-off" then
+        local obj = enigma._MakeObject("it_wormhole_off")
+        enigma._SetAttrib(obj, "scissor", false)
+        return obj
     end
 
     newname = RenamingObjectsOld2New[name]
@@ -140,7 +162,8 @@
              or (_obj_name == "st-switch_white") 
              or (_obj_name == "st-floppy") 
              or (_obj_name == "it-magnet") or (_obj_name == "it-magnet-on")
-             or (_obj_name == "it-magnet-off") then
+             or (_obj_name == "it-magnet-off") or (_obj_name == "it-wormhole")
+             or (_obj_name == "it-wormhole-off") then
          if key == "on" then
 	     _key = "state"   -- new attr name
 	 end
@@ -197,7 +220,8 @@
              or (_obj_name == "st-switch_white") 
              or (_obj_name == "st-floppy")
              or (_obj_name == "it-magnet") or (_obj_name == "it-magnet-on")
-             or (_obj_name == "it-magnet-off") then
+             or (_obj_name == "it-magnet-off")  or (_obj_name == "it-wormhole")
+             or (_obj_name == "it-wormhole-off") then
          if key == "on" then
 	     _key = "state"
 	     end
@@ -267,6 +291,7 @@
     ["it-tinyhollow__trigger"] = "flip",
     ["it-vortex-open__trigger"] = "toggle",
     ["it-vortex-closed__trigger"] = "toggle",
+    it_wormhole__onoff = "toggle",
     ["st-black1__trigger"] = "signal",
     ["st-black2__trigger"] = "signal",
     ["st-black3__trigger"] = "signal",

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-02-22 23:59:09 UTC (rev 1046)
+++ trunk/data/schemas/objects.xml	2008-02-23 20:50:03 UTC (rev 1047)
@@ -5,9 +5,13 @@
     <attr name="autoclose" type="bool" default="false" rw="rw"/>
     <attr name="color" type="int" default="nil" min="0" max="1" rw="rw"/>
     <attr name="counterclock" type="bool" default="false" rw="rw"/>
+    <attr name="destination" type="tokens" default="nil" rw="rw"/>
+    <attr name="instant" type="bool" default="false" rw="rw"/>
+    <attr name="interval" type="double" default="1" rw="rw"/>
     <attr name="inverse" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
     <attr name="range" type="double" default="1.0" rw="rw"/>
+    <attr name="scissor" type="bool" default="true" rw="rw"/>
     <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
     <attr name="strength" type="double" default="1" rw="rw"/>
     <attr name="target" type="tokens" default="nil" rw="rw"/>
@@ -67,6 +71,22 @@
     <object name="it_magnet_on">
       <attr name="state" value="1"/>
     </object>
+    <object name="it_wormhole">
+      <attr name="destination"/>
+      <attr name="interval" default="0"/>
+      <attr name="range" default="nil"/>
+      <attr name="scissor" default="true"/>
+      <attr name="strength" default="nil"/>
+      <msg name="on"/>
+      <msg name="off"/>
+      <msg name="signal"/>
+    </object>
+    <object name="it_wormhole_off">
+      <attr name="state" value="0"/>
+    </object>
+    <object name="it_wormhole_on">
+      <attr name="state" value="1"/>
+    </object>
     <object name="st" abstract="true"/>
     <object name="st_blocker">
       <attr name="autoclose"/>
@@ -91,6 +111,7 @@
     </object>
     <object name="st_switch">
       <attr name="color"/>
+      <attr name="instant"/>
       <msg name="on"/>
       <msg name="off"/>
       <msg name="signal"/>

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-22 23:59:09 UTC (rev 1046)
+++ trunk/src/items.cc	2008-02-23 20:50:03 UTC (rev 1047)
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2002,2003,2004 Daniel Heck
- * Copyright (C) 2007 Ronald Lamprecht
+ * Copyright (C) 2007,2008 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -172,53 +172,6 @@
     }
 }
 
-
-/* -------------------- OnOffItem -------------------- */
-namespace
-{
-    class OnOffItem : public Item {
-    protected:
-        OnOffItem (bool onoff = false)
-        {
-            setAttr("on", onoff);
-        }
-
-        bool is_on() const {
-            return getAttr("on") == 1;
-        }
-
-        void set_on (bool newon) {
-            if (newon != is_on()) {
-                setAttr("on", Value(newon));
-                init_model();
-                notify_onoff(newon);
-            }
-        }
-
-        virtual Value message(const Message &m) {
-            if (m.message == "onoff") {
-                set_on(!is_on());
-                return Value();
-            } else if (m.message == "signal") {
-                set_on (m.value != 0);
-                return Value();
-            } else if (m.message == "on") {
-                set_on(true);
-                return Value();
-            } else if (m.message == "off") {
-                set_on(false);
-                return Value();
-            }
-            return Item::message(m);
-        }
-
-        // OnOffItem interface
-        virtual void notify_onoff (bool /*on*/) {}
-    };
-}
-
-
-
 /* -------------------- Various simple items -------------------- */
 
 namespace
@@ -1638,7 +1591,7 @@
         CLONEOBJ(Magnet);
         DECL_TRAITS_ARRAY(2, state);
 
-        Magnet(bool onoff);
+        Magnet(bool isOn);
         
         // Object interface
         virtual std::string getClass() const;
@@ -1728,159 +1681,161 @@
 \endverbatim
 */
 
-namespace
-{
-    class WormHole_FF : public ForceField {
-    public:
-        WormHole_FF() : strength(0.6 * 50), rangesquared(1000000) {}
 
-        void set_pos(GridPos p) { center = p.center(); }
-        void set_range (double r) { rangesquared = r*r; }
-        void set_strength (double s) { strength = 0.6 * s; }
-
-        void add_force(Actor *a, V2 &f) {
-            V2 b = center - a->get_pos();
-            double bb = square(b);
-            if (bb < rangesquared && bb>0)
-                f += (strength/bb)*b;
-        }
-
-        V2     center;          // Center of the force field
-        double strength;        // Strength of the force
-        double rangesquared;    // Range of the force squared
-    };
-
-    class WormHole : public OnOffItem, public enigma::TimeHandler {
-        CLONEOBJ(WormHole);
-        DECL_TRAITS_ARRAY(2, is_on());
+    class WormHole : public Item, public ForceField, public enigma::TimeHandler {
+    private:
+        /**
+         * warping as bit 2 of state
+         */
+        enum iState {
+            OFF_IDLE,        ///< force off, ready to teleport
+            ON_IDLE,         ///< force on,  ready to teleport
+            OFF_ENGAGED,     ///< force off, rejecting teleport
+            ON_ENGAGED       ///< force on,  rejecting teleport
+        };
+        
     public:
-        WormHole(bool onoff_) : OnOffItem(onoff_) {
-            state = TELEPORT_IDLE;
-            justWarping = false;
-        }
+        CLONEOBJ(WormHole);
+        DECL_TRAITS_ARRAY(2, state & 1);
+        
+        WormHole(bool isOn);
+        virtual ~WormHole();
+        
+        // Object interface
+        virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
 
-        void init_model();
-        bool actor_hit(Actor *a);
-        void notify_onoff (bool /* onoff */) { set_forcefield();  }
-        void alarm();
+        // StateObject interface
+        virtual int externalState() const;
+        virtual void setState(int extState);
 
-    protected:
-        virtual ~WormHole() {
-            GameTimer.remove_alarm (this);
-        }
+        // GridObject interface
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        virtual void init_model();
+        
+        // Item interface
+        virtual bool actor_hit(Actor *a);
+
+        // ForceField interface
+        virtual void add_force(Actor *a, V2 &f);
+        
+        // TimeHandler interface
+        virtual void alarm();
+        
     private:
-        enum State { TELEPORT_IDLE, TELEPORT_WAITING } state;
-        // Note that there're two notions of on and off for this object:
-        // The OnOffItem-part is only used to operate the force field,
-        // whereas the teleport ability is controlled by the state-variable.
-        // Animation is turned off when either one of them is off.
+        bool near_center_p(Actor *a);
 
-        void on_creation (GridPos p) {
-            Item::on_creation (p);
-            set_forcefield();
-        }
-        void on_removal (GridPos p);
-
-        void set_forcefield() {
-            if (is_on()) {
-                ff.set_pos(get_pos());
-                double range = getDefaultedAttr("range", server::WormholeRange);
-                ff.set_range (range);
-
-                double s = getDefaultedAttr("strength", server::WormholeForce);
-                ff.set_strength (s);
-
-                AddForceField(&ff);
-            } else {
-                RemoveForceField(&ff);
-            }
-        }
-
-        V2 vec_to_center (V2 v) {return v-get_pos().center();}
-        bool near_center_p (Actor *a) {
-            return (length(vec_to_center(a->get_pos())) < 0.5/4);   // TODO use square!
-        }
-        bool get_target (V2 &targetpos);
-
-        double get_interval() const {
-            return getAttr("interval");
-        }
-
-        // Variables.
-        WormHole_FF ff;
-        bool        justWarping;  // to avoid recursions
+        double correctedStrength;     ///< 0.6 * strength
+        double squareRange;           ///< range of the force squared
     };
 
-    ItemTraits WormHole::traits[2] = {
-        { "it-wormhole-off", it_wormhole_off, itf_static, 0.0 },
-        { "it-wormhole",     it_wormhole_on,  itf_static, 0.0 }
-    };
-}
-
-bool WormHole::get_target(V2 &targetpos) {
-    Value dest = getAttr("destination");
-    if (dest.getType() == Value::POSITION) {
-        // arbitrary precision position as destination
-        targetpos = dest;
-        return true;
-    } else {
-        // evaluate the first object 
-        TokenList tl = dest;  // convert any object type value to a tokenlist 
-        if (tl.empty())
-            return false;
-        ObjectList ol = tl.front();  // convert first token to a objectlist
-        if (ol.empty())
-            return false;
-        GridObject *go = dynamic_cast<GridObject *>(ol.front());  // get first object
-        if (go != NULL) {   // no actors as destination!
-            GridPos p = go->get_pos();
-            if (IsInsideLevel(p)) {   // no objects in inventory,...
-                targetpos = p.center();
-                return true;
+    WormHole::WormHole(bool isOn) : Item(), correctedStrength (0.6 * 30), squareRange (1000 * 1000) {
+        state = isOn ? ON_IDLE : OFF_IDLE;    // includes warping false
+    }
+    
+    WormHole::~WormHole() {
+        GameTimer.remove_alarm(this);
+    }
+    
+    std::string WormHole::getClass() const {
+        return "it_wormhole";
+    }
+    
+    void WormHole::setAttr(const std::string &key, const Value &val) {
+        if (key == "range") {
+            double range = (val.getType() == Value::NIL) ? server::WormholeRange : (double)val;
+            squareRange = range * range;
+        } else if (key == "strength") {
+            correctedStrength = 0.6 * ((val.getType() == Value::NIL) ? server::WormholeForce : (double)val);
+        } else
+            Item::setAttr(key, val);
+    }
+    
+    int WormHole::externalState() const {
+        return state % 2;
+    }
+    
+    void WormHole::setState(int extState) {
+        // switch force on and off
+        if (extState != state % 2) {          // react only on force changes
+            state = (state & ~1) + extState;  // keep other flags
+            if (isDisplayable()) {
+                if (extState == 1)
+                    AddForceField(this);
+                else
+                    RemoveForceField(this);
             }
         }
     }
-    return false;
-}
+    
+    void WormHole::on_creation (GridPos p) {
+        Item::on_creation (p);
+        if (state % 2 == 1)
+            AddForceField(this);
+    }
 
-bool WormHole::actor_hit(Actor *actor)
-{
-    ASSERT(!justWarping, XLevelRuntime, "WormHole:: Recursion detected!");
-    if (state == TELEPORT_IDLE && near_center_p(actor)) {
-        client::Msg_Sparkle (get_pos().center());
-        V2 targetpos;
-        if (get_target (targetpos)) {
-            sound_event ("warp");
-            if(get_interval() > 0) {
-                state = TELEPORT_WAITING;
-                GameTimer.set_alarm(this, get_interval(), false);
-                init_model();
+    void WormHole::on_removal(GridPos p) {
+        if (state % 2 == 1)
+            RemoveForceField(this);
+        Item::on_removal(p);
+        ASSERT((state & 4) == 0, XLevelRuntime, "Tried to kill a busy wormhole. Please use another way.");
+    }
+    
+    void WormHole::init_model() {
+        if ((state & 3) == ON_IDLE)
+            set_anim("it-wormhole");
+        else
+            set_model("it-wormhole-off");
+    }
+    
+    bool WormHole::actor_hit(Actor *actor) {
+        ASSERT((state & 4) == 0, XLevelRuntime, "WormHole:: Recursion detected!");
+        if ((state & 2) == 0 && near_center_p(actor)) {   // may teleport
+            client::Msg_Sparkle (get_pos().center());
+            V2 targetpos;
+            if (getDestinationByIndex(0, targetpos)) {
+                sound_event ("warp");
+                double latency = getAttr("interval");
+                if(latency > 0) {
+                    state |= 2;  // mark engaged
+                    GameTimer.set_alarm(this, latency, false);
+                    init_model();
+                }
+                state |= 4;  // mark warping
+                bool isScissor = to_bool(getAttr("scissor")) || server::GameCompatibility != GAMET_ENIGMA;
+                if (isScissor)
+                    KillRubberBands(actor);
+                WarpActor(actor, targetpos[0], targetpos[1], false);
+                state &= ~4; // release warping
             }
-            justWarping = true;
-            WarpActor(actor, targetpos[0], targetpos[1], false);
-            justWarping = false;
         }
+        return false;
     }
-    return false;
-}
+    
+    void WormHole::add_force(Actor *a, V2 &f) {
+        V2 dv = get_pos().center() - a->get_pos_force();
+        double squareDist = square(dv);
 
-void WormHole::alarm() {
-    state = TELEPORT_IDLE;
-    init_model();
-}
+        if (squareDist >= 0.025 && squareDist < squareRange)
+            f += (correctedStrength / squareDist) * dv;
+    }
+    
+    void WormHole::alarm() {
+        state &= ~2;  // remove teleport engaged flag
+        init_model();
+    }
+    
+    bool WormHole::near_center_p(Actor *a) {
+        return (square(a->get_pos() - get_pos().center()) < 0.015625);  // 0.125 ^ 2
+    }
+    
+    ItemTraits WormHole::traits[2] = {
+        { "it_wormhole_off", it_wormhole_off, itf_static, 0.0 },
+        { "it_wormhole_on",  it_wormhole_on,  itf_static, 0.0 }
+    };
 
-void WormHole::init_model() {
-    if(state == TELEPORT_IDLE)
-        OnOffItem::init_model();
-    else
-        set_anim("it-wormhole-off");
-}
 
-void WormHole::on_removal(GridPos p) {
-    RemoveForceField(&ff);
-    Item::on_removal(p);
-    ASSERT(!justWarping, XLevelRuntime, "Tried to kill a busy wormhole. Please use another way.");
-}
 
 /* -------------------- Vortex -------------------- */
 
@@ -3842,6 +3797,7 @@
     RegisterItem (new Wrench);
     RegisterItem (new WormHole(false));
     RegisterItem (new WormHole(true));
+    Register ("it_wormhole", new WormHole(true));
     RegisterItem (new YinYang);
     RegisterItem (new Rubberband);
 }

Modified: trunk/src/lev/Proxy.cc
===================================================================
--- trunk/src/lev/Proxy.cc	2008-02-22 23:59:09 UTC (rev 1046)
+++ trunk/src/lev/Proxy.cc	2008-02-23 20:50:03 UTC (rev 1047)
@@ -445,6 +445,7 @@
             server::LevelStatus = getLevelStatus();
             if (server::EnigmaCompatibility < 1.10)
                 server::AllowSingleOxyds = true;
+            server::PrepareLua();
             // use oxyd loader
             std::string::size_type posSecondHash = normLevelPath.find('#',1);
             if (posSecondHash == string::npos)

Modified: trunk/src/stones_internal.hh
===================================================================
--- trunk/src/stones_internal.hh	2008-02-22 23:59:09 UTC (rev 1046)
+++ trunk/src/stones_internal.hh	2008-02-23 20:50:03 UTC (rev 1047)
@@ -20,6 +20,7 @@
 #define STONES_INTERNAL_HH_INCLUDED
 
 #include "world.hh"
+#include "main.hh"
 
 #define DECL_TRAITS                                              \
         static StoneTraits traits;                               \



From ral at mail.berlios.de  Sun Feb 24 20:33:16 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 24 Feb 2008 20:33:16 +0100
Subject: [Enigma-game-svn] r1048 - in trunk: data data/schemas src src/stones
Message-ID: <200802241933.m1OJXGeH005437@sheep.berlios.de>

Author: ral
Date: 2008-02-24 20:33:14 +0100 (Sun, 24 Feb 2008)
New Revision: 1048

Added:
   trunk/src/stones/LaserStone.cc
   trunk/src/stones/LaserStone.hh
Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/Makefile.am
   trunk/src/StateObject.cc
   trunk/src/items.cc
   trunk/src/laser.cc
   trunk/src/laser.hh
   trunk/src/util.hh
Log:
Trunk 1.1: new API reengineering laser stone
- rename st-laser-* to st_laser_*
- laser stone as StateObject instead of OnOff (toggle instead onoff,...)
- laser attribute "dir" renamed to "orientation"
- laser new messsage "orientate"
- laser latency of 0.2 seconds to fix infinit loop bug #11112 of a laser
  that in toggled due to its own light. 0.2s are necessary to keep the
  flickering laser visible
- small fixes of wormhole
Note:
- fix of bug #11112 needs additional move of "light_recalc_scheduled = false"
  in RecalcLightNow() - see source comment. We need to fix Photo* and items
  like hammer, sword first to be able to move this line of code finally


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/data/api1init.lua	2008-02-24 19:33:14 UTC (rev 1048)
@@ -63,6 +63,10 @@
     st_coinslot = "st-coinslot",
     st_floppy = "st-floppy",
     st_fourswitch = "st-fourswitch",
+    st_laser_w = "st-laser-w",
+    st_laser_s = "st-laser-s",
+    st_laser_e = "st-laser-e",
+    st_laser_n = "st-laser-n",
     st_oxyd = "st-oxyd",
     st_switch = "st-switch",
     st_switch_black = "st-switch_black",
@@ -115,6 +119,11 @@
     end
 
     newname = RenamingObjectsOld2New[name]
+    
+    if name == "st-laser" then
+        newname = "st_laser_e"
+    end
+    
     if newname ~= nil then
         return enigma._MakeObject(newname)
     else
@@ -140,6 +149,9 @@
             return "st-key"
         end
     end
+    if string.sub(_newname, 1, 8) == "st_laser" then
+        return "st-laser"
+    end
     if _oldname ~= nil then
         return _oldname
     else
@@ -168,6 +180,12 @@
 	     _key = "state"   -- new attr name
 	 end
      end
+     if key == "dir" then
+         _key = "orientation"
+     end
+     if key == "on" then
+         _key = "state"
+     end
      if key == "targetx" then
          local d = enigma._GetAttrib(obj, "destination")
          if (en.usertype(d) == "position") then
@@ -232,6 +250,12 @@
      if _obj_name == "st-oxyd" then
          _key = "oxydcolor"
      end
+     if key == "dir" then
+         _key = "orientation"
+     end
+     if key == "on" then
+         _key = "state"
+     end
 
      local val = enigma._GetAttrib(obj, _key)
      
@@ -305,6 +329,7 @@
     st_fourswitch__trigger = "toggle",
     st_floppy__onoff = "toggle",
     st_key__onoff = "toggle",
+    st_laser__onoff = "toggle",
     ["st-stoneimpulse__trigger"] = "signal",
     ["st-stoneimpulse-hollow__trigger"] = "signal",
     ["st-stoneimpulse_movable__trigger"] = "signal",

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/data/schemas/objects.xml	2008-02-24 19:33:14 UTC (rev 1048)
@@ -10,6 +10,7 @@
     <attr name="interval" type="double" default="1" rw="rw"/>
     <attr name="inverse" type="bool" default="false" rw="rw"/>
     <attr name="name" type="string" default="nil" rw="rw"/>
+    <attr name="orientation" type="int" default="0" min="0" max="3" rw="rw"/>
     <attr name="range" type="double" default="1.0" rw="rw"/>
     <attr name="scissor" type="bool" default="true" rw="rw"/>
     <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
@@ -109,6 +110,24 @@
       <msg name="signal"/>
       <msg name="_trigger"/>
     </object>
+    <object name="st_laser">
+      <attr name="orientation"/>
+      <msg name="on"/>
+      <msg name="off"/>
+      <msg name="signal"/>
+    </object>
+    <object name="st_laser_w">
+      <attr name="orientation" value="0"/>
+    </object>
+    <object name="st_laser_s">
+      <attr name="orientation" value="1"/>
+    </object>
+    <object name="st_laser_e">
+      <attr name="orientation" value="2"/>
+    </object>
+    <object name="st_laser_n">
+      <attr name="orientation" value="3"/>
+    </object>
     <object name="st_switch">
       <attr name="color"/>
       <attr name="instant"/>

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/Makefile.am	2008-02-24 19:33:14 UTC (rev 1048)
@@ -211,6 +211,8 @@
 	stones/FourSwitch.hh	\
 	stones/KeySwitch.cc	\
 	stones/KeySwitch.hh	\
+	stones/LaserStone.cc	\
+	stones/LaserStone.hh	\
 	stones/OxydStone.cc	\
 	stones/OxydStone.hh	\
 	stones/Switch.cc	\

Modified: trunk/src/StateObject.cc
===================================================================
--- trunk/src/StateObject.cc	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/StateObject.cc	2008-02-24 19:33:14 UTC (rev 1048)
@@ -71,6 +71,7 @@
     int StateObject::minState() {
         return 0;  // default 2 state
     }
+    
     void StateObject::toggleState() {
         // default round robin on external states
         int extState = externalState();

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/items.cc	2008-02-24 19:33:14 UTC (rev 1048)
@@ -1682,7 +1682,7 @@
 */
 
 
-    class WormHole : public Item, public ForceField, public enigma::TimeHandler {
+    class WormHole : public Item, public ForceField, public TimeHandler {
     private:
         /**
          * warping as bit 2 of state
@@ -1699,7 +1699,6 @@
         DECL_TRAITS_ARRAY(2, state & 1);
         
         WormHole(bool isOn);
-        virtual ~WormHole();
         
         // Object interface
         virtual std::string getClass() const;
@@ -1734,10 +1733,6 @@
         state = isOn ? ON_IDLE : OFF_IDLE;    // includes warping false
     }
     
-    WormHole::~WormHole() {
-        GameTimer.remove_alarm(this);
-    }
-    
     std::string WormHole::getClass() const {
         return "it_wormhole";
     }
@@ -1776,6 +1771,8 @@
     }
 
     void WormHole::on_removal(GridPos p) {
+        GameTimer.remove_alarm(this);
+        state &= ~2;  // remove teleport engaged flag
         if (state % 2 == 1)
             RemoveForceField(this);
         Item::on_removal(p);

Modified: trunk/src/laser.cc
===================================================================
--- trunk/src/laser.cc	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/laser.cc	2008-02-24 19:33:14 UTC (rev 1048)
@@ -22,6 +22,7 @@
 #include "sound.hh"
 #include "stones_internal.hh"
 #include "server.hh"
+#include "stones/LaserStone.hh"
 #include <algorithm>
 #include <cassert>
 #include <map>
@@ -34,45 +35,6 @@
 
 /* -------------------- LaserBeam -------------------- */
 
-    class LaserBeam : public Item, public LaserEmitter {
-    public:
-        static void emit_from(GridPos p, Direction d);
-        static void kill_all();
-        static void all_emitted();
-
-	// LaserEmitter interface
-        DirectionBits emission_directions() const { return directions; }
-        static ItemTraits traits;
-
-        const ItemTraits &get_traits() const {
-            return traits;
-        }
-    private:
-        LaserBeam(Direction dir) {
-            directions = to_bits(dir);
-        }
-
-        // Item interface.
-        void on_laserhit(Direction dir);
-        void on_creation (GridPos p);
-        void init_model();
-        bool actor_hit(Actor *actor);
-
-        Item *clone() {
-            // new LaserBeams may only created inside `emit_from'.
-            assert(0);
-            return 0;
-        }
-        void dispose();
-
-        // Variables
-        DirectionBits directions;
-        
-        static list<LaserBeam *> beamList1;
-        static list<LaserBeam *> beamList2;
-        static list<LaserBeam *> *gridBeams;
-        static list<LaserBeam *> *lastBeams;
-    };
     ItemTraits LaserBeam::traits = {"it-laserbeam", it_laserbeam, 
                                     itf_static | itf_indestructible, 0.0 };
 
@@ -101,48 +63,48 @@
 \ref st-pmirror, \ref st-3mirror
 
 */
-    class LaserStone : public LaserEmitter, public OnOffStone {
-    public:
-        LaserStone (Direction dir=EAST);
-        static void reemit_all();
+//    class LaserStone : public LaserEmitter, public OnOffStone {
+//    public:
+//        LaserStone (Direction dir=EAST);
+//        static void reemit_all();
+//
+//    private:
+//
+////        INSTANCELISTOBJ(LaserStone);
+//
+//// We can't use this macro here: g++ can't handle multiple inheritance
+//// and covariant return types at the same time ("sorry, not
+//// implemented: ..." first time I ever saw this error message :-)
+//
+//        typedef std::vector<LaserStone*> InstanceList;
+//        static InstanceList instances;
+//        Stone *clone() {
+//            LaserStone *o = new LaserStone(*this);
+//            instances.push_back(o);
+//            return o;
+//        }
+//        void dispose() {
+//            instances.erase(find(instances.begin(), instances.end(), this));
+//            delete this;
+//        }
+//
+//        // LaserEmitter interface
+//        DirectionBits emission_directions() const;
+//
+//        // OnOffStone interface.
+//        void notify_onoff(bool on);
+//
+//        // Private methods.
+//        void emit_light();
+//        Direction get_dir() const {return to_direction(getAttr("dir"));}
+//
+//        // Stone interface.
+//        void on_creation (GridPos p);
+//        void init_model();
+//    };
+//
+//
 
-    private:
-
-//        INSTANCELISTOBJ(LaserStone);
-
-// We can't use this macro here: g++ can't handle multiple inheritance
-// and covariant return types at the same time ("sorry, not
-// implemented: ..." first time I ever saw this error message :-)
-
-        typedef std::vector<LaserStone*> InstanceList;
-        static InstanceList instances;
-        Stone *clone() {
-            LaserStone *o = new LaserStone(*this);
-            instances.push_back(o);
-            return o;
-        }
-        void dispose() {
-            instances.erase(find(instances.begin(), instances.end(), this));
-            delete this;
-        }
-
-        // LaserEmitter interface
-        DirectionBits emission_directions() const;
-
-        // OnOffStone interface.
-        void notify_onoff(bool on);
-
-        // Private methods.
-        void emit_light();
-        Direction get_dir() const {return to_direction(getAttr("dir"));}
-
-        // Stone interface.
-        void on_creation (GridPos p);
-        void init_model();
-    };
-
-
-
 /* -------------------- PhotoCell -------------------- */
 
 vector<void*> PhotoCell::instances;
@@ -392,59 +354,59 @@
 //----------------------------------------
 // Laser stone
 //----------------------------------------
-LaserStone::InstanceList LaserStone::instances;
+//LaserStone::InstanceList LaserStone::instances;
+//
+//LaserStone::LaserStone (Direction dir)
+//: OnOffStone("st-laser")
+//{
+//    setAttr("dir", Value(dir));
+//}
+//
+//DirectionBits
+//LaserStone::emission_directions() const
+//{
+//    if (is_on()) {
+//        return to_bits(get_dir());
+//    }
+//    return NODIRBIT;
+//}
+//
+//
+//void LaserStone::reemit_all()
+//{
+//    for (unsigned i=0; i<instances.size(); ++i)
+//    {
+//        LaserStone *ls = (LaserStone*) instances[i];
+//        ls->emit_light();
+//    }
+//}
+//
+//void LaserStone::notify_onoff(bool /*on*/)
+//{
+//    RecalcLight();
+//}
+//
+//void LaserStone::emit_light()
+//{
+//    if (is_on())
+//        LaserBeam::emit_from(get_pos(), get_dir());
+//}
+//
+//void LaserStone::on_creation (GridPos p)
+//{
+//    if (is_on())
+//        RecalcLight();
+//    Stone::on_creation(p);
+//}
+//
+//void LaserStone::init_model()
+//{
+//    string mname = is_on() ? "st-laseron" : "st-laser";
+//    mname += to_suffix(get_dir());
+//    set_model(mname);
+//}
+//
 
-LaserStone::LaserStone (Direction dir)
-: OnOffStone("st-laser")
-{
-    setAttr("dir", Value(dir));
-}
-
-DirectionBits
-LaserStone::emission_directions() const
-{
-    if (is_on()) {
-        return to_bits(get_dir());
-    }
-    return NODIRBIT;
-}
-
-
-void LaserStone::reemit_all()
-{
-    for (unsigned i=0; i<instances.size(); ++i)
-    {
-        LaserStone *ls = (LaserStone*) instances[i];
-        ls->emit_light();
-    }
-}
-
-void LaserStone::notify_onoff(bool /*on*/)
-{
-    RecalcLight();
-}
-
-void LaserStone::emit_light()
-{
-    if (is_on())
-        LaserBeam::emit_from(get_pos(), get_dir());
-}
-
-void LaserStone::on_creation (GridPos p)
-{
-    if (is_on())
-        RecalcLight();
-    Stone::on_creation(p);
-}
-
-void LaserStone::init_model()
-{
-    string mname = is_on() ? "st-laseron" : "st-laser";
-    mname += to_suffix(get_dir());
-    set_model(mname);
-}
-
-
 /* -------------------- MirrorStone -------------------- */
 namespace
 {
@@ -750,11 +712,11 @@
 }
 
 void InitLasers() {
-    Register (new LaserStone);
-    Register ("st-laser-n", new LaserStone(NORTH));
-    Register ("st-laser-e", new LaserStone(EAST));
-    Register ("st-laser-s", new LaserStone(SOUTH));
-    Register ("st-laser-w", new LaserStone(WEST));
+//    Register (new LaserStone);
+//    Register ("st-laser-n", new LaserStone(NORTH));
+//    Register ("st-laser-e", new LaserStone(EAST));
+//    Register ("st-laser-s", new LaserStone(SOUTH));
+//    Register ("st-laser-w", new LaserStone(WEST));
 
     Register (new TriangleMirror);
     Register ("st-mirror-3v", new TriangleMirror('v'));
@@ -816,6 +778,7 @@
 
 void RecalcLightNow() {
     if (light_recalc_scheduled) {
+//        light_recalc_scheduled = false;    // this is the right place - but we have first to fix some object like hammer,...
         PhotoCell::notify_start();
         LaserBeam::kill_all();
         LaserStone::reemit_all();

Modified: trunk/src/laser.hh
===================================================================
--- trunk/src/laser.hh	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/laser.hh	2008-02-24 19:33:14 UTC (rev 1048)
@@ -24,6 +24,8 @@
 
 #include "GridObject.hh"
 #include "stones.hh"
+#include "items.hh"
+#include <list>
 
 namespace enigma {
     /**
@@ -101,8 +103,49 @@
         virtual void notify_laseron() = 0;
         virtual void notify_laseroff() = 0;
     };
+    
+/* -------------------- LaserBeam -------------------- */
 
+    class LaserBeam : public Item, public LaserEmitter {
+    public:
+        static void emit_from(GridPos p, Direction d);
+        static void kill_all();
+        static void all_emitted();
 
+    // LaserEmitter interface
+        DirectionBits emission_directions() const { return directions; }
+        static ItemTraits traits;
+
+        const ItemTraits &get_traits() const {
+            return traits;
+        }
+    private:
+        LaserBeam(Direction dir) {
+            directions = to_bits(dir);
+        }
+
+        // Item interface.
+        void on_laserhit(Direction dir);
+        void on_creation (GridPos p);
+        void init_model();
+        bool actor_hit(Actor *actor);
+
+        Item *clone() {
+            // new LaserBeams may only created inside `emit_from'.
+//            assert(0);
+            return 0;
+        }
+        void dispose();
+
+        // Variables
+        DirectionBits directions;
+        
+        static std::list<LaserBeam *> beamList1;
+        static std::list<LaserBeam *> beamList2;
+        static std::list<LaserBeam *> *gridBeams;
+        static std::list<LaserBeam *> *lastBeams;
+    };
+
 /* -------------------- Functions -------------------- */
     void InitLasers();
 

Added: trunk/src/stones/LaserStone.cc
===================================================================
--- trunk/src/stones/LaserStone.cc	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/stones/LaserStone.cc	2008-02-24 19:33:14 UTC (rev 1048)
@@ -0,0 +1,185 @@
+/*
+ * Copyright (C) 2002,2003,2004 Daniel Heck
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *  
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+
+#include "stones/LaserStone.hh"
+
+#include "main.hh"
+#include "util.hh"
+#include "world.hh"
+
+namespace enigma {
+
+    LaserStone::InstanceList LaserStone::instances;
+    
+    void LaserStone::reemit_all() {
+        for (InstanceList::iterator it = instances.begin(); it != instances.end(); ++it) {
+            (*it)->emit_light();
+        }
+    }
+
+    LaserStone::LaserStone (Direction dir) : Stone("st_laser") {
+        setAttr("orientation", Value(dir));
+    }
+    
+    std::string LaserStone::getClass() const {
+        return "st_laser";
+    }
+    
+    LaserStone *LaserStone::clone() {
+        LaserStone *o = new LaserStone(*this);
+        instances.push_back(o);
+        return o;
+    }
+    
+    void LaserStone::dispose() {
+        instances.erase(find(instances.begin(), instances.end(), this));
+        delete this;
+    }
+    
+    void LaserStone::setAttr(const string& key, const Value &val) {
+        if (isDisplayable())
+            if (key == "orientation") {
+                Stone::setAttr(key, val);
+                init_model();
+                return;
+            }
+        Stone::setAttr(key, val);
+    }
+    
+    Value LaserStone::message(const Message &m) {
+        if (m.message == "orientate") {
+            Stone::setAttr("orientation", m.value);
+            return Value();
+        }
+        return Stone::message(m);
+    }
+    
+    int LaserStone::externalState() const {
+        return state % 2;
+    }
+    
+    void LaserStone::setState(int extState) {
+        if (isDisplayable()) {
+            switch (state) {
+                case OFF:
+                case ON:
+                    if (state != extState) {
+                        state = extState + 2;
+                        GameTimer.set_alarm(this, 0.2, false);
+                        RecalcLight();
+                        init_model();
+                    }
+                    break;
+                case NEW_OFF:
+                case NEW_ON:
+                    if (state != extState + 2)
+                        state += 2;   // remember pending other state 
+                    break;
+                case NEW_OFF_PENDING_ON:
+                case NEW_ON_PENDING_OFF:
+                    if (state == extState + 4)
+                        state -= 2;   // remember pending other state
+                    break; 
+            }
+        } else  // object initialisation
+            state = extState;
+    }
+    
+    void LaserStone::toggleState() {
+        switch (state) {
+            case OFF:
+            case NEW_OFF:
+            case NEW_ON_PENDING_OFF:
+                setState(ON);
+                break;
+            case ON:
+            case NEW_ON:
+            case NEW_OFF_PENDING_ON:
+                setState(OFF);
+                break;
+        }
+    }
+
+    void LaserStone::init_model()  {
+        string mname = externalState() == 1 ? "st-laseron" : "st-laser";
+        mname += to_suffix(getOrientation());
+        set_model(mname);
+    }
+    
+    void LaserStone::on_creation (GridPos p) {
+        if (state == ON)
+            RecalcLight();
+        Stone::on_creation(p);
+    }
+    
+    void LaserStone::on_removal(GridPos p) {
+        GameTimer.remove_alarm(this);
+        state &= 1;
+    }
+    
+    void LaserStone::alarm() {
+        int oldExtState = externalState();
+        switch (state) {
+                case NEW_OFF:
+                    state = OFF;
+                    break;
+                case NEW_ON:
+                    state = ON;
+                    break;
+                case NEW_OFF_PENDING_ON:
+                    state = NEW_ON;
+                    GameTimer.set_alarm(this, 0.2, false);
+                    break;
+                case NEW_ON_PENDING_OFF:
+                    state = NEW_OFF;
+                    GameTimer.set_alarm(this, 0.2, false);
+                    break;
+        }
+        if (oldExtState != externalState()) {
+            RecalcLight();
+            init_model();
+        }
+    }
+    
+    DirectionBits LaserStone::emission_directions() const {
+        if (externalState() == 1) {
+            return to_bits(getOrientation());
+        }
+        return NODIRBIT;
+    }
+
+    void LaserStone::emit_light() {
+        if (externalState() == 1)
+            LaserBeam::emit_from(get_pos(), getOrientation());
+    }
+    
+    Direction LaserStone::getOrientation() const {
+        return to_direction(getAttr("orientation"));
+    }
+
+    BOOT_REGISTER_START
+        BootRegister(new LaserStone(EAST), "st_laser");
+        BootRegister(new LaserStone(NORTH), "st_laser_n");
+        BootRegister(new LaserStone(SOUTH), "st_laser_s");
+        BootRegister(new LaserStone(EAST), "st_laser_e");
+        BootRegister(new LaserStone(WEST), "st_laser_w");
+    BOOT_REGISTER_END
+
+} // namespace enigma


Property changes on: trunk/src/stones/LaserStone.cc
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/stones/LaserStone.hh
===================================================================
--- trunk/src/stones/LaserStone.hh	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/stones/LaserStone.hh	2008-02-24 19:33:14 UTC (rev 1048)
@@ -0,0 +1,85 @@
+/*
+ * Copyright (C) 2008 Ronald Lamprecht
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+ *
+ */
+#ifndef LASERSTONE_HH
+#define LASERSTONE_HH
+
+#include "laser.hh"
+#include <list>
+
+namespace enigma {
+
+    /** 
+     * 
+     * 
+     * When a laser is switched on or off this may directly cause an action. 
+     * A part of such an action can be another laser switching of the same laser.
+     * To break infinit loops and to avoid laser flickering at a frequency that
+     * the user cannot recognize laser switching is limited. After a switching
+     * a laser stays in a NEW* state where further switch requests are delayed.
+     */
+    class LaserStone : public Stone, public LaserEmitter, public TimeHandler {
+    private:
+        enum iState {
+            OFF, 
+            ON, 
+            NEW_OFF,
+            NEW_ON,
+            NEW_OFF_PENDING_ON,
+            NEW_ON_PENDING_OFF
+        };
+        typedef std::list<LaserStone*> InstanceList;
+        static InstanceList instances;
+
+    public:
+        static void reemit_all();
+
+        LaserStone(Direction dir=EAST);
+
+        // Object interface
+        virtual std::string getClass() const;
+        virtual LaserStone *clone();
+        virtual void dispose();
+        virtual void setAttr(const string& key, const Value &val);
+        virtual Value message(const Message &m);
+        
+        // StateObject interface
+        virtual int externalState() const;
+        virtual void setState(int extState);
+        virtual void toggleState();
+
+        // GridObject interface
+        virtual void init_model();
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        
+        // TimeHandler interface
+        virtual void alarm();
+
+        // LaserEmitter interface
+        virtual DirectionBits emission_directions() const;
+        
+    private:
+        // Private methods.
+        void emit_light();
+        Direction getOrientation() const;
+    };
+
+} // namespace enigma
+
+#endif


Property changes on: trunk/src/stones/LaserStone.hh
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/util.hh
===================================================================
--- trunk/src/util.hh	2008-02-23 20:50:03 UTC (rev 1047)
+++ trunk/src/util.hh	2008-02-24 19:33:14 UTC (rev 1048)
@@ -15,6 +15,10 @@
  * with this program; if not, write to the Free Software Foundation, Inc.,
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
  */
+
+#ifndef UTIL_HH
+#define UTIL_HH
+
 #include "enigma.hh"
 
 namespace enigma
@@ -43,3 +47,5 @@
         Rep &self;
     };
 }
+
+#endif



From ral at mail.berlios.de  Sun Feb 24 20:40:51 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 24 Feb 2008 20:40:51 +0100
Subject: [Enigma-game-svn] r1049 - team_levelpacks/team_test_new_api
Message-ID: <200802241940.m1OJepm8006079@sheep.berlios.de>

Author: ral
Date: 2008-02-24 20:40:50 +0100 (Sun, 24 Feb 2008)
New Revision: 1049

Modified:
   team_levelpacks/team_test_new_api/ralT016_1.xml
   team_levelpacks/team_test_new_api/ralT024_1.xml
   team_levelpacks/team_test_new_api/ralT027_1.xml
   team_levelpacks/team_test_new_api/ralT028_1.xml
   team_levelpacks/team_test_new_api/ralT030_1.xml
   team_levelpacks/team_test_new_api/ralT031_1.xml
   team_levelpacks/team_test_new_api/ralT033_1.xml
   team_levelpacks/team_test_new_api/raoulT02_1.xml
   team_levelpacks/team_test_new_api/raoulT04_1.xml
Log:
Test Level new API:
- updates of laser and wormhole occurences


Modified: team_levelpacks/team_test_new_api/ralT016_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT016_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT016_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -29,8 +29,8 @@
 ti["W"] = ti[" "] .. {"st-white1"}
 ti["P"] = ti[" "] .. {"st-plain"}
 ti["p"] = ti[" "] .. {"st-polarswitch"}
-ti["E"] = ti[" "] .. {"st-laser-e", on=1}
-ti["e"] = ti[" "] .. {"st-laser-n", on=1}
+ti["E"] = ti[" "] .. {"st_laser_e", state = ON}
+ti["e"] = ti[" "] .. {"st_laser_n", state = ON}
 ti["m"] = ti[" "] .. {"st-pmirror", movable=1, transparent=true, orientation=2}
 ti["w"] = ti[" "] .. {"it-magicwand"}
 ti["V"] = ti[" "] .. {"st-volcano_inactive"}

Modified: team_levelpacks/team_test_new_api/ralT024_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -28,14 +28,14 @@
 
 ti["L"] = {"st-laserswitch", target="door1", action="signal"}
 ti["I"] = {"st-laserswitch", inverse=true, target="door2", action="signal"}
-ti["E"] = {"st-laser", "laser"}
+ti["E"] = {"st_laser", "laser"}
 ti["M"] = {"st-mirror-p|"}
-ti["e"] = {"st_switch", target="laser", action="onoff"}
-ti["F"] = {"st-laser", "laser2"}
+ti["e"] = {"st_switch", target="laser", action="toggle"}
+ti["F"] = {"st_laser", "laser2"}
 ti["f"] = {"st_switch_black", instant=true, state=1, inverse=true, target="laser2", action="signal"}
-ti["G"] = {"st-laser", "laser3"}
+ti["G"] = {"st_laser", "laser3"}
 ti["g"] = {"st_switch_black", target="laser3", action="signal", name="colorswitch"}
-ti["H"] = {"st-laser", "laser4"}
+ti["H"] = {"st_laser", "laser4"}
 ti["h"] = {"st_switch_white", state=1, target="laser4", action="signal"}
 ti["s"] = {"st_switch", target="recolor"}
 ti["w"] = {"it-hammer"}

Modified: team_levelpacks/team_test_new_api/ralT027_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT027_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT027_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -31,8 +31,8 @@
 ti["E"] = ti[" "] .. {"st_boulder_e"}
 
 ti["a"] = ti[" "] .. {"it_blocker", autoclose=true}
-ti["A"] = ti[" "] .. {"st_blocker", target="laser", action="onoff"}
-ti["L"] = ti[" "] .. {"st-laser-s", "laser"}
+ti["A"] = ti[" "] .. {"st_blocker", target="laser", action="toggle"}
+ti["L"] = ti[" "] .. {"st_laser_s", "laser"}
 
 ti["S"] = ti[" "] .. {"st_switch", target="blocker"}
 ti["s"] = ti[" "] .. {"it_blocker", "blocker"}

Modified: team_levelpacks/team_test_new_api/ralT028_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT028_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT028_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -32,15 +32,15 @@
 ti["V"] = ti[" "] .. {"st_switch", target="o#3", action="signal"}
 ti["W"] = ti[" "] .. {"st_switch", target="statetest"}
 ti["C"] = ti[" "] .. {"st_switch", target="bold", action="signal"}
-ti["L"] = ti[" "] .. {"st-laser-n", "Laser#"}
-ti["l"] = ti[" "] .. {"st-laser-n", "laser#"}
+ti["L"] = ti[" "] .. {"st_laser_n", "Laser#"}
+ti["l"] = ti[" "] .. {"st_laser_n", "laser#"}
 ti["b"] = ti[" "] .. {"st_boulder_s"}
 ti["s"] = ti[" "] .. {"st-swap"}
 ti["X"] = ti[" "] .. {"st_switch", target="o#1", action="shuffle"}
 ti["Y"] = ti[" "] .. {"st_switch", target="o#1", action="closeall"}
 ti["1"] = (ti[" "] .. {"it-magicwand"}) .. {"#ac-blackball"}
 
-ti["w"] = ti[" "] .. {"st_switch", target="Laser#7", action="onoff"}
+ti["w"] = ti[" "] .. {"st_switch", target="Laser#7", action="toggle"}
 ti["f"] = ti[" "] .. {"st-fart"}
 
 w, h = wo(ti, " ", {
@@ -69,7 +69,7 @@
 
 function enlighten(value, sender)
     -- the single opened oxyd
-    no["Laser" .. string.sub(sender["name"],2)]:onoff()
+    no["Laser" .. string.sub(sender["name"],2)]:toggle()
     
     -- all pair opened oxyds with the second laser
     for i=1,6 do

Modified: team_levelpacks/team_test_new_api/ralT030_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT030_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT030_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -35,9 +35,9 @@
 ti["A"] = (ti[" "] .. {"it-brake"}) .. {"#ac-blackball"}
 
 
-ti["w"] = ti[" "] .. {"st_switch", target="Laser", action="onoff"}
+ti["w"] = ti[" "] .. {"st_switch", target="Laser", action="toggle"}
 ti["k"] = ti[" "] .. {"st-laserswitch"}
-ti["L"] = ti[" "] .. {"st-laser-n", "Laser"}
+ti["L"] = ti[" "] .. {"st_laser_n", "Laser"}
 
 ti["+"] = ti[" "] .. {"st-grate1"}
 ti["."] = ti[" "] .. {"it-seed"}

Modified: team_levelpacks/team_test_new_api/ralT031_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT031_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT031_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -25,26 +25,26 @@
 ti["!"] = {"fl-wood", ignitable=true}
 ti["#"] = ti[" "] .. {"st-rock1"}
 
-ti["A"] = ti[" "] .. {"it_trigger", target="lasera", action="onoff", "triggerA"}
-ti["B"] = ti["~"] .. {"it_trigger", target={"laserb","laserbon"}, action={"onoff", "on"}}
-ti["C"] = ti["."] .. {"it_trigger", target={"laserc","lasercon"}, action={"onoff", "on"}}
-ti["O"] = ti["!"] .. {"it_trigger", target={"lasero","laseroon"}, action={"onoff", "on"}}
+ti["A"] = ti[" "] .. {"it_trigger", target="lasera", action="toggle", "triggerA"}
+ti["B"] = ti["~"] .. {"it_trigger", target={"laserb","laserbon"}, action={"toggle", "on"}}
+ti["C"] = ti["."] .. {"it_trigger", target={"laserc","lasercon"}, action={"toggle", "on"}}
+ti["O"] = ti["!"] .. {"it_trigger", target={"lasero","laseroon"}, action={"toggle", "on"}}
 
-ti["a"] = ti[" "] .. {"st-laser-s", "lasera"}
-ti["b"] = ti[" "] .. {"st-laser-s", "laserb"}
-ti["c"] = ti[" "] .. {"st-laser-s", "laserc"}
-ti["d"] = ti[" "] .. {"st-laser-s", "laserbon"}
-ti["e"] = ti[" "] .. {"st-laser-s", "lasercon"}
-ti["f"] = ti[" "] .. {"st-laser-s", "laserf"}
-ti["g"] = ti[" "] .. {"st-laser-s", "laserfon"}
-ti["h"] = ti[" "] .. {"st-laser-n", "laserh"}
-ti["i"] = ti[" "] .. {"st-laser-n", "laserhon"}
-ti["j"] = ti[" "] .. {"st-laser-n", "laserj"}
-ti["k"] = ti[" "] .. {"st-laser-n", "laserjon"}
-ti["l"] = ti[" "] .. {"st-laser-n", "laserl"}
-ti["n"] = ti[" "] .. {"st-laser-n", "laserlon"}
-ti["o"] = ti[" "] .. {"st-laser-n", "lasero"}
-ti["p"] = ti[" "] .. {"st-laser-n", "laseroon"}
+ti["a"] = ti[" "] .. {"st_laser_s", "lasera"}
+ti["b"] = ti[" "] .. {"st_laser_s", "laserb"}
+ti["c"] = ti[" "] .. {"st_laser_s", "laserc"}
+ti["d"] = ti[" "] .. {"st_laser_s", "laserbon"}
+ti["e"] = ti[" "] .. {"st_laser_s", "lasercon"}
+ti["f"] = ti[" "] .. {"st_laser_s", "laserf"}
+ti["g"] = ti[" "] .. {"st_laser_s", "laserfon"}
+ti["h"] = ti[" "] .. {"st_laser_n", "laserh"}
+ti["i"] = ti[" "] .. {"st_laser_n", "laserhon"}
+ti["j"] = ti[" "] .. {"st_laser_n", "laserj"}
+ti["k"] = ti[" "] .. {"st_laser_n", "laserjon"}
+ti["l"] = ti[" "] .. {"st_laser_n", "laserl"}
+ti["n"] = ti[" "] .. {"st_laser_n", "laserlon"}
+ti["o"] = ti[" "] .. {"st_laser_n", "lasero"}
+ti["p"] = ti[" "] .. {"st_laser_n", "laseroon"}
 
 
 ti["W"] = ti[" "] .. {"st-wood"}
@@ -57,16 +57,16 @@
 
 ti["M"] = ti[" "] .. {"st_switch", target="maketrigger"}
 ti["m"] = ti[" "] .. {"st_switch", target="makeactor"}
-ti["X"] = ti[" "] .. {"it-wormhole", destination="triggerA", range=1}
+ti["X"] = ti[" "] .. {"it_wormhole", destination="triggerA", range=1}
 
 ti["1"] = (ti[" "] .. {"#ac-blackball"}) .. {"it-ring"}
 ti["2"] = ti[" "] .. {"#ac-whiteball-small", player=nil, controllers=0}
 
 ti["3"] = (ti[" "]  .. {"#ac-whiteball-small", controllers=0})
-                .. {"it_trigger", target={"laserh","laserhon"}, action={"onoff", "on"}}
-ti["4"] = (ti[" "]  .. {"it_trigger", target={"laserj","laserjon"}, action={"onoff", "on"}})
+                .. {"it_trigger", target={"laserh","laserhon"}, action={"toggle", "on"}}
+ti["4"] = (ti[" "]  .. {"it_trigger", target={"laserj","laserjon"}, action={"toggle", "on"}})
                 .. {"#ac-whiteball-small", controllers=0}
-ti["5"] = (ti[" "]  .. {"it_trigger", target={"laserl","laserlon"}, action={"onoff", "on"}})
+ti["5"] = (ti[" "]  .. {"it_trigger", target={"laserl","laserlon"}, action={"toggle", "on"}})
                 .. {"st-wood"}
 ti["6"] = (ti[" "]  .. {"it_trigger", "killtrigger", target="killstone"})
 
@@ -88,7 +88,7 @@
 })
 
 function maketrigger(value, sender)
-    wo[sender + {1,0}] = {"it_trigger", target={"laserf","laserfon"}, action={"onoff", "on"}}
+    wo[sender + {1,0}] = {"it_trigger", target={"laserf","laserfon"}, action={"toggle", "on"}}
 end
   
 function makeactor(value, sender)

Modified: team_levelpacks/team_test_new_api/ralT033_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/ralT033_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -29,8 +29,8 @@
 ti["S"] = {"st_switch_black", "sw"}
 ti["R"] = {"st_switch", target="dorecolor"}
 ti["r"] = {"st_switch", target="dorecolor", inverse=true}
-ti["L"] = {"st-laser-s", "laser#"}
-ti["l"] = {"st-laser-s", "laserI#"}
+ti["L"] = {"st_laser_s", "laser#"}
+ti["l"] = {"st_laser_s", "laserI#"}
 ti["K"] = {"st_switch", target="getkind"}
 ti["I"] = {"st_switch", target="iskind"}
 

Modified: team_levelpacks/team_test_new_api/raoulT02_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT02_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/raoulT02_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -21,10 +21,10 @@
 
 ti["0"] = ti[" "] .. {"#ac-blackball"}
 
-ti["A"] = ti[" "] .. {"st_switch", name="da1", target="la5", action="onoff"}
-ti["B"] = ti[" "] .. {"st_switch", name="da2", target="la6", action="onoff"}
-ti["C"] = ti[" "] .. {"st_switch", name="da3", target="la7", action="onoff"}
-ti["D"] = ti[" "] .. {"st_switch", name="da4", target="la8", action="onoff"}
+ti["A"] = ti[" "] .. {"st_switch", name="da1", target="la5", action="toggle"}
+ti["B"] = ti[" "] .. {"st_switch", name="da2", target="la6", action="toggle"}
+ti["C"] = ti[" "] .. {"st_switch", name="da3", target="la7", action="toggle"}
+ti["D"] = ti[" "] .. {"st_switch", name="da4", target="la8", action="toggle"}
 
 ti["F"] = ti[" "] .. {"st_key", name="stk1", target="da1", action="toggle"}
 ti["G"] = ti[" "] .. {"st_key", name="stk2", target="da2", action="signal"}
@@ -37,10 +37,10 @@
 ti["4"] = ti[" "] .. {"st_key", keycode=4}
 ti["5"] = ti[" "] .. {"st_key", keycode=5}
 
-ti["W"] = ti[" "] .. {"st-laser-e", name="la5"}
-ti["X"] = ti[" "] .. {"st-laser-e", name="la6"}
-ti["Y"] = ti[" "] .. {"st-laser-e", name="la7"}
-ti["Z"] = ti[" "] .. {"st-laser-e", name="la8"}
+ti["W"] = ti[" "] .. {"st_laser_e", name="la5"}
+ti["X"] = ti[" "] .. {"st_laser_e", name="la6"}
+ti["Y"] = ti[" "] .. {"st_laser_e", name="la7"}
+ti["Z"] = ti[" "] .. {"st_laser_e", name="la8"}
 
 ti["J"] = ti[" "] .. {"st_key", name="la5", target="da5", action="toggle", inverse=true}
 ti["K"] = ti[" "] .. {"st_key", name="la6", target="da6", action="signal", inverse=true}

Modified: team_levelpacks/team_test_new_api/raoulT04_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/raoulT04_1.xml	2008-02-24 19:33:14 UTC (rev 1048)
+++ team_levelpacks/team_test_new_api/raoulT04_1.xml	2008-02-24 19:40:50 UTC (rev 1049)
@@ -21,20 +21,20 @@
 
 ti["0"] = ti[" "] .. {"#ac-blackball"}
 
-ti["A"] = ti[" "] .. {"st_coinslot", name="cs1", target="la1", action="onoff"}
+ti["A"] = ti[" "] .. {"st_coinslot", name="cs1", target="la1", action="toggle"}
 ti["B"] = ti[" "] .. {"st_coinslot", name="cs2", target="la2", action="signal"}
 ti["C"] = ti[" "] .. {"st_coinslot", name="cs3", target="la3", action="on"}
 ti["D"] = ti[" "] .. {"st_coinslot", name="cs4", target="la4", action="off"}
 
-ti["L"] = ti[" "] .. {"st-laser-e", name="la1"}
-ti["M"] = ti[" "] .. {"st-laser-e", name="la2"}
-ti["N"] = ti[" "] .. {"st-laser-e", name="la3"}
-ti["O"] = ti[" "] .. {"st-laser-e", name="la4"}
+ti["L"] = ti[" "] .. {"st_laser_e", name="la1"}
+ti["M"] = ti[" "] .. {"st_laser_e", name="la2"}
+ti["N"] = ti[" "] .. {"st_laser_e", name="la3"}
+ti["O"] = ti[" "] .. {"st_laser_e", name="la4"}
 
-ti["R"] = ti[" "] .. {"st_switch", name="la1", target="la1", action="onoff"}
-ti["S"] = ti[" "] .. {"st_switch", name="la2", target="la2", action="onoff"}
-ti["T"] = ti[" "] .. {"st_switch", name="la3", target="la3", action="onoff"}
-ti["U"] = ti[" "] .. {"st_switch", name="la4", target="la4", action="onoff"}
+ti["R"] = ti[" "] .. {"st_switch", name="la1", target="la1", action="toggle"}
+ti["S"] = ti[" "] .. {"st_switch", name="la2", target="la2", action="toggle"}
+ti["T"] = ti[" "] .. {"st_switch", name="la3", target="la3", action="toggle"}
+ti["U"] = ti[" "] .. {"st_switch", name="la4", target="la4", action="toggle"}
 
 ti["X"] = ti[" "] .. {"it-coin1"}
 ti["Y"] = ti[" "] .. {"it-coin2"}
@@ -44,13 +44,13 @@
 ti["y"] = ti[" "] .. {"it-coin2", value=6}
 ti["z"] = ti[" "] .. {"it-coin4", value=6}
 
-ti["l"] = ti[" "] .. {"st-laser-e", name="la5"}
-ti["m"] = ti[" "] .. {"st-laser-e", name="la6"}
-ti["n"] = ti[" "] .. {"st-laser-e", name="la7"}
+ti["l"] = ti[" "] .. {"st_laser_e", name="la5"}
+ti["m"] = ti[" "] .. {"st_laser_e", name="la6"}
+ti["n"] = ti[" "] .. {"st_laser_e", name="la7"}
 
-ti["E"] = ti[" "] .. {"st_coinslot", name="csx", target="la5", action="onoff"}
-ti["F"] = ti[" "] .. {"st_coinslot", name="csy", target="la6", action="onoff"}
-ti["G"] = ti[" "] .. {"st_coinslot", name="csz", target="la7", action="onoff"}
+ti["E"] = ti[" "] .. {"st_coinslot", name="csx", target="la5", action="toggle"}
+ti["F"] = ti[" "] .. {"st_coinslot", name="csy", target="la6", action="toggle"}
+ti["G"] = ti[" "] .. {"st_coinslot", name="csz", target="la7", action="toggle"}
 
 w, h = wo(ti, " ", {
 "0      A     RL     ",



From ral at mail.berlios.de  Mon Feb 25 22:56:17 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Mon, 25 Feb 2008 22:56:17 +0100
Subject: [Enigma-game-svn] r1050 - trunk/src
Message-ID: <200802252156.m1PLuH6B011209@sheep.berlios.de>

Author: ral
Date: 2008-02-25 22:56:17 +0100 (Mon, 25 Feb 2008)
New Revision: 1050

Modified:
   trunk/src/GridObject.cc
   trunk/src/GridObject.hh
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/laser.cc
   trunk/src/laser.hh
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering/performance tuning laser 
- optimization of laser beam redraw request - only changed beams
  are redrawn
- preparations of PhotoCell,PhotoStone reengineering
Note:
- this commit is for performance testing - cleanup follows


Modified: trunk/src/GridObject.cc
===================================================================
--- trunk/src/GridObject.cc	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/GridObject.cc	2008-02-25 21:56:17 UTC (rev 1050)
@@ -47,7 +47,34 @@
 
 
 /* -------------------- GridObject implementation -------------------- */
+    std::list<GridObject *> GridObject::photoSensorList;
 
+    void GridObject::preLaserRecalc() {
+        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ++itr) {
+            uint32_t flags = (*itr)->objFlags;
+            (*itr)->objFlags = (flags & ~255) | ((flags & 15) << 4);  // remember last laser bits, clear current ones
+        }
+    }
+    
+    void GridObject::postLaserRecalc() {
+        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ) {
+            list<GridObject *>::iterator witr = itr;  // work iterator for possible deletion of object
+            ++itr;                                    // main iterator does no longer point to critical object
+            uint32_t flags = (*witr)->objFlags;
+            DirectionBits newDirs = (DirectionBits)(flags & 15);
+            DirectionBits oldDirs = (DirectionBits)((flags & 240) >> 4);
+            if (newDirs != oldDirs) {
+                if (!(*witr)->lightDirChange(oldDirs, newDirs)) {
+                    if (oldDirs == 0)
+                        (*witr)->photoSensorChange(true);
+                    else if (newDirs == 0)
+                        (*witr)->photoSensorChange(false);
+                }
+            }
+        }
+    }
+
+
     void GridObject::setOwner(int player) {
         ASSERT(pos.x < 0, XLevelRuntime,
             "GridObject: attempt to add object to owner inventory that is still on grid");
@@ -173,4 +200,21 @@
         return DirectionBits(ALL_DIRECTIONS ^ getConnections());
     }
     
+    
+    void GridObject::activatePhoto() {
+        ASSERT(std::find(photoSensorList.begin(), photoSensorList.end(), this) == photoSensorList.end(),
+                XLevelRuntime , "GridObject: double photo sensor activation");
+        photoSensorList.push_back(this);
+    }
+    
+    void GridObject::deactivatePhoto() {
+        std::list<GridObject *>::iterator itr = std::find(photoSensorList.begin(), photoSensorList.end(), this);
+        if (itr != photoSensorList.end())
+            photoSensorList.erase(itr);
+    }
+    
+    void GridObject::on_laserhit(Direction dir) {
+        objFlags |= to_bits(dir);
+    }
+    
 } // namespace enigma

Modified: trunk/src/GridObject.hh
===================================================================
--- trunk/src/GridObject.hh	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/GridObject.hh	2008-02-25 21:56:17 UTC (rev 1050)
@@ -24,7 +24,7 @@
 
 #include "display.hh"
 #include "ecl_alist.hh"
-#include <map>
+#include <list>
 
 namespace enigma { 
 
@@ -41,6 +41,9 @@
      */
     class GridObject : public StateObject, public display::ModelCallback {
     public:
+        static void preLaserRecalc();
+        static void postLaserRecalc();
+    
         GridObject() : pos (GridPos(-1, -1)) {}
         GridObject(const char * kind) : StateObject(kind), pos (GridPos(-1, -1)) {}
 
@@ -94,9 +97,9 @@
         bool isDisplayable();
 
         // GridObject interface
-        virtual void on_laserhit (Direction) {}
-        virtual void actor_enter (Actor *) {}
-        virtual void actor_leave (Actor *) {}
+        virtual void on_laserhit (Direction d);   // direction of laserbeam
+        virtual void actor_enter (Actor *a) {}
+        virtual void actor_leave (Actor *a) {}
 
 
         void warning(const char *format, ...) const;
@@ -107,6 +110,7 @@
 
         DirectionBits getConnections() const;
         DirectionBits getFaces() const;
+        
 
     protected:
         // GridObject interface
@@ -123,9 +127,18 @@
 
         virtual void on_removal(GridPos p) {
             kill_model (p);
-        }     
+        }
+        
+        virtual void photoSensorChange(bool isOn) {}
+        virtual bool lightDirChange(DirectionBits oldDirs, DirectionBits newDirs) {return false;}
+        
+        void activatePhoto();
+        void deactivatePhoto();
 
     private:
+        static std::list<GridObject *> photoSensorList;
+        
+    
         // ModelCallback interface.
         void animcb() {}
 

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/Object.cc	2008-02-25 21:56:17 UTC (rev 1050)
@@ -90,16 +90,16 @@
             return it->second;
     }
     
-    Object::Object() {
+    Object::Object() : objFlags (0) {
         id = getNextId(this, false);
     }
     
-    Object::Object(const char *kind) {
+    Object::Object(const char *kind) : objFlags (0) {
         setAttr("kind", Value(kind));
         id = getNextId(this, false);
     }
     
-    Object::Object(const Object &src_obj) {
+    Object::Object(const Object &src_obj) : objFlags (0) {
         id = getNextId(this, false);
         attribs = src_obj.attribs;
     }

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/Object.hh	2008-02-25 21:56:17 UTC (rev 1050)
@@ -25,6 +25,7 @@
 #include "ecl_math.hh"
 #include "Value.hh"
 #include <map>
+#include <stdint.h>
 
 namespace enigma { 
 
@@ -212,13 +213,18 @@
          */
         bool getDestinationByIndex(int idx, ecl::V2 &dstpos) const;
         
+        /**
+         * 
+         */
+        uint32_t  objFlags;
+        
     private:
         friend void InitWorld();   // for bootFinished() access
         
         static int next_id;
         static std::map<int, Object *> objects;
         
-        int id;
+        int       id;
         AttribMap attribs;
         
         static int getNextId(Object *obj, bool bootFinished);

Modified: trunk/src/laser.cc
===================================================================
--- trunk/src/laser.cc	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/laser.cc	2008-02-25 21:56:17 UTC (rev 1050)
@@ -39,72 +39,7 @@
                                     itf_static | itf_indestructible, 0.0 };
 
 
-/* -------------------- Laser Stones -------------------- */
 
-/** \page st-laser Laser Stone
-
-These stones emit a laser beam in a specified direction when
-activated.  They are the only objects in the game that can act as
-primary light sources (mirrors can also emit light but they require
-an incoming beam).
-
-\subsection lasera Attributes
-
-- \b on:      1 if laser in active, 0 if not
-- \b dir:     the Direction in which light is emitted
-            (NORTH, EAST, SOUTH, WEST)
-
-\subsection laserm Messages
-
-- \b on, \b off, \b onoff: as usual
-
-\subsection lasersa See also
-
-\ref st-pmirror, \ref st-3mirror
-
-*/
-//    class LaserStone : public LaserEmitter, public OnOffStone {
-//    public:
-//        LaserStone (Direction dir=EAST);
-//        static void reemit_all();
-//
-//    private:
-//
-////        INSTANCELISTOBJ(LaserStone);
-//
-//// We can't use this macro here: g++ can't handle multiple inheritance
-//// and covariant return types at the same time ("sorry, not
-//// implemented: ..." first time I ever saw this error message :-)
-//
-//        typedef std::vector<LaserStone*> InstanceList;
-//        static InstanceList instances;
-//        Stone *clone() {
-//            LaserStone *o = new LaserStone(*this);
-//            instances.push_back(o);
-//            return o;
-//        }
-//        void dispose() {
-//            instances.erase(find(instances.begin(), instances.end(), this));
-//            delete this;
-//        }
-//
-//        // LaserEmitter interface
-//        DirectionBits emission_directions() const;
-//
-//        // OnOffStone interface.
-//        void notify_onoff(bool on);
-//
-//        // Private methods.
-//        void emit_light();
-//        Direction get_dir() const {return to_direction(getAttr("dir"));}
-//
-//        // Stone interface.
-//        void on_creation (GridPos p);
-//        void init_model();
-//    };
-//
-//
-
 /* -------------------- PhotoCell -------------------- */
 
 vector<void*> PhotoCell::instances;
@@ -214,13 +149,18 @@
 //   when the laser goes on or off, use the `PhotoStone'
 //   mixin.
 
-list<LaserBeam *> LaserBeam::beamList1;
-list<LaserBeam *> LaserBeam::beamList2;
-list<LaserBeam *> *LaserBeam::gridBeams = &LaserBeam::beamList1;
-list<LaserBeam *> *LaserBeam::lastBeams = &LaserBeam::beamList2;
+std::list<LaserBeam *> LaserBeam::beamList;
 
+
+void LaserBeam::Reset() {
+    beamList.clear();
+}
+
 void LaserBeam::init_model()
 {
+    DirectionBits directions = (DirectionBits)(objFlags & 15);
+//    Log << "LaserBeam init model " << directions << " - " << objFlags << "\n";
+    
     if (directions & (EASTBIT | WESTBIT)) {
         if (directions & (NORTHBIT | SOUTHBIT))
             set_model("it-laserhv");
@@ -234,23 +174,32 @@
 void LaserBeam::on_laserhit(Direction dir)
 {
     DirectionBits dirbit = to_bits(dir);
-    if (!(directions & dirbit)) {
-        // `dir' not in `directions' ?
-        directions = DirectionBits(directions | dirbit);
-        emit_from(get_pos(), dir);
-        init_model();
+    
+    if ((objFlags & 15 & dirbit) == 0) {
+        // new direction
+        objFlags |= dirbit;
+        emit_from(get_pos(), dir);        
     }
 }
 
-void LaserBeam::on_creation (GridPos p)
+void LaserBeam::on_creation(GridPos p)
 {
+    beamList.push_back(this);
+    DirectionBits directions = (DirectionBits)(objFlags & 15);
+    
     if (directions & EASTBIT) emit_from(p, EAST);
-    if (directions & WESTBIT) emit_from(p, WEST);
-    if (directions &NORTHBIT) emit_from(p, NORTH);
-    if (directions &SOUTHBIT) emit_from(p, SOUTH);
-    init_model();
+    else if (directions & WESTBIT) emit_from(p, WEST);
+    else if (directions & NORTHBIT) emit_from(p, NORTH);
+    else if (directions & SOUTHBIT) emit_from(p, SOUTH);
 }
 
+void LaserBeam::on_removal(GridPos p) {
+    if ((objFlags & 15) != 0) {    // extraordinary removal of a laser beam
+        beamList.erase(find(beamList.begin(), beamList.end(), this));
+    }
+    Item::on_removal(p);
+}
+
 void LaserBeam::emit_from(GridPos p, Direction dir)
 {
     bool may_pass = true;
@@ -263,17 +212,18 @@
 
     if (may_pass) {
         if (Item *it = GetItem(p))
-            it->on_laserhit (dir);
+            it->on_laserhit(dir);
         else {
             LaserBeam *lb = new LaserBeam(dir);
             SetItem(p, lb);
-            gridBeams->push_back(lb);
         }
     }
 }
 
 bool LaserBeam::actor_hit(Actor *actor)
 {
+    DirectionBits directions = (DirectionBits)(objFlags & 15);
+
     double r = get_radius(actor);
     V2 p = actor->get_pos();
     GridPos gp = get_pos();
@@ -293,16 +243,11 @@
 
 void LaserBeam::kill_all()
 {    
-    list<LaserBeam *> *tmpBeamList = lastBeams;
-    ASSERT(tmpBeamList->empty(), XLevelRuntime, "Laser Beam - old list not empty");
-    lastBeams = gridBeams;
-    for (list<LaserBeam *>::iterator itr = lastBeams->begin(); itr != lastBeams->end(); ++itr) {
-        LaserBeam *beam = *itr;
-        GridPos pos = beam->get_pos();
-        YieldItem(pos);          // now we are the owner of the object!
-        beam->setOwnerPos(pos);  // remember old pos
+    
+    for (list<LaserBeam *>::iterator itr = beamList.begin(); itr != beamList.end(); ++itr) {
+        uint32_t flags = (*itr)->objFlags;
+        (*itr)->objFlags = (flags & ~255) | ((flags & 15) << 4);  // remember last laser bits, clear current ones
     }
-    gridBeams = tmpBeamList;
 }
 
 void LaserBeam::all_emitted()
@@ -310,103 +255,43 @@
     double x = 0, y = 0;
     int    count = 0;
     
-    for (list<LaserBeam *>::iterator itr = lastBeams->begin(); itr != lastBeams->end(); ++itr) {
-        LaserBeam *oldBeam = *itr;
-        GridPos p = oldBeam->getOwnerPos();
-        Item * newItem = GetItem(p);
-        if (newItem != NULL && newItem->get_traits().id == it_laserbeam) {
-            LaserBeam *newBeam = dynamic_cast<LaserBeam *>(newItem);
-            newBeam->state = 1; // mark as visited
-            if ((oldBeam->directions & newBeam->directions) != newBeam->directions) {
+    for (list<LaserBeam *>::iterator itr = beamList.begin(); itr != beamList.end(); ) {
+        list<LaserBeam *>::iterator witr = itr;  // work iterator for possible deletion of object
+        ++itr;                                   // main iterator does no longer point to critical object
+        uint32_t flags = (*witr)->objFlags;
+//        Log << "LaserBeam allemit px " << (*witr)->get_pos().x << " y " << (*witr)->get_pos().y << " f " << flags << "\n";
+        uint32_t newDirs = flags & 15;
+        if (newDirs == 0) {
+            // this grid is now free of laserbeam
+            KillItem((*witr)->get_pos());
+            beamList.erase(witr);
+        } else if ((flags & 240) != (newDirs << 4)) {
+            // the laser beam on grid changed or is new
+            (*witr)->init_model();
+            
+            // sound position calculation
+            if ((((flags & 240) >> 4) & newDirs) != newDirs) {
                 // a beam has been added here
+                GridPos p = (*witr)->getOwnerPos();
                 x += p.x;
                 y += p.y;
                 ++count;
-            }            
+            } 
         }
-        delete oldBeam;
     }
-    for (list<LaserBeam *>::iterator itr = gridBeams->begin(); itr != gridBeams->end(); ++itr) {
-        LaserBeam *newBeam = *itr;
-        GridPos p = newBeam->get_pos();
-        if (newBeam->state == 0) {
-            x += p.x;
-            y += p.y;
-            ++count;
-        }
-    }
 
     if (count) {
         sound::EmitSoundEvent ("laseron", ecl::V2(x/count+.5, y/count+.5),
                                getVolume("laseron", NULL));
     }
-    
-    lastBeams->clear();
 }
 
 void LaserBeam::dispose()
 {
-    gridBeams->erase(std::find(gridBeams->begin(), gridBeams->end(), this));
     delete this;
 }
 
 
-//----------------------------------------
-// Laser stone
-//----------------------------------------
-//LaserStone::InstanceList LaserStone::instances;
-//
-//LaserStone::LaserStone (Direction dir)
-//: OnOffStone("st-laser")
-//{
-//    setAttr("dir", Value(dir));
-//}
-//
-//DirectionBits
-//LaserStone::emission_directions() const
-//{
-//    if (is_on()) {
-//        return to_bits(get_dir());
-//    }
-//    return NODIRBIT;
-//}
-//
-//
-//void LaserStone::reemit_all()
-//{
-//    for (unsigned i=0; i<instances.size(); ++i)
-//    {
-//        LaserStone *ls = (LaserStone*) instances[i];
-//        ls->emit_light();
-//    }
-//}
-//
-//void LaserStone::notify_onoff(bool /*on*/)
-//{
-//    RecalcLight();
-//}
-//
-//void LaserStone::emit_light()
-//{
-//    if (is_on())
-//        LaserBeam::emit_from(get_pos(), get_dir());
-//}
-//
-//void LaserStone::on_creation (GridPos p)
-//{
-//    if (is_on())
-//        RecalcLight();
-//    Stone::on_creation(p);
-//}
-//
-//void LaserStone::init_model()
-//{
-//    string mname = is_on() ? "st-laseron" : "st-laser";
-//    mname += to_suffix(get_dir());
-//    set_model(mname);
-//}
-//
-
 /* -------------------- MirrorStone -------------------- */
 namespace
 {
@@ -780,10 +665,12 @@
     if (light_recalc_scheduled) {
 //        light_recalc_scheduled = false;    // this is the right place - but we have first to fix some object like hammer,...
         PhotoCell::notify_start();
+        GridObject::preLaserRecalc();
         LaserBeam::kill_all();
         LaserStone::reemit_all();
-        PhotoCell::notify_finish();
         LaserBeam::all_emitted();
+        GridObject::postLaserRecalc();
+        PhotoCell::notify_finish();
         light_recalc_scheduled = false;
     }
 }

Modified: trunk/src/laser.hh
===================================================================
--- trunk/src/laser.hh	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/laser.hh	2008-02-25 21:56:17 UTC (rev 1050)
@@ -111,9 +111,10 @@
         static void emit_from(GridPos p, Direction d);
         static void kill_all();
         static void all_emitted();
+        static void Reset();
 
     // LaserEmitter interface
-        DirectionBits emission_directions() const { return directions; }
+        DirectionBits emission_directions() const { return (DirectionBits)(objFlags & 15); }
         static ItemTraits traits;
 
         const ItemTraits &get_traits() const {
@@ -121,12 +122,13 @@
         }
     private:
         LaserBeam(Direction dir) {
-            directions = to_bits(dir);
+            objFlags |= to_bits(dir);
         }
 
         // Item interface.
         void on_laserhit(Direction dir);
         void on_creation (GridPos p);
+        virtual void on_removal(GridPos p);
         void init_model();
         bool actor_hit(Actor *actor);
 
@@ -138,12 +140,8 @@
         void dispose();
 
         // Variables
-        DirectionBits directions;
         
-        static std::list<LaserBeam *> beamList1;
-        static std::list<LaserBeam *> beamList2;
-        static std::list<LaserBeam *> *gridBeams;
-        static std::list<LaserBeam *> *lastBeams;
+        static std::list<LaserBeam *> beamList;
     };
 
 /* -------------------- Functions -------------------- */

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-24 19:40:50 UTC (rev 1049)
+++ trunk/src/world.cc	2008-02-25 21:56:17 UTC (rev 1050)
@@ -1574,6 +1574,7 @@
 {
     GameTimer.clear();
     Resize (20, 13);
+    LaserBeam::Reset();
 }
 
 bool WorldInitLevel()



From andreasl at mail.berlios.de  Fri Feb 29 21:53:31 2008
From: andreasl at mail.berlios.de (andreasl at BerliOS)
Date: Fri, 29 Feb 2008 21:53:31 +0100
Subject: [Enigma-game-svn] r1051 - trunk/data/levels/lib
Message-ID: <200802292053.m1TKrVdj026305@sheep.berlios.de>

Author: andreasl
Date: 2008-02-29 21:53:30 +0100 (Fri, 29 Feb 2008)
New Revision: 1051

Modified:
   trunk/data/levels/lib/libluatools.xml
   trunk/data/levels/lib/libsoko-endphase.xml
Log:
Trunk:
 - Added two functions to libluatools to create tables
   of permutations and cyclic permutations of a given
   number of integers.
 - Removed similar code from libsoko-endphase.
Note:
 - Such tables of integers can be used e.g. to connect
   N triggers with N doors randomly:

ti["d"] = {"st-door_a", name="door#"}  -- (in future "st_door_a")
ti["t"] = {"it_trigger", name="trigger#", target="open_door"}

trigger_to_doors = luatools.permutation(<NUMBER OF TRIGGERS>)

function open_door(onoff, sender)
  local trigger_name = sender["name"]
  local number = tonumber(string.sub(trigger_name, 9, -1))
  local door_name = "door#"..trigger_to_doors[number]
  no[door_name]:message("toggle")
end



Modified: trunk/data/levels/lib/libluatools.xml
===================================================================
--- trunk/data/levels/lib/libluatools.xml	2008-02-25 21:56:17 UTC (rev 1050)
+++ trunk/data/levels/lib/libluatools.xml	2008-02-29 20:53:30 UTC (rev 1051)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libluatools"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -128,6 +128,35 @@
   end
 end
 
+-- Return a random permutation of n elements.
+-- This function outputs a table with integer entries between
+-- 1 and n at positions 1 to n.
+function luatools.permutation(n)
+  if type(n) ~= "number" then
+    error("permutation: Expected number, got "..type(n).."!")
+  end
+  local sequence = {}
+  for j = 1, n do
+    table.insert(sequence, j)
+  end
+  luatools.shuffle_table(sequence)
+  return sequence
+end
+
+-- Return a random cyclic permutation (i.e. with only one cycle) of n elements.
+function luatools.cyclic_permutation(n)  
+  if type(n) ~= "number" then
+    error("cyclic_permutation: Expected number, got "..type(n).."!")
+  end
+  local sequence1 = luatools.permutation(n)
+  local sequence2 = {}
+  for j = 1, n - 1 do
+    sequence2[sequence1[j]] = sequence1[j+1]
+  end
+  sequence2[sequence1[n]] = sequence1[1]
+  return sequence2
+end
+
     ]]></el:luamain>
     <el:i18n>
     </el:i18n>

Modified: trunk/data/levels/lib/libsoko-endphase.xml
===================================================================
--- trunk/data/levels/lib/libsoko-endphase.xml	2008-02-25 21:56:17 UTC (rev 1050)
+++ trunk/data/levels/lib/libsoko-endphase.xml	2008-02-29 20:53:30 UTC (rev 1051)
@@ -754,16 +754,7 @@
   
   -- Find a cyclic permutation (i.e. with only one cycle) to connect the
   -- vortices (each vortex shall be reached by starting from any other).
-  local sequence = {}
-  for j = 1, components do
-    sequence[j] = {nr = j}
-  end
-  luatools.shuffle_table(sequence)
-  local connect = {}
-  for j = 1, components - 1 do
-    connect[sequence[j].nr] = sequence[j+1].nr
-  end
-  connect[sequence[components].nr] = sequence[1].nr
+  local connect = luatools.cyclic_permutation(components)
 
   -- Now set and connect the vortices
   for j, v in pairs(vortex) do



From ral at mail.berlios.de  Fri Feb 29 23:42:01 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 29 Feb 2008 23:42:01 +0100
Subject: [Enigma-game-svn] r1052 - in trunk: data data/schemas src src/stones
Message-ID: <200802292242.m1TMg1Hi002986@sheep.berlios.de>

Author: ral
Date: 2008-02-29 23:41:59 +0100 (Fri, 29 Feb 2008)
New Revision: 1052

Modified:
   trunk/data/api1init.lua
   trunk/data/models-2d.lua
   trunk/data/schemas/objects.xml
   trunk/src/GridObject.cc
   trunk/src/GridObject.hh
   trunk/src/Object.cc
   trunk/src/Object.hh
   trunk/src/enigma.cc
   trunk/src/enigma.hh
   trunk/src/items.cc
   trunk/src/items.hh
   trunk/src/laser.cc
   trunk/src/laser.hh
   trunk/src/oxyd.cc
   trunk/src/server.cc
   trunk/src/stones.cc
   trunk/src/stones/LaserStone.cc
   trunk/src/stones/LaserStone.hh
   trunk/src/stones_complex.cc
   trunk/src/stones_simple.cc
   trunk/src/world.cc
Log:
Trunk 1.1: new API reengineering sword and hammer, laser light
- elimination of interface LaserEmitter (GridObject is successor)
- GridObject as successor of PhotoCell, PhotoStone
- reengineering sword, hammer:
  - rename to it_sword, it_hammer
  - do no longer react on foreign laser beam updates
  - do transform just once on multiple laser hits at once
  - keep reacting on added laser lights
  - do no longer react on switched off lights
  - latency of 0.2 s after a transformation
  - it_sword_new, it_hammer_new for level init of items onto beams
- fix Trigger item broken on initial actors on triggers at a level restart
- fix LaserStone broken DAT compatibility
Note:
- several items like coins need to reengineered like sword/hammer
- PhotoStone, PhotoCell subclasses need reengineering


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/data/api1init.lua	2008-02-29 22:41:59 UTC (rev 1052)
@@ -47,9 +47,11 @@
 RenamingObjectsNew2Old = {
     it_blocker = "it-blocker",
     it_blocker_new = "it-blocker-new",
+    it_hammer = "it-hammer",
     it_magnet = "it-magnet",
     it_magnet_on = "it-magnet-on",
     it_magnet_off = "it-magnet-off",
+    it_sword = "it-sword",
     it_trigger = "it-trigger",
     it_wormhole_on = "it-wormhole",
     it_wormhole_off = "it-wormhole-off",

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/data/models-2d.lua	2008-02-29 22:41:59 UTC (rev 1052)
@@ -409,7 +409,6 @@
         "it-floppy",
         "it-glasses",
         "it-glasses-broken",
-        "it-hammer",
         "it-hill",
         "it-hollow",
         "it-hstrip",
@@ -427,7 +426,6 @@
         "it-spring1",
         "it-spring2",
         "it-surprise",
-        "it-sword",
         "it-tinyhill",
         "it-tinyhollow",
         "it-umbrella",
@@ -440,6 +438,8 @@
     DefImages(itemlist)
 
     DefImage("it-brake", {filename="st-brake"})
+    DefImage("it_hammer", {filename="it-hammer"})
+    DefImage("it_sword", {filename="it-sword"})
 end
 
 -------------------------

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/data/schemas/objects.xml	2008-02-29 22:41:59 UTC (rev 1052)
@@ -59,6 +59,8 @@
     </object>
     <object name="it_blocker_new" init="true">
     </object>
+    <object name="it_hammer"/>
+    <object name="it_hammer_new" init="true"/>
     <object name="it_magnet">
       <attr name="range" default="nil"/>
       <attr name="strength" default="nil"/>
@@ -72,6 +74,8 @@
     <object name="it_magnet_on">
       <attr name="state" value="1"/>
     </object>
+    <object name="it_sword"/>
+    <object name="it_sword_new" init="true"/>
     <object name="it_wormhole">
       <attr name="destination"/>
       <attr name="interval" default="0"/>

Modified: trunk/src/GridObject.cc
===================================================================
--- trunk/src/GridObject.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/GridObject.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -22,7 +22,9 @@
 
 #include "errors.hh"
 #include "game.hh"
+#include "laser.hh"
 #include "lua.hh"
+#include "main.hh"
 #include "sound.hh"
 #include "world.hh"
 
@@ -47,34 +49,8 @@
 
 
 /* -------------------- GridObject implementation -------------------- */
-    std::list<GridObject *> GridObject::photoSensorList;
 
-    void GridObject::preLaserRecalc() {
-        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ++itr) {
-            uint32_t flags = (*itr)->objFlags;
-            (*itr)->objFlags = (flags & ~255) | ((flags & 15) << 4);  // remember last laser bits, clear current ones
-        }
-    }
-    
-    void GridObject::postLaserRecalc() {
-        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ) {
-            list<GridObject *>::iterator witr = itr;  // work iterator for possible deletion of object
-            ++itr;                                    // main iterator does no longer point to critical object
-            uint32_t flags = (*witr)->objFlags;
-            DirectionBits newDirs = (DirectionBits)(flags & 15);
-            DirectionBits oldDirs = (DirectionBits)((flags & 240) >> 4);
-            if (newDirs != oldDirs) {
-                if (!(*witr)->lightDirChange(oldDirs, newDirs)) {
-                    if (oldDirs == 0)
-                        (*witr)->photoSensorChange(true);
-                    else if (newDirs == 0)
-                        (*witr)->photoSensorChange(false);
-                }
-            }
-        }
-    }
 
-
     void GridObject::setOwner(int player) {
         ASSERT(pos.x < 0, XLevelRuntime,
             "GridObject: attempt to add object to owner inventory that is still on grid");
@@ -200,21 +176,77 @@
         return DirectionBits(ALL_DIRECTIONS ^ getConnections());
     }
     
+    void GridObject::on_creation(GridPos p) {
+        init_model();
+    }
     
+    void GridObject::on_removal(GridPos p) {
+        kill_model (p);
+        if (objFlags & OBJBIT_PHOTOACTIV)
+            deactivatePhoto();
+    }
+    
+    
+    // GridObject laser light support
+    
+    std::list<GridObject *> GridObject::photoSensorList;
+
+    void GridObject::preLaserRecalc() {
+        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ++itr) {
+            uint32_t flags = (*itr)->objFlags;
+            (*itr)->objFlags = (flags & ~OBJBIT_LIGHTALLDIRS) | ((flags & OBJBIT_LIGHTNEWDIRS) << 4);  // remember last laser bits, clear current ones
+        }
+    }
+    
+    void GridObject::postLaserRecalc() {
+        for (list<GridObject *>::iterator itr = photoSensorList.begin(); itr != photoSensorList.end(); ) {
+            list<GridObject *>::iterator witr = itr;  // work iterator for possible deletion of object
+            ++itr;                                    // main iterator does no longer point to critical object
+            uint32_t flags = (*witr)->objFlags;
+            DirectionBits newDirs = (DirectionBits)(flags & OBJBIT_LIGHTNEWDIRS);
+            DirectionBits oldDirs = (DirectionBits)((flags & OBJBIT_LIGHTOLDDIRS) >> 4);
+            if (newDirs != oldDirs) {
+                (*witr)->lightDirChanged(oldDirs, newDirs);
+            }
+        }
+    }
+    
+    void GridObject::prepareLevel() {
+        photoSensorList.clear();
+    }
+
+    void GridObject::processLight(Direction dir) {
+        objFlags |= to_bits(dir);
+    }
+    
+    DirectionBits GridObject::emissionDirections() const {
+        return NODIRBIT;
+    }
+    
     void GridObject::activatePhoto() {
-        ASSERT(std::find(photoSensorList.begin(), photoSensorList.end(), this) == photoSensorList.end(),
-                XLevelRuntime , "GridObject: double photo sensor activation");
+        ASSERT((objFlags & OBJBIT_PHOTOACTIV) == 0, XLevelRuntime , "GridObject: double photo sensor activation");
         photoSensorList.push_back(this);
+        objFlags |= OBJBIT_PHOTOACTIV;
     }
+
+    void GridObject::lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs) {
+    }
     
     void GridObject::deactivatePhoto() {
         std::list<GridObject *>::iterator itr = std::find(photoSensorList.begin(), photoSensorList.end(), this);
         if (itr != photoSensorList.end())
             photoSensorList.erase(itr);
+        objFlags &= ~OBJBIT_PHOTOACTIV;
+        
     }
     
-    void GridObject::on_laserhit(Direction dir) {
-        objFlags |= to_bits(dir);
+    DirectionBits GridObject::updateCurrentLightDirs() {
+        DirectionBits result = NODIRBIT;
+        for (Direction dir = NORTH; dir != NODIR; dir = (Direction)(dir - 1)) {
+            if (LightFrom(get_pos(), reverse(dir)))
+                result = DirectionBits(result | to_bits(dir));
+        }
+        objFlags = (objFlags & ~OBJBIT_LIGHTNEWDIRS) | result;
+        return result;
     }
-    
 } // namespace enigma

Modified: trunk/src/GridObject.hh
===================================================================
--- trunk/src/GridObject.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/GridObject.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -41,9 +41,6 @@
      */
     class GridObject : public StateObject, public display::ModelCallback {
     public:
-        static void preLaserRecalc();
-        static void postLaserRecalc();
-    
         GridObject() : pos (GridPos(-1, -1)) {}
         GridObject(const char * kind) : StateObject(kind), pos (GridPos(-1, -1)) {}
 
@@ -97,7 +94,7 @@
         bool isDisplayable();
 
         // GridObject interface
-        virtual void on_laserhit (Direction d);   // direction of laserbeam
+        
         virtual void actor_enter (Actor *a) {}
         virtual void actor_leave (Actor *a) {}
 
@@ -121,24 +118,11 @@
 
         virtual void init_model();
 
-        virtual void on_creation(GridPos p) {
-            init_model();
-        }
-
-        virtual void on_removal(GridPos p) {
-            kill_model (p);
-        }
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
         
-        virtual void photoSensorChange(bool isOn) {}
-        virtual bool lightDirChange(DirectionBits oldDirs, DirectionBits newDirs) {return false;}
-        
-        void activatePhoto();
-        void deactivatePhoto();
 
     private:
-        static std::list<GridObject *> photoSensorList;
-        
-    
         // ModelCallback interface.
         void animcb() {}
 
@@ -154,6 +138,43 @@
          * in the world nor owned by anyone have pos.x = pos.y = -1. 
          */
         GridPos pos;
+
+
+    // GridObject laser light support
+    public:
+        static void preLaserRecalc();
+        static void postLaserRecalc();
+        static void prepareLevel();
+    private:
+        static std::list<GridObject *> photoSensorList;
+    
+    public:
+        virtual void processLight(Direction d);   // direction of laserbeam
+        virtual DirectionBits emissionDirections() const;
+        
+    protected:
+        /**
+         * Hook of laser light recalculation that is called for photo active objects
+         * everytime the illumination from any side of the grid did change. You need
+         * to activate a GridObject first by calling "activatePhoto()". On removal of
+         * an activated GridObject "deactivatePhoto()" is automatically executed. All
+         * reported directions are the directions the laser beams are bound to, not
+         * the objects grid faces. Use the "revert" function to convert the light 
+         * directions to object faces.<p>
+         * To identify a side independent light switch on compare "oldDirs" to 0, 
+         * to identify a side independent light switch off compare "newDirs" to 0.
+         * Apply "added_dirs(oldDirs, newDirs)" to get the directions of new laser
+         * light, apply "removed_dirs(oldDirs, newDirs)" to get the directions of
+         * switched off light.<p>
+         * Note that on level initialization this method will not be called. The
+         * light directions are silently updated, but no actions should be caused
+         * by the initial light beam calculation due to the snapshot principle.
+         */
+        virtual void lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs);
+        
+        void activatePhoto();
+        void deactivatePhoto();
+        DirectionBits updateCurrentLightDirs();
     };
 
 } // namespace enigma

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/Object.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -99,9 +99,10 @@
         id = getNextId(this, false);
     }
     
-    Object::Object(const Object &src_obj) : objFlags (0) {
+    Object::Object(const Object &src_obj) {
         id = getNextId(this, false);
         attribs = src_obj.attribs;
+        objFlags = src_obj.objFlags;
     }
     
     Object::~Object() {

Modified: trunk/src/Object.hh
===================================================================
--- trunk/src/Object.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/Object.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -32,6 +32,14 @@
     using std::string;
     
     struct Message;
+    
+    enum ObjectFlagsBits {
+        OBJBIT_LIGHTNEWDIRS  =  15,   ///< GridObject 4 direction bits with current/new light
+        OBJBIT_LIGHTOLDDIRS  =  240,  ///< GridObject 4 direction bits with previous light
+        OBJBIT_LIGHTALLDIRS  =  255,  ///< GridObject all 8 direction bits with old an new light
+        OBJBIT_PHOTOACTIV    =  1<<8  ///< GridObject registered as photo activ
+    };
+    
     class Value;
 
     /**
@@ -214,7 +222,19 @@
         bool getDestinationByIndex(int idx, ecl::V2 &dstpos) const;
         
         /**
+         * A central managed container for 32 single bit flags to be used by 
+         * subclasses. Object is reponsible of efficiently cloning, saving and
+         * restoring these flags on demand. Subclasses use the bits as follows:
          * 
+         * - Bit 0-15 are reserved for classes Object to GridObject
+         * 
+         * - Bit 16-23 are reserved for classes Item, Stone, Floor, Actor
+         * 
+         * - Bit 24-31 are reserved for the final subclass
+         * 
+         * See enumeration ObjectFlagsBits for Bitmasks of Bit 0-15. Note that
+         * Bitmasks would not have been an alternative as the subclasses may
+         * and will use the upper bits in a quite different mannor. 
          */
         uint32_t  objFlags;
         

Modified: trunk/src/enigma.cc
===================================================================
--- trunk/src/enigma.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/enigma.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -112,6 +112,11 @@
     return sfx[d+1];
 }
 
+std::string toSuffix(Direction d) {
+    static const char *sfx[] = { "", "_w", "_s", "_e", "_n" };
+    return sfx[d+1];
+}
+
 /* -------------------- DirectionBits -------------------- */
 
 DirectionBits rotate(DirectionBits d, bool clockwise)

Modified: trunk/src/enigma.hh
===================================================================
--- trunk/src/enigma.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/enigma.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -117,6 +117,7 @@
     Direction rotate_ccw (Direction d);
 
     std::string to_suffix(Direction d);
+    std::string toSuffix(Direction d);
 
     enum DirectionBits {
         NODIRBIT       = 0,
@@ -130,6 +131,9 @@
     DirectionBits rotate (DirectionBits d, bool clockwise);
     DirectionBits to_bits (Direction d);
     bool has_dir (DirectionBits db, Direction dir);
+    DirectionBits reverse(DirectionBits dirs);
+    DirectionBits added_dirs(DirectionBits oldDirs, DirectionBits newDirs);
+    DirectionBits removed_dirs(DirectionBits oldDirs, DirectionBits newDirs);
 
 
 /* -------------------- GridPos -------------------- */
@@ -280,8 +284,20 @@
     inline bool has_dir(DirectionBits db, Direction dir) {
         return (db & to_bits(dir)) != 0;
     }
+    
+    inline DirectionBits reverse(DirectionBits dirs) {
+        return (DirectionBits) (~dirs & ALL_DIRECTIONS);
+    }
+    
+    inline DirectionBits added_dirs(DirectionBits oldDirs, DirectionBits newDirs) {
+        return (DirectionBits) (~oldDirs & newDirs);
+    }
 
+    inline DirectionBits removed_dirs(DirectionBits oldDirs, DirectionBits newDirs) {
+        return (DirectionBits) (oldDirs & ~newDirs);
+    }
 
+
     // ---------- GridPos ----------
 
     inline GridPos::GridPos(int xx, int yy) 

Modified: trunk/src/items.cc
===================================================================
--- trunk/src/items.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/items.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -102,6 +102,12 @@
     SetItem (get_pos(), newitem);
 }
 
+void Item::transform(std::string kind) {
+    Item *newitem = MakeItem(kind.c_str());
+    transferIdentity(newitem);          // subclasses may hook this call
+    SetItem(get_pos(), newitem);
+}
+
 const char *Item::get_kind() const
 {
     return get_traits().name;
@@ -129,10 +135,11 @@
 void Item::on_stonehit (Stone * /*st*/) {
 }
 
-void Item::on_laserhit(Direction)
-{
-    if (get_traits().flags & itf_inflammable)
+void Item::processLight(Direction d) {
+    if (get_traits().flags & itf_inflammable) {
         replace (it_explosion1);
+    } else
+        GridObject::processLight(d);
 }
 
 
@@ -186,8 +193,6 @@
 
 
 /* -------------------- DummyItem -------------------- */
-namespace
-{
     class Dummyitem : public Item {
         CLONEOBJ(Dummyitem);
         DECL_TRAITS;
@@ -289,7 +294,7 @@
         CLONEOBJ(Banana);
         DECL_TRAITS;
 
-        void on_laserhit(Direction /*d*/) {
+        void processLight(Direction d) {
             sound_event ("itemtransform");
             replace(it_cherry);
         }
@@ -305,37 +310,116 @@
 
 /* -------------------- Sword -------------------- */
 
-    class Sword : public Item {
+    class Sword : public Item, public TimeHandler {
         CLONEOBJ(Sword);
         DECL_TRAITS;
 
-        void on_laserhit(Direction /*d*/) {
-            sound_event ("itemtransform");
-            replace(it_hammer);
-        }
     public:
-        Sword() {}
+        Sword(bool isNew);
+
+        // GridObject interface
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        virtual void lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs);
+
+        // TimeHandler interface
+        virtual void alarm();
     };
-    DEF_TRAITS(Sword, "it-sword", it_sword);
 
+    Sword::Sword(bool isNew) : Item() {
+        if (isNew) {
+            objFlags |= ALL_DIRECTIONS;
+        }
+    }
+
+    void Sword::on_creation(GridPos p) {
+        if ((objFlags & ALL_DIRECTIONS) == ALL_DIRECTIONS) {
+            // a new transformed hammer
+            GameTimer.set_alarm(this, 0.2, false);
+        } else {
+            updateCurrentLightDirs();
+            activatePhoto();
+        }
+        Item::on_creation(p);
+    }
+    
+    void Sword::on_removal(GridPos p) {
+        GameTimer.remove_alarm(this);
+        objFlags &= ~ALL_DIRECTIONS;
+        Item::on_removal(p);
+    }
+
+    
+    void Sword::lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs) {
+        if (added_dirs(oldDirs, newDirs) != 0) {
+            sound_event ("itemtransform");
+            transform("it_hammer_new");
+        }
+    }
+    
+    void Sword::alarm() {
+            updateCurrentLightDirs();
+            activatePhoto();        
+    }
+    
+    DEF_TRAITS(Sword, "it_sword", it_sword);
+
 /* -------------------- Hammer -------------------- */
 
-    class Hammer : public Item {
+    class Hammer : public Item, public TimeHandler {
         CLONEOBJ(Hammer);
         DECL_TRAITS;
 
-        void on_laserhit(Direction /*d*/) {
-            if (server::GameCompatibility != enigma::GAMET_PEROXYD) {
-                sound_event ("itemtransform");
-                replace(it_sword);
-            }
-        }
     public:
-        Hammer() {}
+        Hammer(bool isNew);
+
+        // GridObject interface
+        virtual void on_creation(GridPos p);
+        virtual void on_removal(GridPos p);
+        virtual void lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs);
+
+        // TimeHandler interface
+        virtual void alarm();
     };
-    DEF_TRAITS(Hammer, "it-hammer", it_hammer);
-}
+    
+    Hammer::Hammer(bool isNew) : Item() {
+        if (isNew) {
+            objFlags |= ALL_DIRECTIONS;
+        }
+    }
+    
+    void Hammer::on_creation(GridPos p) {
+        if ((objFlags & ALL_DIRECTIONS) == ALL_DIRECTIONS) {
+            // a new transformed hammer
+            GameTimer.set_alarm(this, 0.2, false);
+        } else {
+            updateCurrentLightDirs();
+            activatePhoto();
+        }
+        Item::on_creation(p);
+    }
+    
+    void Hammer::on_removal(GridPos p) {
+        GameTimer.remove_alarm(this);
+        objFlags &= ~ALL_DIRECTIONS;
+        Item::on_removal(p);
+    }
+    
+    void Hammer::lightDirChanged(DirectionBits oldDirs, DirectionBits newDirs) {
+        if (added_dirs(oldDirs, newDirs) != 0 && server::GameCompatibility != enigma::GAMET_PEROXYD) {
+            sound_event ("itemtransform");
+            transform("it_sword_new");
+        }
+    }
+    
+    void Hammer::alarm() {
+            DirectionBits db = updateCurrentLightDirs();
+            activatePhoto();        
+    }
+    
+    DEF_TRAITS(Hammer, "it_hammer", it_hammer);
 
+
 /* -------------------- ExtraLife -------------------- */
 namespace
 {
@@ -349,7 +433,7 @@
                 return "inv-whiteball";
         }
 
-        void on_laserhit(Direction /*d*/) {
+        void processLight(Direction d) {
             sound_event ("itemtransform");
             replace (it_glasses);
         }
@@ -366,7 +450,7 @@
     class Umbrella : public Item {
         CLONEOBJ(Umbrella);
         DECL_TRAITS;
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             if (server::GameCompatibility != enigma::GAMET_PEROXYD)
                 replace(it_explosion1);
         }
@@ -505,7 +589,7 @@
         CLONEOBJ(Coin1);
         DECL_TRAITS;
 
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             sound_event ("itemtransform");
             replace (it_umbrella);
         }
@@ -525,9 +609,9 @@
         CLONEOBJ(Coin2);
         DECL_TRAITS;
 
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             sound_event ("itemtransform");
-            replace (it_hammer);
+            transform("it_hammer_new");
         }
 
         void on_stonehit(Stone *) {
@@ -545,7 +629,7 @@
         CLONEOBJ(Coin4);
         DECL_TRAITS;
 
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             sound_event ("itemtransform");
             replace (it_extralife);
         }
@@ -1099,7 +1183,7 @@
             return Item::message(m);
         }
         void animcb() { explode(); }
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
             change_state(BURNING);
         }
         void on_drop(Actor *) { change_state(BURNING); }
@@ -1165,7 +1249,7 @@
 
         void animcb() { explode (); }
 
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
             explode();
         }
 
@@ -1387,7 +1471,7 @@
             state |= 1;   // add stone pressure bit
         }
                 
-//        Log << "Trigger update old state " << oldState << " - new state " << state << "\n";
+//        Log << "Trigger update old state " << oldState << " - new state " << state << " refuse action " << refuseAction << "\n";
     
         if ((oldState == 0 && state != 0) || (oldState != 0 && state == 0)) {
             init_model();
@@ -1417,7 +1501,7 @@
         }
         void on_drop (Actor *) {start_growing();}
         void on_stonehit (Stone *) {start_growing();}
-        void on_laserhit (Direction) {start_growing();}
+        void processLight(Direction d) {start_growing();}
 
         virtual Value message(const Message &m) {
             if (m.message == "grow" || m.message == "signal") {
@@ -3742,7 +3826,8 @@
     RegisterItem (new Floppy);
     RegisterItem (new Glasses);
     RegisterItem (new BrokenGlasses);
-    RegisterItem (new Hammer);
+    RegisterItem (new Hammer(false));
+    Register ("it_hammer_new", new Hammer(true));
     RegisterItem (new Hill);
     RegisterItem (new Hollow);
     RegisterItem (new HStrip);
@@ -3780,7 +3865,8 @@
     RegisterItem (new Springboard);
     RegisterItem (new Squashed);
     RegisterItem (new SurpriseItem);
-    RegisterItem (new Sword);
+    RegisterItem (new Sword(false));
+    Register ("it_sword_new", new Sword(true));
     RegisterItem (new TinyHill);
     RegisterItem (new TinyHollow);
     RegisterItem (new Trigger);

Modified: trunk/src/items.hh
===================================================================
--- trunk/src/items.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/items.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -175,7 +175,7 @@
         /* ---------- Virtual functions ---------- */
         const char *get_kind() const;
         void init_model();
-        void on_laserhit(Direction);
+        void processLight(Direction d);
 
         /* ---------- Item interface ---------- */
 
@@ -236,6 +236,7 @@
         virtual void kill_model (GridPos p) {
             display::KillModel (GridLoc (GRID_ITEMS, p));
         }
+        void transform(std::string kind);
         // replace template method hook
         virtual void setup_successor(Item *newitem) {}
     };

Modified: trunk/src/laser.cc
===================================================================
--- trunk/src/laser.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/laser.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -144,7 +144,7 @@
 //   across an item or a stone that returns `false' from
 //   Stone::is_transparent().
 //
-// - `on_laserhit()' is called for objects in the beam *whenever*
+// - `processLight()' is called for objects in the beam *whenever*
 //   the beam is recalculated.  For objects that need to be notified
 //   when the laser goes on or off, use the `PhotoStone'
 //   mixin.
@@ -152,7 +152,7 @@
 std::list<LaserBeam *> LaserBeam::beamList;
 
 
-void LaserBeam::Reset() {
+void LaserBeam::prepareLevel() {
     beamList.clear();
 }
 
@@ -171,8 +171,7 @@
         set_model("it-laserv");
 }
 
-void LaserBeam::on_laserhit(Direction dir)
-{
+void LaserBeam::processLight(Direction dir) {
     DirectionBits dirbit = to_bits(dir);
     
     if ((objFlags & 15 & dirbit) == 0) {
@@ -207,12 +206,12 @@
     p.move(dir);
     if (Stone *st = GetStone(p)) {
         may_pass = st->is_transparent (dir);
-        st->on_laserhit (dir);
+        st->processLight(dir);
     }
 
     if (may_pass) {
         if (Item *it = GetItem(p))
-            it->on_laserhit(dir);
+            it->processLight(dir);
         else {
             LaserBeam *lb = new LaserBeam(dir);
             SetItem(p, lb);
@@ -296,7 +295,7 @@
 namespace
 {
     class MirrorStone
-        : public Stone, public LaserEmitter, public PhotoCell
+        : public Stone, public PhotoCell
     {
     protected:
         MirrorStone(const char *name, bool movable=false, bool transparent=false);
@@ -324,8 +323,8 @@
 	// Object interface.
         virtual Value message(const Message &m);
 
-        // LaserEmitter interface
-        DirectionBits emission_directions() const {
+        //GridObject interface
+        DirectionBits emissionDirections() const {
             return outdirs;
         }
 
@@ -463,11 +462,11 @@
             const char *a = " -\\|/";
             return a[MirrorStone::get_orientation()];
         }
-        void on_laserhit(Direction dir);
+        void processLight(Direction dir);
     };
 }
 
-void PlaneMirror::on_laserhit(Direction dir) 
+void PlaneMirror::processLight(Direction dir) 
 {
     char orientation = GetOrientation();
     bool transparent = is_transparent();
@@ -556,11 +555,11 @@
             const Direction a[] = {NODIR, NORTH, EAST, SOUTH, WEST};
             return a[MirrorStone::get_orientation()];
         }
-        void on_laserhit (Direction dir);
+        void processLight(Direction dir);
     };
 }
 
-void TriangleMirror::on_laserhit(Direction beam_dir)
+void TriangleMirror::processLight(Direction beam_dir)
     // note: 'beam_dir' is the direction where laserbeam goes to
 {
     // direction where flat side of triangle points to
@@ -653,15 +652,16 @@
 
 bool LightFrom (GridPos p, Direction dir) {
     p.move(dir);
-    if (LaserEmitter *le = dynamic_cast<LaserEmitter*>(GetStone(p)))
-        if (has_dir(le->emission_directions(), reverse(dir)))
+    if (GridObject *obj = GetStone(p)) 
+        if (has_dir(obj->emissionDirections(), reverse(dir)))
             return true;
-    if (LaserEmitter *le = dynamic_cast<LaserEmitter*>(GetItem(p)))
-        return (has_dir(le->emission_directions(), reverse(dir)));
+    if (GridObject *obj = GetItem(p))
+        return (has_dir(obj->emissionDirections(), reverse(dir)));
+    
     return false;
 }
 
-void RecalcLightNow() {
+void PerformRecalcLight(bool isInit) {
     if (light_recalc_scheduled) {
 //        light_recalc_scheduled = false;    // this is the right place - but we have first to fix some object like hammer,...
         PhotoCell::notify_start();
@@ -669,7 +669,9 @@
         LaserBeam::kill_all();
         LaserStone::reemit_all();
         LaserBeam::all_emitted();
-        GridObject::postLaserRecalc();
+        if (!isInit)
+            // do not cause actions on initial laser beam generation
+            GridObject::postLaserRecalc();
         PhotoCell::notify_finish();
         light_recalc_scheduled = false;
     }

Modified: trunk/src/laser.hh
===================================================================
--- trunk/src/laser.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/laser.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -28,15 +28,6 @@
 #include <list>
 
 namespace enigma {
-    /**
-     * This interface must be implemented by all items and stones that
-     * are capable of emitting light.
-     */
-    class LaserEmitter {
-    public:
-        virtual ~LaserEmitter() {}
-        virtual DirectionBits emission_directions() const = 0;
-    };
 
 /* -------------------- PhotoCell -------------------- */
 
@@ -83,7 +74,7 @@
     
       The most prominent example are Oxyd stones -- they open when
       they are hit by a laser beam.  See the remarks at the beginning
-      of this file to understand why overriding `on_laserhit' is not
+      of this file to understand why overriding `processLight' is not
       sufficient for a proper implementation of Oxyd stones.
     */
 
@@ -106,15 +97,15 @@
     
 /* -------------------- LaserBeam -------------------- */
 
-    class LaserBeam : public Item, public LaserEmitter {
+    class LaserBeam : public Item {
     public:
         static void emit_from(GridPos p, Direction d);
         static void kill_all();
         static void all_emitted();
-        static void Reset();
+        static void prepareLevel();
 
-    // LaserEmitter interface
-        DirectionBits emission_directions() const { return (DirectionBits)(objFlags & 15); }
+        // GridObject interface
+        DirectionBits emissionDirections() const { return (DirectionBits)(objFlags & 15); }
         static ItemTraits traits;
 
         const ItemTraits &get_traits() const {
@@ -126,7 +117,7 @@
         }
 
         // Item interface.
-        void on_laserhit(Direction dir);
+        void processLight(Direction dir);
         void on_creation (GridPos p);
         virtual void on_removal(GridPos p);
         void init_model();
@@ -149,7 +140,7 @@
 
     /*! This function must be called at the end of each tick; it
       recalculates the laser beams if necessary. */
-    void RecalcLightNow();
+    void PerformRecalcLight(bool isInit);
 
     /*! Force all light beams to be recalculated at the end of the
       current tick.  So far, this is only used by laser stones and in

Modified: trunk/src/oxyd.cc
===================================================================
--- trunk/src/oxyd.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/oxyd.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -268,10 +268,10 @@
 
     Stone *st = 0;
     if (dir != NODIR) {
-        string lasername("st-laser");
-        lasername += to_suffix(dir);
+        string lasername("st_laser");
+        lasername += toSuffix(dir);
         st         = MakeStone(lasername.c_str());
-        st->setAttr("on", Value(on)); // OnOffStone attribute
+        st->setAttr("state", Value(on ? 1 : 0));
     }
     return st;
 }

Modified: trunk/src/server.cc
===================================================================
--- trunk/src/server.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/server.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -231,7 +231,7 @@
     state = sv_waiting_for_clients;
 
     server::NoCollisions = false;
-
+    server::WorldInitialized  = false;
     server::LevelTime         = 0.0;
     server::ConserveLevel     = true;
     server::TwoPlayerGame     = false;

Modified: trunk/src/stones/LaserStone.cc
===================================================================
--- trunk/src/stones/LaserStone.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/stones/LaserStone.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -134,6 +134,13 @@
         state &= 1;
     }
     
+    DirectionBits LaserStone::emissionDirections() const {
+        if (externalState() == 1) {
+            return to_bits(getOrientation());
+        }
+        return NODIRBIT;
+    }
+
     void LaserStone::alarm() {
         int oldExtState = externalState();
         switch (state) {
@@ -158,13 +165,6 @@
         }
     }
     
-    DirectionBits LaserStone::emission_directions() const {
-        if (externalState() == 1) {
-            return to_bits(getOrientation());
-        }
-        return NODIRBIT;
-    }
-
     void LaserStone::emit_light() {
         if (externalState() == 1)
             LaserBeam::emit_from(get_pos(), getOrientation());

Modified: trunk/src/stones/LaserStone.hh
===================================================================
--- trunk/src/stones/LaserStone.hh	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/stones/LaserStone.hh	2008-02-29 22:41:59 UTC (rev 1052)
@@ -33,7 +33,7 @@
      * the user cannot recognize laser switching is limited. After a switching
      * a laser stays in a NEW* state where further switch requests are delayed.
      */
-    class LaserStone : public Stone, public LaserEmitter, public TimeHandler {
+    class LaserStone : public Stone, public TimeHandler {
     private:
         enum iState {
             OFF, 
@@ -67,12 +67,11 @@
         virtual void init_model();
         virtual void on_creation(GridPos p);
         virtual void on_removal(GridPos p);
+        virtual DirectionBits emissionDirections() const;
         
         // TimeHandler interface
         virtual void alarm();
 
-        // LaserEmitter interface
-        virtual DirectionBits emission_directions() const;
         
     private:
         // Private methods.

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/stones.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -662,7 +662,7 @@
         CLONEOBJ(PlainStone);
         DECL_TRAITS;
 
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             ReplaceStone (get_pos(), MakeStone("st-plain_cracked"));
         }
 
@@ -745,7 +745,7 @@
             sound_event ("stonedestroy");
             ReplaceStone(get_pos(), MakeStone ("st-plain_breaking"));
         }
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             break_me();
         }
         virtual Value message(const Message &m) {

Modified: trunk/src/stones_complex.cc
===================================================================
--- trunk/src/stones_complex.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/stones_complex.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -714,7 +714,7 @@
         void on_creation (GridPos p);
         void on_removal (GridPos p);
         void on_impulse (const Impulse& impulse);
-        void on_laserhit (Direction dir);
+        void processLight(Direction dir);
 
         bool is_floating() const;
 
@@ -1171,7 +1171,7 @@
     ConnectiveStone::on_removal(p);
 }
 
-void PuzzleStone::on_laserhit (Direction dir) {
+void PuzzleStone::processLight(Direction dir) {
     ecl::set_flags (illumination, to_bits(reverse(dir)));
 }
 
@@ -1695,7 +1695,7 @@
                 change_state (IDLE);
         }
 
-        void on_laserhit(Direction dir) {
+        void processLight(Direction dir) {
             incoming = dir;
             change_state(PULSING);
         }
@@ -1819,7 +1819,7 @@
             return true;
         }
 
-        void on_laserhit (Direction) {
+        void processLight(Direction d) {
             // hollow StoneImpulseStones cannot be activated using lasers
         }
     };

Modified: trunk/src/stones_simple.cc
===================================================================
--- trunk/src/stones_simple.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/stones_simple.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -582,7 +582,7 @@
             if (may_be_broken_by(sc.actor))
                 break_me();
         }
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
             break_me();
         }
         void animcb() {
@@ -712,7 +712,7 @@
         Stone_movebreak()
         {}
 
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
         }
 
         string get_break_anim() const  {
@@ -1359,7 +1359,7 @@
         void actor_hit(const StoneContact &sc);
         virtual Value message(const Message &m);
 
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
             change_state(BREAKING);
         }
     public:
@@ -2037,7 +2037,7 @@
             SetItem(p, it_explosion1);
         }
 
-        void on_laserhit(Direction) {
+        void processLight(Direction d) {
             explode();
         }
 

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2008-02-29 20:53:30 UTC (rev 1051)
+++ trunk/src/world.cc	2008-02-29 22:41:59 UTC (rev 1052)
@@ -460,7 +460,7 @@
 
     GameTimer.tick(dtime);
 
-    RecalcLightNow();   // recalculate laser beams if necessary
+    PerformRecalcLight(false);   // recalculate laser beams if necessary
 }
 
 /* ---------- Puzzle scrambling -------------------- */
@@ -1573,8 +1573,9 @@
 void WorldPrepareLevel ()
 {
     GameTimer.clear();
+    GridObject::prepareLevel();
+    LaserBeam::prepareLevel();
     Resize (20, 13);
-    LaserBeam::Reset();
 }
 
 bool WorldInitLevel()
@@ -1582,7 +1583,7 @@
     level->scramble_puzzles();
 
     RecalcLight();
-    RecalcLightNow();    // recalculate laser beams if necessary
+    PerformRecalcLight(true);    // recalculate laser beams if necessary
 
     bool seen_player0 = false;
 



From ral at mail.berlios.de  Fri Feb 29 23:55:23 2008
From: ral at mail.berlios.de (ral at BerliOS)
Date: Fri, 29 Feb 2008 23:55:23 +0100
Subject: [Enigma-game-svn] r1053 - team_levelpacks/team_test_new_api
Message-ID: <200802292255.m1TMtNv6004053@sheep.berlios.de>

Author: ral
Date: 2008-02-29 23:55:23 +0100 (Fri, 29 Feb 2008)
New Revision: 1053

Added:
   team_levelpacks/team_test_new_api/ralT038_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT024_1.xml
Log:
Test Level new API:
- hammer, sword testlevel


Modified: team_levelpacks/team_test_new_api/ralT024_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-29 22:41:59 UTC (rev 1052)
+++ team_levelpacks/team_test_new_api/ralT024_1.xml	2008-02-29 22:55:23 UTC (rev 1053)
@@ -38,7 +38,7 @@
 ti["H"] = {"st_laser", "laser4"}
 ti["h"] = {"st_switch_white", state=1, target="laser4", action="signal"}
 ti["s"] = {"st_switch", target="recolor"}
-ti["w"] = {"it-hammer"}
+ti["w"] = {"it_hammer"}
 
 ti["1"] = ti["y"] .. {"#ac-blackball"}
 ti["2"] = ti["y"] .. {"#ac-whiteball"}

Added: team_levelpacks/team_test_new_api/ralT038_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT038_1.xml	2008-02-29 22:41:59 UTC (rev 1052)
+++ team_levelpacks/team_test_new_api/ralT038_1.xml	2008-02-29 22:55:23 UTC (rev 1053)
@@ -0,0 +1,93 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test photo objects new API" el:subtitle="" el:id="20080227ral229"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2007 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl-sahara"}
+ti["x"] = {"fl-sahara", "center"}
+ti["L"] = {"st_laser_n", "laser"}
+ti["l"] = {"st_switch", target="laser"}
+ti["N"] = {"st_laser_n", "lasern"}
+ti["n"] = {"st_switch", target="lasern"}
+ti["E"] = {"st_laser_e", "lasere"}
+ti["e"] = {"st_switch", target="lasere"}
+ti["S"] = {"st_laser_s", "lasers"}
+ti["s"] = {"st_switch", target="lasers"}
+ti["W"] = {"st_laser_w", "laserw"}
+ti["w"] = {"st_switch", target="laserw"}
+ti["m"] = {"st_switch", target="pol#*", action="onoff"}
+ti["p"] = {"st-polarswitch", "pol#"}
+
+ti["a"] = {"st_switch", target="sethammer"}
+ti["A"] = {"st_switch", target="sethammernew"}
+ti["b"] = {"st_switch", target="setsword"}
+ti["B"] = {"st_switch", target="setswordnew"}
+
+ti["I"] = {"st_laser_s", state=ON}
+
+ti["h"] = {"it_hammer"}
+ti["H"] = {"it_hammer_new"}
+ti["d"] = {"it_sword"}
+ti["D"] = {"it_sword_new"}
+ti["1"] = {"it-coin1"}
+ti["2"] = {"it-coin2"}
+ti["4"] = {"it-coin4"}
+ti["0"] = {"#ac-blackball"}
+
+w, h = wo(ti, " ", {
+"                    ",
+"      Ss          lL",
+"                    ",
+"      p m     a hh A",
+"              b dd B",
+" E  p x p W     11  ",
+" e        w     22  ",
+"      p         44  ",
+"           0        ",
+"      Nn            ",
+"                  II",
+"                    ",
+"                  hd"
+})
+
+function sethammer() 
+    wo[no["center"]] = ti["h"]
+end
+
+function sethammernew() 
+    wo[no["center"]] = ti["H"]
+end
+
+function setsword() 
+    wo[no["center"]] = ti["d"]
+    no["lasern"]:on()
+end
+
+function setswordnew() 
+    wo[no["center"]] = ti["D"]
+    no["lasern"]:on()
+end
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT038_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



