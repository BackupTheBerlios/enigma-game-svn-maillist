From ral at mail.berlios.de  Sun Mar  1 00:00:18 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 1 Mar 2009 00:00:18 +0100
Subject: [Enigma-game-svn] r1562 - in trunk/src: . items
Message-ID: <200902282300.n1SN0IdF029783@sheep.berlios.de>

Author: ral
Date: 2009-03-01 00:00:17 +0100 (Sun, 01 Mar 2009)
New Revision: 1562

Modified:
   trunk/src/items/BlockerItem.cc
   trunk/src/player.cc
Log:
Trunk 1.1: new API reengineering
- fix crash: throw assertion on attempt to set initial state CLOSED on it_blocker
- fix: preserve identity on pickup of it_brake


Modified: trunk/src/items/BlockerItem.cc
===================================================================
--- trunk/src/items/BlockerItem.cc	2009-02-28 22:18:54 UTC (rev 1561)
+++ trunk/src/items/BlockerItem.cc	2009-02-28 23:00:17 UTC (rev 1562)
@@ -19,6 +19,7 @@
  */
 
 #include "items/BlockerItem.hh"
+#include "errors.hh"
 //#include "main.hh"
 #include "world.hh"
 
@@ -78,8 +79,8 @@
         if (extState == 1) {         // open (shrink)
             if (state == UNLOCKED)   //   revoke pending grow/close
                 setIState(LOCKED);
-        }
-        else {                       // close (grow)
+        } else {                       // close (grow)
+            ASSERT(isDisplayable(), XLevelRuntime, "Blocker item: attempt to set initial state CLOSED - use 'st_blocker'.");
             switch (state) {
                 case LOCKED:
                     setIState(UNLOCKED);  // close when stone is removed

Modified: trunk/src/player.cc
===================================================================
--- trunk/src/player.cc	2009-02-28 22:18:54 UTC (rev 1561)
+++ trunk/src/player.cc	2009-02-28 23:00:17 UTC (rev 1562)
@@ -581,18 +581,16 @@
 
 void player::PickupStoneAsItem (Actor *a, enigma::GridPos p) 
 {
-    if (Inventory *inv = MayPickup(a, GetField(p)->item, true)) 
-    {
-        if (Stone *stone = YieldStone(p)) 
-        {
+    if (Inventory *inv = MayPickup(a, GetField(p)->item, true)) {
+        if (Stone *stone = GetStone(p))  {
             string kind = stone->get_kind();
             if (kind[0] == 's') 
                 kind[0] = 'i';
 
             if (Item *item = MakeItem(kind.c_str())) {
-                SendMessage(stone, "disconnect");
-                DisposeObject (stone);
                 inv->add_item(item);
+                stone->transferIdentity(item);
+                KillStone(p);
                 player::RedrawInventory(inv);
                 sound::EmitSoundEvent ("pickup", p.center());
             }



From raoul at mail.berlios.de  Sun Mar  1 12:15:43 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Sun, 1 Mar 2009 12:15:43 +0100
Subject: [Enigma-game-svn] r1563 - in trunk: attic/images-floors data/gfx32
	data/gfx40 data/gfx48
Message-ID: <200903011115.n21BFhYe027150@sheep.berlios.de>

Author: raoul
Date: 2009-03-01 12:15:42 +0100 (Sun, 01 Mar 2009)
New Revision: 1563

Modified:
   trunk/attic/images-floors/Yinyangfloor_yang_gfx32.xcf
   trunk/attic/images-floors/Yinyangfloor_yang_gfx40.xcf
   trunk/attic/images-floors/Yinyangfloor_yang_gfx48.xcf
   trunk/attic/images-floors/Yinyangfloor_yin_gfx32.xcf
   trunk/attic/images-floors/Yinyangfloor_yin_gfx40.xcf
   trunk/attic/images-floors/Yinyangfloor_yin_gfx48.xcf
   trunk/data/gfx32/fl_yinyang_yang.png
   trunk/data/gfx32/fl_yinyang_yin.png
   trunk/data/gfx40/fl_yinyang_yang.png
   trunk/data/gfx40/fl_yinyang_yin.png
   trunk/data/gfx48/fl_yinyang_yang.png
   trunk/data/gfx48/fl_yinyang_yin.png
Log:
-> Reincluded old images for yinyang floor without the symbol



Modified: trunk/attic/images-floors/Yinyangfloor_yang_gfx32.xcf
===================================================================
(Binary files differ)

Modified: trunk/attic/images-floors/Yinyangfloor_yang_gfx40.xcf
===================================================================
(Binary files differ)

Modified: trunk/attic/images-floors/Yinyangfloor_yang_gfx48.xcf
===================================================================
(Binary files differ)

Modified: trunk/attic/images-floors/Yinyangfloor_yin_gfx32.xcf
===================================================================
(Binary files differ)

Modified: trunk/attic/images-floors/Yinyangfloor_yin_gfx40.xcf
===================================================================
(Binary files differ)

Modified: trunk/attic/images-floors/Yinyangfloor_yin_gfx48.xcf
===================================================================
(Binary files differ)

Modified: trunk/data/gfx32/fl_yinyang_yang.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx32/fl_yinyang_yin.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx40/fl_yinyang_yang.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx40/fl_yinyang_yin.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx48/fl_yinyang_yang.png
===================================================================
(Binary files differ)

Modified: trunk/data/gfx48/fl_yinyang_yin.png
===================================================================
(Binary files differ)



From ral at mail.berlios.de  Sun Mar  1 14:27:30 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 1 Mar 2009 14:27:30 +0100
Subject: [Enigma-game-svn] r1564 - in trunk: data data/schemas src src/floors
Message-ID: <200903011327.n21DRUG9021307@sheep.berlios.de>

Author: ral
Date: 2009-03-01 14:27:29 +0100 (Sun, 01 Mar 2009)
New Revision: 1564

Modified:
   trunk/data/api1init.lua
   trunk/data/models-2d.lua
   trunk/data/schemas/objects.xml
   trunk/src/floors/SimpleFloors.cc
   trunk/src/floors/SimpleFloors.hh
   trunk/src/ox_magnum.cc
   trunk/src/ox_oxyd1.cc
   trunk/src/ox_peroxyd.cc
Log:
Trunk 1.1: new API reengineering
- fl_yinyang:
  - new attribute "invisible", default false, omit yinyang symbol
  - invisible variants are used for old API and DAT levels for compatibility
Note:
- new API levels need to be checked for invisible attribute usage

Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/data/api1init.lua	2009-03-01 13:27:29 UTC (rev 1564)
@@ -144,8 +144,8 @@
     fl_wood_framed_h = "fl-stwood1",
     fl_wood_framed_v = "fl-stwood2",
     fl_woven = "fl-woven",
-    fl_yinyang_yin = "fl-acblack",
-    fl_yinyang_yang = "fl-acwhite",    
+    fl_yinyang_yin_invisible = "fl-acblack",
+    fl_yinyang_yang_invisible = "fl-acwhite",    
     it_banana = "it-banana",
     it_bag = "it-bag",
     it_blocker = "it-blocker",

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/data/models-2d.lua	2009-03-01 13:27:29 UTC (rev 1564)
@@ -244,8 +244,6 @@
     floorlist = {
         -- single
         {"fl_abyss", noframe = true},
-        {"fl_yinyang_yin", noframe = true},
-        {"fl_yinyang_yang", noframe = true},
         {"fl_dark"},
         {"fl_bluegreen"},
         {"fl_darkgray"},
@@ -389,6 +387,16 @@
     DefAlias("fl_wood_framed2", "fl-stwood2")
 end
 
+-- yinyang floor --
+do
+    DefSubimages("fl_yinyang_yin", {w=1, h=2, modelname="fl_yinyang_yinx"})
+    DefSubimages("fl_yinyang_yang", {w=1, h=2, modelname="fl_yinyang_yangx"})
+    DefAlias("fl_yinyang_yin", "fl_yinyang_yinx1")
+    DefAlias("fl_yinyang_yin_invisible", "fl_yinyang_yinx2")
+    DefAlias("fl_yinyang_yang", "fl_yinyang_yangx1")
+    DefAlias("fl_yinyang_yang_invisible", "fl_yinyang_yangx2")
+end
+
 --------------------------
 -- Simple floor aliases --
 --------------------------

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/data/schemas/objects.xml	2009-03-01 13:27:29 UTC (rev 1564)
@@ -446,6 +446,7 @@
     <object name="fl_yinyang">
       <attr name="friction" default="5.2"/>
       <attr name="adhesion" default="2.0"/>
+      <attr name="invisible"/>
     </object>
     <object name="fl_yinyang_yin">
       <attr name="state" value="0"/>

Modified: trunk/src/floors/SimpleFloors.cc
===================================================================
--- trunk/src/floors/SimpleFloors.cc	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/src/floors/SimpleFloors.cc	2009-03-01 13:27:29 UTC (rev 1564)
@@ -107,16 +107,36 @@
 
 /* -------------------- Yinyang -------------------- */
 
-    YinyangFloor::YinyangFloor(int initState) : Floor("fl_yinyang", 5.2, 2.0) {
+    YinyangFloor::YinyangFloor(int initState, bool isInvisible) : Floor("fl_yinyang", 5.2, 2.0) {
         state = initState;
+        if (isInvisible)
+            objFlags |= OBJBIT_INVISIBLE;
     }
     
     std::string YinyangFloor::getClass() const {
         return "fl_yinyang";
     }
+    
+    void YinyangFloor::setAttr(const std::string &key, const Value &val) {
+        if (key == "invisible") {
+            objFlags = (objFlags & ~OBJBIT_INVISIBLE) | (val.to_bool() ? OBJBIT_INVISIBLE : 0);
+            if (isDisplayable())
+                init_model();
+            return;
+        }
+        Floor::setAttr(key, val);
+    }
+    
+    Value YinyangFloor::getAttr(const std::string &key) const {
+        if (key == "invisible") {
+            return (objFlags & OBJBIT_INVISIBLE) != 0;
+        }
+        return Floor::getAttr(key);
+    }
         
     void YinyangFloor::init_model()  {
-        set_model(std::string("fl_yinyang_") + ((state == YIN) ? "yin" : "yang"));
+        set_model(ecl::strf("fl_yinyang_%s%s", (state == YIN) ? "yin" : "yang", 
+                objFlags & OBJBIT_INVISIBLE ? "_invisible" : ""));
     }
     
     ecl::V2 YinyangFloor::process_mouseforce (Actor *a, ecl::V2 force) {
@@ -135,7 +155,9 @@
         BootRegister(new Swamp(),     "fl_swamp");
         BootRegister(new YinyangFloor(0), "fl_yinyang");
         BootRegister(new YinyangFloor(0), "fl_yinyang_yin");
+        BootRegister(new YinyangFloor(0, true), "fl_yinyang_yin_invisible");
         BootRegister(new YinyangFloor(1), "fl_yinyang_yang");
+        BootRegister(new YinyangFloor(1, true), "fl_yinyang_yang_invisible");
     BOOT_REGISTER_END
 
 } // namespace enigma

Modified: trunk/src/floors/SimpleFloors.hh
===================================================================
--- trunk/src/floors/SimpleFloors.hh	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/src/floors/SimpleFloors.hh	2009-03-01 13:27:29 UTC (rev 1564)
@@ -120,11 +120,17 @@
             YANG       ///< player 1 - white image
         };
 
+        enum ObjectPrivatFlagsBits {
+            OBJBIT_INVISIBLE =   1<<24,   ///< yinyang symbol not visible
+        };
+
     public:
-        YinyangFloor(int initState);
+        YinyangFloor(int initState, bool isInvisible =false);
 
         // Object interface
         virtual std::string getClass() const;
+        virtual void setAttr(const std::string &key, const Value &val);
+        virtual Value getAttr(const std::string &key) const;
         
         // GridObject interface
         virtual void init_model();

Modified: trunk/src/ox_magnum.cc
===================================================================
--- trunk/src/ox_magnum.cc	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/src/ox_magnum.cc	2009-03-01 13:27:29 UTC (rev 1564)
@@ -47,8 +47,8 @@
     "fl_tigris",                // OxydMagnum floor 0x0a (common was 'fl-normal')
     "fl_tigris",                // OxydMagnum floor 0x0b (common was 'fl-stone')
     "fl_inverse",               // OxydMagnum floor 0x0c (common was 'fl_inverse')
-    "fl_yinyang_yin",           // OxydMagnum floor 0x0d
-    "fl_yinyang_yang",          // OxydMagnum floor 0x0e
+    "fl_yinyang_yin_invisible", // OxydMagnum floor 0x0d
+    "fl_yinyang_yang_invisible",// OxydMagnum floor 0x0e
     "fl_swamp",                 // OxydMagnum floor 0x0f
     UNUSED,                     // OxydMagnum floor 0x10
     UNUSED,                     // OxydMagnum floor 0x11

Modified: trunk/src/ox_oxyd1.cc
===================================================================
--- trunk/src/ox_oxyd1.cc	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/src/ox_oxyd1.cc	2009-03-01 13:27:29 UTC (rev 1564)
@@ -80,8 +80,8 @@
     "fl_himalaya",              // Oxyd1 floor 0x0a
     "fl_himalaya",              // Oxyd1 floor 0x0b
     "fl_inverse_gray",          // Oxyd1 floor 0x0c
-    "fl_yinyang_yin",           // Oxyd1 floor 0x0d
-    "fl_yinyang_yang",          // Oxyd1 floor 0x0e
+    "fl_yinyang_yin_invisible", // Oxyd1 floor 0x0d
+    "fl_yinyang_yang_invisible",// Oxyd1 floor 0x0e
     "fl_swamp",                 // Oxyd1 floor 0x0f
     UNUSED,                     // Oxyd1 floor 0x10
     UNUSED,                     // Oxyd1 floor 0x11

Modified: trunk/src/ox_peroxyd.cc
===================================================================
--- trunk/src/ox_peroxyd.cc	2009-03-01 11:15:42 UTC (rev 1563)
+++ trunk/src/ox_peroxyd.cc	2009-03-01 13:27:29 UTC (rev 1564)
@@ -116,8 +116,8 @@
     "fl_blueslab",              // PerOxyd floor 0x0a
     "fl_redslab",               // PerOxyd floor 0x0b
     "fl_inverse",               // PerOxyd floor 0x0c
-    "fl_yinyang_yin",           // PerOxyd floor 0x0d
-    "fl_yinyang_yang",          // PerOxyd floor 0x0e
+    "fl_yinyang_yin_invisible", // PerOxyd floor 0x0d
+    "fl_yinyang_yang_invisible",// PerOxyd floor 0x0e
     "fl_swamp",                 // PerOxyd floor 0x0f
     UNUSED,                     // PerOxyd floor 0x10
     UNUSED,                     // PerOxyd floor 0x11



From ral at mail.berlios.de  Sun Mar  1 15:12:00 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sun, 1 Mar 2009 15:12:00 +0100
Subject: [Enigma-game-svn] r1565 - in trunk/src: floors stones
Message-ID: <200903011412.n21EC0TP027872@sheep.berlios.de>

Author: ral
Date: 2009-03-01 15:11:59 +0100 (Sun, 01 Mar 2009)
New Revision: 1565

Modified:
   trunk/src/floors/ThiefFloor.cc
   trunk/src/floors/ThiefFloor.hh
   trunk/src/stones/ThiefStone.cc
   trunk/src/stones/ThiefStone.hh
Log:
Trunk 1.1: new API reengineering
- thieves (floor and stones):
  - get drunken on stealing a bottle - do no longer steal items
Note:
- images/animation of drunken thieves still missing - just a bottle is displayed


Modified: trunk/src/floors/ThiefFloor.cc
===================================================================
--- trunk/src/floors/ThiefFloor.cc	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/src/floors/ThiefFloor.cc	2009-03-01 14:11:59 UTC (rev 1565)
@@ -42,7 +42,7 @@
     }
     
     Value ThiefFloor::message(const Message &m) {
-        if (m.message == "_capture" && state == IDLE && isDisplayable()) {            
+        if (m.message == "_capture" && (state == IDLE || state == DRUNKEN) && isDisplayable()) {            
             // add items on grid pos that can be picked up to our bag
             Item * it =  GetItem(get_pos());
             if (it != NULL && !(it->get_traits().flags & itf_static) && bag != NULL) {
@@ -53,7 +53,7 @@
                 SetItem(get_pos(), bag);
                 bag = NULL;
             }
-            state = CAPTURED;
+            state = (state == IDLE) ? CAPTURED : DRUNKENCAPTURED;
             init_model();
             return true;
         }
@@ -84,6 +84,12 @@
             case CAPTURED:
                 set_anim(basename + "_captured");
                 break;
+            case DRUNKEN:
+                set_model("it_bottle_idle");
+                break;
+            case DRUNKENCAPTURED:
+                set_anim("st_thief_captured");
+                break;
         }
     }
     
@@ -107,6 +113,7 @@
                 init_model();
                 break;
             case CAPTURED:
+            case DRUNKENCAPTURED:
                 KillStone(get_pos());
                 break;
             default:
@@ -128,10 +135,13 @@
                             bag->setOwnerPos(get_pos());
                         }
                         int i = IntegerRand(0, int (inv->size()-1));
-                        dynamic_cast<ItemHolder *>(bag)->add_item(inv->yield_item(i));
+                        Item *it = inv->yield_item(i);
+                        dynamic_cast<ItemHolder *>(bag)->add_item(it);
                         didSteal = true;
                         Glasses::updateGlasses();
                         player::RedrawInventory(inv);
+                        if (it->getKind() == "it_bottle_idle")
+                            state = DRUNKEN;
                     }
                 }
             }
@@ -143,8 +153,11 @@
                     bag = MakeItem("it_bag");
                     bag->setOwnerPos(get_pos());                
                 }
-                dynamic_cast<ItemHolder *>(bag)->add_item(YieldItem(get_pos()));
+                Item *it = YieldItem(get_pos());
+                dynamic_cast<ItemHolder *>(bag)->add_item(it);
                 didSteal = true;
+                if (it->getKind() == "it_bottle_idle")
+                    state = DRUNKEN;
             }
         }
         if (didSteal)

Modified: trunk/src/floors/ThiefFloor.hh
===================================================================
--- trunk/src/floors/ThiefFloor.hh	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/src/floors/ThiefFloor.hh	2009-03-01 14:11:59 UTC (rev 1565)
@@ -33,10 +33,12 @@
         
     private:
         enum iState {
-            IDLE,         ///< 
-            EMERGING,     ///< 
-            RETREATING,   ///< 
-            CAPTURED      ///< 
+            IDLE,            ///< 
+            EMERGING,        ///< 
+            RETREATING,      ///< 
+            CAPTURED,         ///< 
+            DRUNKEN,         ///<
+            DRUNKENCAPTURED  ///<
         };
         
         enum ObjectPrivatFlagsBits {

Modified: trunk/src/stones/ThiefStone.cc
===================================================================
--- trunk/src/stones/ThiefStone.cc	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/src/stones/ThiefStone.cc	2009-03-01 14:11:59 UTC (rev 1565)
@@ -44,7 +44,7 @@
         if (m.message == "signal" && server::GameCompatibility != GAMET_ENIGMA) {
             performAction(!m.value.to_bool());  // inverse signal multiplier
             return Value();
-        } else if (m.message == "_capture" && state == IDLE && isDisplayable()) {            
+        } else if (m.message == "_capture" && (state == IDLE || state == DRUNKEN) && isDisplayable()) {            
             // add items on grid pos that can be picked up to our bag
             Item * it =  GetItem(get_pos());
             if (it != NULL && !(it->get_traits().flags & itf_static) && bag != NULL) {
@@ -55,7 +55,7 @@
                 SetItem(get_pos(), bag);
                 bag = NULL;
             }
-            state = CAPTURED;
+            state = (state == IDLE) ? CAPTURED : DRUNKENCAPTURED;
             init_model();
             return true;
         }
@@ -80,6 +80,12 @@
             case CAPTURED:
                 set_anim("st_thief_captured");
                 break;
+            case DRUNKEN:
+                set_model("it_bottle_idle");
+                break;
+            case DRUNKENCAPTURED:
+                set_anim("st_thief_captured");
+                break;
         }
     }
     
@@ -87,7 +93,8 @@
         switch (state) {
             case EMERGING:
                 doSteal();
-                state = RETREATING;
+                if (state != DRUNKEN)
+                    state = RETREATING;
                 init_model();
                 break;
             case RETREATING:
@@ -95,6 +102,7 @@
                 init_model();
                 break;
             case CAPTURED:
+            case DRUNKENCAPTURED:
                 KillStone(get_pos());
                 break;
             default:
@@ -130,9 +138,12 @@
                             bag->setOwnerPos(get_pos());
                         }
                         int i = IntegerRand(0, int (inv->size()-1));
-                        dynamic_cast<ItemHolder *>(bag)->add_item(inv->yield_item(i));
+                        Item *it = inv->yield_item(i);
+                        dynamic_cast<ItemHolder *>(bag)->add_item(it);
                         Glasses::updateGlasses();
                         player::RedrawInventory(inv);
+                        if (it->getKind() == "it_bottle_idle")
+                            state = DRUNKEN;
                         sound_event("thief");
                     }
                 }

Modified: trunk/src/stones/ThiefStone.hh
===================================================================
--- trunk/src/stones/ThiefStone.hh	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/src/stones/ThiefStone.hh	2009-03-01 14:11:59 UTC (rev 1565)
@@ -34,10 +34,12 @@
         
     private:
         enum iState {
-            IDLE,         ///< 
-            EMERGING,     ///< 
-            RETREATING,   ///< 
-            CAPTURED      ///< 
+            IDLE,            ///< 
+            EMERGING,        ///< 
+            RETREATING,      ///< 
+            CAPTURED,        ///<
+            DRUNKEN,         ///<
+            DRUNKENCAPTURED  ///<
         };
         
     public:



From raoul at mail.berlios.de  Sun Mar  1 21:42:31 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Sun, 1 Mar 2009 21:42:31 +0100
Subject: [Enigma-game-svn] r1566 - in trunk/data/levels: enigma_cross
	enigma_ii enigma_iv enigma_tutorial enigma_v enigma_vi enigma_viii
Message-ID: <200903012042.n21KgVHK021247@sheep.berlios.de>

Author: raoul
Date: 2009-03-01 21:42:29 +0100 (Sun, 01 Mar 2009)
New Revision: 1566

Added:
   trunk/data/levels/enigma_ii/peter01_2.xml
   trunk/data/levels/enigma_ii/siegfried07_2.xml
   trunk/data/levels/enigma_iv/duffy104_2.xml
   trunk/data/levels/enigma_iv/duffy11_2.xml
   trunk/data/levels/enigma_v/duffy110_2.xml
   trunk/data/levels/enigma_v/duffy127_2.xml
   trunk/data/levels/enigma_v/duffy39_2.xml
   trunk/data/levels/enigma_v/duffy53_2.xml
   trunk/data/levels/enigma_v/qq02_2.xml
   trunk/data/levels/enigma_vi/duffy142_2.xml
Removed:
   trunk/data/levels/enigma_ii/peter01_1.xml
   trunk/data/levels/enigma_ii/siegfried07_1.xml
   trunk/data/levels/enigma_iv/duffy104_1.xml
   trunk/data/levels/enigma_iv/duffy11_1.xml
   trunk/data/levels/enigma_v/duffy110_1.xml
   trunk/data/levels/enigma_v/duffy127_1.xml
   trunk/data/levels/enigma_v/duffy39_1.xml
   trunk/data/levels/enigma_v/duffy53_1.xml
   trunk/data/levels/enigma_v/qq02_1.xml
   trunk/data/levels/enigma_vi/duffy142_1.xml
Modified:
   trunk/data/levels/enigma_cross/enigma0_92_1.xml
   trunk/data/levels/enigma_cross/enigma0_92_2.xml
   trunk/data/levels/enigma_cross/enigma0_92_3.xml
   trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
   trunk/data/levels/enigma_cross/newlevels_1.1.0.xml
   trunk/data/levels/enigma_ii/index.xml
   trunk/data/levels/enigma_iv/index.xml
   trunk/data/levels/enigma_tutorial/index.xml
   trunk/data/levels/enigma_v/index.xml
   trunk/data/levels/enigma_vi/index.xml
   trunk/data/levels/enigma_viii/devnull08_1.xml
   trunk/data/levels/enigma_viii/index.xml
Log:
-> Some rewritings
--> Rewritings concerning levels with el:engine other than enigma



Modified: trunk/data/levels/enigma_cross/enigma0_92_1.xml
===================================================================
--- trunk/data/levels/enigma_cross/enigma0_92_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_cross/enigma0_92_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15100" network="false" owner="Enigma Team" release="1" revision="24" title="Enigma 0.92 - 1"/>
+  <info enigma="1.00" group="Facets" location="15100" network="false" owner="Enigma Team" release="1" revision="25" title="Enigma 0.92 - 1"/>
 
   <attributes/>
 
@@ -80,7 +80,7 @@
     <level _seq="72" _title="A Narrow Path" _xpath="enigma_i/martin66_1" author="Martin Hawlisch" ctrl="force" easy="false" id="martin66" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="73" _title="MetaPuzzle" _xpath="enigma_iv/ant03_2" author="Petr Machata" ctrl="force" easy="false" id="ant03" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="74" _title="Space Tubes" _xpath="enigma_i/duffy13_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy13" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="75" _title="The Cage" _xpath="enigma_v/qq02_1" author="Andrzej Szombierski" ctrl="force" easy="false" id="qq2" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="75" _title="The Cage" _xpath="enigma_v/qq02_2" author="Andrzej Szombierski" ctrl="force" easy="false" id="qq2" rel="2" rev="3" score="2" target="time" unit="duration"/>
     <level _seq="76" _title="Sentinels" _xpath="enigma_ii/siegfried23_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level8d" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="77" _title="The Tomb" _xpath="enigma_iv/ant04_1" author="Petr Machata" ctrl="force" easy="false" id="ant04" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="78" _title="Desert Ruins" _xpath="enigma_i/nat32_1" author="Nat Pryce" ctrl="force" easy="false" id="natmaze1" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -137,7 +137,7 @@
     <level _seq="129" _title="- Meditation -" _xpath="enigma_peroxyd/peroxydlink60_2" author="Siegfried Fennig" ctrl="force" easy="false" id="meditation17" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="130" _title="Chained" _xpath="enigma_iv/ant22_2" author="Petr Machata" ctrl="force" easy="true" id="ant22" rel="2" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="131" _title="Just a Maze?" _xpath="enigma_vi/duffy12_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy12" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="132" _title="The Race" _xpath="enigma_iv/duffy11_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy11" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="132" _title="The Race" _xpath="enigma_iv/duffy11_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy11" rel="2" rev="2" score="2" target="time" unit="duration"/>
     <level _seq="133" _title="Double-Spiral" _xpath="enigma_iv/duffy17_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy17" rel="2" rev="2" score="2" target="time" unit="duration"/>
     <level _seq="134" _title="Mourning Palace" _xpath="enigma_iv/ant08_1" author="Petr Machata" ctrl="force" easy="false" id="ant08" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="135" _title="Control Panel" _xpath="enigma_iii/duffy16_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy16" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/enigma0_92_2.xml
===================================================================
--- trunk/data/levels/enigma_cross/enigma0_92_2.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_cross/enigma0_92_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15200" network="false" owner="Enigma Team" release="1" revision="30" title="Enigma 0.92 - 2"/>
+  <info enigma="1.00" group="Facets" location="15200" network="false" owner="Enigma Team" release="1" revision="31" title="Enigma 0.92 - 2"/>
 
   <attributes/>
 
@@ -55,7 +55,7 @@
     <level _seq="47" _title="Psycho Pushing" _xpath="enigma_v/ss03_3" author="Sven Siggelkow" ctrl="force" easy="true" id="ss3" rel="3" rev="18" score="2" target="time" unit="duration"/>
     <level _seq="48" _title="Walls Of Sadness" _xpath="enigma_iv/ss12_1" author="Sven Siggelkow" ctrl="force" easy="true" id="ss12" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="49" _title="Unfair!" _xpath="enigma_iii/ant33_1" author="Petr Machata" ctrl="force" easy="false" id="ant33" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="50" _title="Puzzle Blues" _xpath="enigma_ii/siegfried07_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level3c" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="50" _title="Puzzle Blues" _xpath="enigma_ii/siegfried07_2" author="Siegfried Fennig" ctrl="force" easy="false" id="level3c" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="51" _title="Easily Inflammable" _xpath="enigma_iv/martin95_2" author="Martin Hawlisch" ctrl="force" easy="false" id="martin95" rel="2" rev="0" score="2" target="time" unit="duration"/>
     <level _seq="52" _title="Yo-yo" _xpath="enigma_iii/duffy18_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy18" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="53" _title="Hurry!" _xpath="enigma_i/jc01_2" author="Jens-Christian Korth" ctrl="force" easy="true" id="jc01" rel="2" rev="6" score="2" target="time" unit="duration"/>
@@ -104,7 +104,7 @@
     <level _seq="96" _title="The Builder" _xpath="enigma_iv/ss09_2" author="Sven Siggelkow" ctrl="force" easy="false" id="ss9" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="97" _title="Seven Friends" _xpath="enigma_iii/ss16_2" author="Sven Siggelkow" ctrl="force" easy="false" id="ss16" rel="2" rev="0" score="2" target="time" unit="duration"/>
     <level _seq="98" _title="Something Went Wrong" _xpath="enigma_iii/ss17_1" author="Sven Siggelkow" ctrl="force" easy="false" id="ss17" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="99" _title="Beam0r" _xpath="enigma_ii/peter01_1" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="99" _title="Beam0r" _xpath="enigma_ii/peter01_2" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="100" _title="Sisyphus" _xpath="enigma_vi/nat13_1" author="Nat Pryce" ctrl="force" easy="false" id="nat13" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="101" _title="Snowball Fight" _xpath="enigma_iv/nat14_1" author="Nat Pryce" ctrl="force" easy="false" id="nat14" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="102" _title="Caterpillar" _xpath="enigma_v/nat15_2" author="Nat Pryce" ctrl="force" easy="true" id="nat15" rel="2" rev="2" score="1" target="time" unit="duration"/>
@@ -119,7 +119,7 @@
     <level _seq="111" _title="It Never Stops" _xpath="enigma_iv/duffy36_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy36" rel="2" rev="6" score="2" target="time" unit="duration"/>
     <level _seq="112" _title="Fool the Warden" _xpath="enigma_iii/duffy37_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy37" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="113" _title="Drunk" _xpath="enigma_ii/duffy38_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy38" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="114" _title="Turnstile City" _xpath="enigma_v/duffy39_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy39" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="114" _title="Turnstile City" _xpath="enigma_v/duffy39_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy39" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="115" _title="Cover Your Ears" _xpath="enigma_iii/duffy40_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy40" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="116" _title="Ball and Chain" _xpath="enigma_iv/duffy41_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy41" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="117" _title="Inverted Laser Spiral" _xpath="enigma_ii/duffy42_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy42" rel="1" rev="1" score="1" target="time" unit="duration"/>
@@ -133,7 +133,7 @@
     <level _seq="125" _title="Take Turns" _xpath="enigma_v/duffy50_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy50" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="126" _title="Stranded" _xpath="enigma_v/duffy51_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy51" rel="2" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="127" _title="Monster in the Dark" _xpath="enigma_iii/duffy52_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy52" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="128" _title="Turnstile Maze" _xpath="enigma_v/duffy53_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy53" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="128" _title="Turnstile Maze" _xpath="enigma_v/duffy53_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy53" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="129" _title="Keepaway" _xpath="enigma_iii/duffy54_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy54" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="130" _title="Build Up Speed" _xpath="enigma_iii/duffy55_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy55" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="131" _title="Crossfire" _xpath="enigma_v/duffy56_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy56" rel="2" rev="2" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/enigma0_92_3.xml
===================================================================
--- trunk/data/levels/enigma_cross/enigma0_92_3.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_cross/enigma0_92_3.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15300" network="false" owner="Enigma Team" release="1" revision="19" title="Enigma 0.92 - 3"/>
+  <info enigma="1.00" group="Facets" location="15300" network="false" owner="Enigma Team" release="1" revision="20" title="Enigma 0.92 - 3"/>
 
   <attributes/>
 
@@ -42,13 +42,13 @@
     <level _seq="34" _title="Pentomino V" _xpath="enigma_ii/ralf20_1" author="Ralf Westram" ctrl="force" easy="false" id="ralf_pento5" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="35" _title="Guardian Angel" _xpath="enigma_iii/duffy102_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy102" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="36" _title="Bungeeball" _xpath="enigma_ii/duffy103_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy103" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="37" _title="Termites" _xpath="enigma_iv/duffy104_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy104" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="37" _title="Termites" _xpath="enigma_iv/duffy104_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy104" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="38" _title="Drunkard's Walk" _xpath="enigma_iv/duffy105_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy105" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="39" _title="Under the Radar" _xpath="enigma_iv/duffy106_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy106" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="40" _title="Break Down the Wall" _xpath="enigma_iii/duffy107_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy107" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="41" _title="Security Guards" _xpath="enigma_i/duffy108_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy108" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="42" _title="One-Way Streets" _xpath="enigma_iii/duffy109_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy109" rel="2" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="43" _title="Clear the Path" _xpath="enigma_v/duffy110_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy110" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="43" _title="Clear the Path" _xpath="enigma_v/duffy110_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy110" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="44" _title="Artillery" _xpath="enigma_iv/duffy111_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy111" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="45" _title="Versailles" _xpath="enigma_iii/duffy112_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy112" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="46" _title="Help Yourself" _xpath="enigma_v/duffy113_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy113" rel="2" rev="2" score="1" target="time" unit="duration"/>
@@ -65,7 +65,7 @@
     <level _seq="57" _title="Worse Nightmare" _xpath="enigma_iv/duffy124_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy124" rel="2" rev="3" score="2" target="time" unit="duration"/>
     <level _seq="58" _title="Triple-Maze" _xpath="enigma_iv/duffy125_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy125" rel="2" rev="12" score="2" target="time" unit="duration"/>
     <level _seq="59" _title="Elaborate" _xpath="enigma_v/duffy126_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy126" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="60" _title="Now What?" _xpath="enigma_v/duffy127_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy127" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="60" _title="Now What?" _xpath="enigma_v/duffy127_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy127" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="Patterns" _xpath="enigma_ii/duffy128_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy128" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="62" _title="Island Labyrinth" _xpath="enigma_v/duffy129_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy129" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="63" _title="In Sync" _xpath="enigma_iii/daniel06_2" author="Daniel Heck" ctrl="force" easy="false" id="daniel6" rel="2" rev="1" score="2" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15500" network="false" owner="Enigma Team" release="1" revision="26" title="Enigma 1.01 new"/>
+  <info enigma="1.00" group="Facets" location="15500" network="false" owner="Enigma Team" release="1" revision="27" title="Enigma 1.01 new"/>
 
   <attributes/>
 
@@ -39,7 +39,7 @@
     <level _seq="31" _title="Pontoon Bridges" _xpath="enigma_vi/duffy137_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy137" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="32" _title="Parish Fair" _xpath="enigma_vi/duffy143_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy143" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="33" _title="In the Middle" _xpath="enigma_vi/duffy141_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy141" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="34" _title="Construction Workers" _xpath="enigma_vi/duffy142_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy142" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="34" _title="Construction Workers" _xpath="enigma_vi/duffy142_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy142" rel="2" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="35" _title="One-Way Woods" _xpath="enigma_vi/duffy135_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy135" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="36" _title="Comet" _xpath="enigma_vii/duffy147_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy147" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="37" _title="Caribbean Waters" _xpath="enigma_vii/duffy139_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy139" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.1.0.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.1.0.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_cross/newlevels_1.1.0.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="43" title="Enigma 1.1 new"/>
+  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="44" title="Enigma 1.1 new"/>
 
   <attributes/>
 
@@ -118,7 +118,7 @@
     <level _seq="110" _title="- Meditation -" _xpath="enigma_viii/raoul31_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul31" rel="1" rev="8" score="1" target="time" unit="duration"/>
     <level _seq="111" _title=" - Meditation - " _xpath="enigma_viii/devnull06_1" author="/dev/null" ctrl="force" easy="true" id="devnull06" rel="1" rev="8" score="1" target="time" unit="duration"/>
     <level _seq="112" _title=" - Meditation - " _xpath="enigma_viii/devnull07_1" author="/dev/null" ctrl="force" easy="true" id="devnull07" rel="1" rev="8" score="1" target="time" unit="duration"/>
-    <level _seq="113" _title="Relaxing at the sea" _xpath="enigma_viii/devnull08_1" author="/dev/null" ctrl="force" easy="true" id="devnull08" rel="1" rev="20" score="1" target="time" unit="duration"/>
+    <level _seq="113" _title="Relaxing at the sea" _xpath="enigma_viii/devnull08_1" author="/dev/null" ctrl="force" easy="true" id="devnull08" rel="1" rev="22" score="1" target="time" unit="duration"/>
     <level _seq="114" _title="Helios II" _xpath="enigma_viii/mecke08_1" author="mecke" ctrl="force" easy="true" id="mecke08" rel="1" rev="25" score="1" target="time" unit="duration"/>
     <level _seq="115" _title="Tutoxyd's Pyramid" _xpath="enigma_viii/ral21_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070822ral291" rel="2" rev="156" score="2" target="time" unit="duration"/>
     <level _seq="116" _title="Alternation I" _xpath="enigma_viii/mecke17_1" author="mecke" ctrl="force" easy="false" id="mecke17" rel="1" rev="14" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_ii/index.xml
===================================================================
--- trunk/data/levels/enigma_ii/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_ii/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10300" network="false" owner="Enigma Team" release="1" revision="21" title="Enigma II"/>
+  <info enigma="1.00" group="Enigma" location="10300" network="false" owner="Enigma Team" release="1" revision="22" title="Enigma II"/>
 
   <attributes/>
 
@@ -21,7 +21,7 @@
     <level _seq="13" _title="One Way Ticket" _xpath="./luc25_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc25" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="14" _title="Stomp Stomp" _xpath="./qq03_2" author="Andrzej Szombierski" ctrl="force" easy="false" id="qq3" rel="2" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="15" _title="Knock Knock!" _xpath="./nat03_1" author="Nat Pryce" ctrl="force" easy="false" id="nat3" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="16" _title="Beam0r" _xpath="./peter01_1" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="16" _title="Beam0r" _xpath="./peter01_2" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="17" _title="Dustwalkers" _xpath="./ant06_1" author="Petr Machata" ctrl="force" easy="false" id="ant06" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="18" _title="Send More Money" _xpath="./siegfried18_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level5f" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="19" _title="Stay in the Spotlight" _xpath="./nat24_1" author="Nat Pryce" ctrl="force" easy="false" id="nat24" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -80,7 +80,7 @@
     <level _seq="72" _title="Water Holes" _xpath="./siegfried10_2" author="Siegfried Fennig" ctrl="force" easy="false" id="level3f" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="73" _title="Follow the Leader" _xpath="./martin71_2" author="Martin Hawlisch" ctrl="force" easy="true" id="martin71" rel="2" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="74" _title="Laser Spiral" _xpath="./duffy03_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy3" rel="1" rev="1" score="1" target="time" unit="duration"/>
-    <level _seq="75" _title="Puzzle Blues" _xpath="./siegfried07_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level3c" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="75" _title="Puzzle Blues" _xpath="./siegfried07_2" author="Siegfried Fennig" ctrl="force" easy="false" id="level3c" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="76" _title="Pools" _xpath="./martin70_1" author="Martin Hawlisch" ctrl="force" easy="false" id="martin70" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="77" _title="Push your way" _xpath="./siegfried12_1" author="Siegfried Fennig" ctrl="force" easy="false" id="level4b" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="78" _title="Inverted Laser Spiral" _xpath="./duffy42_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy42" rel="1" rev="1" score="1" target="time" unit="duration"/>

Deleted: trunk/data/levels/enigma_ii/peter01_1.xml
===================================================================
--- trunk/data/levels/enigma_ii/peter01_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_ii/peter01_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,91 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Beam0r" el:subtitle="" el:id="peter_001"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
-      <el:author  el:name="Peter Santo" el:email="enigma at exaweb.de" el:homepage=""/>
-      <el:copyright>Copyright ? 2003 Peter Santo</el:copyright>
-      <el:license el:type="public domain" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-       <el:dependency el:path="lib/ant" el:id="lib/ant" el:release="1" el:preload="true"/>
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
--- This level is public domain
--- My first Enigma level. It is not too difficult, 
--- but I like finding solutions for laser beam puzzles.
--- Feb.'06: Replaced some characters to get pure ASCII, Raoul 
-
-display.SetFollowMode(display.FOLLOW_SCROLLING)
-
-oxyd_default_flavor = "b"
-
-cells={}
-cells[" "]=cell{floor = "fl-acblack"}
-cells["!"]=cell{parent=cells[" "], stone="st-glass"}
-cells["#"]=cell{parent={cells[" "], {oxyd}}}
-
-cells["+"]=cell{parent=cells[" "], stone={"st-laser-e", {name="laser"}}}
-
-cells["0"]=cell{parent=cells[" "], stone={"st-coinslot", {target = "laser", action = "onoff"}}}
-
-cells["$"]=cell{parent=cells[" "], item={"it-coin1"}}
-
-cells["a"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror1"}}}
-cells["b"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror2"}}}
-cells["c"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror3"}}}
-cells["d"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror4"}}}
-cells["e"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror5"}}}
-cells["f"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror6"}}}
-cells["g"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror7"}}}
-cells["h"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror8"}}}
-cells["i"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror9"}}}
-cells["j"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror10"}}}
-cells["k"]=cell{parent=cells[" "], stone={"st-pmirror", {name="mirror11"}}}
-
-cells["A"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror1"}}}
-cells["B"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror2"}}}
-cells["C"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror3"}}}
-cells["D"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror4"}}}
-cells["E"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror5"}}}
-cells["F"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror6"}}}
-cells["G"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror7"}}}
-cells["H"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror8"}}}
-cells["I"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror9"}}}
-cells["J"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror10"}}}
-cells["K"]=cell{parent=cells[" "],item={"it-trigger", {action="turn", target="mirror11"}}}
-
-cells["&"]=cell{parent=cells[" "], actor={"ac-blackball",{player=0}}}
-
-level={"   #   #   #   #    ",
-       "  #a   b   c   d#   ",
-       "                    ",
-       "  +    e   f   g    ",
-       "                    ",
-       "  #h   i   j   k#   ",
-       "   #   #   #   #    ",
-       "     !!!!!!!!!      ",
-       "     !A$B$C$D!      ",
-       "     !$$$$$$$!      ",
-       "     0$$E&F$G!      ",
-       "     !$$$$$$$!      ",
-       "     !H$I$J$K!      "}
-       
-create_world_by_map(level)
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>
-
-

Copied: trunk/data/levels/enigma_ii/peter01_2.xml (from rev 1564, trunk/data/levels/enigma_ii/peter01_1.xml)
===================================================================
--- trunk/data/levels/enigma_ii/peter01_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_ii/peter01_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Beam0r" el:subtitle="" el:id="peter_001"/>
+      <el:version el:score="1" el:release="2" el:revision="1" el:status="released"/>
+      <el:author  el:name="Peter Santo" el:email="enigma at exaweb.de" el:homepage=""/>
+      <el:copyright>Copyright ? 2003 Peter Santo</el:copyright>
+      <el:license el:type="public domain" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+        <el:credits>My first Enigma level. It is not too difficult, but I like finding solutions for laser beam puzzles.</el:credits>
+        <el:code>New API converted by R. Bourquin</el:code>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+ti[" "] = {"fl_yinyang_yin", invisible=true}
+ti["#"] = {"st_rawglass"}
+ti[">"] = {"st_laser", orientation=EAST, name="laser"}
+ti["*"] = {"st_coinslot", target="laser"}
+ti["."] = {"it_coin_s"}
+ti["O"] = {"st_oxyd"}
+ti["@"] = {"#ac_marble_black"}
+ti["mirror"] = {"st_mirror", orientation=EAST, name="mirror%%"}
+ti["trigger"] = {"it_trigger", target="mirror%%", action="turn"}
+
+wo(res.autotile(ti, {"A", "K", "mirror"}, {"a", "k", "trigger"}), " ", {
+    "   O   O   O   O    ",
+    "  OA   B   C   DO   ",
+    "                    ",
+    "  >    E   F   G    ",
+    "                    ",
+    "  OH   I   J   KO   ",
+    "   O   O   O   O    ",
+    "     #########      ",
+    "     #a.b.c.d#      ",
+    "     #.......#      ",
+    "     *..e at f.g#      ",
+    "     #.......#      ",
+    "     #h.i.j.k#      "})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_ii/siegfried07_1.xml
===================================================================
--- trunk/data/levels/enigma_ii/siegfried07_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_ii/siegfried07_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,110 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Puzzle Blues" el:subtitle="" el:id="level3c"/>
-      <el:version el:score="1" el:release="1" el:revision="0" el:status="released"/>
-      <el:author  el:name="Siegfried Fennig" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2003 Siegfried Fennig</el:copyright>
-      <el:license el:type="GPL version 2" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-levelw = 20
-levelh = 13
-
-create_world(levelw, levelh)
-draw_border("st-blue-sand")
-fill_floor("fl-mortar")
-
-puzzle(5,3,PUZ_0101)
-puzzle(6,3,PUZ_0100)
-puzzle(7,3,PUZ_0101)
-puzzle(8,3,PUZ_0101)
-puzzle(9,3,PUZ_0101)
-puzzle(10,3,PUZ_1000)
-puzzle(11,3,PUZ_0101)
-puzzle(12,3,PUZ_0001)
-puzzle(13,3,PUZ_0100)
-puzzle(14,3,PUZ_1010)
-puzzle(5,9,PUZ_0101)
-puzzle(6,9,PUZ_0101)
-puzzle(7,9,PUZ_0101)
-puzzle(8,9,PUZ_0001)
-puzzle(9,9,PUZ_0101)
-puzzle(10,9,PUZ_1010)
-puzzle(11,9,PUZ_0100)
-puzzle(12,9,PUZ_0101)
-puzzle(13,9,PUZ_0101)
-puzzle(14,9,PUZ_1010)
-puzzle(6,4,PUZ_0101)
-puzzle(7,4,PUZ_0101)
-puzzle(8,4,PUZ_0001)
-puzzle(9,4,PUZ_0101)
-puzzle(10,4,PUZ_1000)
-puzzle(11,4,PUZ_1000)
-puzzle(12,4,PUZ_1010)
-puzzle(13,4,PUZ_0101)
-puzzle(6,8,PUZ_0100)
-puzzle(7,8,PUZ_0101)
-puzzle(8,8,PUZ_0101)
-puzzle(9,8,PUZ_1010)
-puzzle(10,8,PUZ_0101)
-puzzle(11,8,PUZ_0101)
-puzzle(12,8,PUZ_0101)
-puzzle(13,8,PUZ_0001)
-puzzle(4,7,PUZ_1010)
-puzzle(4,8,PUZ_0101)
-puzzle(4,9,PUZ_1010)
-puzzle(4,3,PUZ_1010)
-puzzle(4,4,PUZ_0101)
-puzzle(4,5,PUZ_0101)
-puzzle(4,6,PUZ_0010)
-puzzle(15,7,PUZ_1010)
-puzzle(15,8,PUZ_1010)
-puzzle(15,9,PUZ_0101)
-puzzle(15,3,PUZ_0010)
-puzzle(15,4,PUZ_0101)
-puzzle(15,5,PUZ_0101)
-puzzle(15,6,PUZ_1010)
-puzzle(5,4,PUZ_0101)
-puzzle(5,5,PUZ_1010)
-puzzle(5,6,PUZ_1010)
-puzzle(5,7,PUZ_1010)
-puzzle(5,8,PUZ_1000)
-puzzle(14,4,PUZ_0101)
-puzzle(14,5,PUZ_0010)
-puzzle(14,6,PUZ_0010)
-puzzle(14,7,PUZ_1010)
-puzzle(14,8,PUZ_1010)
-
-draw_stones("st-blue-sand", {6,5}, {1,0},2)
-draw_stones("st-blue-sand", {9,5}, {1,0},5)
-draw_stones("st-blue-sand", {9,6}, {1,0},2)
-draw_stones("st-blue-sand", {6,7}, {1,0},5)
-draw_stones("st-blue-sand", {12,7}, {1,0},2)
-
-oxyd (8,6)
-oxyd (11,6)
-oxyd (7,6)
-oxyd (12,6)
-
-set_stones("st-grate1", {{8,5},{11,7},{6,6},{13,6}})
-
-set_item("it-magicwand",17,8)
-
-set_actor("ac-blackball", 17.5,10.5)
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_ii/siegfried07_2.xml (from rev 1564, trunk/data/levels/enigma_ii/siegfried07_1.xml)
===================================================================
--- trunk/data/levels/enigma_ii/siegfried07_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_ii/siegfried07_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Puzzle Blues" el:subtitle="" el:id="level3c"/>
+      <el:version el:score="1" el:release="2" el:revision="1" el:status="released"/>
+      <el:author  el:name="Siegfried Fennig" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2003 Siegfried Fennig</el:copyright>
+      <el:license el:type="GPL version 2" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libpuzzle" el:id="lib/libpuzzle" el:release="3" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+ti["  "] = {"fl_mortar"}
+ti["##"] = {"st_bluesand"}
+ti["XX"] = {"st_grate", flavor="cross"}
+ti["P"] = {"st_puzzle", intensity=0}
+ti["mm"] = {"it_magicwand"}
+ti["OO"] = {"st_oxyd"}
+ti["@@"] = {"#ac_marble_black"}
+
+wo(res.puzzle(ti, "P"), "  ", {
+    "########################################",
+    "##                                    ##",
+    "##                                    ##",
+    "##      PjPePdPePePePhPePaPdPjPb      ##",
+    "##      PePePePePaPePhPhPjPePePe      ##",
+    "##      PePj####XX##########PbPe      ##",
+    "##      PbPjXXOOOO####OOOOXXPbPj      ##",
+    "##      PjPj##########XX####PjPj      ##",
+    "##      PePhPdPePePjPePePePaPjPj  mm  ##",
+    "##      PjPePePePaPePjPdPePePjPe      ##",
+    "##                                @@  ##",
+    "##                                    ##",
+    "########################################"})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_iv/duffy104_1.xml
===================================================================
--- trunk/data/levels/enigma_iv/duffy104_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_iv/duffy104_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Termites" el:subtitle="" el:id="duffy104"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92" el:engine="oxyd1">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-
-fill_floor("fl-hay", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-glass1", i-1, line)
-        elseif c =="S" then
-            set_stone( "st-spitter", i-1, line)
-        elseif c =="T" then
-            set_stone( "st-thief", i-1, line)
-        elseif c =="B" then
-            set_stone( "st-glass1", i-1, line)
-            set_item("it-blackbomb",i-1,line)
-        elseif c =="W" then
-            set_stone( "st-glass1", i-1, line)
-            set_item("it-whitebomb",i-1,line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            set_floor("fl-water",i-1,line)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-1,line+.5, {player=0})
-        elseif c=="y" then
-            set_actor("ac-whiteball", i-1,line+.5, {player=1})
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c=="=" then
-            set_floor("fl-space",i-1,line)
-        elseif c=="b" then
-            set_item("it-blackbomb",i-1,line)
-        elseif c=="w" then
-            set_item("it-whitebomb",i-1,line)
-        elseif c=="O" then
-            set_item("it-extralife",i-1,line)
-        elseif c=="1" then
-            set_item("it-blackbomb",i-1,line,{name="b1"})
-        elseif c=="f" then
-            set_item("it-floppy",i-1,line)
-        elseif c=="A" then
-            set_stone("st-floppy",i-1,line,{action="openclose",target="door1"})
-        elseif c=="a" then
-            doorh( i-1,line, {name="door1"})
-        elseif c=="%" then
-            set_stone("st-floppy",i-1,line,{action="openclose",target="door2"})
-        elseif c=="$" then
-            doorh( i-1,line, {name="door2"})
-        elseif c=="C" then
-            set_stone("st-floppy",i-1,line,{action="openclose",target="door3"})
-        elseif c=="c" then
-            doorh( i-1,line, {name="door3"})
-        elseif c=="D" then
-            set_stone("st-floppy",i-1,line,{action="openclose",target="door4"})
-        elseif c=="d" then
-            doorh( i-1,line, {name="door4"})
-        elseif c=="L" then
-            set_stone("st-oneway_black", i-1,line, {orientation=enigma.WEST})
-        end
-    end
-end
-
-renderLine(00,"####################")
-renderLine(01,"#o#       z      #o#")
-renderLine(02,"#aA bbbbbbbbbbbb %$#")
-renderLine(03,"# 1bb          bbb #")
-renderLine(04,"# #   bbbbbbbb   b #")
-renderLine(05,"# bbbbb #####bbb b #")
-renderLine(06,"# b   + Bb f# +b b #")
-renderLine(07,"# b bbbbB+###bbb b #")
-renderLine(08,"# b   + bbbbbb+  b #")
-renderLine(09,"# bbb     +    bbb #")
-renderLine(10,"#dD bbbbbbbbbbbb Cc#")
-renderLine(11,"#o#              #o#")
-renderLine(12,"####################")
-
-oxyd_shuffle()
-
-b1=enigma.GetNamedObject("b1")
-enigma.SendMessage(b1,"ignite",nil)
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_iv/duffy104_2.xml (from rev 1564, trunk/data/levels/enigma_iv/duffy104_1.xml)
===================================================================
--- trunk/data/levels/enigma_iv/duffy104_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_iv/duffy104_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Termites" el:subtitle="" el:id="duffy104"/>
+      <el:version el:score="1" el:release="2" el:revision="2" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti[" "] = {"fl_hay"}
+ti["#"] = {"st_lightglass"}
+ti["+"] = {"st_box_hay"}
+ti["-"] = {"st_door", flavor="d", faces="ns", name="door#"}
+ti["F"] = {"st_floppy", target="@door#*"}
+ti["f"] = {"it_floppy"}
+ti["."] = {"it_bomb_black"}
+ti[","] = {"it_bomb_black_burning"}
+ti["*"] = ti["#"] .. ti["."]
+ti["O"] = {"st_oxyd"}
+ti["@"] = {"ac_marble_black", 0.0, 0.5}
+
+wo(ti, " ", {
+    "####################",
+    "#O#       @      #O#",
+    "#-F ............ F-#",
+    "# ,..          ... #",
+    "# #   ........   . #",
+    "# ..... #####... . #",
+    "# .   + *. f# +. . #",
+    "# . ....*+###... . #",
+    "# .   + ......+  . #",
+    "# ...     +    ... #",
+    "#-F ............ F-#",
+    "#O#              #O#",
+    "####################"})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_iv/duffy11_1.xml
===================================================================
--- trunk/data/levels/enigma_iv/duffy11_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_iv/duffy11_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,135 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="The Race" el:subtitle="" el:id="duffy11"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2003 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92" el:engine="oxyd1">
-      </el:compatibility>
-      <el:modes el:easy="true" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=3
-rooms_high=2
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = FALSE
-
-fill_floor("fl-leaves", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-greenbrown", i-1, line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "h" then
-            set_item("it-trigger", i-1,line, {action="openclose",target="door1"})
-        elseif c == "H" then
-            set_stone("st-door", i-1, line , {name="door1", type="v"})
-        elseif c == "+" then
-            set_stone("st-wood", i-1, line)
-        elseif c == "*" then
-            set_stone("st-brownie", i-1, line)
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c == "a" then
-            set_stone("st-bolder-n", i-1,line)
-        elseif c == "b" then
-            set_stone("st-bolder-e", i-1,line)
-        elseif c == "c" then
-            set_stone("st-bolder-w", i-1,line)
-        elseif c == "d" then
-            set_stone("st-bolder-s", i-1,line)
-        elseif c == "1" then
-            oneway(i-1,line, enigma.NORTH)
-        elseif c == "4" then
-            oneway(i-1,line, enigma.SOUTH)
-        elseif c == "3" then
-            oneway(i-1,line, enigma.WEST)
-        elseif c == "2" then
-            oneway(i-1,line, enigma.EAST)
-        elseif c == "~" then
-            fill_floor("fl-water", i-1,line, 1,1)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "@" then
-            document(i-1,line,"text1")
-        elseif c == "s" then
-            set_stone("st-stoneimpulse",i-1,line)
-        elseif c == "x" then
-            set_item("it-blackbomb",i-1,line)
-        elseif c == "y" then
-            dynamite(i-1,line)
-        elseif c == "W" then
-            if not difficult then
-                --            set_stone("st-wood", i-1, line)
-            else
-                set_stone("st-wood", i-1, line)
-            end
-        elseif c == "w" then
-            if not difficult then
-                --            fill_floor("fl-water", i-1,line, 1,1)
-            else
-                fill_floor("fl-water", i-1,line, 1,1)
-            end
-        end
-    end
-end
-
--- Floor:  " "
--- Border: "#"
--- Oxyd:   "o"
-
-renderLine(00, "##########################################################")
-renderLine(01, "#  sd ####################################################")
-renderLine(02, "#b### ###############################################oo###")
-renderLine(03, "#se        y                              @   z   c#    ##")
-renderLine(04, "##### ############################################## #####")
-renderLine(05, "##### ##################h#########################sd #####")
-renderLine(06, "##### ################## ##########oooooooooooooo# g #####")
-renderLine(07, "##### #####   W      w  * H +    !               2 #s#####")
-renderLine(08, "##### ##### ############s######################### #c#####")
-renderLine(09, "##### # ds         w                W  x+            #####")
-renderLine(10, "##### # ### ##### #####################xxx######## #######")
-renderLine(11, "##### #sd   as  # ################################ #######")
-renderLine(12, "##### ### #####c# ################################ #######")
-renderLine(13, "##### ###s#####s# ################################ #######")
-renderLine(14, "##### ###b##### # ################################ #######")
-renderLine(15, "##### ###    sa # ################################ #######")
-renderLine(16, "##### ############################################ #######")
-renderLine(17, "###                            +    ~                 s###")
-renderLine(18, "###b# ############################################ ###c###")
-renderLine(19, "###s# ######################                    sa #s  ###")
-renderLine(20, "### # ######################b#######################c#####")
-renderLine(21, "### as######################s                        #####")
-renderLine(22, "##########################################################")
-renderLine(23, "##########################################################")
-renderLine(24, "##########################################################")
-
-set_actor("ac-blackball", 47.5,3.5)
-
-set_stone("st-greenbrown",39,10)
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-      <el:string el:key="text1">
-        <el:english el:translate="true">It's a race!</el:english>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_iv/duffy11_2.xml (from rev 1564, trunk/data/levels/enigma_iv/duffy11_1.xml)
===================================================================
--- trunk/data/levels/enigma_iv/duffy11_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_iv/duffy11_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="The Race" el:subtitle="" el:id="duffy11"/>
+      <el:version el:score="2" el:release="2" el:revision="2" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2003 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti[" "] = {"fl_lawn"}
+ti["~"] = {"fl_water"}
+ti["-"] = {"fl_abyss"}
+ti["#"] = {"st_greenbrown"}
+ti["+"] = {"st_box"}
+ti[":"] = {"st_box_hay"}
+ti["*"] = {"st_brownie"}
+ti["X"] = {"st_grate", flavor="cross"}
+ti["P"] = {"st_stoneimpulse"}
+ti["^"] = {"st_boulder", orientation=NORTH}
+ti[">"] = {"st_boulder", orientation=EAST}
+ti["V"] = {"st_boulder", orientation=SOUTH}
+ti["<"] = {"st_boulder", orientation=WEST}
+ti["="] = {"st_oneway", orientation=EAST}
+ti["t"] = {"it_document", text="text1"}
+ti["d"] = {"it_dynamite"}
+ti["."] = {"it_bomb_black"}
+ti[","] = ti["#"] .. ti["."]
+ti["1"] = {"it_trigger", target="door1"}
+ti["|"] = {"st_door", flavor="d", faces="ew", name="door1"}
+if wo["IsDifficult"] then
+    ti["W"] = ti["+"]
+    ti["w"] = ti["~"]
+else
+    ti["W"] = ti[" "]
+    ti["w"] = ti[" "]
+end
+ti["O"] = {"st_oxyd", name="main#"}
+ti["o"] = {"st_oxyd", name="other#"}
+ti["@"] = {"#ac_marble_black"}
+
+wo(ti, " ", {
+    "##########################################################",
+    "#  PV ####################################################",
+    "#>### ###############################################oo###",
+    "#P         d                              t   @   <#    ##",
+    "##### ############################################## #####",
+    "##### ##################1#########################PV #####",
+    "##### ################## ##########OOOOOOOOOOOOOO# X #####",
+    "##### #####   W      w  * | +    -               = #P#####",
+    "##### ##### ############P######################### #<#####",
+    "##### # VP         w                W  .:            #####",
+    "##### # ### ##### #####################,..######## #######",
+    "##### #PV   ^P  # ################################ #######",
+    "##### ### #####<# ################################ #######",
+    "##### ###P#####P# ################################ #######",
+    "##### ###>##### # ################################ #######",
+    "##### ###    P^ # ################################ #######",
+    "##### ############################################ #######",
+    "###                            +    ~                 P###",
+    "###># ############################################ ###<###",
+    "###P# ######################                    P^ #P  ###",
+    "### # ######################>#######################<#####",
+    "### ^P######################P                        #####",
+    "##########################################################",
+    "##########################################################",
+    "##########################################################"})
+
+wo:shuffleOxyd({"main#*", "other#*", min=2})
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+      <el:string el:key="text1">
+        <el:english el:translate="true">It's a race!</el:english>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Modified: trunk/data/levels/enigma_iv/index.xml
===================================================================
--- trunk/data/levels/enigma_iv/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_iv/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10500" network="false" owner="Enigma Team" release="1" revision="34" title="Enigma IV"/>
+  <info enigma="1.00" group="Enigma" location="10500" network="false" owner="Enigma Team" release="1" revision="35" title="Enigma IV"/>
 
   <attributes/>
 
@@ -9,7 +9,7 @@
     <level _seq="1" _title="Welcome" _xpath="./welcometopack4_2" author="Raoul Bourquin" ctrl="force" easy="true" id="welcometopack4" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="2" _title="Happy New Year" _xpath="./duffy76_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy76" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="3" _title="Wood robbing" _xpath="./alain08_1" author="Alain Busser" ctrl="force" easy="false" id="alain08" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="4" _title="Termites" _xpath="./duffy104_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy104" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="4" _title="Termites" _xpath="./duffy104_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy104" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="5" _title="Hurry!" _xpath="./wb01_3" author="Jon 'WB' Sneyers" ctrl="force" easy="true" id="wb1" rel="3" rev="2" score="3" target="time" unit="duration"/>
     <level _seq="6" _title="TNT Shortage?" _xpath="./siegfried74_1" author="Siegfried Fennig" ctrl="force" easy="false" id="siegfried74" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="7" _title="Antimaze" _xpath="./luc02_2" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc02" rel="2" rev="3" score="1" target="time" unit="duration"/>
@@ -47,7 +47,7 @@
     <level _seq="39" _title="How Many Spirals?" _xpath="./nat23_1" author="Nat Pryce" ctrl="force" easy="true" id="nat23" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="40" _title="- Meditation -" _xpath="./nat18_1" author="Nat Pryce" ctrl="force" easy="false" id="nat18" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="41" _title="Block the Way" _xpath="./raywick03_3" author="Ray Wick" ctrl="force" easy="false" id="RayWick003" rel="3" rev="2" score="3" target="time" unit="duration"/>
-    <level _seq="42" _title="The Race" _xpath="./duffy11_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy11" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="42" _title="The Race" _xpath="./duffy11_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy11" rel="2" rev="2" score="2" target="time" unit="duration"/>
     <level _seq="43" _title="Limited Supplies" _xpath="./duffy130_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy130" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="44" _title="Patterns of Impulse" _xpath="./andreas11_2" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas11" rel="2" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="45" _title="Ball and Chain" _xpath="./duffy41_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy41" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_tutorial/index.xml
===================================================================
--- trunk/data/levels/enigma_tutorial/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_tutorial/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10100" network="false" owner="Enigma Team" release="1" revision="18" title="Tutorial"/>
+  <info enigma="1.00" group="Enigma" location="10100" network="false" owner="Enigma Team" release="1" revision="19" title="Tutorial"/>
 
   <attributes/>
 
@@ -67,7 +67,7 @@
     <level _seq="59" _title="Formentera!" _xpath="enigma_i/luc06_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc06" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="60" _title="- Meditation -" _xpath="enigma_ii/wb10_1" author="Jon 'WB' Sneyers" ctrl="force" easy="false" id="wb10" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="Is It Easy?" _xpath="enigma_i/martin06_1" author="Martin Hawlisch" ctrl="force" easy="false" id="martin06" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="62" _title="Beam0r" _xpath="enigma_ii/peter01_1" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="1" rev="0" score="1" target="time" unit="duration"/>
+    <level _seq="62" _title="Beam0r" _xpath="enigma_ii/peter01_2" author="Peter Santo" ctrl="force" easy="false" id="peter_001" rel="2" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="63" _title="Slalom Skiing" _xpath="enigma_ii/martin93_1" author="Martin Hawlisch" ctrl="force" easy="true" id="martin93" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="64" _title="Chess Stones" _xpath="./a_tut07_1" author="Raoul Bourquin, ShadowPhrogg32642342, Andreas Lochmann" ctrl="force" easy="false" id="c_tut01" rel="1" rev="5" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="Bye!" _xpath="./a_tut06_2" author="Andreas Lochmann" ctrl="force" easy="false" id="a_tut06" rel="2" rev="2" score="1" target="time" unit="duration"/>

Deleted: trunk/data/levels/enigma_v/duffy110_1.xml
===================================================================
--- trunk/data/levels/enigma_v/duffy110_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/duffy110_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,97 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Clear the Path" el:subtitle="" el:id="duffy110"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-
-fill_floor("fl-bluegreen", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-rock2", i-1, line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            set_floor("fl-water",i-1,line)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-.5,line+.5, {player=0})
-        elseif c=="y" then
-            set_actor("ac-whiteball", i-1,line+.5, {player=1})
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c=="=" then
-            set_floor("fl-space",i-1,line)
-        elseif c=="X" then
-            set_stone("st-turnstile",i-1,line)
-        elseif c=="U" then
-            set_stone("st-turnstile-n",i-1,line)
-        elseif c=="R" then
-            set_stone("st-turnstile-e",i-1,line)
-        elseif c=="D" then
-            set_stone("st-turnstile-s",i-1,line)
-        elseif c=="L" then
-            set_stone("st-turnstile-w",i-1,line)
-        elseif c=="u" then
-            puzzle(i-1,line,PUZ_1000)
-        elseif c=="r" then
-            puzzle(i-1,line,PUZ_0001)
-        elseif c=="d" then
-            puzzle(i-1,line,PUZ_0010)
-        elseif c=="l" then
-            puzzle(i-1,line,PUZ_0100)
-        end
-    end
-end
-
-renderLine(00,"####################")
-renderLine(01,"o U U U U U U U U o#")
-renderLine(02,"# X X X X X X X X  #")
-renderLine(03,"# U U   U   U   U  #")
-renderLine(04,"# X X # X # X # X  #")
-renderLine(05,"# Ulr    U  U XR ~ #")
-renderLine(06,"ozX LXRU X LXRD o# #")
-renderLine(07,"# D  D XRDlr  ## ~ #")
-renderLine(08,"# X # X # X # X X  #")
-renderLine(09,"# D   D   D   D D  #")
-renderLine(10,"# X X X X X X X X  #")
-renderLine(11,"o D D D D D D D D o#")
-renderLine(12,"####################")
-
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_v/duffy110_2.xml (from rev 1564, trunk/data/levels/enigma_v/duffy110_1.xml)
===================================================================
--- trunk/data/levels/enigma_v/duffy110_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_v/duffy110_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Clear the Path" el:subtitle="" el:id="duffy110"/>
+      <el:version el:score="1" el:release="2" el:revision="2" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti[" "] = {"fl_bluegreen"}
+ti["~"] = {"fl_water"}
+ti["#"] = {"st_darkgray"}
+ti["+"] = {"st_turnstile"}
+ti["^"] = {"st_turnstilearm", orientation=NORTH}
+ti[">"] = {"st_turnstilearm", orientation=EAST}
+ti["v"] = {"st_turnstilearm", orientation=SOUTH}
+ti["<"] = {"st_turnstilearm", orientation=WEST}
+ti["*"] = {"st_puzzle", cluster=1}
+ti["O"] = {"st_oxyd"}
+ti["@"] = {"#ac_marble_black"}
+
+wo(ti, " ", {
+    "####################",
+    "O ^ ^ ^ ^ ^ ^ ^ ^ O#",
+    "# + + + + + + + +  #",
+    "# ^ ^   ^   ^   ^  #",
+    "# + + # + # + # +  #",
+    "# ^**    ^  ^ +> ~ #",
+    "O at + <+>^ + <+>v O# #",
+    "# v  v +>v**  ## ~ #",
+    "# + # + # + # + +  #",
+    "# v   v   v   v v  #",
+    "# + + + + + + + +  #",
+    "O v v v v v v v v O#",
+    "####################"})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_v/duffy127_1.xml
===================================================================
--- trunk/data/levels/enigma_v/duffy127_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/duffy127_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,1040 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Now What?" el:subtitle="" el:id="duffy127"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-oxyd_default_flavor = "a"
-
-fill_floor("fl-bumps", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-marble", i-1, line)
-        elseif c =="." then
-            set_stone( "st-fakeoxyda", i-1, line)
-            set_item("it-cross",i-1,line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            set_floor("fl-water",i-1,line)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-1,line+.5, {player=0})
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c=="=" then
-            set_floor("fl-space",i-1,line)
-        elseif c=="a" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc1"})
-        elseif c=="b" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc2"})
-        elseif c=="c" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc3"})
-        elseif c=="d" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc4"})
-        elseif c=="e" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc5"})
-        elseif c=="j" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc10"})
-        elseif c=="`" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc15"})
-        elseif c=="t" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc20"})
-        elseif c=="y" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc25"})
-        elseif c=="f" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc6"})
-        elseif c=="k" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc11"})
-        elseif c=="p" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc16"})
-        elseif c=="u" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc21"})
-        elseif c=="v" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc22"})
-        elseif c=="w" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc23"})
-        elseif c=="x" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc24"})
-        elseif c=="y" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc25"})
-        elseif c=="m" then
-            set_item("it-trigger",i-1,line,{action="callback",target="funcc13"})
-        elseif c=="A" then
-            set_stone("st-door_a",i-1,line,{name="s1"})
-        elseif c=="B" then
-            set_stone("st-door_a",i-1,line,{name="s2"})
-        elseif c=="C" then
-            set_stone("st-door_a",i-1,line,{name="s3"})
-        elseif c=="D" then
-            set_stone("st-door_a",i-1,line,{name="s4"})
-        elseif c=="E" then
-            set_stone("st-door_a",i-1,line,{name="s5"})
-        elseif c=="F" then
-            set_stone("st-door_a",i-1,line,{name="s6"})
-        elseif c=="G" then
-            set_stone("st-door_a",i-1,line,{name="s7"})
-        elseif c=="H" then
-            set_stone("st-door_a",i-1,line,{name="s8"})
-        elseif c=="I" then
-            set_stone("st-door_a",i-1,line,{name="s9"})
-        elseif c=="J" then
-            set_stone("st-door_a",i-1,line,{name="s10"})
-        elseif c=="K" then
-            set_stone("st-door_a",i-1,line,{name="s11"})
-        elseif c=="L" then
-            set_stone("st-door_a",i-1,line,{name="s12"})
-        elseif c=="M" then
-            set_stone("st-door_a",i-1,line,{name="s13"})
-        elseif c=="N" then
-            set_stone("st-door_a",i-1,line,{name="s14"})
-        elseif c=="O" then
-            set_stone("st-door_a",i-1,line,{name="s15"})
-        elseif c=="P" then
-            set_stone("st-door_a",i-1,line,{name="s16"})
-        elseif c=="Q" then
-            set_stone("st-door_a",i-1,line,{name="s17"})
-        elseif c=="R" then
-            set_stone("st-door_a",i-1,line,{name="s18"})
-        elseif c=="S" then
-            set_stone("st-door_a",i-1,line,{name="s19"})
-        elseif c=="T" then
-            set_stone("st-door_a",i-1,line,{name="s20"})
-        elseif c=="U" then
-            set_stone("st-door_a",i-1,line,{name="s21"})
-        elseif c=="V" then
-            set_stone("st-door_a",i-1,line,{name="s22"})
-        elseif c=="W" then
-            set_stone("st-door_a",i-1,line,{name="s23"})
-        elseif c=="X" then
-            set_stone("st-door_a",i-1,line,{name="s24"})
-        elseif c=="Y" then
-            set_stone("st-door_a",i-1,line,{name="s25"})
-        elseif c=="Z" then
-            set_stone("st-door_a",i-1,line,{name="sb1"})
-        elseif c=="1" then
-            set_stone("st-door_a",i-1,line,{name="sc1"})
-        elseif c=="2" then
-            set_stone("st-door_a",i-1,line,{name="sc2"})
-        end
-    end
-end
-
-renderLine(00,"####################")
-renderLine(01,"#    a b c d e   #o#")
-renderLine(02,"#   aA B C D Ee  #1#")
-renderLine(03,"#                # #")
-renderLine(04,"#   fF G H I Jj  # #")
-renderLine(05,"#                # #")
-renderLine(06,"#m zkK L M N O`  Z .")
-renderLine(07,"#                # #")
-renderLine(08,"#   pP Q R S Tt  # #")
-renderLine(09,"#                # #")
-renderLine(10,"#   uU V W X Yy  #2#")
-renderLine(11,"#    u v w x y   #o#")
-renderLine(12,"####################")
-
-oxyd_shuffle()
-
-a=enigma.GetNamedObject("s1")
-b=enigma.GetNamedObject("s2")
-c=enigma.GetNamedObject("s3")
-d=enigma.GetNamedObject("s4")
-e=enigma.GetNamedObject("s5")
-f=enigma.GetNamedObject("s6")
-g=enigma.GetNamedObject("s7")
-h=enigma.GetNamedObject("s8")
-i=enigma.GetNamedObject("s9")
-j=enigma.GetNamedObject("s10")
-k=enigma.GetNamedObject("s11")
-l=enigma.GetNamedObject("s12")
-m=enigma.GetNamedObject("s13")
-n=enigma.GetNamedObject("s14")
-o=enigma.GetNamedObject("s15")
-p=enigma.GetNamedObject("s16")
-q=enigma.GetNamedObject("s17")
-r=enigma.GetNamedObject("s18")
-s=enigma.GetNamedObject("s19")
-t=enigma.GetNamedObject("s20")
-u=enigma.GetNamedObject("s21")
-v=enigma.GetNamedObject("s22")
-w=enigma.GetNamedObject("s23")
-x=enigma.GetNamedObject("s24")
-y=enigma.GetNamedObject("s25")
-
-sb1=enigma.GetNamedObject("sb1")
-
-sc1=enigma.GetNamedObject("sc1")
-sc2=enigma.GetNamedObject("sc2")
-
---enigma.SendMessage(g,"open",nil)
---enigma.SendMessage(h,"open",nil)
---enigma.SendMessage(n,"open",nil)
---enigma.SendMessage(q,"open",nil)
---enigma.SendMessage(r,"open",nil)
-
--- wrapped some code into this function to ease preview-creation, Andreas Oct.'06
-
-function open_at_start(obj)
-    if enigma.CreatingPreview then
-        set_stone("st-grate1", enigma.GetPos(obj))
-    else
-        enigma.SendMessage(obj, "open", nil)
-    end
-end
-
-open_at_start(a)
-open_at_start(b)
-open_at_start(c)
-open_at_start(d)
-open_at_start(e)
-open_at_start(f)
-open_at_start(i)
-open_at_start(j)
-open_at_start(k)
-open_at_start(l)
-open_at_start(m)
-open_at_start(o)
-open_at_start(p)
-open_at_start(s)
-open_at_start(t)
-open_at_start(u)
-open_at_start(v)
-open_at_start(w)
-open_at_start(x)
-open_at_start(y)
-
--- 1 1 1 1 1
---
--- 1 0 0 1 1
---
--- 1 1 1 0 1
---
--- 1 0 0 1 1
---
--- 1 1 1 1 1
-
-aa=0
-bb=0
-cc=0
-dd=0
-ee=0
-ff=0
-gg=1
-hh=1
-ii=0
-jj=0
-kk=0
-ll=0
-mm=0
-nn=1
-oo=0
-pp=0
-qq=1
-rr=1
-ss=0
-tt=0
-uu=0
-vv=0
-ww=0
-xx=0
-yy=0
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-ff1=0
-function funcc1()
-    if ff1==0 then
-        enigma.SendMessage(b,"openclose",nil)
-        ccc(2)
-        enigma.SendMessage(c,"openclose",nil)
-        ccc(3)
-        --   enigma.SendMessage(d,"openclose",nil)
-        --   enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(f,"openclose",nil)
-        ccc(6)
-        enigma.SendMessage(k,"openclose",nil)
-        ccc(11)
-        --   enigma.SendMessage(p,"openclose",nil)
-        --   enigma.SendMessage(u,"openclose",nil)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc2()
-    if ff1==0 then
-        enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(c,"openclose",nil)
-        enigma.SendMessage(d,"openclose",nil)
-        --   enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(g,"openclose",nil)
-        enigma.SendMessage(l,"openclose",nil)
-        --   enigma.SendMessage(q,"openclose",nil)
-        --   enigma.SendMessage(v,"openclose",nil)
-        ccc(1)
-        ccc(3)
-        ccc(4)
-        ccc(7)
-        ccc(12)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc3()
-    if ff1==0 then
-        enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(b,"openclose",nil)
-        enigma.SendMessage(d,"openclose",nil)
-        enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(h,"openclose",nil)
-        enigma.SendMessage(m,"openclose",nil)
-        --   enigma.SendMessage(r,"openclose",nil)
-        --   enigma.SendMessage(w,"openclose",nil)
-        ccc(1)
-        ccc(2)
-        ccc(4)
-        ccc(5)
-        ccc(8)
-        ccc(13)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc4()
-    if ff1==0 then
-        --   enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(b,"openclose",nil)
-        enigma.SendMessage(c,"openclose",nil)
-        enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(i,"openclose",nil)
-        enigma.SendMessage(n,"openclose",nil)
-        ccc(2)
-        ccc(3)
-        ccc(5)
-        ccc(9)
-        ccc(14)
-        --   enigma.SendMessage(s,"openclose",nil)
-        --   enigma.SendMessage(x,"openclose",nil)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc5()
-    if ff1==0 then
-        --   enigma.SendMessage(a,"openclose",nil)
-        --   enigma.SendMessage(b,"openclose",nil)
-        enigma.SendMessage(c,"openclose",nil)
-        enigma.SendMessage(d,"openclose",nil)
-        enigma.SendMessage(j,"openclose",nil)
-        enigma.SendMessage(o,"openclose",nil)
-        ccc(3)
-        ccc(4)
-        ccc(10)
-        ccc(15)
-        --   enigma.SendMessage(t,"openclose",nil)
-        --   enigma.SendMessage(y,"openclose",nil)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-function funcc6()
-    if ff1==0 then
-        enigma.SendMessage(g,"openclose",nil)
-        enigma.SendMessage(h,"openclose",nil)
-        --   enigma.SendMessage(i,"openclose",nil)
-        --   enigma.SendMessage(j,"openclose",nil)
-        enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(k,"openclose",nil)
-        enigma.SendMessage(p,"openclose",nil)
-        --   enigma.SendMessage(u,"openclose",nil)
-        ccc(7)
-        ccc(8)
-        ccc(1)
-        ccc(11)
-        ccc(16)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc7()
-    enigma.SendMessage(f,"openclose",nil)
-    enigma.SendMessage(h,"openclose",nil)
-    enigma.SendMessage(i,"openclose",nil)
-    --   enigma.SendMessage(j,"openclose",nil)
-    enigma.SendMessage(b,"openclose",nil)
-    enigma.SendMessage(l,"openclose",nil)
-    enigma.SendMessage(q,"openclose",nil)
-    --   enigma.SendMessage(v,"openclose",nil)
-    ccc(6)
-    ccc(8)
-    ccc(9)
-    ccc(2)
-    ccc(12)
-    ccc(17)
-    funccc()
-end
-
-function funcc8()
-    enigma.SendMessage(f,"openclose",nil)
-    enigma.SendMessage(g,"openclose",nil)
-    enigma.SendMessage(i,"openclose",nil)
-    enigma.SendMessage(j,"openclose",nil)
-    enigma.SendMessage(c,"openclose",nil)
-    enigma.SendMessage(m,"openclose",nil)
-    enigma.SendMessage(r,"openclose",nil)
-    --   enigma.SendMessage(w,"openclose",nil)
-    ccc(6)
-    ccc(7)
-    ccc(9)
-    ccc(10)
-    ccc(3)
-    ccc(13)
-    ccc(18)
-    funccc()
-end
-
-function funcc9()
-    --   enigma.SendMessage(f,"openclose",nil)
-    enigma.SendMessage(g,"openclose",nil)
-    enigma.SendMessage(h,"openclose",nil)
-    enigma.SendMessage(j,"openclose",nil)
-    enigma.SendMessage(d,"openclose",nil)
-    enigma.SendMessage(n,"openclose",nil)
-    enigma.SendMessage(s,"openclose",nil)
-    --   enigma.SendMessage(x,"openclose",nil)
-    ccc(7)
-    ccc(8)
-    ccc(10)
-    ccc(4)
-    ccc(14)
-    ccc(19)
-    funccc()
-end
-
-function funcc10()
-    if ff1==0 then
-        --   enigma.SendMessage(f,"openclose",nil)
-        --   enigma.SendMessage(g,"openclose",nil)
-        enigma.SendMessage(h,"openclose",nil)
-        enigma.SendMessage(i,"openclose",nil)
-        enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(o,"openclose",nil)
-        enigma.SendMessage(t,"openclose",nil)
-        --   enigma.SendMessage(y,"openclose",nil)
-        ccc(8)
-        ccc(9)
-        ccc(5)
-        ccc(15)
-        ccc(20)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-function funcc11()
-    if ff1==0 then
-        enigma.SendMessage(l,"openclose",nil)
-        enigma.SendMessage(m,"openclose",nil)
-        --   enigma.SendMessage(n,"openclose",nil)
-        --   enigma.SendMessage(o,"openclose",nil)
-        enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(f,"openclose",nil)
-        enigma.SendMessage(p,"openclose",nil)
-        enigma.SendMessage(u,"openclose",nil)
-        ccc(12)
-        ccc(13)
-        ccc(1)
-        ccc(6)
-        ccc(16)
-        ccc(21)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc12()
-    enigma.SendMessage(k,"openclose",nil)
-    enigma.SendMessage(m,"openclose",nil)
-    enigma.SendMessage(n,"openclose",nil)
-    --   enigma.SendMessage(o,"openclose",nil)
-    enigma.SendMessage(b,"openclose",nil)
-    enigma.SendMessage(g,"openclose",nil)
-    enigma.SendMessage(q,"openclose",nil)
-    enigma.SendMessage(v,"openclose",nil)
-    ccc(11)
-    ccc(13)
-    ccc(14)
-    ccc(2)
-    ccc(7)
-    ccc(17)
-    ccc(22)
-    funccc()
-end
-
-function funcc13()
-    if ff1==0 then
-        enigma.SendMessage(k,"openclose",nil)
-        enigma.SendMessage(l,"openclose",nil)
-        enigma.SendMessage(n,"openclose",nil)
-        enigma.SendMessage(o,"openclose",nil)
-        enigma.SendMessage(c,"openclose",nil)
-        enigma.SendMessage(h,"openclose",nil)
-        enigma.SendMessage(r,"openclose",nil)
-        enigma.SendMessage(w,"openclose",nil)
-        ccc(11)
-        ccc(12)
-        ccc(14)
-        ccc(15)
-        ccc(3)
-        ccc(8)
-        ccc(18)
-        ccc(23)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc14()
-    --   enigma.SendMessage(k,"openclose",nil)
-    enigma.SendMessage(l,"openclose",nil)
-    enigma.SendMessage(m,"openclose",nil)
-    enigma.SendMessage(o,"openclose",nil)
-    enigma.SendMessage(d,"openclose",nil)
-    enigma.SendMessage(i,"openclose",nil)
-    enigma.SendMessage(s,"openclose",nil)
-    enigma.SendMessage(x,"openclose",nil)
-    ccc(12)
-    ccc(13)
-    ccc(15)
-    ccc(4)
-    ccc(9)
-    ccc(19)
-    ccc(24)
-    funccc()
-end
-
-function funcc15()
-    if ff1==0 then
-        --   enigma.SendMessage(k,"openclose",nil)
-        --   enigma.SendMessage(l,"openclose",nil)
-        enigma.SendMessage(m,"openclose",nil)
-        enigma.SendMessage(n,"openclose",nil)
-        enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(j,"openclose",nil)
-        enigma.SendMessage(t,"openclose",nil)
-        enigma.SendMessage(y,"openclose",nil)
-        ccc(13)
-        ccc(14)
-        ccc(5)
-        ccc(10)
-        ccc(20)
-        ccc(25)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-function funcc16()
-    if ff1==0 then
-        enigma.SendMessage(q,"openclose",nil)
-        enigma.SendMessage(r,"openclose",nil)
-        --   enigma.SendMessage(s,"openclose",nil)
-        --   enigma.SendMessage(t,"openclose",nil)
-        --   enigma.SendMessage(a,"openclose",nil)
-        enigma.SendMessage(f,"openclose",nil)
-        enigma.SendMessage(k,"openclose",nil)
-        enigma.SendMessage(u,"openclose",nil)
-        ccc(17)
-        ccc(18)
-        ccc(6)
-        ccc(11)
-        ccc(21)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc17()
-    enigma.SendMessage(p,"openclose",nil)
-    enigma.SendMessage(r,"openclose",nil)
-    enigma.SendMessage(s,"openclose",nil)
-    --   enigma.SendMessage(t,"openclose",nil)
-    --   enigma.SendMessage(b,"openclose",nil)
-    enigma.SendMessage(g,"openclose",nil)
-    enigma.SendMessage(l,"openclose",nil)
-    enigma.SendMessage(v,"openclose",nil)
-    ccc(16)
-    ccc(18)
-    ccc(19)
-    ccc(7)
-    ccc(12)
-    ccc(22)
-    funccc()
-end
-
-function funcc18()
-    enigma.SendMessage(p,"openclose",nil)
-    enigma.SendMessage(q,"openclose",nil)
-    enigma.SendMessage(s,"openclose",nil)
-    enigma.SendMessage(t,"openclose",nil)
-    --   enigma.SendMessage(c,"openclose",nil)
-    enigma.SendMessage(h,"openclose",nil)
-    enigma.SendMessage(m,"openclose",nil)
-    enigma.SendMessage(w,"openclose",nil)
-    ccc(16)
-    ccc(17)
-    ccc(19)
-    ccc(20)
-    ccc(8)
-    ccc(13)
-    ccc(23)
-    funccc()
-end
-
-function funcc19()
-    --   enigma.SendMessage(p,"openclose",nil)
-    enigma.SendMessage(q,"openclose",nil)
-    enigma.SendMessage(r,"openclose",nil)
-    enigma.SendMessage(t,"openclose",nil)
-    --   enigma.SendMessage(d,"openclose",nil)
-    enigma.SendMessage(i,"openclose",nil)
-    enigma.SendMessage(n,"openclose",nil)
-    enigma.SendMessage(x,"openclose",nil)
-    ccc(17)
-    ccc(18)
-    ccc(20)
-    ccc(9)
-    ccc(14)
-    ccc(24)
-    funccc()
-end
-
-function funcc20()
-    if ff1==0 then
-        --   enigma.SendMessage(p,"openclose",nil)
-        --   enigma.SendMessage(q,"openclose",nil)
-        enigma.SendMessage(r,"openclose",nil)
-        enigma.SendMessage(s,"openclose",nil)
-        --   enigma.SendMessage(e,"openclose",nil)
-        enigma.SendMessage(j,"openclose",nil)
-        enigma.SendMessage(o,"openclose",nil)
-        enigma.SendMessage(y,"openclose",nil)
-        ccc(18)
-        ccc(19)
-        ccc(10)
-        ccc(15)
-        ccc(25)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-function funcc21()
-    if ff1==0 then
-        enigma.SendMessage(v,"openclose",nil)
-        enigma.SendMessage(w,"openclose",nil)
-        --   enigma.SendMessage(x,"openclose",nil)
-        --   enigma.SendMessage(y,"openclose",nil)
-        --   enigma.SendMessage(a,"openclose",nil)
-        --   enigma.SendMessage(f,"openclose",nil)
-        enigma.SendMessage(k,"openclose",nil)
-        enigma.SendMessage(p,"openclose",nil)
-        ccc(22)
-        ccc(23)
-        ccc(11)
-        ccc(16)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc22()
-    if ff1==0 then
-        enigma.SendMessage(u,"openclose",nil)
-        enigma.SendMessage(w,"openclose",nil)
-        enigma.SendMessage(x,"openclose",nil)
-        --   enigma.SendMessage(y,"openclose",nil)
-        --   enigma.SendMessage(b,"openclose",nil)
-        --   enigma.SendMessage(g,"openclose",nil)
-        enigma.SendMessage(l,"openclose",nil)
-        enigma.SendMessage(q,"openclose",nil)
-        ccc(21)
-        ccc(23)
-        ccc(24)
-        ccc(12)
-        ccc(17)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc23()
-    if ff1==0 then
-        enigma.SendMessage(u,"openclose",nil)
-        enigma.SendMessage(v,"openclose",nil)
-        enigma.SendMessage(x,"openclose",nil)
-        enigma.SendMessage(y,"openclose",nil)
-        --   enigma.SendMessage(c,"openclose",nil)
-        --   enigma.SendMessage(h,"openclose",nil)
-        enigma.SendMessage(m,"openclose",nil)
-        enigma.SendMessage(r,"openclose",nil)
-        ccc(21)
-        ccc(22)
-        ccc(24)
-        ccc(25)
-        ccc(13)
-        ccc(18)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc24()
-    if ff1==0 then
-        --   enigma.SendMessage(u,"openclose",nil)
-        enigma.SendMessage(v,"openclose",nil)
-        enigma.SendMessage(w,"openclose",nil)
-        enigma.SendMessage(y,"openclose",nil)
-        --   enigma.SendMessage(d,"openclose",nil)
-        --   enigma.SendMessage(i,"openclose",nil)
-        enigma.SendMessage(n,"openclose",nil)
-        enigma.SendMessage(s,"openclose",nil)
-        ccc(22)
-        ccc(23)
-        ccc(25)
-        ccc(14)
-        ccc(19)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function funcc25()
-    if ff1==0 then
-        --   enigma.SendMessage(u,"openclose",nil)
-        --   enigma.SendMessage(v,"openclose",nil)
-        enigma.SendMessage(w,"openclose",nil)
-        enigma.SendMessage(x,"openclose",nil)
-        --   enigma.SendMessage(e,"openclose",nil)
-        --   enigma.SendMessage(j,"openclose",nil)
-        enigma.SendMessage(o,"openclose",nil)
-        enigma.SendMessage(t,"openclose",nil)
-        ccc(23)
-        ccc(24)
-        ccc(15)
-        ccc(20)
-        ff1=1
-    elseif ff1==1 then
-        ff1=0
-    end
-    funccc()
-end
-
-function ccc(lll)
-    if lll==1 then
-        if aa==0 then
-            aa=1
-        else
-            aa=0
-        end
-    elseif lll==2 then
-        if bb==0 then
-            bb=1
-        else
-            bb=0
-        end
-    elseif lll==3 then
-        if cc==0 then
-            cc=1
-        else
-            cc=0
-        end
-    elseif lll==4 then
-        if dd==0 then
-            dd=1
-        else
-            dd=0
-        end
-    elseif lll==5 then
-        if ee==0 then
-            ee=1
-        else
-            ee=0
-        end
-    elseif lll==6 then
-        if ff==0 then
-            ff=1
-        else
-            ff=0
-        end
-    elseif lll==7 then
-        if gg==0 then
-            gg=1
-        else
-            gg=0
-        end
-    elseif lll==8 then
-        if hh==0 then
-            hh=1
-        else
-            hh=0
-        end
-    elseif lll==9 then
-        if ii==0 then
-            ii=1
-        else
-            ii=0
-        end
-    elseif lll==10 then
-        if jj==0 then
-            jj=1
-        else
-            jj=0
-        end
-    elseif lll==11 then
-        if kk==0 then
-            kk=1
-        else
-            kk=0
-        end
-    elseif lll==12 then
-        if ll==0 then
-            ll=1
-        else
-            ll=0
-        end
-    elseif lll==13 then
-        if mm==0 then
-            mm=1
-        else
-            mm=0
-        end
-    elseif lll==14 then
-        if nn==0 then
-            nn=1
-        else
-            nn=0
-        end
-    elseif lll==15 then
-        if oo==0 then
-            oo=1
-        else
-            oo=0
-        end
-    elseif lll==16 then
-        if pp==0 then
-            pp=1
-        else
-            pp=0
-        end
-    elseif lll==17 then
-        if qq==0 then
-            qq=1
-        else
-            qq=0
-        end
-    elseif lll==18 then
-        if rr==0 then
-            rr=1
-        else
-            rr=0
-        end
-    elseif lll==19 then
-        if ss==0 then
-            ss=1
-        else
-            ss=0
-        end
-    elseif lll==20 then
-        if tt==0 then
-            tt=1
-        else
-            tt=0
-        end
-    elseif lll==21 then
-        if uu==0 then
-            uu=1
-        else
-            uu=0
-        end
-    elseif lll==22 then
-        if vv==0 then
-            vv=1
-        else
-            vv=0
-        end
-    elseif lll==23 then
-        if ww==0 then
-            ww=1
-        else
-            ww=0
-        end
-    elseif lll==24 then
-        if xx==0 then
-            xx=1
-        else
-            xx=0
-        end
-    elseif lll==25 then
-        if yy==0 then
-            yy=1
-        else
-            yy=0
-        end
-    end
-end
-
--- A B C D E
---
--- F G H I J
---
--- K L M N O
---
--- P Q R S T
---
--- U V W X Y
-
-ddd=0
-
-function funccc()
-    if aa+bb+cc+dd+ee+ff+gg+hh+ii+jj+kk==0 and ll+mm+nn+oo+pp+qq+rr+ss+tt+uu+vv==0 and ww+xx+yy==0 and ddd==0 then
-        enigma.SendMessage(sb1,"open",nil)
-        ddd=1
-    end
-    if aa+bb+cc+dd+ee+ff+gg+hh+ii+jj+kk==11 and ll+mm+nn+oo+pp+qq+rr+ss+tt+uu+vv==11 and ww+xx+yy==3 and ddd==0 then
-        enigma.SendMessage(sb1,"open",nil)
-        ddd=1
-    end
-    if bb+cc+dd+ff+hh+jj+kk==0 and ll+nn+oo+pp+rr+tt+vv+ww+xx==0 and aa+ee+gg+ii+mm+qq+ss+uu+yy==9 and ddd==1 then
-        enigma.SendMessage(sc1,"open",nil)
-        enigma.SendMessage(sc2,"open",nil)
-        ddd=2
-    end
-    if bb+cc+dd+ff+hh+jj+kk==7 and ll+nn+oo+pp+rr+tt+vv+ww+xx==9 and aa+ee+gg+ii+mm+qq+ss+uu+yy==0 and ddd==1 then
-        enigma.SendMessage(sc1,"open",nil)
-        enigma.SendMessage(sc2,"open",nil)
-        ddd=2
-    end
-end
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_v/duffy127_2.xml (from rev 1564, trunk/data/levels/enigma_v/duffy127_1.xml)
===================================================================
--- trunk/data/levels/enigma_v/duffy127_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_v/duffy127_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,121 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Now What?" el:subtitle="" el:id="duffy127"/>
+      <el:version el:score="1" el:release="2" el:revision="2" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2004 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti["  "] = {"fl_pinkbumps"}
+ti["##"] = {"st_redbrown"}
+ti["||"] = {"st_door", flavor="a", name="firstdoor"}
+ti["--"] = {"st_door", flavor="a", name="finaldoors#"}
+ti["**"] = ti({"st_magic_oxyda"}) .. {"it_cross"}
+ti["trigger"] = {"it_trigger", name="trigger%%", target="trigger_callback"}
+ti["stone"] = {"st_door", flavor="a", state=OPEN, name="stone%%"}
+ti["OO"] = {"st_oxyd", flavor="a"}
+ti["@@"] = {"#ac_marble_black"}
+
+resolver = res.autotile(ti, {"S", "stone"}, {"t", "trigger"})
+
+wo(resolver,  "  ",  {
+    "########################################",
+    "##        ta  tb  tc  td  te      ##OO##",
+    "##      taSA  SB  SC  SD  SEte    ##--##",
+    "##                                ##  ##",
+    "##      tpSF  SG  SH  SI  SJtf    ##  ##",
+    "##                                ##  ##",
+    "##tq  @@toSK  SL  SM  SN  SOtg    ||  **",
+    "##                                ##  ##",
+    "##      tnSP  SQ  SR  SS  STth    ##  ##",
+    "##                                ##  ##",
+    "##      tmSU  SV  SW  SX  SYti    ##--##",
+    "##        tm  tl  tk  tj  ti      ##OO##",
+    "########################################"})
+
+wo:shuffleOxyd()
+
+-- The group with all doors we can act on:
+local doors = no["stone*"]
+local closed = grp({no["stone%G"], no["stone%H"], no["stone%N"], no["stone%R"], no["stone%Q"]}) 
+
+-- The following doors are initially closed:
+closed["state"] = CLOSED
+
+-- Ending condition group:
+local ec = grp({no["stone%A"], no["stone%E"], no["stone%G"], no["stone%I"], no["stone%M"], no["stone%Q"], no["stone%S"], no["stone%U"], no["stone%Y"]})
+
+function trigger_callback(value, sender)
+    if value == false then
+        return
+    end
+    center = doors:nearest(sender)
+    if sender["name"] == "trigger%q" then
+        center = no["stone%M"]
+    end
+
+    local actives = doors * st(neighbours(center))  -- get the doors we want to toggle
+    closed = (closed + actives) - (closed * actives)  -- update closed door group
+    actives:toggle()
+
+    -- check ending condition:
+    check_end1()
+    if no["firstdoor"].state == OPEN then
+        check_end2()
+    end
+end
+
+function check_end1()
+    for obj in doors do
+        if closed[obj] == nil then
+            return
+        end
+    end
+    no["firstdoor"]:open()
+end
+
+function check_end2()
+    for obj in ec do
+        if closed[obj] == nil then
+            return
+        end
+    end
+    for obj in doors - ec do
+        if closed[obj] ~= nil then
+            return
+        end
+    end
+    no["finaldoors#*"]:open()
+end
+
+-- Get all the stones, that are "neighbours" of a given one.
+-- The term "neighbours" is defined by the position offsets below.
+function neighbours(pos)
+    local n = grp({})
+    n = n + fl(pos+po(-2, 0))
+    n = n + fl(pos+po(-4, 0))
+    n = n + fl(pos+po(2, 0))
+    n = n + fl(pos+po(4, 0))
+    n = n + fl(pos+po(0, -2))
+    n = n + fl(pos+po(0, -4))
+    n = n + fl(pos+po(0, 2))
+    n = n + fl(pos+po(0, 4))
+    return n
+end
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_v/duffy39_1.xml
===================================================================
--- trunk/data/levels/enigma_v/duffy39_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/duffy39_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,166 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Turnstile City" el:subtitle="" el:id="duffy39"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2003 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-
-fill_floor("fl-hay", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-greenbrown", i-1, line)
-        elseif c =="X" then
-            set_stone( "st-death", i-1, line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            fill_floor("fl-water", i-1,line, 1,1)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-.5,line+.5)
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c =="A" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge1"})
-        elseif c =="B" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge2"})
-        elseif c =="C" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge3"})
-        elseif c =="D" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge4"})
-        elseif c =="E" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge5"})
-        elseif c =="H" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge6"})
-        elseif c =="K" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge7"})
-        elseif c =="M" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge8"})
-        elseif c =="N" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge9"})
-        elseif c =="P" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge10"})
-        elseif c =="Q" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge11"})
-        elseif c =="R" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge12"})
-        elseif c =="S" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge13"})
-        elseif c =="T" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge14"})
-        elseif c=="=" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-w",i-2,line)
-            set_stone("st-turnstile-e",i,line)
-        elseif c=="i" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-n",i-1,line-1)
-            set_stone("st-turnstile-s",i-1,line+1)
-        elseif c=="l" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-n",i-1,line-1)
-            set_stone("st-turnstile-e",i,line)
-        elseif c=="j" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-n",i-1,line-1)
-            set_stone("st-turnstile-w",i-2,line)
-        elseif c=="f" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-s",i-1,line+1)
-            set_stone("st-turnstile-e",i,line)
-        elseif c=="7" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-s",i-1,line+1)
-            set_stone("st-turnstile-w",i-2,line)
-        elseif c=="a" then
-            set_floor("fl-bridge",i-1,line,{name="bridge1"})
-        elseif c=="b" then
-            set_floor("fl-bridge",i-1,line,{name="bridge2"})
-        elseif c=="c" then
-            set_floor("fl-bridge",i-1,line,{name="bridge3"})
-        elseif c=="d" then
-            set_floor("fl-bridge",i-1,line,{name="bridge4"})
-        elseif c=="e" then
-            set_floor("fl-bridge",i-1,line,{name="bridge5"})
-        elseif c=="h" then
-            set_floor("fl-bridge",i-1,line,{name="bridge6"})
-        elseif c=="k" then
-            set_floor("fl-bridge",i-1,line,{name="bridge7"})
-        elseif c=="m" then
-            set_floor("fl-bridge",i-1,line,{name="bridge8"})
-        elseif c=="n" then
-            set_floor("fl-bridge",i-1,line,{name="bridge9"})
-        elseif c=="p" then
-            set_floor("fl-bridge",i-1,line,{name="bridge10"})
-        elseif c=="q" then
-            set_floor("fl-bridge",i-1,line,{name="bridge11"})
-        elseif c=="r" then
-            set_floor("fl-bridge",i-1,line,{name="bridge12"})
-        elseif c=="s" then
-            set_floor("fl-bridge",i-1,line,{name="bridge13"})
-        elseif c=="t" then
-            set_floor("fl-bridge",i-1,line,{name="bridge14"})
-        elseif c =="O" then
-            set_item("it-extralife", i-1,line)
-        elseif c =="`" then
-            set_item("it-puller-s", i-1, line)
-        end
-    end
-end
-
-function yy1( color, x, y)
-    stone = format( "st-%s4", color)
-    set_stone( stone, x, y)
-end
-
-renderLine(00,"#######o#o#o#o#o#o##")
-renderLine(01,"#edcba             #")
-renderLine(02,"#h#### i i i i i i #")
-renderLine(03,"#k#z               #")
-renderLine(04,"#m#   ` ` ` ` ` `  #")
-renderLine(05,"#n#  j j j j j j j #")
-renderLine(06,"#p#  7A7B7C7D7E7H7K#")
-renderLine(07,"#q#                o")
-renderLine(08,"#r#                #")
-renderLine(09,"#s#  l l l l l l l o")
-renderLine(10,"#t# MfNfPfQfRfSfTf #")
-renderLine(11,"o o                o")
-renderLine(12,"#o##o#############o#")
-
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_v/duffy39_2.xml (from rev 1564, trunk/data/levels/enigma_v/duffy39_1.xml)
===================================================================
--- trunk/data/levels/enigma_v/duffy39_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_v/duffy39_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Turnstile City" el:subtitle="" el:id="duffy39"/>
+      <el:version el:score="1" el:release="2" el:revision="2" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2003 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti["  "] = {"fl_hay"}
+ti["##"] = {"st_greenbrown"}
+ti["++"] = {"st_turnstile"}
+ti["^^"] = {"st_turnstilearm", orientation=NORTH}
+ti[">>"] = {"st_turnstilearm", orientation=EAST}
+ti["vv"] = {"st_turnstilearm", orientation=SOUTH}
+ti["<<"] = {"st_turnstilearm", orientation=WEST}
+ti["t"] = {"it_trigger", target="bridge%%"}
+ti["T"] = ti["<<"] .. {"it_trigger", target="bridge%%"}
+ti["U"] = ti[">>"] .. {"it_trigger", target="bridge%%"}
+ti["B"] = {"fl_bridge", flavor="gc", state=OPEN, name="bridge%%"}
+ti[".."] = {"it_puller_s"}
+ti["OO"] = {"st_oxyd"}
+ti["@@"] = {"#ac_marble_black"}
+
+wo(res.autotile(ti, {"t", "t"}, {"T", "T"}, {"U", "U"}, {"B", "B"}), "  ", {
+    "##############OO##OO##OO##OO##OO##OO####",
+    "##BeBdBcBbBa  ^^  ^^  ^^  ^^  ^^  ^^  ##",
+    "##Bf########  ++  ++  ++  ++  ++  ++  ##",
+    "##Bg##@@      vv  vv  vv  vv  vv  vv  ##",
+    "##Bh##    ^^..^^..^^..^^..^^..^^..^^  ##",
+    "##Bi##  <<++<<++<<++<<++<<++<<++<<++  ##",
+    "##Bj##  <<++Ta++Tb++Tc++Td++Te++Tf++tg##",
+    "##Bk##    vv  vv  vv  vv  vv  vv  vv  OO",
+    "##Bl##    ^^  ^^  ^^  ^^  ^^  ^^  ^^  ##",
+    "##Bm##    ++>>++>>++>>++>>++>>++>>++>>OO",
+    "##Bn##  th++Ui++Uj++Uk++Ul++Um++Un++>>##",
+    "OO  OO    vv  vv  vv  vv  vv  vv  vv  OO",
+    "##OO####OO##########################OO##"})
+
+wo:shuffleOxyd()
+
+function postinit()
+    (no["bridge*"] - no["bridge%g"] - no["bridge%h"]):close()
+end
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_v/duffy53_1.xml
===================================================================
--- trunk/data/levels/enigma_v/duffy53_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/duffy53_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,188 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Turnstile Maze" el:subtitle="" el:id="duffy53"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 203 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92" el:engine="oxyd1">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=2
-rooms_high=1
-
-levelw=1+(19*rooms_wide) +1
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-
-fill_floor("fl-rough", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-greenbrown", i-1, line)
-        elseif c =="X" then
-            set_stone( "st-death", i-1, line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            fill_floor("fl-water", i-1,line, 1,1)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-.5,line+.5)
-        elseif c=="=" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-w",i-2,line)
-            set_stone("st-turnstile-e",i,line)
-        elseif c=="i" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-n",i-1,line-1)
-            set_stone("st-turnstile-s",i-1,line+1)
-        elseif c=="x" then
-            set_stone("st-turnstile",i-1,line)
-            set_stone("st-turnstile-n",i-1,line-1)
-            set_stone("st-turnstile-e",i,line)
-            set_stone("st-turnstile-s",i-1,line+1)
-            set_stone("st-turnstile-w",i-2,line)
-        elseif c =="A" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge1"})
-        elseif c =="B" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge2"})
-        elseif c =="C" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge3"})
-        elseif c =="D" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge4"})
-        elseif c =="E" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge5"})
-        elseif c =="F" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge6"})
-        elseif c =="G" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge7"})
-        elseif c =="H" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge8"})
-        elseif c =="I" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge9"})
-        elseif c =="J" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge10"})
-        elseif c =="K" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge11"})
-        elseif c =="L" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge12"})
-        elseif c =="M" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge13"})
-        elseif c =="N" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge14"})
-        elseif c =="O" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge15"})
-        elseif c =="P" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge16"})
-        elseif c =="Q" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge17"})
-        elseif c =="R" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge18"})
-        elseif c =="S" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge19"})
-        elseif c =="T" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge20"})
-        elseif c =="U" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge21"})
-        elseif c =="V" then
-            set_item("it-trigger", i-1,line, {action="openclose", target="bridge22"})
-        elseif c=="a" then
-            set_floor("fl-bridge",i-1,line,{name="bridge1"})
-        elseif c=="b" then
-            set_floor("fl-bridge",i-1,line,{name="bridge2"})
-        elseif c=="c" then
-            set_floor("fl-bridge",i-1,line,{name="bridge3"})
-        elseif c=="d" then
-            set_floor("fl-bridge",i-1,line,{name="bridge4"})
-        elseif c=="e" then
-            set_floor("fl-bridge",i-1,line,{name="bridge5"})
-        elseif c=="f" then
-            set_floor("fl-bridge",i-1,line,{name="bridge6"})
-        elseif c=="g" then
-            set_floor("fl-bridge",i-1,line,{name="bridge7"})
-        elseif c=="h" then
-            set_floor("fl-bridge",i-1,line,{name="bridge8"})
-        elseif c==";" then
-            set_floor("fl-bridge",i-1,line,{name="bridge9"})
-        elseif c=="j" then
-            set_floor("fl-bridge",i-1,line,{name="bridge10"})
-        elseif c=="k" then
-            set_floor("fl-bridge",i-1,line,{name="bridge11"})
-        elseif c=="l" then
-            set_floor("fl-bridge",i-1,line,{name="bridge12"})
-        elseif c=="m" then
-            set_floor("fl-bridge",i-1,line,{name="bridge13"})
-        elseif c=="n" then
-            set_floor("fl-bridge",i-1,line,{name="bridge14"})
-        elseif c==":" then
-            set_floor("fl-bridge",i-1,line,{name="bridge15"})
-        elseif c=="p" then
-            set_floor("fl-bridge",i-1,line,{name="bridge16"})
-        elseif c=="q" then
-            set_floor("fl-bridge",i-1,line,{name="bridge17"})
-        elseif c=="r" then
-            set_floor("fl-bridge",i-1,line,{name="bridge18"})
-        elseif c=="s" then
-            set_floor("fl-bridge",i-1,line,{name="bridge19"})
-        elseif c=="t" then
-            set_floor("fl-bridge",i-1,line,{name="bridge20"})
-        elseif c=="u" then
-            set_floor("fl-bridge",i-1,line,{name="bridge21"})
-        elseif c=="v" then
-            set_floor("fl-bridge",i-1,line,{name="bridge22"})
-        elseif c == "%" then
-            set_stone("st-door_b", i-1,line, {name="door1"})
-        end
-    end
-end
-
-function yy1( color, x, y)
-    stone = format( "st-%s4", color)
-    set_stone( stone, x, y)
-end
-
-renderLine(00,"###############################!!!!!!!!")
-renderLine(01,"# z%abcdefgh;jklmn:pqrstuv    #!!!!!!!!")
-renderLine(02,"# ##########################  #!!!!!!!!")
-renderLine(03,"# A  B  C  D  E  F #!!!!!!!#  #!!!!!!!!")
-renderLine(04,"# =  i  =  i  =  i #!!!!!#o#  #o#!!!!!!")
-renderLine(05,"#  G  H  I  J  K   #!!!!!o      o!!!!!!")
-renderLine(06,"#  =  i  =  i  =   #!!!!!# x  x #!!!!!!")
-renderLine(07,"#   L  M  N  O  P  #!!!!!o      o!!!!!!")
-renderLine(08,"#   =  i  =  i  =  #!!!!!o      o!!!!!!")
-renderLine(09,"# Q  R  S  T  U  V #!!!!!# x  x #!!!!!!")
-renderLine(10,"# i  =  i  =  i  = #!!!!!o      o!!!!!!")
-renderLine(11,"#                  #!!!!!#o#oo#o#!!!!!!")
-renderLine(12,"####################!!!!!!!!!!!!!!!!!!!")
-
-oxyd_shuffle()
-
-function timer_handler()
-    SendMessage("door1","open")
-end
-
-set_stone( "st-timer", 39, 12, {action="callback",target="timer_handler",interval=1})
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_v/duffy53_2.xml (from rev 1564, trunk/data/levels/enigma_v/duffy53_1.xml)
===================================================================
--- trunk/data/levels/enigma_v/duffy53_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_v/duffy53_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Turnstile Maze" el:subtitle="" el:id="duffy53"/>
+      <el:version el:score="1" el:release="2" el:revision="3" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 203 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by R. Bourquin</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti["  "] = {"fl_rough"}
+ti[".."] = {"fl_abyss"}
+ti["##"] = {"st_greenbrown"}
+ti["||"] = {"st_door", flavor="b", name="door"}
+ti["++"] = {"st_turnstile"}
+ti["^^"] = {"st_turnstilearm", orientation=NORTH}
+ti[">>"] = {"st_turnstilearm", orientation=EAST}
+ti["vv"] = {"st_turnstilearm", orientation=SOUTH}
+ti["<<"] = {"st_turnstilearm", orientation=WEST}
+ti["t"] = {"it_trigger", target="bridge%%"}
+ti["T"] = ti["^^"] .. {"it_trigger", target="bridge%%"}
+ti["b"] = {"fl_bridge", flavor="gc", name="bridge%%"}
+ti["OO"] = {"st_oxyd"}
+ti["@@"] = {"#ac_marble_black"}
+
+wo(res.autotile(ti, {"t", "t"}, {"T", "T"}, {"b", "b"}), "  ", {
+    "##############################################################................",
+    "##  @@||bAbBbCbDbEbFbGbHbIbJbKbLbMbNbObPbQbRbSbTbUbV        ##................",
+    "##  ####################################################    ##................",
+    "##  tA    TB    tC    TD    tE    TF  ##..............##    ##................",
+    "##<<++>>  ++  <<++>>  ++  <<++>>  ++  ##..........##OO##    ##OO##............",
+    "##    tG  vvTH    tI  vvTJ    tK  vv  ##..........OO  ^^    ^^  OO............",
+    "##  <<++>>  ++  <<++>>  ++  <<++>>    ##..........##<<++>><<++>>##............",
+    "##      tL  vvTM    tN  vvTO    tP    ##..........OO  vv    vv  OO............",
+    "##    <<++>>  ++  <<++>>  ++  <<++>>  ##..........OO  ^^    ^^  OO............",
+    "##  TQ    tR  vvTS    tT  vvTU    tV  ##..........##<<++>><<++>>##............",
+    "##  ++  <<++>>  ++  <<++>>  ++  <<++>>##..........OO  vv    vv  OO............",
+    "##  vv          vv          vv        ##..........##OO##OOOO##OO##............",
+    "########################################......................................"})
+
+wo:shuffleOxyd()
+
+function postinit()
+    no["door"]:open()
+end
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Modified: trunk/data/levels/enigma_v/index.xml
===================================================================
--- trunk/data/levels/enigma_v/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10600" network="false" owner="Enigma Team" release="1" revision="31" title="Enigma V"/>
+  <info enigma="1.00" group="Enigma" location="10600" network="false" owner="Enigma Team" release="1" revision="32" title="Enigma V"/>
 
   <attributes/>
 
@@ -31,7 +31,7 @@
     <level _seq="23" _title="Print 23" _xpath="./richi07_1" author="Richi B?tzer" ctrl="force" easy="false" id="richi07" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="24" _title="Space Pirates" _xpath="./siegfried19_2" author="Siegfried Fennig" ctrl="force" easy="false" id="level6a" rel="2" rev="0" score="2" target="time" unit="duration"/>
     <level _seq="25" _title="Laser Crossing" _xpath="./luc24_1" author="Lukas Sch?ller" ctrl="force" easy="true" id="luc24" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="26" _title="The Cage" _xpath="./qq02_1" author="Andrzej Szombierski" ctrl="force" easy="false" id="qq2" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="26" _title="The Cage" _xpath="./qq02_2" author="Andrzej Szombierski" ctrl="force" easy="false" id="qq2" rel="2" rev="3" score="2" target="time" unit="duration"/>
     <level _seq="27" _title="Listen Carefully" _xpath="./duffy81_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy81" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="28" _title="Take Turns" _xpath="./duffy50_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy50" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="29" _title="The Carousel" _xpath="./luc30_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc30" rel="1" rev="3" score="1" target="time" unit="duration"/>
@@ -46,12 +46,12 @@
     <level _seq="38" _title="Reach the Dock" _xpath="./duffy119_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy119" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="39" _title="Mount Etna" _xpath="./duffy61_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy61" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="40" _title="- Meditation -" _xpath="./raoul02_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul02" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="41" _title="Clear the Path" _xpath="./duffy110_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy110" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="41" _title="Clear the Path" _xpath="./duffy110_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy110" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="42" _title="Choo-Choo" _xpath="./duffy22_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy22" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="43" _title="Humid Maze" _xpath="./duffy133_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy133" rel="2" rev="3" score="2" target="time" unit="duration"/>
-    <level _seq="44" _title="Turnstile City" _xpath="./duffy39_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy39" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="44" _title="Turnstile City" _xpath="./duffy39_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy39" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="45" _title="Psycho Pushing" _xpath="./ss03_3" author="Sven Siggelkow" ctrl="force" easy="true" id="ss3" rel="3" rev="18" score="2" target="time" unit="duration"/>
-    <level _seq="46" _title="Turnstile Maze" _xpath="./duffy53_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy53" rel="1" rev="2" score="1" target="time" unit="duration"/>
+    <level _seq="46" _title="Turnstile Maze" _xpath="./duffy53_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy53" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="47" _title="Swamp Stomp" _xpath="./ralf11_2" author="Ralf Westram" ctrl="force" easy="true" id="ralf11" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="48" _title="Crossfire" _xpath="./duffy56_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy56" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="49" _title="Swamp of Balls" _xpath="./luc08_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc08" rel="1" rev="0" score="1" target="time" unit="duration"/>
@@ -63,7 +63,7 @@
     <level _seq="55" _title="Blet" _xpath="./alain24_1" author="Alain Busser" ctrl="force" easy="true" id="alain24" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="56" _title="Banana Republic" _xpath="./alain26_2" author="Alain Busser" ctrl="force" easy="true" id="alain26" rel="2" rev="2" score="2" target="time" unit="duration"/>
     <level _seq="57" _title="Too Heavy?" _xpath="./martin101_1" author="Martin Hawlisch" ctrl="force" easy="true" id="martin101" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="58" _title="Now What?" _xpath="./duffy127_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy127" rel="1" rev="1" score="1" target="time" unit="duration"/>
+    <level _seq="58" _title="Now What?" _xpath="./duffy127_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy127" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="59" _title="Pneumatic Delivery" _xpath="./malla01_3" author="Manuel K?nig" ctrl="force" easy="true" id="malla01" rel="3" rev="4" score="2" target="time" unit="duration"/>
     <level _seq="60" _title="Jumpin' Jack Flash" _xpath="./ss10_1" author="Sven Siggelkow" ctrl="force" easy="true" id="ss10" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="Venice I" _xpath="./raoul16_2" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul16" rel="2" rev="3" score="1" target="time" unit="duration"/>

Deleted: trunk/data/levels/enigma_v/qq02_1.xml
===================================================================
--- trunk/data/levels/enigma_v/qq02_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_v/qq02_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,203 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="The Cage" el:subtitle="" el:id="qq2"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
-      <el:author  el:name="Andrzej Szombierski" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? Andrzej Szombierski</el:copyright>
-      <el:license el:type="see Lua code below" el:open="true"/>
-      <el:compatibility el:enigma="0.92">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
--- 2003-06-28 -- [ant]: fixes due to changes in enigma:
---   + unnecessary Dynamite remove
---   + changed pathway 'cdefghiJ'
---   + changed hammer/stone_break puzzle, as laser destroys stone_break
-
---        a   b   c   d   e   f   g   h   i   j   k
-targets={"b","b","b","b","b","b","h","b","b","h","v"}
-
-floors={}
-stones={}
-items={}
-
-floors[" "]={"water"}
-floors["%"]={"wood"}
-
-stones["#"]={"rock1"}
-stones["&"]={"grate1"}
-stones["@"]={"wood"}
-
-floors["!"]={"wood"}
-stones["!"]={"bolder", {direction=SOUTH}}
-
-floors["'"]={"wood"}
-stones["'"]={"puzzle",{connections=PUZ_1000}}
-
-floors[","]={"wood"}
-stones[","]={"puzzle",{connections=PUZ_0010}}
-
-stones["v"]={"oneway",{orientation=SOUTH}}
-
-stones[">"]={"laser", {direction=EAST, on=1, name="laser"}}
-stones[")"]={"switch", {target="laser", action="onoff", on=1}}
-stones["="]={"pmirror", {movable=1, transparent=0, orientation=2}}
-
-stones["~"]={"glass"}
-stones["-"]={"oxyd"}
-
-stones["1"]={"stoneimpulse",{name="impulse1"}}
-stones["2"]={"stoneimpulse",{name="impulse2"}}
-stones["3"]={"stoneimpulse",{name="impulse3"}}
-
-stones[";"]={"stoneimpulse"}
-stones["}"]={"bombs"}
-
-items["s"]={"seed"}
-items["("]={"spring1"}
-
-    for tgt, kind in pairs(targets) do
-    local C=format("%c", tgt+64)
-    local c=format("%c", tgt+96)
-    
-        if tgt <= 2 then
-        items[C]={"trigger", { action="callback", target="tr"..tgt }}
-        else
-        items[C]={"trigger", { action="openclose", target="tgt"..tgt}}
-        end
-    
-        if kind == "b" then
-        floors[c]={"bridge", { name="tgt"..tgt, type="a"}}
-        else
-        stones[c]={"door", {type=kind, name="tgt"..tgt}}
-        end
-    end
-
-stones["|"]={"timer", {target="pulse", action="callback", interval=3}}
-items["+"]={"blackbomb"}
---items["k"]={"blackbomb"}
-
-stones["?"]={"stone_break"}
-items["/"]={"hammer"}
-
-level = {
-"###########         ",
-"#.........#!        ",
-"#.........#,        ",
-"#........A %%%      ",
-"#.....*...a%%%      ",
-"#.........b%%%      ",
-"####.....B %%%%%%   ",
-"#..########%'%%%%%  ",
-"1........2#%%G   c  ",
-"#@.#v###@####g#  d  ",
-"#..;@........@#  e  ",
-"#..#@@........3  fh ",
-"|..#;##########   i ",    -- screen boundary
-"#.CDE#..&....}#   J ",
-"#.FHI#K@@.....####j#",
-"########...........#",
-"#..)#/.#.###########",
-"#..>(?.k.~&=......&#",
-"#....?####.........#",
-"#..................#",
-"###########........#",
-"          #........#",
-"          #~~~~~~~##",
-"          #-~-~-~-# ",
-"          ##-###-## ",
-}
-
--- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
-
-function pulse()
-    SendMessage("impulse1", "trigger")
-    SendMessage("impulse2", "trigger")
-    SendMessage("impulse3", "trigger")
-end
-
-p1=0
-p2=0
-
-function check_buttons()
-    if p1 > 0 and p2 > 0 then
-    SendMessage("tgt1", "close")
-    SendMessage("tgt2", "close")
-    else
-    SendMessage("tgt1", "open")
-    SendMessage("tgt2", "open")
-    end
-end
-
-function tr1(q)    p1=q    check_buttons()    end
-function tr2(q)    p2=q    check_buttons()    end
-
--- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
-
-function puzzle_box(x, y, w, h)
-draw_stones("st-puzzle", {x, y}, {1, 0}, w, { connections=PUZ_0101} )
-draw_stones("st-puzzle", {x, y+h}, {1, 0}, w, { connections=PUZ_0101} )
-
-draw_stones("st-puzzle", {x, y}, {0, 1}, h, { connections=PUZ_1010} )
-draw_stones("st-puzzle", {x+w, y}, {0, 1}, h, { connections=PUZ_1010} )
-
-puzzle(x, y, PUZ_0110)        -- TL
-puzzle(x+w, y, PUZ_0011)    -- TR
-puzzle(x, y+h, PUZ_1100)    -- BL
-puzzle(x+w, y+h, PUZ_1001)    -- BR
-end
-
--- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
-
-create_world( strlen(level[1]), getn(level) )
-enigma.ConserveLevel=FALSE
-fill_floor("fl-leaves")
-    
-for y,line in pairs(level) do
-    y=y-1
-    for x = 0, level_width-1 do
-        local cell = strchar(strbyte(line,x+1))
-        
-        if floors[cell] then
-            set_floor("fl-"..floors[cell][1], x, y, floors[cell][2])
-        end
-        
-        if stones[cell]=="oxyd" then
-            oxyd(x, y)
-        elseif stones[cell] then
-            set_stone("st-"..stones[cell][1], x, y, stones[cell][2])
-        end
-
-        if items[cell] then
-            set_item("it-"..items[cell][1], x, y, items[cell][2])
-        end
-        
-        if cell == "*" then
-            set_actor("ac-blackball", x+0.5, y+0.5)
-        end
-    end
-    y=y+1
-end
-
--- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
-
-puzzle_box(1, 1, 3, 3 )
-puzzle(3, 1, PUZ_0000)    -- holes
-puzzle(3, 4, PUZ_0000)
-
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_v/qq02_2.xml (from rev 1564, trunk/data/levels/enigma_v/qq02_1.xml)
===================================================================
--- trunk/data/levels/enigma_v/qq02_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_v/qq02_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="The Cage" el:subtitle="" el:id="qq2"/>
+      <el:version el:score="2" el:release="2" el:revision="3" el:status="released"/>
+      <el:author  el:name="Andrzej Szombierski" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? Andrzej Szombierski</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libpuzzle" el:id="lib/libpuzzle" el:release="3" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments><el:code>New API converted by /dev/null</el:code></el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+wo["ProvideExtralifes"] = false
+
+ti["##"] = {"st_granite"}
+ti["  "] = {"fl_lawn"}
+ti["~~"] = {"fl_water"}
+ti[".."] = {"fl_abyss"}
+ti["::"] = {"fl_wood"}
+ti["BS"] = ti["::"] .. {"st_boulder_s"}
+ti["vv"] = {"st_oneway", orientation = SOUTH}
+ti["gg"] = {"st_grate_cross"}
+ti["ww"] = {"st_box"}
+ti["XX"] = {"st_rawglass"}
+ti["xx"] = {"st_break_oxydc"}
+ti["II"] = {"st_stoneimpulse", "stoneImpulse#"}
+ti["ii"] = {"st_stoneimpulse"}
+ti["P"] = {"st_puzzle_blue", intensity = 0}
+ti["p"] = ti["::"] .. {"st_puzzle_blue", intensity = 0}
+ti["TT"] = {"st_timer", "timer", target="stoneImpulse#*", action = "signal", interval = 1.5, state = ON}
+ti["aa"] = {"st_door", "doors#", faces = "ns"}
+ti["bb"] = {"st_door", "doors#", faces = "ew"}
+ti["AA"] = {"it_trigger", target = "@doors#*"}
+ti["zz"] = {"fl_bridge_gc", "plank#"}
+ti["ZZ"] = {"it_trigger", target = "planks", action = "signal"}
+ti["bridge"] = {"fl_bridge_gc", name = "bridge%%"}
+ti["trigger4bridge"] = {"it_trigger", target = "bridge%%"}
+ti["LL"] = {"st_laser", "laser", state = ON, orientation = EAST}
+ti["SS"] = {"st_switch", target = "laser"}
+ti["MM"] = {"st_mirror_slab", movable = true, transparent = false, orientation = WEST}
+ti["=="] = {"st_dispenser_bombblack"}
+ti["hh"] = {"it_hammer"}
+ti["ss"] = {"it_spring"}
+ti["oo"] = {"st_oxyd", "left#"}
+ti["OO"] = {"st_oxyd", "right#"}
+ti["@@"] = {"#ac_marble_black"}
+
+local resolver = res.autotile(res.puzzle(ti, "P", "p"), {"d", "bridge"}, {"D", "trigger4bridge"})
+
+wo(resolver, "  ", {
+    "######################~~~~~~~~~~~~~~~~~~",
+    "##PfPePOPc          ##BS~~~~~~~~~~~~~~~~",
+    "##Pj    Pj          ##pb~~~~~~~~~~~~~~~~",
+    "##Pj    Pj        ZZ~~::::::~~~~~~~~~~~~",
+    "##PlPePOPi  @@      zz::::::~~~~~~~~~~~~",
+    "##                  zz::::::~~~~~~~~~~~~",
+    "########          ZZ~~::::::::::::~~~~~~",
+    "##    ################::ph::::::::::~~~~",
+    "II                II##::::AA~~~~~~d1~~~~",
+    "##ww  ##vv######ww########aa##~~~~d2~~~~",
+    "##    iiww                ww##~~~~d3~~~~",
+    "##    ##wwww                II~~~~d4d5~~",
+    "TT    ##ii####################~~~~~~d6~~",
+    "##  D1D2D3##    gg        ==##~~~~~~AA~~",
+    "##  D4D5D6##AAwwww          ########aa##",
+    "################                      ##",
+    "##    SS##hh  ##  ######################",
+    "##    LLssxx  bb  XXggMM            gg##",
+    "##        xx########                  ##",
+    "##                                    ##",
+    "######################                ##",
+    "~~~~~~~~~~~~~~~~~~~~##                ##",
+    "~~~~~~~~~~~~~~~~~~~~##XXXXXXXXXXXXXX####",
+    "~~~~~~~~~~~~~~~~~~~~##ooXXooXXOOXXOO##~~",
+    "~~~~~~~~~~~~~~~~~~~~####oo######OO####~~"})
+
+wo:shuffleOxyd({"left#*", max = 0}, {"right#*", max = 0})
+wo:add({"ot_counter", "planks", state = 0, target = "plank#*", action_2 = "close", action_1 = "open"})
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Deleted: trunk/data/levels/enigma_vi/duffy142_1.xml
===================================================================
--- trunk/data/levels/enigma_vi/duffy142_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_vi/duffy142_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,101 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Construction Workers" el:subtitle="" el:id="duffy142"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="0.92" el:engine="oxyd1">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="true"/>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-enigma.ConserveLevel = 0
-enigma.TwoPlayerGame = 1
-
-oxyd_default_flavor="a"
-
-fill_floor("fl-metal", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-rock2", i-1, line)
-        elseif c =="b" then
-            set_stone( "st-black4", i-1, line)
-        elseif c =="w" then
-            set_stone( "st-white4", i-1, line)
-        elseif c =="Y" then
-            set_stone( "st-yinyang1", i-1, line)
-        elseif c =="R" then
-            set_stone( "st-rotator-right", i-1, line)
-        elseif c =="L" then
-            set_stone( "st-rotator-left", i-1, line)
-        elseif c =="u" then
-            set_stone("st-bolder", i-1,line, {direction=NORTH})
-        elseif c =="d" then
-            set_stone("st-bolder", i-1,line, {direction=SOUTH})
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            set_floor("fl-water",i-1,line)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-.5,line+.5, {player=0, essential=1})
-        elseif c=="y" then
-            set_actor("ac-whiteball", i-.5,line+.5, {player=1, essential=1})
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c=="=" then
-            set_floor("fl-space",i-1,line)
-        elseif c=="l" then
-            puzzle(i-1,line,PUZ_0100)
-        elseif c=="m" then
-            puzzle(i-1,line,PUZ_0101)
-        elseif c=="r" then
-            puzzle(i-1,line,PUZ_0001)
-        elseif c=="W" then
-            set_item("it-wrench",i-1,line)
-        end
-    end
-end
-
-renderLine(00,"####################")
-renderLine(01,"#obuR  w     w   bo#")
-renderLine(02,"#R     #######W   b#")
-renderLine(03,"L   R  #     ####  #")
-renderLine(04,"#Y R   # lr +   #  #")
-renderLine(05,"#~##www# lr lr  #  #")
-renderLine(06,"# z+b  #lmmr#  w+y #")
-renderLine(07,"#  #  lr lr #bbb##~#")
-renderLine(08,"#  #   + lr #   R Y#")
-renderLine(09,"#  ####     #  R   L")
-renderLine(10,"#w   W#######     R#")
-renderLine(11,"#ow   b     b  Rdwo#")
-renderLine(12,"####################")
-
-oxyd_shuffle()
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_vi/duffy142_2.xml (from rev 1564, trunk/data/levels/enigma_vi/duffy142_1.xml)
===================================================================
--- trunk/data/levels/enigma_vi/duffy142_1.xml	2009-03-01 13:27:29 UTC (rev 1564)
+++ trunk/data/levels/enigma_vi/duffy142_2.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Construction Workers" el:subtitle="" el:id="duffy142"/>
+      <el:version el:score="1" el:release="2" el:revision="4" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2007 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="true"/>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = false
+
+ti[" "] = {"fl_metal"}
+ti["~"] = {"fl_water"}
+ti["#"] = {"st_darkgray"}
+ti["+"] = {"st_box"}
+ti["P"] = {"st_puzzle", cluster=1}
+ti["Q"] = {"st_puzzle", cluster=2}
+ti["B"] = {"st_passage", flavor="frame", color=BLACK}
+ti["W"] = {"st_passage", flavor="frame", color=WHITE}
+ti["*"] = {"st_blur_cross"}
+ti["R"] = {"st_rotator_cw"}
+ti["L"] = {"st_rotator_ccw"}
+ti["^"] = {"st_boulder", orientation=NORTH}
+ti["V"] = {"st_boulder", orientation=SOUTH}
+ti["-"] = {"it_wrench"}
+ti["O"] = {"st_oxyd"}
+ti["1"] = {"#ac_marble_black"}
+ti["2"] = {"#ac_marble_white"}
+
+wo(ti, " ", {
+    "####################",
+    "#OB^R  W     W   BO#",
+    "#R     #######-   B#",
+    "L   R  #     ####  #",
+    "#* R   # PP +   #  #",
+    "#~##WWW# QQ PP  #  #",
+    "# 1+B  #PPPP#  W+2 #",
+    "#  #  PP QQ #BBB##~#",
+    "#  #   + PP #   R *#",
+    "#  ####     #  R   L",
+    "#W   -#######     R#",
+    "#OW   B     B  RVWO#",
+    "####################"})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Modified: trunk/data/levels/enigma_vi/index.xml
===================================================================
--- trunk/data/levels/enigma_vi/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_vi/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10700" network="false" owner="Enigma Team" release="1" revision="38" title="Enigma VI"/>
+  <info enigma="1.00" group="Enigma" location="10700" network="false" owner="Enigma Team" release="1" revision="39" title="Enigma VI"/>
 
   <attributes/>
 
@@ -101,7 +101,7 @@
     <level _seq="93" _title="Parish Fair" _xpath="./duffy143_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy143" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="94" _title="In the Middle" _xpath="./duffy141_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy141" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="95" _title="Pleasure Garden" _xpath="./duffy134_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy134" rel="1" rev="5" score="1" target="time" unit="duration"/>
-    <level _seq="96" _title="Construction Workers" _xpath="./duffy142_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy142" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="96" _title="Construction Workers" _xpath="./duffy142_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy142" rel="2" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="97" _title="City Life" _xpath="./joona03_1" author="Joona Laire" ctrl="force" easy="true" id="20061119joona503" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="98" _title="Industrial Puzzles" _xpath="./raoul30_2" author="Raoul Bourquin" ctrl="force" easy="false" id="raoul30" rel="2" rev="7" score="2" target="time" unit="duration"/>
     <level _seq="99" _title="Polar Bears' Paradise" _xpath="./ral19_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070314ral394" rel="1" rev="68" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_viii/devnull08_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/devnull08_1.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_viii/devnull08_1.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Relaxing at the sea" el:subtitle="" el:id="devnull08"/>
-      <el:version el:score="1" el:release="1" el:revision="20" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="22" el:status="released"/>
       <el:author  el:name="/dev/null" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 dev0</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -28,12 +28,10 @@
 ti[". "] = {"st_disco_light"}
 ti[": "] = {"st_disco_medium"}
 ti["p "] = {"st_box_rock"}
-ti["R "] = {"st_darkgray"}
 ti["w "] = {"st_box_wood"}
+ti["R "] = {"st_darkgray"}
 ti["% "] = {"it_document", text = "text1"}
-ti["5 "] = {"it_meditation_hollow", essential = DISPENSIBLE}
-ti["6 "] = {"it_meditation_hollow", essential = INDISPENSIBLE}
-ti["7 "] = {"it_meditation_hollow", essential = INDESPENSIBLE}
+ti["7 "] = {"it_meditation_hollow", essential = DISPENSIBLE}
 ti["8 "] = {"it_meditation_hollow", essential = INDISPENSIBLE} .. ti["p "]
 ti["9 "] = {"it_meditation_hollow", essential = INDISPENSIBLE}
 if wo["IsDifficult"] then
@@ -43,41 +41,35 @@
     ti["P "] = ti[" r"]
     ti["W "] = ti["p "]
 end
-ti["1 "] = {"#ac_pearl_white", essential=INDISBENSIBLE}
-ti["2 "] = {"#ac_pearl_white", essential=INDISPENSIBLE}
-ti["3 "] = {"#ac_pearl_white", essential=INDISPENSIBLE} .. ti["p "]
-ti["4 "] = {"#ac_pearl_white", essential=INDISPENSIBLE} .. ti["p "]
+ti["1 "] = {"#ac_pearl_white", essential = INDISPENSIBLE}
+ti["2 "] = {"#ac_pearl_white", essential = INDISPENSIBLE} .. ti["p "]
 
-local resolver = res.composer(ti)
-
-wo(resolver, "  ",
--- 0                  10                  20
--- 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
-{ "            . . . . : : : : : : : . . . . : ", --  0
-  "                  . . . : . . . . . R . : : ", --  1
-  "   l l l l            . . .        vRv. . . ", --  2
-  "   l1lwlwl   l l l l           r rRrRv v. . ", --  3
-  "   lwl l5l     lwlwl s        wh r  RvR . . ", --  4
-  "                   l lws          R       . ", --  5
-  "                   l l s         h h r r  . ", --  6
-  "     r        .                hwhwlwl l    ", --  7
-  "    pr  R       . . . . .      h l l l l    ", --  8
-  "     rpr r r r  . R : .                     ", --  9
-  "     r r rpr r  . : R R .     wh h          ", -- 10
-  "        R         . R 6V v       rR         ", -- 11
-  "     r  R  r      . . R        r rR  r r    ", -- 12
-  "     r  R pr        .                r c    ", -- 13
-  ".     R R  r  pr r.      r    . .   prwc c  ", -- 14
-  ".         pr rpr rR     Pr rpr  pr    wc    ", -- 15
-  ". .  r  R  r rPr rR      r. . pr    wc      ", -- 16
-  ". . WrR R R         R    r. .  r            ", -- 17
-  ". .    v7vR      r  R      rpr r     cwc h  ", -- 18
-  ".  r rR  vR R .  r rR R   R   .     wcwc h  ", -- 19
-  ". prpr2v8VR R R Pr r4r r  R           wh h  ", -- 20
-  ".    rR   R   3r rpr rR 9VR . .       wh    ", -- 21
-  ". . . . R %vR R  r r rR R : . . .           ", -- 22
-  ". . . . : : : . .     . . : : : . .         ", -- 23
-  ". . : : : : : : . . . . : : : : : . . .     "  -- 24
+wo(res.composer(ti), "  ",
+{ "            . . . . : : : : : : : . . . . : ",
+  "                  . . . : . . . . . R . : : ",
+  "   l l l l            . . .        vRv. . . ",
+  "   l1lwlwl   l l l l           r rRrRv v. . ",
+  "   lwl l7l     lwlwl s        wh r  RvR . . ",
+  "                   l lws          R       . ",
+  "                   l l s         h h r r  . ",
+  "     r        .                hwhwlwl l    ",
+  "    pr  R       . . . . .      h l l l l    ",
+  "     rpr r r r  . R : .                     ",
+  "     r r rpr r  . : R R .     wh h          ",
+  "        R         . R 9V v       rR         ",
+  "     r  R  r      . . R        r rR  r r    ",
+  "     r  R pr        .                r c    ",
+  ".     R R  r  pr r.      r    . .   prwc c  ",
+  ".         pr rpr rR     Pr rpr  pr    wc    ",
+  ". .  r  R  r rPr rR      r. . pr    wc      ",
+  ". . WrR R R         R    r. .  r            ",
+  ". .    v9vR      r  R      rpr r     cwc h  ",
+  ".  r rR  vR R .  r rR R   R   .     wcwc h  ",
+  ". prpr1v8VR R R Pr r2r r  R           wh h  ",
+  ".    rR   R   2r rpr rR 9VR . .       wh    ",
+  ". . . . R %vR R  r r rR R : . . .           ",
+  ". . . . : : : . .     . . : : : . .         ",
+  ". . : : : : : : . . . . : : : : : . . .     "
 })
  ]]></el:luamain>
     <el:i18n>

Modified: trunk/data/levels/enigma_viii/index.xml
===================================================================
--- trunk/data/levels/enigma_viii/index.xml	2009-03-01 14:11:59 UTC (rev 1565)
+++ trunk/data/levels/enigma_viii/index.xml	2009-03-01 20:42:29 UTC (rev 1566)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="38" title="Enigma VIII"/>
+  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="39" title="Enigma VIII"/>
 
   <attributes/>
 
@@ -41,7 +41,7 @@
     <level _seq="33" _title="Wired Shogun" _xpath="./ral34_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080828ral417" rel="1" rev="129" score="1" target="time" unit="duration"/>
     <level _seq="34" _title="Scarlet's Necklace" _xpath="./ral30_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20080814ral422" rel="1" rev="133" score="1" target="time" unit="duration"/>
     <level _seq="35" _title="- Meditation -" _xpath="./raoul31_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul31" rel="1" rev="8" score="1" target="time" unit="duration"/>
-    <level _seq="36" _title="Relaxing at the sea" _xpath="./devnull08_1" author="/dev/null" ctrl="force" easy="true" id="devnull08" rel="1" rev="20" score="1" target="time" unit="duration"/>
+    <level _seq="36" _title="Relaxing at the sea" _xpath="./devnull08_1" author="/dev/null" ctrl="force" easy="true" id="devnull08" rel="1" rev="22" score="1" target="time" unit="duration"/>
     <level _seq="37" _title="Helios II" _xpath="./mecke08_1" author="mecke" ctrl="force" easy="true" id="mecke08" rel="1" rev="25" score="1" target="time" unit="duration"/>
     <level _seq="38" _title="Tutoxyd's Pyramid" _xpath="./ral21_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070822ral291" rel="2" rev="156" score="2" target="time" unit="duration"/>
     <level _seq="39" _title="Alternation I" _xpath="./mecke17_1" author="mecke" ctrl="force" easy="false" id="mecke17" rel="1" rev="14" score="1" target="time" unit="duration"/>



From ral at mail.berlios.de  Mon Mar  2 01:02:12 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Mon, 2 Mar 2009 01:02:12 +0100
Subject: [Enigma-game-svn] r1567 - trunk/doc/reference
Message-ID: <200903020002.n2202CkD001272@sheep.berlios.de>

Author: ral
Date: 2009-03-02 01:02:00 +0100 (Mon, 02 Mar 2009)
New Revision: 1567

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API reengineering
- refman: further updates on objects


Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-01 20:42:29 UTC (rev 1566)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-02 00:02:00 UTC (rev 1567)
@@ -6284,20 +6284,117 @@
 @section Standard Floors
 
 @menu
+* fl_aquamarine::     Aquamarine floor with low friction
+* fl_bluegray::       Light blue gray floor
+* fl_bluegreen::      Dark blue green floor
 * fl_sahara::         Bright yellow sandstone floor
+* fl_sand::           Granular orange gray sand floor
 @end menu
+ at c ----------------- Aquamarine Floor --------------------
+ at node fl_aquamarine
+ at subsection fl_aquamarine
+ at obindex fl_aquamarine
+
+Aquamarine floor with low friction
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 0.4 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_aquamarine}
+ at item @b{fl_aquamarine_framed}
+ at end table
+ at end table
+
+ at c ----------------- Bluegray Floor --------------------
+ at node fl_bluegray
+ at subsection fl_bluegray
+ at obindex fl_bluegray
+
+Light blue gray floor, visually indistinguishable form @ref{fl_thief}.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.5 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 4.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_bluegray}
+ at item @b{fl_bluegray_framed}
+ at end table
+ at end table
+
+ at c ----------------- Bluegreen Floor --------------------
+ at node fl_bluegreen
+ at subsection fl_bluegreen
+ at obindex fl_bluegreen
+
+Dark blue green floor
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_bluegreen}
+ at item @b{fl_bluegreen_framed}
+ at end table
+ at end table
+
 @c ----------------- Sahara Floor --------------------
 @node fl_sahara
 @subsection fl_sahara
 @obindex fl_sahara
 
+Bright yellow sandstone floor
+
 @table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.4 @ @ @xref{friction}
+ at end table
+
 @item @b{Variants:}
 @table @asis
 @item @b{fl_sahara}
+ at item @b{fl_sahara_framed}
 @end table
 @end table
 
+ at c ----------------- Sand Floor --------------------
+ at node fl_sand
+ at subsection fl_sand
+ at obindex fl_sand
+
+Granular orange gray sand floor
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_sand}
+ at item @b{fl_sand_framed}
+ at end table
+ at end table
+
 @c ----------------- Special Floor --------------------
 @node Special Floors
 @section Special Floors
@@ -6577,7 +6674,7 @@
 
 You can add items directly to a bag by usage of the world @ref{add} method.
 
-Bags are are used by @ref{st_thief} and @ref{fl_thief} to carry their stolen
+Bags are used by @ref{st_thief} and @ref{fl_thief} to carry their stolen
 items. When the thiefs are captured by @ref{st_chess} the bag remains on the
 grid position filled up with the stolen items.
 
@@ -6595,7 +6692,7 @@
 @obindex it_banana
 
 A portable item without direct usage. But it transforms into an @ref{it_cherry}
-when it by a laser beam.
+when hit by a laser beam.
 
 When a stone is pushed over it an @ref{it_squashed} remains as remnants.
 
@@ -6746,7 +6843,7 @@
 @ref{ac_pearl} do vanish. Other actors just drop the cherry on activation.
 
 An invisible actor can walk through most kinds of glass 
-(@pxref{Transparent Stones})and as being invisible
+(@pxref{Transparent Stones}) and as being invisible
 they do no longer attrackt hostile @ref{ac_rotor} and @ref{ac_top}.
 
 When several cherries are activated in sequence each does prolong the actor's
@@ -7345,9 +7442,10 @@
 
 Stone seeds are items that start growing and finally transforming to stones
 on activation. There are different @samp{flavor}s of seeds that all look the
-same, but do grow to different stones. While a @samp{wood} seed grows to an
- at ref{st_wood}, a @samp{fake} seed grows to an unmovable green brown stone and
-a @samp{volcano} seed grows to an active @ref{st_volcano}.
+same, but do grow to different stones. While a @code{"wood"} seed grows to an
+ at ref{st_box}_wood, a @code{"hay"} seed grows to an @ref{st_box}_hay, a
+ at code{"fake"} seed grows to an unmovable @ref{st_greenbrown} and a
+ at code{"volcano"} seed grows to an active @ref{st_volcano}.
 
 Seeds can be dropped on any item free grid position, even beneath another stone
 that will get killed by the seed successor stone.
@@ -7365,7 +7463,7 @@
 @table @asis
 @item @b{Attributes:}
 @table @asis
- at item @b{flavor}, @ @ @i{values}: @code{"wood"}, @code{"fake"}, @code{"volcano"}; @ @ @i{default}: @code{"wood"}
+ at item @b{flavor}, @ @ @i{values}: @code{"wood"}, @code{"hay"}, @code{"fake"}, @code{"volcano"}; @ @ @i{default}: @code{"wood"}
 The type of the resulting stone.
 @item @b{secure} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
 This attribute is transfered to the resulting stone. The @ref{st_volcano} makes
@@ -7384,6 +7482,7 @@
 @table @asis
 @item @b{it_seed} flavor = @code{"wood"}
 @item @b{it_seed_wood} flavor = @code{"wood"}
+ at item @b{it_seed_hay} flavor = @code{"hay"}
 @item @b{it_seed_fake} flavor = @code{"fake"}
 @item @b{it_seed_volcano} flavor = @code{"volcano"}
 @end table
@@ -7572,7 +7671,7 @@
 An item that transforms into a random item as soon as the player drops it.
 
 The replacement item is a random one out of a given selection. You can set
-the @samp{selection} attribute with token of strings. Every string needs either
+the @samp{selection} attribute with tokens of strings. Every string needs either
 to be an @ref{Object Kind} or a tile key prefixed by an equal sign @samp{=}.
 
 @example
@@ -8018,7 +8117,6 @@
 * st_bluegray::        light blue gray stone
 * st_brownie::         golden, hay stack like stone
 * st_brownmarble::     brown gray marble
-* st_brownpyramide::   brown gray pyramide shaped stone
 * st_camouflage::      military green camouflage stone
 * st_concrete::        polished light gray stone
 * st_darkgray::        dark gray rock
@@ -8096,20 +8194,6 @@
 @end table
 @end table
 
- at c ----------------- Brownpyramide Stone --------------------
- at node st_brownpyramide
- at subsection st_brownpyramide
- at obindex st_brownpyramide
-
-A brown gray pyramide shaped stone.
-
- at table @asis
- at item @b{Variants:}
- at table @asis
- at item @b{st_brownpyramide}
- at end table
- at end table
-
 @c ----------------- Camouflage Stone --------------------
 @node st_camouflage
 @subsection st_camouflage
@@ -8194,6 +8278,10 @@
 of this stone as it may be very annoying to users to guess that a stone
 exists that he can not see. Use it to maintain the WYSIWYG expected behaviour.
 
+Invisibility is not equal to laser transparency. In fact this stone is not
+laser transparent. And invisibility does not mean that an invisible actor can
+pass. (@pxref{Transparent Stones})
+
 @table @asis
 @item @b{Variants:}
 @table @asis
@@ -8522,15 +8610,22 @@
 * st_blocker::         Shrinkable Blocker
 * st_blur::            Passage of yet undetermined color
 * st_boulder::         Moving Arrow Boulder
+* st_box::             Movable, Floor building Box
 * st_brake::           Brake for moving Boulders
+* st_break::           Breakable Stone of various Flavors
+* st_brownpyramide::   Brown gray pyramide shaped stone
 * st_chess::           Movable Chess Knight Stone
 * st_coinslot::        Coin Driven Switch
 * st_darkglass::       Semitransparent metall framed Glass
 * st_death::           Skull Stone
 * st_disco::           Light shading Stone
 * st_door::            Door of various Flavors
+* st_fake::            Fake mimicing other Stones
 * st_floppy::          Floppy Driven Switch
 * st_fourswitch::      Four Direction Switch
+* st_ghost::           Invisible Transforming Stone
+* st_grate::           Hovering metal Grate
+* st_jamb::            Colored Door Jamb
 * st_key::             Key Driven Switch
 * st_knight::          Sword Bearing Knight Stone
 * st_laser::           Lightemitting Laser
@@ -8847,6 +8942,73 @@
 
 @end table
 
+ at c ----------------- Box Stone --------------------
+ at node st_box
+ at subsection st_box
+ at obindex st_box
+
+A movable, floor building stone of various flavors. 
+
+This very common stone is well known in its default flavor @code{"wood"}. But it
+exists in the flavors @code{"hay"} and @code{"rock"}, too. The flavor 
+ at code{"wood"} has a random wood tile orientation. You can set wooden boxes of
+given tile orientation by the variants @code{st_box_wood_h} and 
+ at code{st_box_wood_v}.
+
+The flavors @code{"wood"} and @code{"hay"} may originate from a growing
+ at ref{it_seed}. Due to the @ref{Snapshot Principle} special box variants exist
+just for usage in level initialization: @code{st_box_wood_growing} and 
+ at code{st_box_hay_growing}.
+
+All variants can easily be pushed around, do press @ref{it_trigger}s and do fall
+into @ref{fl_abyss}, @ref{fl_water} and @ref{fl_swamp} by buiding a framed floor
+of the kind indicated by their @samp{flavor} attribute. All boxes will fall on
+the first occasion. Even if they receive two push impulses at the same time by
+ at ref{ot_wire} they fall on the first grid. Thus it is impossible to push a box
+over a ditch. Boxes will fall if the floor beneath them vanishes. E.g. an 
+ at ref{it_bomb} explosion beneath a box may change the floor to @ref{fl_abyss} or
+a flood stream may change the floor to @ref{fl_water}. In all these cases the
+box above falls immediatly buildings its kind of floor.
+
+Note that all boxes do actively support @ref{Flood Spreading}. That means that
+they let an arriving flood stream flow beneath them. In case the floor beneath
+the box is floodable it will change to water and the box will fall. The new built
+floor itself conserves the flood stream feature and will let the stream flood
+neighboring floodable floors, too. (@pxref{fl_wood}, @ref{fl_hay}, @ref{fl_rock}).
+
+The box flavors do differ in some small but essential features. Whereas the
+flavors @code{"wood"} and @code{"rock"} do cause an @ref{it_bomb} to explode
+when being pushed over it, a @code{"hay"} flavored box does not ignite bombs.
+
+According to their flavor @code{"wood"} and @code{"hay"} will burn on fire.
+But @code{"rock"} flavored boxes are fire resistant and fire blocking.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"wood"}, @code{"hay"}, @code{"rock"}; @ @ @i{default}: @code{"wood"}; @ @ @i{access}: read only
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_box}: flavor=@code{"wood"}
+ at item @b{st_box_wood}: flavor=@code{"wood"}
+ at item @b{st_box_wood_h}: flavor=@code{"wood"}
+ at item @b{st_box_wood_v}: flavor=@code{"wood"}
+ at item @b{st_box_wood_growing}: flavor=@code{"wood"}
+ at item @b{st_box_hay}: flavor=@code{"hay"}
+ at item @b{st_box_hay_growing}: flavor=@code{"hay"}
+ at item @b{st_box_rock}: flavor=@code{"rock"}
+ at end table
+
+ at end table
+
 @c ----------------- Brake Stone --------------------
 @node st_brake
 @subsection st_brake
@@ -8881,6 +9043,89 @@
 
 @end table
 
+ at c ----------------- Break Stone --------------------
+ at node st_break
+ at subsection st_break
+ at obindex st_break
+
+A stone of various flavors that just breakable under various conditions. The
+stone may be breakable by actors of some kind, with or without an item, by an
+igniting explosion on a neighboring grid and in most cases by laser light.
+Besides being breakable the stone is a standard stone. The different flavors let
+this stone appear in quite different outlooks.
+
+The flavor @code{"plain"} is a gray stone that is breakable by any actor hit 
+with a revealed @ref{it_hammer} and by a laser beam hitting any side.
+
+The flavors @code{"black"} and @code{"white"} looks similar to the @code{"plain"}
+variant just with a small colored ball sitting on top. But these variants are
+just breakable by any actors of matching color. Of course the actors need a
+revealed @ref{it_hammer}. Laser beams do break the stone, too.
+
+The flavor @code{"oxydc"} looks like a cracked @ref{st_oxyd} of flavor 
+ at code{"c"}. Like the @code{"plain"} variant it is breakable by any actor hit 
+with a revealed @ref{it_hammer} and by a laser beam hitting any side.
+
+The flavor @code{"boulder"} looks like a yellowish version of flavor 
+ at code{"oxydc"}. It is breakable under the same conditions plus additionally by
+an @ref{st_boulder} hitting on one of its sides.
+
+The flavor @code{"bug"} looks like an @ref{st_flat} with a bug symbol on top.
+It is just breakable by an @ref{st_bug}. No other actor and no laser light will 
+will break it.
+
+The flavor @code{"laser"} looks identical to an @ref{st_flat}. It is not 
+breakable by actors. Just laser light beams on one of its faces will break this
+variant.
+
+All but the variant @code{"bug"} will break on neighboring ignitions like 
+caused by an exploding @ref{it_dynamite} on a direct neighboring position or an
+exploding black @ref{it_bomb} on a diagonal neighboring position.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"plain"}, @code{"black"}, @code{"white"}, @code{"oxydc"}, @code{"boulder"}, @code{"bug"}, @code{"laser"}; @ @ @i{default}: @code{"plain"}; @ @ @i{access}: read only
+ at end table
+
+ at item @b{Messages:}
+ at table @asis
+ at item @b{ignite}
+Break stone with exception of flavor @code{"bug"}.
+ at end table
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_break}: flavor=@code{"plain"}
+ at item @b{st_break_plain}: flavor=@code{"plain"}
+ at item @b{st_break_black}: flavor=@code{"black"}
+ at item @b{st_break_white}: flavor=@code{"white"}
+ at item @b{st_break_oxydc}: flavor=@code{"oxydc"}
+ at item @b{st_break_boulder}: flavor=@code{"boulder"}
+ at item @b{st_break_bug}: flavor=@code{"bug"}
+ at item @b{st_break_laser}: flavor=@code{"laser"}
+ at end table
+
+ at end table
+
+ at c ----------------- Brownpyramide Stone --------------------
+ at node st_brownpyramide
+ at subsection st_brownpyramide
+ at obindex st_brownpyramide
+
+A brown gray pyramide shaped stone. This stone is just standard stone besides
+the fact that it can be destroyed by an @ref{ot_cannonball} emitted by an
+ at ref{st_spitter} that happens to fall on its top.
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_brownpyramide}
+ at end table
+
 @c ----------------- Chess Stone --------------------
 @node st_chess
 @subsection st_chess
@@ -9154,11 +9399,17 @@
 Doors do not open or close instantly. They need a small amount of time. Actors
 can pass only doors that are completely open.
 
-There are several flavors of doors. Where as the variants @code{"a"} to
- at code{"c"} represent grid filling block doors, does the flavor @code{"d"}
-represent a faces based door, that opens or blocks just the given faces of the
-grid. Currently just the combinations of two parallel aligned door faces,
-aka horizontal and vertical doors, are supported.
+There are several flavors of doors. The variants @code{"a"} to @code{"c"}
+represent grid filling block doors. Flavor @code{"a"} looks in the closed state
+like @ref{st_oxyd} of flavor @code{"a"} and in the opened state like an
+ at ref{st_grate} of flavor @code{"cross"}. Flavor @code{"b"} looks in the closed 
+state like @ref{st_flat} and in the opened state like an @ref{st_grate} of
+flavor @code{"framed"}. Flavor @code{"c"} looks in the closed state like
+ at ref{st_flat} but opens to an unvisible, free passable, but still existing and
+grid blocking stone. The flavor @code{"d"} represent a faces based door, that 
+opens or blocks just the given faces of the grid. Currently just the 
+combinations of two parallel aligned door faces, aka horizontal and vertical 
+doors, are supported.
 
 As door grids can be entered on unfaced sides you should block these faces by
 unpassable stones. If you do not block these entries or even allow marbles to
@@ -9171,7 +9422,7 @@
 The @ref{st_blocker} is a quite compatible door alternative that allows stones
 to pass in its open state.
 
-All doors are floating and will not press @ref{it_trigger}s. Thus you can detect
+All doors are hovering and will not press @ref{it_trigger}s. Thus you can detect
 passing actors by positioning a trigger beneath a door. Doors will neither press
 @ref{fl_bridge} and will thus take no influence on the bridge.
 
@@ -9183,12 +9434,21 @@
 This causes an action that might open the door or do anything else. A common
 target is @ref{st_jamb} that evaluated the color of the knocking actor.
 
+Doors do support @ref{Flood Spreading} and @ref{Fire Spreading} through open
+faces and generally in @samp{OPEN} state.
+
 @table @asis
 
 @item @b{Attributes:}
 @table @asis
 @item @b{state}, @ @ @i{values}: @code{OPEN}, @code{CLOSED}; @ @ @i{default}: @code{CLOSED}; @ @ @xref{state}
-The open state of the door.
+The open state of the door. On read access it reports if the door is complety
+opened and passable for actors. Note that a door reaches the state @samp{OPEN}
+after the finish of the opening animation, what is an essential amount of time
+after the initiating @code{"open"} message. But on a @code{"close"} message the
+state turns immediatly to @samp{CLOSED} as actors are blocked immediately. On
+write access a state change causes a proper message and may occur with a delay,
+too.
 
 @item @b{flavor} @ @ @i{values}: @code{"a"}, @code{"b"}, @code{"c"}, @code{"d"}; @ @ @i{default}: @code{"d"}
 Representing different door types as described above. Block based flavors
@@ -9219,7 +9479,7 @@
 Just flavor @code{"d"} doors will perform an action on an actor touching a face
 of a closed door. The action value will be the actor object, which can be
 evaluated on its kind. This action value fits the @samp{hit} messages of
-objects like @ref{st_balls}.
+objects like @ref{st_jamb}.
 
 @item @b{Variants:}
 @table @asis
@@ -9232,6 +9492,55 @@
 
 @end table
 
+ at c ----------------- Fake Stone --------------------
+ at node st_fake
+ at subsection st_fake
+ at obindex st_fake
+
+A stone that mimics other stones, but does not act like them.
+
+In contrast to @ref{st_magic} the fake stone does not transform but remains
+all time a passive variant of the stone that it models. The stone does look 
+like another stone of the kind given by the attribute @samp{flavor}. The fake
+stone may even mimic state dependent behaviour with state dependent models
+and animations.
+
+The flavor @code{"quake"} mimics a @ref{st_quake} inclusive the pulsing 
+animation on actor hits and state changes, but does not cause any @ref{st_oxyd}
+to close.
+
+The flavors @code{"oxyda"}, @code{"oxydb"}, @code{"oxydc"}, @code{"oxydd"},
+ at code{"oxyde"} mimc @ref{st_oxyd} of appropriate flavor, but they are just
+passiv stones. Nevertheless they are aware of an state @samp{OPEN} and will
+display the corresponding base image of the open oxyd stone, of course without
+any color spot.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"quake"}, @code{"oxyda"}, @code{"oxydb"}, @code{"oxydc"}, @code{"oxydd"}, @code{"oxyde"}; @ @ @i{default}: @code{"quake"};
+ at item @b{state}, @ @ @i{values}: @code{CLOSED}, @code{OPEN}; @ @ @i{default}: @code{CLOSED}: @ @ @xref{state}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_fake}: flavor=@code{"quake"}, state=@code{IDLE}
+ at item @b{st_fake_quake}: flavor=@code{"quake"}, state=@code{IDLE}
+ at item @b{st_fake_oxyda}: flavor=@code{"oxyda"}, state=@code{CLOSED}
+ at item @b{st_fake_oxydb}: flavor=@code{"oxydb"}, state=@code{CLOSED}
+ at item @b{st_fake_oxydc}: flavor=@code{"oxydc"}, state=@code{CLOSED}
+ at item @b{st_fake_oxydd}: flavor=@code{"oxydd"}, state=@code{CLOSED}
+ at item @b{st_fake_oxyde}: flavor=@code{"oxyde"}, state=@code{CLOSED}
+ at end table
+
+ at end table
+
 @c ----------------- Floppy Stone --------------------
 @node st_floppy
 @subsection st_floppy
@@ -9322,6 +9631,166 @@
 and off alternative sources by a fourswitch.
 @end table
 
+ at c ----------------- Ghost Stone --------------------
+ at node st_ghost
+ at subsection st_ghost
+ at obindex st_ghost
+
+An invisible stone that transforms into a visible stone on actor hits with 
+properly revealed tools.
+
+Similar to @ref{st_magic} this stone does transform to another kind, but it
+is initially always invisible, what gave it its name. Invisibility is not
+equal to laser transparency. In fact one flavor of this ghost stone is not
+laser transparent. And invisibility does not mean that an invisible actor can
+pass a ghost stone. (@pxref{Transparent Stones})
+
+The ghost stone transforms to another stone of the kind given by its
+attribute @samp{flavor}. The tool necessary to cause this transformation depends
+on the flavor.
+
+The flavor @code{"purplemarble"} transformsto an @ref{st_purplemarble} on a hit
+with a revealed @ref{it_brush}. This flavor is not laser transparent.
+
+The flavor @code{"greenbrown"} transformsto an @ref{st_greenbrown} on a hit
+with a revealed @ref{it_magicwand}.
+
+The flavor @code{"break"} transformsto an @ref{st_break} of variant 
+ at samp{st_break_oxydc} on a hit with a revealed @ref{it_brush}.
+
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"purplemarble"}, @code{"greenbrown"}, @code{"break"}; @ @ @i{default}: @code{"purplemarble"}; @ @ @i{access}: read only
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_ghost}: flavor=@code{"purplemarble"}
+ at item @b{st_ghost_purplemarble}: flavor=@code{"purplemarble"}
+ at item @b{st_ghost_greenbrown}: flavor=@code{"greenbrown"}
+ at item @b{st_ghost_break}: flavor=@code{"break"}
+ at end table
+
+ at end table
+
+ at c ----------------- Grate Stone --------------------
+ at node st_grate
+ at subsection st_grate
+ at obindex st_grate
+
+Hovering metal grate in different flavors that let all actors pass but block
+stones from moving over a grid position.
+
+The different flavors are just for decorative purposes, but @code{"cross"}
+variant looks identical to an open @ref{st_door} of flavor @code{"a"}, whereas
+ at code{"framed"} variant looks identical to an open @ref{st_door} of flavor 
+ at code{"b"}.
+
+In contrast to opened doors grates do bounce actors that are flying due to a
+jump.
+
+As a hovering stone grates do not press @ref{it_trigger}s and let laser light
+pass. Grates allow @ref{Flood Spreading} and @ref{Fire Spreading}, too.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"cross"}, @code{"framed"}; @ @ @i{default}: @code{"cross"}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_grate}: flavor=@code{"cross"}
+ at item @b{st_grate_cross}: flavor=@code{"cross"}
+ at item @b{st_grate_framed}: flavor=@code{"framed"}
+ at end table
+
+ at end table
+
+ at c ----------------- Jamb Stone --------------------
+ at node st_jamb
+ at subsection st_jamb
+ at obindex st_jamb
+
+A colored door jamb that allows coupled opening and closing on adjacent 
+ at ref{st_door}s. Especially doors of flavor @code{"d"} can be opened by proper
+colored actors by door knocking.
+
+The stone looks like 4 brown door jambs each with a colored ball on top. It fits
+to the 2 faced @code{"d"} variant of @ref{st_door}. These doors can be
+configured to send the message @code{"hit"} to the adjacent jambs as their
+targets. Whenever an actor knocks the door, the jamb receives the message and
+checks the actor for matching color. On success it sends opening signals to
+the door being knocked and to a door being located on the opposite site of the
+jamb. Additionally doors located on the remaining two adjacent positions of the
+jamb will receive a closing signal. E.g.:
+
+ at example
+ti["n"] = @{"st_door_d", "north", target="jamb", action="hit"@}
+ti["e"] = @{"st_door_d", "east", target="jamb", action="hit"@}
+ti["s"] = @{"st_door_d", "south", target="jamb", action="hit"@}
+ti["w"] = @{"st_door_d", "west", target="jamb", action="hit"@}
+ti["J"] = @{"st_jamb", "jamb"@}
+ti["@@"] = @{"st_marble"@}
+wo(ti, " ", @{
+  " n ",
+  "wJe",
+  " s@@"
+@}
+ at end example
+
+The black marble touching the east door will open the east and the west door,
+and will close the north and south door at the same time. The black marble 
+touching the south door will open the south and the north door, and will close
+the west and east door.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{color} @ @ @i{values}: @code{BLACK}, @code{WHITE}; @ @ @i{default}: @code{BLACK}
+ at end table
+
+ at item @b{Messages:}
+
+ at table @asis
+ at item @b{hit}
+The message value must be an object reference of an actor. The color of the
+actor must match the jamb color to cause an action. The sender's position must
+either match the x or the y coordinate of the jamb, too.
+
+ at item @b{signal} @ @ @xref{signal}
+This message is just kept for backward compatibity issues. Do not use it in
+new API levels as it depends on other internal attributes not set for new API
+levels.
+ at end table
+
+ at item @b{Action:} @ @ @xref{target}, @ @ @xref{action}
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_jamb}: color=@code{BLACK}
+ at item @b{st_jamb_black}: color=@code{BLACK}
+ at item @b{st_jamb_white}: color=@code{WHITE}
+ at end table
+
+ at end table
+
 @c ----------------- Key Stone --------------------
 @node st_key
 @subsection st_key
@@ -10418,7 +10887,7 @@
 @obindex st_redfiber
 
 A metal frame with woven red fiber. Like other @ref{Transparent Stones} it is
-passable ransparent to laser light. But the redfiber is not passable to any
+passable transparent to laser light. But the redfiber is not passable to any
 actors.
 
 @table @asis
@@ -10727,7 +11196,7 @@
 A stone that transforms into a random stone as soon as an actor hits it.
 
 The replacement stone is a random one out of a given selection. You can set
-the @samp{selection} attribute with token of strings. Every string needs either
+the @samp{selection} attribute with tokens of strings. Every string needs either
 to be an @ref{Object Kind} or a tile key prefixed by an equal sign @samp{=}.
 
 @example
@@ -11324,10 +11793,16 @@
 @item @ref{st_polarswitch} @tab st_polarswitch_off @tab toggle @tab pass @tab no
 @item @ref{st_beads} @tab st_beads @tab leave @tab pass @tab no
 @item @ref{st_lightpassenger} @tab st_lightpassenger_off @tab rebound @tab rebound @tab no
+ at item @ref{st_invisible} @tab st_invisible @tab rebound @tab rebound @tab no
+ at item @ref{st_invisible} @tab st_invisible_movable @tab push @tab push @tab no
+ at item @ref{st_invisible} @tab st_invisible_hollow @tab pass @tab pass @tab no
+ at item @ref{st_ghost} @tab st_ghost_purplemarble @tab rebound @tab rebound @tab no
+ at item @ref{st_ghost} @tab st_ghost_greenbrown @tab rebound @tab rebound @tab yes
+ at item @ref{st_ghost} @tab st_ghost_break @tab rebound @tab rebound @tab yes
 @end multitable
 
 These entries can be memorized as follows: A stone is transparent for laser 
-light or if it is hollow, but not if it is dark. Exception is @samp{st_beads},
+light if it is hollow, but not if it is dark. Exception is @samp{st_beads},
 whose irregular sides would scatter the beam. A stone can always be passed by 
 invisible actors, with three exceptions: @samp{st_redfiber}, whose inside is 
 filled with red stripes, and the two movables @samp{st_lightglass_movable} and 
@@ -13644,7 +14119,7 @@
 
 ti["k "] = @{"it_key"@} .. ti(@{"st_lightglass"@})
 
-ti["xx"] = @{"#ac_marbel_black"@}
+ti["xx"] = @{"#ac_marble_black"@}
 
 local resolver = res.composer(ti)
 
@@ -13940,6 +14415,7 @@
 
 @menu
 * Display Follow Strategy::    How the display view follows the active marble
+* Flood Spreading::
 * Fire Spreading::
 * Freeze Checking::
 @end menu
@@ -14058,6 +14534,9 @@
 
 @end table
 
+ at node Flood Spreading
+ at subsection Flood Spreading
+
 @node Fire Spreading
 @subsection Fire Spreading
 
@@ -19820,7 +20299,7 @@
 @need 200
 @item @b{fl-black} @expansion{} @ref{fl_dark}
 @item @b{fl-bluegray} @expansion{} @ref{fl_bluegray}
- at item @b{fl-bluegreen} @expansion{} @ref{}
+ at item @b{fl-bluegreen} @expansion{} @ref{fl_bluegreen}
 @item @b{fl-bluegreenx} @expansion{} @ref{fl_aquamarine}
 @need 200
 @item @b{fl-brick} @expansion{} @ref{fl_brick}
@@ -20234,11 +20713,11 @@
 @item @b{st-likeoxydd} @expansion{} @code{st_fake_oxydd}, @pxref{st_fake}
 @need 200
 @item @b{st-likeoxydd-open} @expansion{} @code{st_fake_oxydd, state=OPEN}, @pxref{st_fake}
- at item @b{st-mail-e} @expansion{} @code{st_mail_e}, @pxref{st-mail}
- at item @b{st-mail-n} @expansion{} @code{st_mail_n}, @pxref{st-mail}
- at item @b{st-mail-s} @expansion{} @code{st_mail_s}, @pxref{st-mail}
+ at item @b{st-mail-e} @expansion{} @code{st_mail_e}, @pxref{st_mail}
+ at item @b{st-mail-n} @expansion{} @code{st_mail_n}, @pxref{st_mail}
+ at item @b{st-mail-s} @expansion{} @code{st_mail_s}, @pxref{st_mail}
 @need 200
- at item @b{st-mail-w} @expansion{} @code{st_mail_w}, @pxref{st-mail}
+ at item @b{st-mail-w} @expansion{} @code{st_mail_w}, @pxref{st_mail}
 @item @b{st-marble} @expansion{} @ref{st_redbrown}
 @item @b{st-marble_hole} @expansion{} @code{st_redbrown_hollow}, @pxref{st_redbrown}
 @item @b{st-marble_move} @expansion{} @code{st_redbrown_movable}, @pxref{st_redbrown}



From andreasl at mail.berlios.de  Mon Mar  2 16:10:10 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Mon, 2 Mar 2009 16:10:10 +0100
Subject: [Enigma-game-svn] r1568 - in trunk: data data/gfx32 data/gfx40
	data/gfx48 data/schemas src/floors src/stones
Message-ID: <200903021510.n22FAAKD004780@sheep.berlios.de>

Author: andreasl
Date: 2009-03-02 16:09:50 +0100 (Mon, 02 Mar 2009)
New Revision: 1568

Added:
   trunk/data/gfx32/st_thief_capture.png
   trunk/data/gfx32/thief_capture_template.png
   trunk/data/gfx32/thief_drunken_template.png
   trunk/data/gfx32/thief_template.png
   trunk/data/gfx40/st_thief_capture.png
   trunk/data/gfx40/thief_capture_template.png
   trunk/data/gfx40/thief_drunken_template.png
   trunk/data/gfx40/thief_template.png
   trunk/data/gfx48/st_thief_capture.png
   trunk/data/gfx48/thief_capture_template.png
   trunk/data/gfx48/thief_drunken_template.png
   trunk/data/gfx48/thief_template.png
Removed:
   trunk/data/gfx32/st-thief-captured.png
   trunk/data/gfx32/thief-captured-template.png
   trunk/data/gfx32/thief-template.png
   trunk/data/gfx40/st-thief-captured.png
   trunk/data/gfx40/thief-captured-template.png
   trunk/data/gfx40/thief-template.png
   trunk/data/gfx48/st-thief-captured.png
   trunk/data/gfx48/thief-captured-template.png
   trunk/data/gfx48/thief-template.png
Modified:
   trunk/data/models-2d.lua
   trunk/data/schemas/objects.xml
   trunk/src/floors/ThiefFloor.cc
   trunk/src/floors/ThiefFloor.hh
   trunk/src/stones/ChessStone.cc
   trunk/src/stones/ChessStone.hh
   trunk/src/stones/ThiefStone.cc
   trunk/src/stones/ThiefStone.hh
Log:
Trunk:
 - Thief reengineering:
    - Add animations for drunken thieves.
    - Rename state CAPTURED to CAPTURE,
      new inactive state of fl_thief is called CAPTURED.
    - Rename thief image files accordingly.
    - Adapt friction and adhesion to fl_bluegray.
    - Fix drunken fl_thief: Now really gets drunken.
    - Fix fl_thief: Removed wrong "KillStone", now uses new CAPTURED state.
Note:
 - The nomenclature of thief and chess states is as follows:
     CAPTURING := This object is just capturing some other object.
     CAPTURE   := This object is just being captured by some other object.
     CAPTURED  := This object has been captured and now is inactive.
Todo:
 - Adapt some levels to new thief friction and adhesion.


Deleted: trunk/data/gfx32/st-thief-captured.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx32/st_thief_capture.png (from rev 1565, trunk/data/gfx32/st-thief-captured.png)

Deleted: trunk/data/gfx32/thief-captured-template.png
===================================================================
(Binary files differ)

Deleted: trunk/data/gfx32/thief-template.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx32/thief_capture_template.png (from rev 1565, trunk/data/gfx32/thief-captured-template.png)

Added: trunk/data/gfx32/thief_drunken_template.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx32/thief_drunken_template.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Copied: trunk/data/gfx32/thief_template.png (from rev 1565, trunk/data/gfx32/thief-template.png)

Deleted: trunk/data/gfx40/st-thief-captured.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx40/st_thief_capture.png (from rev 1565, trunk/data/gfx40/st-thief-captured.png)

Deleted: trunk/data/gfx40/thief-captured-template.png
===================================================================
(Binary files differ)

Deleted: trunk/data/gfx40/thief-template.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx40/thief_capture_template.png (from rev 1565, trunk/data/gfx40/thief-captured-template.png)

Added: trunk/data/gfx40/thief_drunken_template.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx40/thief_drunken_template.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Copied: trunk/data/gfx40/thief_template.png (from rev 1565, trunk/data/gfx40/thief-template.png)

Deleted: trunk/data/gfx48/st-thief-captured.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx48/st_thief_capture.png (from rev 1565, trunk/data/gfx48/st-thief-captured.png)

Deleted: trunk/data/gfx48/thief-captured-template.png
===================================================================
(Binary files differ)

Deleted: trunk/data/gfx48/thief-template.png
===================================================================
(Binary files differ)

Copied: trunk/data/gfx48/thief_capture_template.png (from rev 1565, trunk/data/gfx48/thief-captured-template.png)

Added: trunk/data/gfx48/thief_drunken_template.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/gfx48/thief_drunken_template.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Copied: trunk/data/gfx48/thief_template.png (from rev 1565, trunk/data/gfx48/thief-template.png)

Modified: trunk/data/models-2d.lua
===================================================================
--- trunk/data/models-2d.lua	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/data/models-2d.lua	2009-03-02 15:09:50 UTC (rev 1568)
@@ -939,14 +939,14 @@
 do
     function make_chess(colour)
         local img1 = DefSubimages("st-chess"..colour, {h=5});
-        --local img2 = DefSubimages("st-chess"..colour.."-captured", {h=5});
+        --local img2 = DefSubimages("st-chess"..colour.."-capture", {h=5});
         local f1 = BuildFrames(img1, 120)
         --local f2 = BuildFrames(img2, 40)
         local f2 = f1
         local f3 = BuildFrames(img1, 500)
         DefAnim("st_chess"..colour.."-disappearing", f1);
         DefAnim("st_chess"..colour.."-appearing", ReverseFrames(f1))
-        DefAnim("st_chess"..colour.."-captured", f2);
+        DefAnim("st_chess"..colour.."-capture", f2);
         DefAnim("st_chess"..colour.."-swamp", f3);
         DefRoundStone("st_chess"..colour, img1[1])
     end
@@ -1672,67 +1672,75 @@
 
     local stonebase = "st_bluegray"
     local floorbase = "fl_bluegray"
-    local thiefovl = DefSubimages("thief-template", {h = 7})
-    local capturedovl = DefSubimages("thief-captured-template", {h = 12})
+    local thiefovl = DefSubimages("thief_template", {h = 7})
+    local captureovl = DefSubimages("thief_capture_template", {h = 12})
+    local drunkenovl = DefSubimages("thief_drunken_template", {h = 2})
 
     -- Creating st-thief
 
     local names = {}
     for j = 1, table.getn(thiefovl) do
-        names[j] = "st-thief"..format("_%04d", j)
+        names[j] = "st_thief"..format("_%04d", j)
         display.DefineComposite(names[j], stonebase, thiefovl[j])
     end
 
     local f1 = BuildFrames(names, 80)
-    DefAnim("pre-st-thief-emerge", f1)
-    DefAnim("pre-st-thief-retreat", ReverseFrames(f1))
+    DefAnim("pre_st_thief_emerge", f1)
+    DefAnim("pre_st_thief_retreat", ReverseFrames(f1))
     DefRoundStone("st_thief", stonebase)
-    DefRoundStone("st_thief_emerge", "pre-st-thief-emerge")
-    DefRoundStone("st_thief_retreat", "pre-st-thief-retreat")
+    DefRoundStone("st_thief_emerge", "pre_st_thief_emerge")
+    DefRoundStone("st_thief_retreat", "pre_st_thief_retreat")
 
-    -- Creating st-thief-captured
+    names = {}
+    for j = 1, table.getn(drunkenovl) do
+        names[j] = "st_thief_drunken"..format("%04d", j)
+        display.DefineComposite(names[j], stonebase, drunkenovl[j])
+    end
+    
+    local f5 = BuildFrames(names, 3000)
+    DefAnim("pre_st_thief_drunken", f5, true)
+    DefRoundStone("st_thief_drunken", "pre_st_thief_drunken")
+
+    -- Creating st_thief_capture
     --
     --   Note that this is done without template, as the whole
     --   stone has to disappear (e.g. via shrinking)
 
-    local img2 = DefSubimages("st-thief-captured", {h = 12})
+    local img2 = DefSubimages("st_thief_capture", {h = 12})
     local f2 = BuildFrames(img2, 80)
-    DefAnim("st_thief_captured", f2)
+    DefAnim("st_thief_capture", f2)
 
     -- Creating fl-thief
 
     local floornames = {}
-    local floorcaptured = {}
-    local floorbases = DefSubimages(floorbase, {h=4, modelname="fl-thief-base"})
+    local floorcapture = {}
+    local floordrunken = {}
+    local floorbases = DefSubimages(floorbase, {h=4, modelname="fl_thief_base"})
     for k = 1,4 do
-      floornames[k] = {}
-      for j = 1, table.getn(thiefovl) do
-        floornames[k][j] = "fl-thief"..k..format("_%04d", j)
-        display.DefineComposite(floornames[k][j], floorbases[k], thiefovl[j])
-      end
-      floorcaptured[k] = {}
-      for j = 1, table.getn(capturedovl) do
-        floorcaptured[k][j] = "fl-thief"..k.."-captured"..format("_%04d", j)
-        display.DefineComposite(floorcaptured[k][j], floorbases[k], capturedovl[j])
-      end
-      local f3 = BuildFrames(floornames[k], 80)
-      local f4 = BuildFrames(floorcaptured[k], 80)
-      DefAlias("fl_thief"..k, floorbases[k])
-      DefAnim("fl_thief"..k.."_emerge", f3)
-      DefAnim("fl_thief"..k.."_retreat", ReverseFrames(f3))
-      DefAnim("fl_thief"..k.."_captured", f4)
+        floornames[k] = {}
+        for j = 1, table.getn(thiefovl) do
+            floornames[k][j] = "fl_thief"..k..format("_%04d", j)
+            display.DefineComposite(floornames[k][j], floorbases[k], thiefovl[j])
+        end
+        floorcapture[k] = {}
+        for j = 1, table.getn(captureovl) do
+            floorcapture[k][j] = "fl_thief"..k.."_capture"..format("_%04d", j)
+            display.DefineComposite(floorcapture[k][j], floorbases[k], captureovl[j])
+        end
+        floordrunken[k] = {}
+        for j = 1, table.getn(drunkenovl) do
+            floordrunken[k][j] = "fl-thief"..k.."-drunken"..format("_%04d", j)
+            display.DefineComposite(floordrunken[k][j], floorbases[k], drunkenovl[j])
+        end
+        local f3 = BuildFrames(floornames[k], 80)
+        local f4 = BuildFrames(floorcapture[k], 80)
+        local f6 = BuildFrames(floordrunken[k], 3000)
+        DefAlias("fl_thief"..k, floorbases[k])
+        DefAnim("fl_thief"..k.."_emerge", f3)
+        DefAnim("fl_thief"..k.."_retreat", ReverseFrames(f3))
+        DefAnim("fl_thief"..k.."_capture", f4)
+        DefAnim("fl_thief"..k.."_drunken", f6, true)
     end
-
---do
---    local img = DefSubimages("fl-thief", {h=7})
---    local f = BuildFrames(img, 80)
---    DefAnim("thief-emerge", f)
---    DefAnim("thief-retreat", ReverseFrames(f))
---    DefRoundStone("fl-thief", img[1])
---    DefRoundStone("fl-thief-emerge", "thief-emerge")
---    DefRoundStone("fl-thief-retreat", "thief-retreat")
---end
-
 end
 
 -------------

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/data/schemas/objects.xml	2009-03-02 15:09:50 UTC (rev 1568)
@@ -423,6 +423,8 @@
       <attr name="$heattransform" default="fl_dunes"/>
     </object>
     <object name="fl_thief">
+      <attr name="friction" default="4.5"/>
+      <attr name="adhesion" default="1.5"/>
       <msg name="_capture"/>
     </object>
     <object name="fl_water" super="fl_floodstream">

Modified: trunk/src/floors/ThiefFloor.cc
===================================================================
--- trunk/src/floors/ThiefFloor.cc	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/floors/ThiefFloor.cc	2009-03-02 15:09:50 UTC (rev 1568)
@@ -28,7 +28,7 @@
 //#include "main.hh"
 
 namespace enigma {
-    ThiefFloor::ThiefFloor() : Floor("fl_thief", 2.0, 1), victimId (0), bag (NULL) {
+    ThiefFloor::ThiefFloor() : Floor("fl_thief", 4.5, 1.5), victimId (0), bag (NULL) {
         
     }
     
@@ -53,7 +53,7 @@
                 SetItem(get_pos(), bag);
                 bag = NULL;
             }
-            state = (state == IDLE) ? CAPTURED : DRUNKENCAPTURED;
+            state = (state == IDLE) ? CAPTURE : DRUNKENCAPTURE;
             init_model();
             return true;
         }
@@ -73,6 +73,7 @@
         std::string basename = ecl::strf("fl_thief%d", ((objFlags & OBJBIT_MODEL) >> 24) + 1);
         switch (state) {
             case IDLE:
+            case CAPTURED:
                 set_model(basename); 
                 break;
             case EMERGING:
@@ -81,14 +82,14 @@
             case RETREATING:
                 set_anim(basename + "_retreat");
                 break;
-            case CAPTURED:
-                set_anim(basename + "_captured");
+            case CAPTURE:
+                set_anim(basename + "_capture");
                 break;
             case DRUNKEN:
-                set_model("it_bottle_idle");
+                set_anim(basename + "_drunken");
                 break;
-            case DRUNKENCAPTURED:
-                set_anim("st_thief_captured");
+            case DRUNKENCAPTURE:
+                set_anim(basename + "_capture");
                 break;
         }
     }
@@ -102,19 +103,22 @@
     }
 
     void ThiefFloor::animcb() {
+        Floor *newfloor;
         switch (state) {
             case EMERGING:
                 doSteal();
-                state = RETREATING;
+                if (state != DRUNKEN)
+                    state = RETREATING;
                 init_model();
                 break;
             case RETREATING:
                 state = IDLE;
                 init_model();
                 break;
-            case CAPTURED:
-            case DRUNKENCAPTURED:
-                KillStone(get_pos());
+            case CAPTURE:
+            case DRUNKENCAPTURE:
+                state = CAPTURED;
+                init_model();
                 break;
             default:
                 ASSERT(0, XLevelRuntime, "ThiefFloor: animcb called with inconsistent state");

Modified: trunk/src/floors/ThiefFloor.hh
===================================================================
--- trunk/src/floors/ThiefFloor.hh	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/floors/ThiefFloor.hh	2009-03-02 15:09:50 UTC (rev 1568)
@@ -33,12 +33,13 @@
         
     private:
         enum iState {
-            IDLE,            ///< 
-            EMERGING,        ///< 
-            RETREATING,      ///< 
-            CAPTURED,         ///< 
-            DRUNKEN,         ///<
-            DRUNKENCAPTURED  ///<
+            IDLE,              ///< 
+            EMERGING,          ///< 
+            RETREATING,        ///< 
+            CAPTURE,           ///< thief is just being captured 
+            DRUNKEN,           ///<
+            DRUNKENCAPTURE,    ///< drunken thief is just being captured
+            CAPTURED           ///< thief has been captured, now inactive
         };
         
         enum ObjectPrivatFlagsBits {

Modified: trunk/src/stones/ChessStone.cc
===================================================================
--- trunk/src/stones/ChessStone.cc	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/stones/ChessStone.cc	2009-03-02 15:09:50 UTC (rev 1568)
@@ -50,8 +50,8 @@
     Value ChessStone::message(const Message &m) {
         if (m.message == "_capture") {
             if (isDisplayable() && state == IDLE && m.value.to_string() != getKind())
-                if (try_state(CAPTURED)) {
-                    set_anim(get_model_name() + "-captured");
+                if (try_state(CAPTURE)) {
+                    set_anim(get_model_name() + "-capture");
                     return true;
                 }
             return Value();
@@ -107,7 +107,7 @@
                 }
                 // Else: If floor is swamp or abyss, kill the stone. Do this
                 // just by continuing to the next case:
-            case CAPTURED:
+            case CAPTURE:
             case FALLING:
             case SINKING:
                 KillStone(get_pos());

Modified: trunk/src/stones/ChessStone.hh
===================================================================
--- trunk/src/stones/ChessStone.hh	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/stones/ChessStone.hh	2009-03-02 15:09:50 UTC (rev 1568)
@@ -40,8 +40,15 @@
          * Variables and Constants
          * (APPEARING and DISAPPEARING are used when moving the stone.)
          */
-        enum State {IDLE, APPEARING, DISAPPEARING, CAPTURING,
-                    CAPTURED, FALLING, SINKING};
+        enum State {
+            IDLE,          ///<
+            APPEARING,     ///<
+            DISAPPEARING,  ///<
+            CAPTURING,     ///< chess piece is capturing some other object
+            CAPTURE,       ///< chess piece is just being captured
+            FALLING,       ///<
+            SINKING        ///<
+        };
 
         /**
          * The first three boolean flags are meant as buffers to

Modified: trunk/src/stones/ThiefStone.cc
===================================================================
--- trunk/src/stones/ThiefStone.cc	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/stones/ThiefStone.cc	2009-03-02 15:09:50 UTC (rev 1568)
@@ -55,7 +55,7 @@
                 SetItem(get_pos(), bag);
                 bag = NULL;
             }
-            state = (state == IDLE) ? CAPTURED : DRUNKENCAPTURED;
+            state = (state == IDLE) ? CAPTURE : DRUNKENCAPTURE;
             init_model();
             return true;
         }
@@ -77,14 +77,14 @@
             case RETREATING:
                 set_anim("st_thief_retreat");
                 break;
-            case CAPTURED:
-                set_anim("st_thief_captured");
+            case CAPTURE:
+                set_anim("st_thief_capture");
                 break;
             case DRUNKEN:
-                set_model("it_bottle_idle");
+                set_anim("st_thief_drunken");
                 break;
-            case DRUNKENCAPTURED:
-                set_anim("st_thief_captured");
+            case DRUNKENCAPTURE:
+                set_anim("st_thief_capture");
                 break;
         }
     }
@@ -101,8 +101,8 @@
                 state = IDLE;
                 init_model();
                 break;
-            case CAPTURED:
-            case DRUNKENCAPTURED:
+            case CAPTURE:
+            case DRUNKENCAPTURE:
                 KillStone(get_pos());
                 break;
             default:

Modified: trunk/src/stones/ThiefStone.hh
===================================================================
--- trunk/src/stones/ThiefStone.hh	2009-03-02 00:02:00 UTC (rev 1567)
+++ trunk/src/stones/ThiefStone.hh	2009-03-02 15:09:50 UTC (rev 1568)
@@ -34,12 +34,12 @@
         
     private:
         enum iState {
-            IDLE,            ///< 
-            EMERGING,        ///< 
-            RETREATING,      ///< 
-            CAPTURED,        ///<
-            DRUNKEN,         ///<
-            DRUNKENCAPTURED  ///<
+            IDLE,             ///< 
+            EMERGING,         ///< 
+            RETREATING,       ///< 
+            CAPTURE,          ///< thief is just being captured
+            DRUNKEN,          ///<
+            DRUNKENCAPTURE    ///< drunken thief is just being captured
         };
         
     public:



From andreasl at mail.berlios.de  Mon Mar  2 16:25:05 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Mon, 2 Mar 2009 16:25:05 +0100
Subject: [Enigma-game-svn] r1569 - team_levelpacks/team_test_new_api
Message-ID: <200903021525.n22FP5oU006156@sheep.berlios.de>

Author: andreasl
Date: 2009-03-02 16:25:03 +0100 (Mon, 02 Mar 2009)
New Revision: 1569

Added:
   team_levelpacks/team_test_new_api/andreasT03_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT066_1.xml
Log:
Test Level new API:
 - New test level for drunken and captured thieves.
 - Add bridges to "Test Fire new API".



Added: team_levelpacks/team_test_new_api/andreasT03_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/andreasT03_1.xml	2009-03-02 15:09:50 UTC (rev 1568)
+++ team_levelpacks/team_test_new_api/andreasT03_1.xml	2009-03-02 15:25:03 UTC (rev 1569)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test drunken thieves" el:subtitle="" el:id="test_drunken_thieves"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Andreas Lochmann" el:email=""/>
+      <el:copyright>Copyright ? 2009 Andreas Lochmann</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl_sahara"}
+ti["."] = {"fl_thief"}
+ti["T"] = {"st_thief"}
+ti["C"] = {"st_chess"}
+ti["D"] = {"st_chess_white"}
+ti["b"] = {"it_bottle"}
+ti["@"] = {"#ac_marble"} .. ti{"it_yinyang"}
+ti["%"] = {"#ac_marble_white"} .. ti{"it_yinyang"}
+
+wo(ti,  " ",  {
+    "                    ",
+    " bbbbb   .......... ",
+    " bbbbb   .......... ",
+    " bbbbb   .......... ",
+    " bbbbb   .......... ",
+    " bbbbb@             ",
+    " bbbbb   C          ",
+    "           T T T T  ",
+    " % D       T T T T  ",
+    "    C      T T T T  ",
+    "     C     T T T T  ",
+    "                    ",
+    "                    "})
+  
+  ]]></el:luamain>
+    <el:i18n>
+     <el:string el:key="title">
+       <el:english el:translate="false"/>
+     </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+

Modified: team_levelpacks/team_test_new_api/ralT066_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT066_1.xml	2009-03-02 15:09:50 UTC (rev 1568)
+++ team_levelpacks/team_test_new_api/ralT066_1.xml	2009-03-02 15:25:03 UTC (rev 1569)
@@ -19,6 +19,14 @@
 
 ti[" "] = {"fl_wood", burnable=true, ignitable=true, secure=true}
 
+ti["1"] = {"fl_bridge", "bridge#", flavor = "gc", state = OPEN, secure = true}
+ti["2"] = {"fl_bridge", "bridge#", flavor = "bn", state = OPEN, secure = true}
+ti["3"] = {"fl_bridge", "bridge#", flavor = "bw", state = OPEN, secure = true}
+ti["4"] = {"fl_bridge", "bridge#", flavor = "gc", state = CLOSED, secure = true}
+ti["5"] = {"fl_bridge", "bridge#", flavor = "bn", state = CLOSED, secure = true}
+ti["6"] = {"fl_bridge", "bridge#", flavor = "bw", state = CLOSED, secure = true}
+ti["7"] = {"st_switch", target = "bridge#*"}
+
 ti["w"] = {"st_window_nesw"}
 ti["v"] = {"st_window_ne"}
 ti["u"] = {"st_window_sw"}
@@ -42,10 +50,10 @@
 ti["@"] = {"#ac_marble"}
 
 w, h = wo(ti, " ", {
-"         #          ",
+"         #    123456",
 "         V          ",
 "         s          ",
-"#sa###sH####sb######",
+"#sa###sH####sb##7###",
 "                   L",
 "                   G",
 "                    ",



From ral at mail.berlios.de  Tue Mar  3 01:31:37 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 3 Mar 2009 01:31:37 +0100
Subject: [Enigma-game-svn] r1570 - in trunk: data/schemas src src/items
	src/stones
Message-ID: <200903030031.n230Vbed012080@sheep.berlios.de>

Author: ral
Date: 2009-03-03 01:31:36 +0100 (Tue, 03 Mar 2009)
New Revision: 1570

Modified:
   trunk/data/schemas/objects.xml
   trunk/src/Object.cc
   trunk/src/items/SeedItem.cc
   trunk/src/items/SeedItem.hh
   trunk/src/items/Vortex.cc
   trunk/src/stones/BoxStone.cc
   trunk/src/stones/DispenserStone.cc
   trunk/src/stones/SimpleStones.cc
   trunk/src/stones/SurpriseStone.cc
Log:
Trunk 1.1: new API reengineering
- vortex: increase time on blocked vortex position
- fix st_grate: write of attribute "flavor"
- add it_seed_hay, flavor "hay" - grows to an st_box_hay
- st_surprise: add st_puzzle_yellow to standard selection for compatibility
- st_dispenser: add attribute "max", default 1000, number of supplied items
- st_spitter:
  - add attribute "range", default 100, do not spit beyond
  - add attribute "destination"
  - add message spit(position), spit a cannonball to position, 
      if position is invalid (nil), take "destination" as position

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/data/schemas/objects.xml	2009-03-03 00:31:36 UTC (rev 1570)
@@ -125,6 +125,7 @@
     <msg name="shuffle" type="nil"/>
     <msg name="shovel" type="nil"/>
     <msg name="signal" type="int" min="0" max="1"/>
+    <msg name="spit" type="tokens"/>
     <msg name="stopfire" type="nil"/>
     <msg name="toggle" type="nil"/>
     <msg name="turn" type="nil"/>
@@ -742,6 +743,9 @@
     <object name="it_seed_volcano">
       <attr name="flavor" value="volcano"/>
     </object>
+    <object name="it_seed_hay">
+      <attr name="flavor" value="hay"/>
+    </object>
     <object name="it_sensor">
       <attr name="invisible"/>
       <attr name="exit"/>
@@ -1031,18 +1035,16 @@
     <object name="st_box_hay">
       <attr name="flavor" value="hay"/>
     </object>
+    <object name="st_box_hay_growing" init="true"/>
     <object name="st_box_rock">
       <attr name="flavor" value="rock"/>
     </object>
     <object name="st_box_wood">
       <attr name="flavor" value="wood"/>
     </object>
-    <object name="st_box_wood_growing" init="true">
-    </object>
-    <object name="st_box_wood_h" init="true">
-    </object>
-    <object name="st_box_wood_v" init="true">
-    </object>
+    <object name="st_box_wood_growing" init="true"/>
+    <object name="st_box_wood_h" init="true"/>
+    <object name="st_box_wood_v" init="true"/>
     <object name="st_brake">
       <msg name="_explosion"/>
     </object>
@@ -1210,6 +1212,7 @@
     </object>
     <object name="st_dispenser">
       <attr name="flavor" default="bombblack" rw="r"/>
+      <attr name="max" default="1000"/>
       <msg name="_explosion"/>
       <msg name="_dispenser"/>
     </object>
@@ -1737,8 +1740,11 @@
       <attr name="hit_distortion_xy"/>
       <attr name="hit_distortion_yx"/>
       <attr name="hit_distortion_yy"/>
+      <attr name="destination"/>
+      <attr name="range" default="100"/>
       <attr name="secure"/>
       <msg name="_cannonball"/>
+      <msg name="spit"/>
     </object>
     <object name="st_stoneimpulse">
       <attr name="hollow"/>

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/Object.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -370,7 +370,7 @@
     
     bool Object::getDestinationByIndex(int idx, ecl::V2 &dstpos) {
         int i = 0;  // counter for destination candidates
-        TokenList tl = getAttr("destination");  // expand any tokens to a list of values 
+        TokenList tl = getAttr("destination");  // expand any tokens to a list of values
         for (TokenList::iterator tit = tl.begin(); tit != tl.end(); ++tit) {
             PositionList pl = (*tit).getPositionList(this);  // convert next token to a list of positions
             for (PositionList::iterator pit = pl.begin(); pit != pl.end(); ++pit) {

Modified: trunk/src/items/SeedItem.cc
===================================================================
--- trunk/src/items/SeedItem.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/items/SeedItem.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -41,6 +41,7 @@
             if (flavor == "wood") code = 0;
             else if (flavor == "fake") code = 1;
             else if (flavor == "volcano") code = 2;
+            else if (flavor == "hay") code = 3;
             else
                 ASSERT(false, XLevelRuntime, ecl::strf("Seed: illegal flavor value #s", flavor.c_str()).c_str());
                 
@@ -60,6 +61,7 @@
                 case 0 : return "wood"; break;
                 case 1 : return "fake"; break;
                 case 2 : return "volcano"; break;
+                case 3 : return "hay"; break;
             }
         } else
             return Item::getAttr(key);
@@ -97,14 +99,13 @@
         int flavor = (objFlags & OBJBIT_FLAVOR) >> 24;
         if ((server::GameCompatibility == GAMET_OXYDMAGNUM || server::GameCompatibility == GAMET_OXYD1) &&
             (flavor == 0 && GetStone(p))) {
-            std::string model = GetStone(p)->get_kind();
-            if (model == "st-grate1") {
-                SetFloor(p, MakeFloor("fl-stwood"));
+            if (GetStone(p)->getKind() == "st_grate_cross") {
+                SetFloor(p, MakeFloor("fl_wood_framed"));
                 kill();
                 return;
            }
        }
-       Stone *st = MakeStone(flavor == 0 ? "st_box_wood_growing" : (flavor == 1 ? "st_greenbrown_growing" : "st_volcano_growing"));
+       Stone *st = MakeStone(flavor == 0 ? "st_box_wood_growing" : (flavor == 1 ? "st_greenbrown_growing" :(flavor == 2 ? "st_volcano_growing" : "st_hay_growing")));
        transferIdentity(st);
        if (Value v = getAttr("secure"))
            st->setAttr("secure", v);
@@ -159,6 +160,7 @@
         BootRegister(new SeedItem(0), "it_seed_wood");
         BootRegister(new SeedItem(1), "it_seed_fake");
         BootRegister(new SeedItem(2), "it_seed_volcano");
+        BootRegister(new SeedItem(3), "it_seed_hay");
     BOOT_REGISTER_END
 
 } // namespace enigma

Modified: trunk/src/items/SeedItem.hh
===================================================================
--- trunk/src/items/SeedItem.hh	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/items/SeedItem.hh	2009-03-03 00:31:36 UTC (rev 1570)
@@ -37,7 +37,7 @@
         };
         
         enum ObjectPrivatFlagsBits {
-            OBJBIT_FLAVOR =   3<<24,   ///< wood, greenbrown, volcano seed
+            OBJBIT_FLAVOR =   3<<24,   ///< wood, greenbrown, volcano, hay seed
         };
     public:
         SeedItem(int flavor);

Modified: trunk/src/items/Vortex.cc
===================================================================
--- trunk/src/items/Vortex.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/items/Vortex.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -222,7 +222,7 @@
                     setAttr("$dest_idx", dest_idx + 1);
                     client::Msg_Sparkle(p_target.center());
                     WarpActor(actor, v_target[0], v_target[1], false);
-                    GameTimer.set_alarm(this, 0.4, false);
+                    GameTimer.set_alarm(this, 0.8, false);
                 }
                 else {
                     switch (v->state) {

Modified: trunk/src/stones/BoxStone.cc
===================================================================
--- trunk/src/stones/BoxStone.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/stones/BoxStone.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -118,7 +118,10 @@
                     set_model("st-wood2");
                 break;
             case HAY:
-                set_model("st-flhay"); break;
+                if (state == GROWING)
+                    set_anim("st-wood-growing");
+                else
+                    set_model("st-flhay"); break;
                 break;
             case ROCK:
                 set_model("st-flrock"); break;
@@ -207,6 +210,7 @@
         BootRegister(new BoxStone(1), "st_box_wood_h");
         BootRegister(new BoxStone(2), "st_box_wood_v");
         BootRegister(new BoxStone(3), "st_box_hay");
+        BootRegister(new BoxStone(3, 1), "st_box_hay_growing");
         BootRegister(new BoxStone(4), "st_box_rock");
     BOOT_REGISTER_END
 

Modified: trunk/src/stones/DispenserStone.cc
===================================================================
--- trunk/src/stones/DispenserStone.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/stones/DispenserStone.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -80,22 +80,26 @@
     }
 
     void DispenserStone::actor_hit(const StoneContact &sc) {
-        if (enigma::Inventory *inv = player::GetInventory(sc.actor)) {
-            if (!inv->is_full()) {
-                DispenserStoneTyp typ = (DispenserStoneTyp)((objFlags & OBJBIT_SUBTYP) >> 24);
-                std::string itemkind;
-                switch (typ) {
-                    case BOMBBLACK:
-                        itemkind = "it_bomb_black"; break;
-                    case BOMBWHITE:
-                        itemkind = "it_bomb_white"; break;
-                    case DYNAMITE:
-                        itemkind = "it_dynamite"; break;
-                    default:
-                        ASSERT(false, XLevelRuntime, "Dispenser - unexpected subtyp");
+        int reserve = getAttr("max");
+        if (reserve > 0) {
+            if (enigma::Inventory *inv = player::GetInventory(sc.actor)) {
+                if (!inv->is_full()) {
+                    DispenserStoneTyp typ = (DispenserStoneTyp)((objFlags & OBJBIT_SUBTYP) >> 24);
+                    std::string itemkind;
+                    switch (typ) {
+                        case BOMBBLACK:
+                            itemkind = "it_bomb_black"; break;
+                        case BOMBWHITE:
+                            itemkind = "it_bomb_white"; break;
+                        case DYNAMITE:
+                            itemkind = "it_dynamite"; break;
+                        default:
+                            ASSERT(false, XLevelRuntime, "Dispenser - unexpected subtyp");
+                    }
+                    inv->add_item(MakeItem(itemkind.c_str()));
+                    player::RedrawInventory(inv);
+                    setAttr("max", reserve - 1);
                 }
-                inv->add_item(MakeItem(itemkind.c_str()));
-                player::RedrawInventory(inv);
             }
         }
     }

Modified: trunk/src/stones/SimpleStones.cc
===================================================================
--- trunk/src/stones/SimpleStones.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/stones/SimpleStones.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -23,7 +23,7 @@
 #include "client.hh"
 #include "errors.hh"
 #include "Inventory.hh"
-//#include "main.hh"
+#include "main.hh"
 #include "player.hh"
 #include "server.hh"
 #include "SoundEffectManager.hh"
@@ -172,11 +172,13 @@
     }
 
     void GrateStone::setAttr(const string& key, const Value &val) {
-        if (key == "flavor" && isDisplayable()) {
+        if (key == "flavor") {
             std::string fs = val.to_string();
             if (fs == "cross") state = CROSS;
             else if (fs == "framed") state = FRAMED;
             else ASSERT(false, XLevelRuntime, ecl::strf("Grate stone set known flavor%s", fs.c_str()).c_str());
+            if (isDisplayable())
+                init_model();
             return; 
         } else
             Stone::setAttr(key, val);
@@ -253,6 +255,20 @@
                 init_model();
             }
             return Value();
+        } else if (m.message == "spit" && state == IDLE && isDisplayable()) {
+            ecl::V2 dest = m.value;
+            if (!IsInsideLevel(dest)) {
+                if (!getDestinationByIndex(0, dest)) {
+                    return Value();
+                }
+                if (!IsInsideLevel(dest))
+                    return Value();
+            }
+            ecl::V2 vel = (GridPos(dest).center() - get_pos().center()) /0.55;
+            setAttr("$ball_velocity", vel);
+            state = LOADING;
+            init_model();
+            return Value();
         }
         return Stone::message(m);
     }
@@ -303,7 +319,11 @@
             if (lifepos != -1) {
                 delete inv->yield_item(lifepos);
                 player::RedrawInventory (inv);
-                setAttr("$ball_velocity", distortedVelocity(sc.actor->get_vel(), 1.0));
+                ecl::V2 vel = distortedVelocity(sc.actor->get_vel(), 1.0);
+                double maxvel = (double)getAttr("range")/0.56;
+                if (maxvel * maxvel < square(vel))
+                    vel = maxvel * normalize(vel);
+                setAttr("$ball_velocity", vel);
                 state = LOADING;
                 init_model();
             }

Modified: trunk/src/stones/SurpriseStone.cc
===================================================================
--- trunk/src/stones/SurpriseStone.cc	2009-03-02 15:25:03 UTC (rev 1569)
+++ trunk/src/stones/SurpriseStone.cc	2009-03-03 00:31:36 UTC (rev 1570)
@@ -55,6 +55,8 @@
                     tl.push_back(stonename[i]);
                 if (server::GameCompatibility != GAMET_ENIGMA)
                     tl.push_back("st_dongle");
+                else
+                    tl.push_back("st_puzzle_yellow");
                return tl;
             }
         } else



From ral at mail.berlios.de  Tue Mar  3 01:38:00 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Tue, 3 Mar 2009 01:38:00 +0100
Subject: [Enigma-game-svn] r1571 - team_levelpacks/team_test_new_api
Message-ID: <200903030038.n230c0XJ012293@sheep.berlios.de>

Author: ral
Date: 2009-03-03 01:37:52 +0100 (Tue, 03 Mar 2009)
New Revision: 1571

Modified:
   team_levelpacks/team_test_new_api/ralT076_1.xml
   team_levelpacks/team_test_new_api/ralT079_1.xml
Log:
Test Level new API:
- updates for spitter


Modified: team_levelpacks/team_test_new_api/ralT076_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT076_1.xml	2009-03-03 00:31:36 UTC (rev 1570)
+++ team_levelpacks/team_test_new_api/ralT076_1.xml	2009-03-03 00:37:52 UTC (rev 1571)
@@ -23,6 +23,8 @@
 ti["#"] = {"st_granite"}
 ti["c"] = {"it_cherry"}
 ti["x"] = {"it_springboard"}
+ti["b"] = {"it_bottle"}
+ti["C"] = {"st_chess"}
 
 
 ti["@"] = {"#ac_marble"} 
@@ -34,15 +36,15 @@
 
 w, h = wo(ti, " ", {
 "   # Y y            ",
-"   #         ....   ",
-"   #        x....   ",
-"o  #        x....   ",
-"   #         ....   ",
+"   #         ....C  ",
+"   #bb      x....   ",
+"o  #bb      x....   ",
+"   #bb       ....   ",
 "O  #   @            ",
 "   #ccccccccc      T",
 "   #ccccccccc      T",
 "   #ccccccccc      T",
-"   #               T",
+"   #             C T",
 "   #       ###      ",
 " ###       #        ",
 "                    "

Modified: team_levelpacks/team_test_new_api/ralT079_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT079_1.xml	2009-03-03 00:31:36 UTC (rev 1570)
+++ team_levelpacks/team_test_new_api/ralT079_1.xml	2009-03-03 00:37:52 UTC (rev 1571)
@@ -48,12 +48,18 @@
 ti["P"] = {"st_polarswitch"}
 ti["I"] = {"st_stoneimpulse"}
 
-ti["O"] = {"st_spitter"}
-ti["o"] = {"st_spitter", secure=true}
+ti["O"] = {"st_spitter", range=4}
+ti["o"] = {"st_spitter", "spitter", secure=true}
 ti["W"] = {"st_window_w"}
 ti["B"] = {"st_brownpyramide"}
 
+ti["S"] = {"st_switch", target="dospit"}
 
+ti["V"] = {"st_spitter", "autospitter", destination="sdest#*", secure=true}
+ti["v"] = {"st_brownpyramide", "sdest#"}
+ti["s"] = {"st_switch", target="autospitter", action="spit"}
+
+
 w, h = wo(ti, " ", {
 "L       ddd        C",
 "P       ddd         ",
@@ -69,19 +75,24 @@
 "               .. ~~",
 "Y   y   z  Z   .. ~~",
 "                    ",
+"+++++++       v     ",
 "+++++++             ",
-"+++++++             ",
-"+++++++       L     ",
+"v++++++       L    v",
 "+++++++       P     ",
+"v                v  ",
 "                    ",
-"                    ",
-"                  BB",
+"         vv       BB",
 "d dox  x      O   BB",
 "   C                ",
-"y     II          W  ",
-"y  C  II            "
+"y     II          W ",
+"y  C  II v S    s  V"
 })
 
+local spitdest = po(13.5, 15.5)
+function dospit(value, sender)
+    no["spitter"]:spit(spitdest)
+    spitdest = spitdest + {1,0}
+end
   ]]></el:luamain>
     <el:i18n>
 	 <el:string el:key="title">



From ral at mail.berlios.de  Tue Mar  3 22:47:30 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Tue, 3 Mar 2009 22:47:30 +0100
Subject: [Enigma-game-svn] r1572 - trunk/doc/reference
Message-ID: <200903032147.n23LlUdd018475@sheep.berlios.de>

Author: ral
Date: 2009-03-03 22:47:21 +0100 (Tue, 03 Mar 2009)
New Revision: 1572

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API reengineering
- refman: further updates on stone objects


Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-03 00:37:52 UTC (rev 1571)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-03 21:47:21 UTC (rev 1572)
@@ -5609,9 +5609,9 @@
 @ref{st_flash}, @ref{st_spitter} and @ref{st_actorimpulse} apply forces that
 are either based on the hit velocity or the position.
 
-By usage of a simple @samp{hit_factor} you can increase, decrease or invert the
-default factor. Note that you must not set this attribute, if you want to use
-the default.
+By usage of a simple @samp{hit_strength} factor you can increase, decrease or
+invert the default factor. Note that you must not set this attribute, if you 
+want to use the default.
 
 By setting the four attributes @samp{hit_distortion_xx}, @samp{hit_distortion_xy},
 @samp{hit_distortion_yx} and @samp{hit_distortion_yy} you can describe a
@@ -5841,7 +5841,7 @@
 
 If @code{true}, dead actors attached to a player will be resurrected as long as
 extralives are available. If a player has no living actor to control or is
-missing the actor's ref{essential} constraints, the player is
+missing the actor's @ref{essential} constraints, the player is
 dead. The level may still continue if a second player is alive. If the gamer has
 an @ref{it_yinyang} in his inventory in single user mode, the control switches
 to the second player. If all players are dead, a new level game is started.
@@ -5853,7 +5853,7 @@
 
 Use @code{false} if the level can either be not solved in case of resurrected
 actors or would provide a major shortcut. In all other cases, mode @code{true}
-with proper usage of actors ref{essential} constraints will be preferable.
+with proper usage of actors @ref{essential} constraints will be preferable.
 
 @table @asis
 @item @b{Type:} @ @ bool
@@ -5911,7 +5911,8 @@
 A global scalar default factor for electrical forces. Positive numbers are
 attracting forces for opposite charges where as negative numbers are repelling
 forces for opposite charges. This global value is always multiplied by the
-charge load of the affected actors.
+charge load of the affected actors. The actors charge load usually results
+from hits of @ref{st_charge}.
 
 @table @asis
 @item @b{Type:} @ @ number
@@ -5919,7 +5920,7 @@
 @item @b{Default:} @ @ @code{15.0}
 Positve number are attracting, negative numbers are repelling.
 @item @b{Access:} @ @ read/write
- at item @b{Support:} @ @ @ref{st_charge}
+ at item @b{Support:} @ @ @ref{Actor Objects}
 @end table
 
 @node ExtralifeGlasses
@@ -8614,17 +8615,23 @@
 * st_brake::           Brake for moving Boulders
 * st_break::           Breakable Stone of various Flavors
 * st_brownpyramide::   Brown gray pyramide shaped stone
+* st_chameleon::       Floor Mimic
+* st_charge::          Electrical Charger
 * st_chess::           Movable Chess Knight Stone
 * st_coinslot::        Coin Driven Switch
 * st_darkglass::       Semitransparent metall framed Glass
 * st_death::           Skull Stone
 * st_disco::           Light shading Stone
+* st_dispenser::       Item Dispenser
 * st_door::            Door of various Flavors
 * st_fake::            Fake mimicing other Stones
+* st_flash::           Partner Marble pushing Stone
+* st_flat::            Featured Gypsum Stone
 * st_floppy::          Floppy Driven Switch
 * st_fourswitch::      Four Direction Switch
 * st_ghost::           Invisible Transforming Stone
 * st_grate::           Hovering metal Grate
+* st_greenbrown::      Mainly brown seedable stone
 * st_jamb::            Colored Door Jamb
 * st_key::             Key Driven Switch
 * st_knight::          Sword Bearing Knight Stone
@@ -8640,7 +8647,10 @@
 * st_oneway::          Oneway Passage
 * st_oxyd::            Game Target Stone
 * st_passage::         Color dependent Passage
+* st_plaster::         Gypsum sculptured Stone
+* st_plop::            Movable stone ceasing by a Plop
 * st_polarswitch::     Transparency Switch for Light Beams
+* st_portal::          Gate just passable by some Actor kinds
 * st_pull::            Pullable Stone
 * st_puzzle::          Clusterable Puzzle Stones
 * st_quake::           Oxyd closing Stone
@@ -8650,10 +8660,12 @@
 * st_rubberband::      Rubberband generator
 * st_scissors::        Scissors cutting rubberbands
 * st_shogun::          Stackable Hole Stones
+* st_spitter::
 * st_stoneimpulse::    Neighbor Pushing pulsing Stone
 * st_surprise::        Random Transforming Stone
 * st_swap::            Neighbor Swapping Stone
 * st_switch::          Classical on/off Switch
+* st_thief::           Item Thief
 * st_timer::           Animated Timer
 * st_turnstile::       Turnstile Pivot
 * st_turnstilearm::    Turnstile Arm
@@ -8704,8 +8716,8 @@
 @item @b{strength} @ @ @i{values}: float number; @ @ @i{default}: @code{+200.0} @ @ @xref{ActorimpulseStrength}
 A scalar factor for the impulse force. Positive numbers are attracting forces
 where as negative numbers are repelling forces.
- at item @b{hit_factor} @ @ @i{values}: float number; @ @ @i{default}: @code{nil} @ @ @xref{hit_*}
-A @samp{hit_factor} overrides a given @samp{strength} attribute.
+ at item @b{hit_strength} @ @ @i{values}: float number; @ @ @i{default}: @code{nil} @ @ @xref{hit_*}
+A @samp{hit_strength} overrides a given @samp{strength} attribute.
 @item @b{hit_distortion_xx} @ @ @i{values}: float number; @ @ @i{default}: @code{+1.0} @ @ @xref{hit_*}
 @item @b{hit_distortion_xy} @ @ @i{values}: float number; @ @ @i{default}: @code{0.0} @ @ @xref{hit_*}
 @item @b{hit_distortion_yx} @ @ @i{values}: float number; @ @ @i{default}: @code{0.0} @ @ @xref{hit_*}
@@ -9078,7 +9090,7 @@
 breakable by actors. Just laser light beams on one of its faces will break this
 variant.
 
-All but the variant @code{"bug"} will break on neighboring ignitions like 
+All but the variant @code{"bug"} will break on neighboring ignitions like those
 caused by an exploding @ref{it_dynamite} on a direct neighboring position or an
 exploding black @ref{it_bomb} on a diagonal neighboring position.
 
@@ -9121,11 +9133,74 @@
 the fact that it can be destroyed by an @ref{ot_cannonball} emitted by an
 @ref{st_spitter} that happens to fall on its top.
 
+ at table @asis
 @item @b{Variants:}
 @table @asis
 @item @b{st_brownpyramide}
 @end table
+ at end table
 
+ at c ----------------- Chameleon Stone --------------------
+ at node st_chameleon
+ at subsection st_chameleon
+ at obindex st_chameleon
+
+A stone that has no own image but mimics the floor beneath. Thus it is fairly
+invisible. But as it shows the same image as the floor it hides items and even
+actors on the grid. The stone is hovering, thus it does not press any
+ at ref{it_trigger} and lets pass any actors and laser light, too.
+
+Please make rare usage of this stone in Enigma 1.1* as the current display 
+engine does not really support this stone. All dynamic floor and floor changes
+do cause faulty displays. Thus use it currently only in patterns without any
+floor dynamics.
+
+ at table @asis
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_chameleon}
+ at end table
+ at end table
+
+ at c ----------------- Charge Stone --------------------
+ at node st_charge
+ at subsection st_charge
+ at obindex st_charge
+
+An electrical charger for actors. The image reflects the sign of the 
+ at samp{charge} attribute.
+
+Any actor hitting this stone will recharge its @ref{charge} attribute to the
+value given by the stones @samp{charge} attribute. 
+
+The stone itself does not cause any electrical forces. It is neither attracting
+nor repelling for charged actors. Electrical forces applied to actors just
+depend on the charges of different actors and the global attribute 
+ at ref{ElectricStrength}.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{charge} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{0.0}
+The charge applied to hitting actors.
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:}  none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_charge}: charge = @code{0.0}
+ at item @b{st_charge_zero}: charge = @code{0.0}
+ at item @b{st_charge_plus}: charge = @code{+1.0}
+ at item @b{st_charge_minus}: charge = @code{-1.0}
+ at end table
+
+ at end table
+
 @c ----------------- Chess Stone --------------------
 @node st_chess
 @subsection st_chess
@@ -9389,6 +9464,52 @@
 
 @end table
 
+ at c ----------------- Dispenser Stone --------------------
+ at node st_dispenser
+ at subsection st_dispenser
+ at obindex st_dispenser
+
+An item dispenser in some item flavors.
+
+On every actor hit the dispenser adds a new item given by the attribute 
+ at samp{flavor}, namely @ref{it_bomb} in color black or white, or @ref{it_dynamite},
+to the inventory of the actor's owner. Of course an item will just be added
+if the inventory is capable of adding a further item. Additionally the 
+dispensers @samp{stock} must supply a further item. The default stock of 1000
+items should be enough for usual demands. But you can limit the supply to just
+a few counted items. This @samp{stock} attribute gets decremented every time
+an actor takes an item.
+
+The dispenser stone does break on adjacent @ref{it_bomb} explosions and 
+adjacent dispenser stone breaks. On its break it will itself cause adjcent
+ at ref{it_dynamite} to ignite, @ref{it_bomb} positioned beneath itself to 
+explode, and of course neighboring dispensers to break. Dispenser stones will
+neither break on actor hits, even with a revealed hammer, nor on laser light
+beams.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"bombblack"}, @code{"bombwhite"}, @code{"dynamite"}; @ @ @i{default}: @code{"bombblack"};
+ at item @b{stock}, @ @ @i{values}: integer numbers; @ @ @i{default}: @code{1000}: @ @ @xref{state}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_dispenser}: flavor=@code{"bombblack"}
+ at item @b{st_dispenser_bombblack}: flavor=@code{"bombblack"}
+ at item @b{st_dispenser_bombwhite}: flavor=@code{"bombwhite"}
+ at item @b{st_dispenser_dynamite}: flavor=@code{"dynamite"}
+ at end table
+
+ at end table
+
 @c ----------------- Door Stone --------------------
 @node st_door
 @subsection st_door
@@ -9541,6 +9662,101 @@
 
 @end table
 
+ at c ----------------- Flash Stone --------------------
+ at node st_flash
+ at subsection st_flash
+ at obindex st_flash
+
+A stone symbolized by a yellow flash, that forwards actors hits as a force to
+matching partner actors.
+
+Just @ref{ac_marble} actors are affected. A black hitting marble will push
+the first white marble, and vice versa. The hitting marble's velocity is
+multiplied to a distortion matrix given by four single attributes. The default
+matrix does maintain the direction. The resulting vector is again multiplied
+by a linear strength factor. The resulting force vector is applied to the
+partner marble. If no matching marble exists no forces are applied. The hitting
+marble bounces on the flash stone as on any other standard stone.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{hit_strength} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{20.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_xx} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{1.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_xy} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{0.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_yx} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{0.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_yy} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{1.0}; @ @ @xref{hit_*}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:}  none
+
+ at end table
+
+ at c ----------------- Flat Stone --------------------
+ at node st_flat
+ at subsection st_flat
+ at obindex st_flat
+
+A flat gypsum stone with many variants and features.
+
+Besides the standard features of a movable, hollow or breakable stone the flat
+stone provides some very special features and variant transformations.
+
+Movable and breakable flat stones will fall into @ref{fl_abyss}. But just the
+movable variant will fall into @ref{fl_water} and @ref{fl_swamp}.
+
+A laser beam will shatter a breakable variant. Furtheron it tansforms a plain flat
+stone, and just this variant, into a cracked variant, which is visually
+distinguishable by small cracks. But further laser light will not break a
+cracked variant. Ignitions and explosions will shatter breakable, cracked and
+movable variants. An actor with a revealed @ref{it_hammer} is able to shatter
+both the breakable and the cracked variant.
+
+An actor with a revealed @ref{"it_pencil"} will mark a plain or movable variant
+as burnable what is hinted for the player by a fire symbol on the flat stone
+surface. A burnable flat stone burns on fire, but just the immovable, burnable
+variant reacts on heating by self destruction. All burnable variants can be
+cleaned by an actor hit with an @ref{"it_brush"}. The fire symbol vanishes and
+the stone does not longer react on fire and heating.
+
+Last but not least an @ref{st_boulder} hitting a plain or hollow variant of the
+flat stone toggles the @samp{hollow} attribute twice within a short period. The
+time is sufficient for a fast actor to pass an otherwise solid plain flat stone.
+By proper fast redirection of the boulder a user can enforce permanent changes
+of the hollow state.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{hollow} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{hollow}
+ at item @b{movable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{movable}
+ at item @b{breakable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{breakable}
+ at item @b{burnable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{burnable}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_flat}:
+ at item @b{st_flat_hollow}: hollow=@code{true}
+ at item @b{st_flat_movable}: movable=@code{"true"}
+ at item @b{st_flat_breakable}: breakable=@code{"true"}
+ at item @b{st_flat_cracked}: 
+ at item @b{st_flat_burnable}: burnable=@code{"true"}
+ at item @b{st_flat_moveburnable}: movable=@code{"true"}, burnable=@code{"true"}
+ at item @b{st_flat_breaking}: breakable=@code{"true"}
+ at end table
+
+ at end table
+
 @c ----------------- Floppy Stone --------------------
 @node st_floppy
 @subsection st_floppy
@@ -9557,7 +9773,7 @@
 @item @b{Attributes:}
 
 @table @asis
- at item @b{state}, @ @ @i{values}: @code{ON}, @code{OFF}; @ @ @i{default}: @code{OFF}: @ @ @xref{state}
+ at item @b{state}, @ @ @i{values}: @code{ON}, @code{OFF}; @ @ @i{default}: @code{OFF}; @ @ @xref{state}
 Current activity state of the floppy stone.
 @end table
 
@@ -9649,13 +9865,13 @@
 attribute @samp{flavor}. The tool necessary to cause this transformation depends
 on the flavor.
 
-The flavor @code{"purplemarble"} transformsto an @ref{st_purplemarble} on a hit
+The flavor @code{"purplemarble"} transforms to an @ref{st_purplemarble} on a hit
 with a revealed @ref{it_brush}. This flavor is not laser transparent.
 
-The flavor @code{"greenbrown"} transformsto an @ref{st_greenbrown} on a hit
+The flavor @code{"greenbrown"} transforms to an @ref{st_greenbrown} on a hit
 with a revealed @ref{it_magicwand}.
 
-The flavor @code{"break"} transformsto an @ref{st_break} of variant 
+The flavor @code{"break"} transforms to an @ref{st_break} of variant 
 @samp{st_break_oxydc} on a hit with a revealed @ref{it_brush}.
 
 
@@ -9721,6 +9937,32 @@
 
 @end table
 
+ at c ----------------- Greenbrown Stone --------------------
+ at node st_greenbrown
+ at subsection st_greenbrown
+ at obindex st_greenbrown
+
+A mainly brown stone that is just a standard stone besides
+the fact that it can originate from two other objects.
+
+On one hand an @ref{it_seed} of flavor @code{"fake"} will grow to a standard,
+unmovable greenbrown. Just for level initialization purpose you can even set
+an variant @samp{st_greenbrown_growing} due to the @ref{Snapshot Principle}.
+
+On the other hand a @ref{st_ghost} of flavor @code{"greenbrown"} will transform
+to standard, unmovable greenbrown on an actor hit with a revealed 
+ at ref{it_magicwand}.
+
+ at table @asis
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_greenbrown}
+ at item @b{st_greenbrown_hollow}
+ at item @b{st_greenbrown_movable}
+ at item @b{st_greenbrown_growing}
+ at end table
+ at end table
+
 @c ----------------- Jamb Stone --------------------
 @node st_jamb
 @subsection st_jamb
@@ -10585,6 +10827,73 @@
 
 @end table
 
+ at c ----------------- Plaster Stone --------------------
+ at node st_plaster
+ at subsection st_plaster
+ at obindex st_plaster
+
+A sculptured gypsum stone that exists in various variations of basic stone 
+attributes.
+
+Unlike the similar looking @ref{st_flat} has no special features and behaves
+like a standard stone. 
+
+But it provides breakable variants. Like @ref{st_break} it is breakable by
+laser light, neighboring ignitions like those caused by an exploding 
+ at ref{it_dynamite} on a direct neighboring position or an exploding black
+ at ref{it_bomb} on a diagonal neighboring position. It breaks on actor hits with
+a revealed @ref{it_magicwand}, too. But unlike @ref{st_break} it offers a
+variant that is breakable and movable at the same time. Of course a possible
+break superceeds a possible push condition.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{hollow} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{hollow}
+ at item @b{movable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{movable}
+ at item @b{breakable} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}; @ @ @i{access}: read only @ @ @xref{breakable}
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_plaster}:
+ at item @b{st_plaster_hollow}: hollow=@code{true}
+ at item @b{st_plaster_movable}: movable=@code{"true"}
+ at item @b{st_plaster_breakable}: breakable=@code{"true"}
+ at item @b{st_plaster_movebreakable}: movable=@code{"true"}, breakable=@code{"true"}
+ at end table
+
+ at end table
+
+ at c ----------------- Plop Stone --------------------
+ at node st_plop
+ at subsection st_plop
+ at obindex st_plop
+
+A movable stone that ceases to exist with a plop.
+
+This stone behaves like any other standard movable stone. But unlike other
+stones it can cease under some conditions. And if it ceases it does it with
+a plop and some sparkles.
+
+Currently there is just one flavor called @code{"slate"} according to its 
+dark blue gray color. It falls and ceases to exist if pushed on @ref{fl_water},
+ at ref{fl_abyss} or @ref{fl_swamp}. Unlike @ref{st_box} it does not build a floor.
+
+ at table @asis
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_plop}
+ at item @b{st_plop_slate}
+ at end table
+ at end table
+
 @c ----------------- Polarswitch Stone --------------------
 @node st_polarswitch
 @subsection st_polarswitch
@@ -10622,6 +10931,44 @@
 
 @end table
 
+ at c ----------------- Portal Stone --------------------
+ at node st_portal
+ at subsection st_portal
+ at obindex st_portal
+
+A gate that is just passable for some special kind of actors. Like 
+ at ref{st_grate} it uses metallic frames but it does not let pass actors of all
+kinds.
+
+The portal stone lets just pass actors of the kind given by its attribute
+ at samp{flavor}.
+
+The flavor @code{"horse"} lets just pass an @ref{ac_horse}.
+
+The flavor @code{"pearl"} lets just pass an @ref{ac_pearl}.
+
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{flavor} @ @ @i{values}: @code{"horse"}, @code{"pearl"}; @ @ @i{default}: @code{"horse"}; @ @ @i{access}: read only
+ at end table
+
+ at item @b{Messages:} none
+
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+
+ at table @asis
+ at item @b{st_portal}: flavor=@code{"horse"}
+ at item @b{st_portal_horse}: flavor=@code{"horse"}
+ at item @b{st_portal_pearl}: flavor=@code{"pearl"}
+ at end table
+
+ at end table
+
 @c ----------------- Pull Stone --------------------
 @node st_pull
 @subsection st_pull
@@ -11323,6 +11670,39 @@
 
 @end table
 
+ at c ----------------- Thief Stone --------------------
+ at node st_thief
+ at subsection st_thief
+ at obindex st_thief
+
+A thief steals an item from the player's inventory when it is hit by an owned
+actor.
+
+The item is not directly stolen at the moment of the hit. The hit itself just
+causes the thief to emerge from his hiding-place. The thief steals from the
+actor that did hit the stone at the moment of maximum visibility. He takes
+a random item from the owner's inventory. But he just will steal an item if
+the actor is not shielded due to an activated @ref{it_umbrella}.
+
+Thieves have an addiction to alcohol. Thus they get drunken and inactive if
+they happen to steal a bottle filled with stuff.
+
+Thieves have an enemy - the @ref{st_chess}. If a chess stone is pushed onto
+a thief it will capture the thief, sober or drunken. The thief stone vanishes
+and the chess stone jumps onto its position. But the thief will leave behind 
+on the grid all stolen items in his own @ref{it_bag}. If an item happens to
+be positioned beneath the captured thief stone, this item will be added to
+the thief's bag, too. If the thief has not stolen any items he leaves no empty
+bag.
+
+ at table @asis
+ at item @b{Attributes:} none
+
+ at item @b{Messages:} none
+
+ at item @b{Action:}  none
+ at end table
+
 @c ----------------- Timer Stone --------------------
 @node st_timer
 @subsection st_timer
@@ -11862,9 +12242,15 @@
 @subsection charge
 
 The initial electrical charge that a new actor starts with when being added to
-the world. Even though this attribute is readable it does not reflect the
-current velocity of an actor during runtime.
+the world. Actors do charge and recharge by hitting @ref{st_charge}. Hits 
+of charged actors among themselves does not affect their charge load. Each
+actor keeps its charge load.
 
+The electrical force on a charged actor is given by its own load and the load
+and position of all other charged actors. Note that a constant global factor
+ at ref{Electric Strength} is applied, too. If this factor is negativ, equal
+charged actors may even attract each other.
+
 @table @asis
 @item @b{Type:} @ @ number
 @item @b{Values:} @ @ float number
@@ -13574,7 +13960,7 @@
 @example
 wo:drawMap(ti, po(5, 7), "-", @{"abcabc"@})
 wo:drawMap(ti, anchor_object, "--", @{"--##--##","##--##"@})
-wo:drawMap(ti, {12, 5}, " ", @{"122  221"@}, MAP_ROT_CW)
+wo:drawMap(ti, @{12, 5@}, " ", @{"122  221"@}, MAP_ROT_CW)
 @end example
 
 @item @b{Details:}
@@ -14804,13 +15190,13 @@
 @example
 return evaluator(context[3], "a", x, y)
 return evaluator(context[3], "a", x, y) .. evaluator(context[3], "b", x, y)
-return evaluator(context[3], "a", x, y) .. ti({"st_laser_n", state=ON})
+return evaluator(context[3], "a", x, y) .. ti(@{"st_laser_n", state=ON@})
 @end example
 
 You are even allowed to add new tile declartions to the tiles repository to
 speed up subsequent calls:
 @example
-ti["newkey"] = evaluator(context[3], "a", x, y) .. ti({"st_laser_n", state=ON})
+ti["newkey"] = evaluator(context[3], "a", x, y) .. ti(@{"st_laser_n", state=ON@})
 @end example
 
 A resolver implementation can store and modifiy any of its private parameters



From ral at mail.berlios.de  Wed Mar  4 00:36:54 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 4 Mar 2009 00:36:54 +0100
Subject: [Enigma-game-svn] r1573 - in trunk: data data/schemas src src/items
	src/stones
Message-ID: <200903032336.n23NasLv003515@sheep.berlios.de>

Author: ral
Date: 2009-03-04 00:36:48 +0100 (Wed, 04 Mar 2009)
New Revision: 1573

Modified:
   trunk/data/api1init.lua
   trunk/data/schemas/objects.xml
   trunk/src/floors.cc
   trunk/src/items/SeedItem.cc
   trunk/src/stones.cc
   trunk/src/stones/BoxStone.cc
   trunk/src/stones/FlatStone.cc
   trunk/src/stones/PuzzleStone.cc
   trunk/src/stones/SimpleStones.cc
Log:
Trunk 1.1: new API reengineering
- fix it_seed_hay growing
- rename internal message "fire" to "_fire"
- rename attribute "hit_factor" -> "hit_strength"
- st_puzzle: explode cluster on cannonball hit
- st_spitter fix spit message with destination attribute usage for object
     references that get destroyed by the cannonball


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/data/api1init.lua	2009-03-03 23:36:48 UTC (rev 1573)
@@ -986,6 +986,9 @@
          return
      end
      
+     if key == "hit_factor" then
+         _key = "hit_strength"
+     end
      if key == "mousefactor" then
          _key = "adhesion"
      end
@@ -1065,6 +1068,9 @@
      if key == "mouseforce" then
          _key = "adhesion"
      end
+     if key == "hit_factor" then
+         _key = "hit_strength"
+     end
      if key == "type" and _obj_name == "st-door" then
          local faces = enigma._GetAttrib(obj, "faces")
          if faces == "ns" then val = "h" else val = "v" end

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/data/schemas/objects.xml	2009-03-03 23:36:48 UTC (rev 1573)
@@ -36,7 +36,7 @@
     <attr name="friction" type="double" default="nil" rw="rw"/>
     <attr name="gohome" type="bool" default="true" rw="rw"/>
     <attr name="gradient" type="double" default="nil" rw="rw"/>
-    <attr name="hit_factor" type="double" default="nil" rw="rw"/>
+    <attr name="hit_strength" type="double" default="nil" rw="rw"/>
     <attr name="hit_distortion_xx" type="double" default="1" rw="rw"/>
     <attr name="hit_distortion_xy" type="double" default="0" rw="rw"/>
     <attr name="hit_distortion_yx" type="double" default="0" rw="rw"/>
@@ -102,7 +102,6 @@
     <msg name="disconnect" type="nil"/>
     <msg name="explode" type="nil"/>
     <msg name="extinguish" type="nil"/>
-    <msg name="fire" type="nil"/>
     <msg name="flip" type="nil"/>
     <msg name="forcefire" type="nil"/>
     <msg name="get_adjacents" type="nil"/>
@@ -141,6 +140,7 @@
     <msg name="_explosion" type="nil"/>
     <msg name="_fall" type="nil"/>
     <msg name="_fallvortex" type="nil"/>
+    <msg name="_fire" type="nil"/>
     <msg name="_freeze" type="nil"/>
     <msg name="_glasses" type="nil"/>
     <msg name="_hit" type="object"/>
@@ -916,7 +916,7 @@
     <object name="st_actorimpulse">
       <attr name="invisible"/>
       <attr name="strength" default="nil"/>
-      <attr name="hit_factor"/>
+      <attr name="hit_strength"/>
       <attr name="hit_distortion_xx"/>
       <attr name="hit_distortion_xy"/>
       <attr name="hit_distortion_yx"/>
@@ -1028,9 +1028,9 @@
     </object>
     <object name="st_box">
       <attr name="flavor" default="wood" rw="r"/>
-      <msg name="fire"/>
       <msg name="heat"/>
       <msg name="_fall"/>
+      <msg name="_fire"/>
     </object>
     <object name="st_box_hay">
       <attr name="flavor" value="hay"/>
@@ -1266,7 +1266,7 @@
       <attr name="flavor" value="oxyde"/>
     </object>
     <object name="st_flash">
-      <attr name="hit_factor"/>
+      <attr name="hit_strength"/>
       <attr name="hit_distortion_xx"/>
       <attr name="hit_distortion_xy"/>
       <attr name="hit_distortion_yx"/>
@@ -1276,6 +1276,7 @@
       <attr name="hollow" rw="r"/>
       <attr name="breakable" rw="r"/>
       <attr name="burnable" rw="r"/>
+      <msg name="_fire"/>
     </object>
     <object name="st_flat_hollow">
       <attr name="hollow" value="true"/>
@@ -1735,7 +1736,7 @@
       <attr name="flavor" value="sml"/>
     </object>
     <object name="st_spitter">
-      <attr name="hit_factor"/>
+      <attr name="hit_strength"/>
       <attr name="hit_distortion_xx"/>
       <attr name="hit_distortion_xy"/>
       <attr name="hit_distortion_yx"/>

Modified: trunk/src/floors.cc
===================================================================
--- trunk/src/floors.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/floors.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -411,7 +411,7 @@
 void Floor::on_burnable_animcb(bool justIgnited) {
     GridPos p = get_pos();
     // 
-    SendMessage(GetStone(p), "fire");
+    SendMessage(GetStone(p), "_fire");
 
     // Will we stop this time with burning?
     bool cont_fire = justIgnited || has_firetype(flft_eternal) || DoubleRand(0,1) < 0.7;

Modified: trunk/src/items/SeedItem.cc
===================================================================
--- trunk/src/items/SeedItem.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/items/SeedItem.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -105,7 +105,8 @@
                 return;
            }
        }
-       Stone *st = MakeStone(flavor == 0 ? "st_box_wood_growing" : (flavor == 1 ? "st_greenbrown_growing" :(flavor == 2 ? "st_volcano_growing" : "st_hay_growing")));
+       Stone *st = MakeStone(flavor == 0 ? "st_box_wood_growing" : (flavor == 1 ? "st_greenbrown_growing" :
+               (flavor == 2 ? "st_volcano_growing" : "st_box_hay_growing")));
        transferIdentity(st);
        if (Value v = getAttr("secure"))
            st->setAttr("secure", v);

Modified: trunk/src/stones/BoxStone.cc
===================================================================
--- trunk/src/stones/BoxStone.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/stones/BoxStone.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -84,7 +84,7 @@
     
 
     Value BoxStone::message(const Message &m) {
-        if (m.message == "fire" && !(objFlags & OBJBIT_BLOCKFIRE)) {
+        if (m.message == "_fire" && !(objFlags & OBJBIT_BLOCKFIRE)) {
             KillStone(get_pos());
             return true;  // allow fire to spread
         } else if (m.message == "heat") {

Modified: trunk/src/stones/FlatStone.cc
===================================================================
--- trunk/src/stones/FlatStone.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/stones/FlatStone.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -84,7 +84,7 @@
             if (isDisplayable())
                 init_model();
             return Value();
-        } else if (m.message == "fire" && (objFlags & OBJBIT_BURNABLE)) {
+        } else if (m.message == "_fire" && (objFlags & OBJBIT_BURNABLE)) {
             doBreak();
             return true;
         } else if (m.message == "heat" && (objFlags & OBJBIT_BURNABLE) && !(objFlags & OBJBIT_MOVABLE)) {

Modified: trunk/src/stones/PuzzleStone.cc
===================================================================
--- trunk/src/stones/PuzzleStone.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/stones/PuzzleStone.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -103,6 +103,9 @@
         } else if (m.message == "_init") {
             updateCurrentLightDirs();
             return Value();
+        } else if (m.message == "_cannonball") {
+            explodeCluster();
+            return Value();
         }
         return Stone::message(m);
     }

Modified: trunk/src/stones/SimpleStones.cc
===================================================================
--- trunk/src/stones/SimpleStones.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/stones/SimpleStones.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -258,9 +258,16 @@
         } else if (m.message == "spit" && state == IDLE && isDisplayable()) {
             ecl::V2 dest = m.value;
             if (!IsInsideLevel(dest)) {
-                if (!getDestinationByIndex(0, dest)) {
-                    return Value();
+                int idx = getDefaultedAttr("$hitdestindex", 0);
+                if (!getDestinationByIndex(idx++, dest)) {
+                    if (idx != 1) {
+                        idx = 0;
+                        if (!getDestinationByIndex(idx++, dest))
+                            return Value();
+                    } else
+                        return Value();
                 }
+                setAttr("$hitdestindex", idx);
                 if (!IsInsideLevel(dest))
                     return Value();
             }

Modified: trunk/src/stones.cc
===================================================================
--- trunk/src/stones.cc	2009-03-03 21:47:21 UTC (rev 1572)
+++ trunk/src/stones.cc	2009-03-03 23:36:48 UTC (rev 1573)
@@ -182,7 +182,7 @@
    default matrix, resp. defaultfactor as hit_factor. */
 ecl::V2 Stone::distortedVelocity (ecl::V2 vel, double defaultfactor = 1.0) {
     ecl::V2 newvel;
-    double factor = this->getDefaultedAttr("hit_factor", defaultfactor);
+    double factor = this->getDefaultedAttr("hit_strength", defaultfactor);
     newvel[0] = (double)(this->getDefaultedAttr("hit_distortion_xx", 1)) * vel[0]
                 + (double)(this->getAttr("hit_distortion_xy")) * vel[1];
     newvel[1] = (double)(this->getAttr("hit_distortion_yx")) * vel[0]



From ral at mail.berlios.de  Wed Mar  4 01:14:12 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 4 Mar 2009 01:14:12 +0100
Subject: [Enigma-game-svn] r1574 - in trunk/src: . gui
Message-ID: <200903040014.n240ECGn005486@sheep.berlios.de>

Author: ral
Date: 2009-03-04 01:14:10 +0100 (Wed, 04 Mar 2009)
New Revision: 1574

Modified:
   trunk/src/Value.cc
   trunk/src/gui/MainMenu.cc
Log:
Trunk 1.1: new API reengineering
- fix destination attribute did ignore positions described by items in a bag
- update credits


Modified: trunk/src/Value.cc
===================================================================
--- trunk/src/Value.cc	2009-03-03 23:36:48 UTC (rev 1573)
+++ trunk/src/Value.cc	2009-03-04 00:14:10 UTC (rev 1574)
@@ -341,7 +341,7 @@
                         case Object::STONE :
                         case Object::FLOOR :
                         case Object::ITEM  :
-                            return dynamic_cast<GridObject *>(obj)->get_pos();
+                            return dynamic_cast<GridObject *>(obj)->getOwnerPos();
                         case Object::ACTOR :
                             return dynamic_cast<Actor *>(obj)->get_pos();
                     }
@@ -453,7 +453,7 @@
                         case Object::STONE :
                         case Object::FLOOR :
                         case Object::ITEM  :
-                            return dynamic_cast<GridObject *>(obj)->get_pos().center();
+                            return dynamic_cast<GridObject *>(obj)->getOwnerPos().center();
                         case Object::ACTOR :
                             return dynamic_cast<Actor *>(obj)->get_pos();
                     }

Modified: trunk/src/gui/MainMenu.cc
===================================================================
--- trunk/src/gui/MainMenu.cc	2009-03-03 23:36:48 UTC (rev 1573)
+++ trunk/src/gui/MainMenu.cc	2009-03-04 00:14:10 UTC (rev 1574)
@@ -152,6 +152,9 @@
         0,
         N_("Contributors:"),
         "  Roberto Bardin  (Level design)",
+        "  Thomas Bernhardt  (Level design)",
+        "  Nathan Bronecke  (Level design)",
+        "  Harry Bruder  (Level design)",
         "  Alain Busser  (Level design, French translation, manual)",
         "  Guy Busser  (Level design)",
         "  Richi B?tzer  (Level design)",
@@ -161,13 +164,17 @@
         "  Joseph Dunne  (Level design)",
         "  Xerxes M. Dynatos  (Level design)",
         "  Edward  (Level design)",
+        "  Manuel Eisentraut  (Level design)",
         "  Stephanie Fabian  (Invaluable bug reports)",
+        "  Johann Freymuth  (Invaluable bug reports)",
         "  Roberto Garc?a (Spanish translation)",
         "  Andy Geldmacher  (Level design)",
         "  Edwin Groothuis  (FreeBSD port)",
         "  Immanuel Herrmann  (Level design)",
         "  M?t? Lehel Juh?sz  (Hungarian translation)",
         0,
+        "  Johannes H?sing  (Level design)",
+        "  Brian Huffman  (Level design)",
         "  Samuele Kaplun  (Italian translation)",
         "  Jens-Christian Korth  (Level design)",
         "  Manuel K?nig  (Level design, bug reports)",
@@ -175,6 +182,7 @@
         "  Joona Laire  (Level design)",
         "  Markus Laire  (Level design)",
         "  Dominik Lehmann  (Level design)",
+        "  Dominik Leipold  (Level design)",
         "  Edward Leuf  (Feedback, bug reports)",
         "  Ingo van Lil  (Feedback, bug reports)",
         "  Frank van der Loo  (Dutch translation)",
@@ -186,9 +194,12 @@
         "  Daniel Nylander  (Swedish translation)",
         0,
         "  Andreas Persenius  (Level design)",
+        "  Mark Pulley  (Level design)",
+        "  Stephen Morley (Safalra)   (Level design)",
         "  Peter Santo  (Level design)",
         "  Tobias Schmidbauer  (Windows installer and icon)",
         "  Achim Settelmeier  (RPM specfile)",
+        "  ShadowPhrogg32642342 (D?niel Borb?ly)  (Level design)",
         "  Jon Sneyers  (Level design)",
         "  Spaceman  (Level design)",
         "  Ulf Stegemann  (Level design)",
@@ -196,10 +207,12 @@
         "  Mikke Surakka (Finnish translation)",
         "  Andrzej Szombierski  (Level design)",
         "  Tacvek  (Lua 5.1 upgrade)",
+        "  James Taylor  (Level design)",
         "  Michael Terry  (.desktop file)",
         "  Ray Wick  (Level design)",
         "  Joe Wreschnig  (Manual page)",
         "  ???? ????????? - Yuriy Zhyromskiy  (Russian Manual)",
+        "  /dev/null  (Level design)",
         0,
     };
     



From ral at mail.berlios.de  Wed Mar  4 01:25:59 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Wed, 4 Mar 2009 01:25:59 +0100
Subject: [Enigma-game-svn] r1575 - team_levelpacks/team_test_new_api
Message-ID: <200903040025.n240Pxh2019579@sheep.berlios.de>

Author: ral
Date: 2009-03-04 01:25:51 +0100 (Wed, 04 Mar 2009)
New Revision: 1575

Modified:
   team_levelpacks/team_test_new_api/ralT079_1.xml
Log:
Test Level new API:
- updates for spitter


Modified: team_levelpacks/team_test_new_api/ralT079_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT079_1.xml	2009-03-04 00:14:10 UTC (rev 1574)
+++ team_levelpacks/team_test_new_api/ralT079_1.xml	2009-03-04 00:25:51 UTC (rev 1575)
@@ -43,6 +43,7 @@
 ti["4"] = {"st_dispenser_bombblack"}
 ti["5"] = {"st_dispenser_bombwhite"}
 ti["6"] = {"st_dispenser_dynamite"}
+ti["8"] = {"st_dispenser_bombblack"} .. ti["b"]
 
 ti["L"] = {"st_laser_s", state=ON}
 ti["P"] = {"st_polarswitch"}
@@ -59,9 +60,16 @@
 ti["v"] = {"st_brownpyramide", "sdest#"}
 ti["s"] = {"st_switch", target="autospitter", action="spit"}
 
+ti["U"] = {"st_spitter", "autospitter2", destination={"slabi", "slabj", "slabk"}, secure=true}
+ti["i"] = {"fl_redslab", "slabi"}
+ti["j"] = {"fl_redslab", "slabj"}
+ti["k"] = {"fl_redslab", "slabk"}
+ti["T"] = {"st_switch", target="autospitter2", action="spit"}
 
+ti["p"] = {"st_puzzle", cluster=1}
+
 w, h = wo(ti, " ", {
-"L       ddd        C",
+"L       ddd  448   C",
 "P       ddd         ",
 "   b    ddd     w  x",
 "          e         ",
@@ -69,23 +77,23 @@
 "I                   ",
 "I                  5",
 "            t       ",
-"   b               6",
-"   w                ",
-"           c        ",
-"               .. ~~",
-"Y   y   z  Z   .. ~~",
-"                    ",
+"4  b               6",
+"4  w                ",
+"4d         c        ",
+"b              .. ~~",
+"  Y y   z  Z   .. ~~",
+"      k             ",
 "+++++++       v     ",
 "+++++++             ",
 "v++++++       L    v",
 "+++++++       P     ",
-"v                v  ",
-"                    ",
+"v  j             v i",
+"                ppp ",
 "         vv       BB",
 "d dox  x      O   BB",
 "   C                ",
 "y     II          W ",
-"y  C  II v S    s  V"
+"y  C  II v S  s V TU"
 })
 
 local spitdest = po(13.5, 15.5)



From ral at mail.berlios.de  Wed Mar  4 21:35:34 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Wed, 4 Mar 2009 21:35:34 +0100
Subject: [Enigma-game-svn] r1576 - in trunk: data data/schemas src/items
	src/stones
Message-ID: <200903042035.n24KZYwH008269@sheep.berlios.de>

Author: ral
Date: 2009-03-04 21:35:33 +0100 (Wed, 04 Mar 2009)
New Revision: 1576

Modified:
   trunk/data/api1init.lua
   trunk/data/api2init.lua
   trunk/data/schemas/objects.xml
   trunk/src/items/SeedItem.cc
   trunk/src/items/TrapItem.cc
   trunk/src/stones/DispenserStone.cc
   trunk/src/stones/QuakeStone.cc
   trunk/src/stones/StoneImpulse.cc
Log:
Trunk 1.1: new API reengineering
- st_dispenser rename new attribute "max" to "stock"
- it_seed rename flavor "fake" to "greenbrown"
- fix st_quake: enable state setting to ACTIVE
- fix it_trap: allow state setting initially and to OPEN during runtime
- fix st_stoneimpulse: disallow attribute setting during runtime


Modified: trunk/data/api1init.lua
===================================================================
--- trunk/data/api1init.lua	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/data/api1init.lua	2009-03-04 20:35:33 UTC (rev 1576)
@@ -217,7 +217,7 @@
     it_ring = "it-ring",
     it_rubberband = "it-rubberband",
     it_seed = "it-seed",
-    it_seed_fake = "it-seed_nowood",
+    it_seed_greenbrown = "it-seed_nowood",
     it_seed_volcano = "it-seed_volcano",
     it_spade = "it-spade",
     it_spoon = "it-spoon",

Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/data/api2init.lua	2009-03-04 20:35:33 UTC (rev 1576)
@@ -84,7 +84,8 @@
 YANG      = 1
 EMPTY     = 0
 FULL      = 2
-BROKEN    = 1 
+BROKEN    = 1
+BREAKING  = 2
 
 -- color
 BLACK  = 0

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/data/schemas/objects.xml	2009-03-04 20:35:33 UTC (rev 1576)
@@ -82,6 +82,7 @@
     <attr name="state" type="int" default="0" min="0" max="1" rw="rw"/>
     <attr name="static" type="bool" default="false" rw="rw"/>
     <attr name="steady" type="bool" default="false" rw="rw"/>
+    <attr name="stock" type="int" default="1000" rw="rw"/>
     <attr name="strength" type="double" default="1" rw="rw"/>
     <attr name="target" type="tokens" default="nil" rw="rw"/>
     <attr name="text" type="string" default="nil" rw="rw"/>
@@ -737,8 +738,8 @@
     <object name="it_seed_wood">
       <attr name="flavor" value="wood"/>
     </object>
-    <object name="it_seed_fake">
-      <attr name="flavor" value="fake"/>
+    <object name="it_seed_greenbrown">
+      <attr name="flavor" value="greenbrown"/>
     </object>
     <object name="it_seed_volcano">
       <attr name="flavor" value="volcano"/>
@@ -1212,7 +1213,7 @@
     </object>
     <object name="st_dispenser">
       <attr name="flavor" default="bombblack" rw="r"/>
-      <attr name="max" default="1000"/>
+      <attr name="stock" default="1000"/>
       <msg name="_explosion"/>
       <msg name="_dispenser"/>
     </object>

Modified: trunk/src/items/SeedItem.cc
===================================================================
--- trunk/src/items/SeedItem.cc	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/src/items/SeedItem.cc	2009-03-04 20:35:33 UTC (rev 1576)
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2008 Ronald Lamprecht
+ * Copyright (C) 2008,2009 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -39,11 +39,11 @@
             std::string flavor = val.to_string();
             int code;
             if (flavor == "wood") code = 0;
-            else if (flavor == "fake") code = 1;
+            else if (flavor == "greenbrown") code = 1;
             else if (flavor == "volcano") code = 2;
             else if (flavor == "hay") code = 3;
             else
-                ASSERT(false, XLevelRuntime, ecl::strf("Seed: illegal flavor value #s", flavor.c_str()).c_str());
+                ASSERT(false, XLevelRuntime, ecl::strf("Seed: illegal flavor value %s", flavor.c_str()).c_str());
                 
             objFlags = (objFlags & ~OBJBIT_FLAVOR) | (code << 24);
             if (isDisplayable()) {
@@ -59,7 +59,7 @@
             int flavor = (objFlags & OBJBIT_FLAVOR) >> 24;
             switch (flavor) {
                 case 0 : return "wood"; break;
-                case 1 : return "fake"; break;
+                case 1 : return "greenbrown"; break;
                 case 2 : return "volcano"; break;
                 case 3 : return "hay"; break;
             }
@@ -107,6 +107,7 @@
        }
        Stone *st = MakeStone(flavor == 0 ? "st_box_wood_growing" : (flavor == 1 ? "st_greenbrown_growing" :
                (flavor == 2 ? "st_volcano_growing" : "st_box_hay_growing")));
+       ASSERT(st != NULL, XLevelRuntime, "SeedItem - failure on stone creation");
        transferIdentity(st);
        if (Value v = getAttr("secure"))
            st->setAttr("secure", v);
@@ -152,14 +153,14 @@
 
     ItemTraits SeedItem::traits[3] = {
         {"it_seed_wood", it_seed_wood, itf_static, 0.2},
-        {"it_seed_fake", it_seed_fake, itf_static, 0.2},
+        {"it_seed_greenbrown", it_seed_fake, itf_static, 0.2},
         {"it_seed_volcano", it_seed_volcano, itf_static, 0.2}
     };
 
     BOOT_REGISTER_START
         BootRegister(new SeedItem(0), "it_seed");
         BootRegister(new SeedItem(0), "it_seed_wood");
-        BootRegister(new SeedItem(1), "it_seed_fake");
+        BootRegister(new SeedItem(1), "it_seed_greenbrown");
         BootRegister(new SeedItem(2), "it_seed_volcano");
         BootRegister(new SeedItem(3), "it_seed_hay");
     BOOT_REGISTER_END

Modified: trunk/src/items/TrapItem.cc
===================================================================
--- trunk/src/items/TrapItem.cc	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/src/items/TrapItem.cc	2009-03-04 20:35:33 UTC (rev 1576)
@@ -39,10 +39,11 @@
     }
     
     void TrapItem::setState(int extState) {
-        if (state == 0) {       // no toggle back of a broken (open) trap
-            state == extState;
+        if (isDisplayable() && state == 0) {       // no toggle back of a broken (open) trap
+            state = extState;
             init_model();
-        }
+        } else
+            state = extState;
     }
     
     void TrapItem::init_model() {

Modified: trunk/src/stones/DispenserStone.cc
===================================================================
--- trunk/src/stones/DispenserStone.cc	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/src/stones/DispenserStone.cc	2009-03-04 20:35:33 UTC (rev 1576)
@@ -80,7 +80,7 @@
     }
 
     void DispenserStone::actor_hit(const StoneContact &sc) {
-        int reserve = getAttr("max");
+        int reserve = getAttr("stock");
         if (reserve > 0) {
             if (enigma::Inventory *inv = player::GetInventory(sc.actor)) {
                 if (!inv->is_full()) {
@@ -98,7 +98,7 @@
                     }
                     inv->add_item(MakeItem(itemkind.c_str()));
                     player::RedrawInventory(inv);
-                    setAttr("max", reserve - 1);
+                    setAttr("stock", reserve - 1);
                 }
             }
         }

Modified: trunk/src/stones/QuakeStone.cc
===================================================================
--- trunk/src/stones/QuakeStone.cc	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/src/stones/QuakeStone.cc	2009-03-04 20:35:33 UTC (rev 1576)
@@ -55,7 +55,7 @@
         if (state == extState)
             return;
             
-        if ((state == IDLE && extState == BREAKING) || (state == ACTIVEBREAKING && extState == IDLE)) {
+        if ((state == IDLE && extState == 2) || (state == ACTIVEBREAKING && extState == 0)) {
             state = BREAKING;
             if (isDisplayable()) {
                 fart();

Modified: trunk/src/stones/StoneImpulse.cc
===================================================================
--- trunk/src/stones/StoneImpulse.cc	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/src/stones/StoneImpulse.cc	2009-03-04 20:35:33 UTC (rev 1576)
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2008 Ronald Lamprecht
+ * Copyright (C) 2008,2009 Ronald Lamprecht
  *
  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
@@ -41,24 +41,30 @@
         
     void StoneImpulse::setAttr(const string& key, const Value &val) {
         if (key == "hollow") {
-            if (val.to_bool()) {
-                objFlags |= OBJBIT_HOLLOW;
-                objFlags &= ~OBJBIT_MOVABLE;
-                objFlags &= ~OBJBIT_STEADY;
-            } else
-                objFlags &= ~OBJBIT_HOLLOW;
+            if (!isDisplayable()) {
+                if (val.to_bool()) {
+                    objFlags |= OBJBIT_HOLLOW;
+                    objFlags &= ~OBJBIT_MOVABLE;
+                    objFlags &= ~OBJBIT_STEADY;
+                } else
+                    objFlags &= ~OBJBIT_HOLLOW;
+            }
         } else if (key == "movable") {
-            if (val.to_bool()) {
-                objFlags |= OBJBIT_MOVABLE;
-                objFlags &= ~OBJBIT_HOLLOW;
-            } else
-                objFlags &= ~OBJBIT_MOVABLE;
+            if (!isDisplayable()) {
+                if (val.to_bool()) {
+                    objFlags |= OBJBIT_MOVABLE;
+                    objFlags &= ~OBJBIT_HOLLOW;
+                } else
+                    objFlags &= ~OBJBIT_MOVABLE;
+            }
         } else if (key == "steady") {
-            if (val.to_bool()) {
-                objFlags |= OBJBIT_STEADY;
-                objFlags &= ~OBJBIT_HOLLOW;
-            } else
-                objFlags &= ~OBJBIT_STEADY;
+            if (!isDisplayable()) {
+                if (val.to_bool()) {
+                    objFlags |= OBJBIT_STEADY;
+                    objFlags &= ~OBJBIT_HOLLOW;
+                } else
+                    objFlags &= ~OBJBIT_STEADY;
+            }
         } else if (key == "orientation") {
             if (!isDisplayable()) {
                 Stone::setAttr("$incoming", reverse(to_direction(val)));
@@ -327,8 +333,8 @@
         BootRegister(new StoneImpulse(false, false, false, false), "st_stoneimpulse");
         BootRegister(new StoneImpulse(true,  false, false, false), "st_stoneimpulse_steady");
         BootRegister(new StoneImpulse(false, true,  false, false), "st_stoneimpulse_hollow");
-        BootRegister(new StoneImpulse(false, false, true,  false),  "st_stoneimpulse_movable");
-        BootRegister(new StoneImpulse(false, false, false, true), "st_stoneimpulse_new");
+        BootRegister(new StoneImpulse(false, false, true,  false), "st_stoneimpulse_movable");
+        BootRegister(new StoneImpulse(false, false, false, true),  "st_stoneimpulse_new");
     BOOT_REGISTER_END
 
 } // namespace enigma



From raoul at mail.berlios.de  Wed Mar  4 21:51:24 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Wed, 4 Mar 2009 21:51:24 +0100
Subject: [Enigma-game-svn] r1577 - in trunk/data/levels: enigma_cross
	enigma_iii enigma_vi enigma_vii
Message-ID: <200903042051.n24KpO5j010934@sheep.berlios.de>

Author: raoul
Date: 2009-03-04 21:51:23 +0100 (Wed, 04 Mar 2009)
New Revision: 1577

Added:
   trunk/data/levels/enigma_vii/duffy156_2.xml
Removed:
   trunk/data/levels/enigma_vii/duffy156_1.xml
Modified:
   trunk/data/levels/enigma_cross/newlevels.xml
   trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
   trunk/data/levels/enigma_iii/luc04_2.xml
   trunk/data/levels/enigma_vi/index.xml
   trunk/data/levels/enigma_vi/ral10_2.xml
   trunk/data/levels/enigma_vii/index.xml
Log:
-> Rewritings, thief floor updates



Modified: trunk/data/levels/enigma_cross/newlevels.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_cross/newlevels.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -195,7 +195,7 @@
     <level _seq="187" _title="- Meditation -" _xpath="enigma_vi/andreas36_2" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas36" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="188" _title="Troy" _xpath="enigma_vi/andreas37_2" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas37" rel="2" rev="3" score="2" target="time" unit="duration"/>
     <level _seq="189" _title="Ben Hur" _xpath="enigma_vi/ral13_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20061011ral390" rel="1" rev="58" score="1" target="time" unit="duration"/>
-    <level _seq="190" _title="Bodyguard" _xpath="enigma_vi/ral10_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060730ral012" rel="2" rev="106" score="1" target="time" unit="duration"/>
+    <level _seq="190" _title="Bodyguard" _xpath="enigma_vi/ral10_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060730ral012" rel="2" rev="152" score="1" target="time" unit="duration"/>
     <level _seq="191" _title="Janus" _xpath="enigma_vi/andreas38_2" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas38" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="192" _title="Phaeton" _xpath="enigma_vi/andreas39_2" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas39" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="193" _title="Ariadne" _xpath="enigma_vi/andreas40_1" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas40" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.0.1.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_cross/newlevels_1.0.1.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -61,7 +61,7 @@
     <level _seq="53" _title="Free Riders" _xpath="enigma_vii/duffy155_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy155" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="54" _title="Meditation in Peace" _xpath="enigma_vii/ral20_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20070502ral466" rel="2" rev="148" score="2" target="time" unit="duration"/>
     <level _seq="55" _title="Laser Squad" _xpath="enigma_vii/duffy153_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy153" rel="1" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="56" _title="Protected Exhibition" _xpath="enigma_vii/duffy156_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy156" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="56" _title="Protected Exhibition" _xpath="enigma_vii/duffy156_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy156" rel="2" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="57" _title="Oneway for White" _xpath="enigma_vii/duffy157_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy157" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="58" _title="Widgets in the Attic" _xpath="enigma_vii/duffy158_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy158" rel="2" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="59" _title="The Wild Hunt" _xpath="enigma_vii/duffy159_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy159" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_iii/luc04_2.xml
===================================================================
--- trunk/data/levels/enigma_iii/luc04_2.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_iii/luc04_2.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Walk the Dog" el:subtitle="" el:id="luc04"/>
-      <el:version el:score="1" el:release="2" el:revision="1" el:status="stable"/>
+      <el:version el:score="1" el:release="2" el:revision="1" el:status="released"/>
       <el:author  el:name="Lukas Sch?ller" el:email="Lucky_Luc at web.de" el:homepage=""/>
       <el:copyright>Copyright ? 2005 Lukas Sch?ller</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>

Modified: trunk/data/levels/enigma_vi/index.xml
===================================================================
--- trunk/data/levels/enigma_vi/index.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_vi/index.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -58,7 +58,7 @@
     <level _seq="50" _title="Hot Meditation" _xpath="./ral08_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060527ral010" rel="1" rev="42" score="1" target="time" unit="duration"/>
     <level _seq="51" _title="Just a Maze?" _xpath="./duffy12_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy12" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="52" _title="Checkmate II" _xpath="./andreas35_2" author="Andreas Lochmann" ctrl="force" easy="false" id="andreas35" rel="2" rev="10" score="1" target="time" unit="duration"/>
-    <level _seq="53" _title="Bodyguard" _xpath="./ral10_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060730ral012" rel="2" rev="106" score="1" target="time" unit="duration"/>
+    <level _seq="53" _title="Bodyguard" _xpath="./ral10_2" author="Ronald Lamprecht" ctrl="force" easy="true" id="20060730ral012" rel="2" rev="152" score="1" target="time" unit="duration"/>
     <level _seq="54" _title="be quick or be dead" _xpath="./illmind12_1" author="illmind" ctrl="force" easy="true" id="illmind12" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="55" _title="Puzzle Puzzles" _xpath="./raoul26_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul26" rel="1" rev="26" score="1" target="time" unit="duration"/>
     <level _seq="56" _title="Tarzan" _xpath="./ulf03_1" author="Ulf Stegemann" ctrl="force" easy="true" id="20060629ulf003" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_vi/ral10_2.xml
===================================================================
--- trunk/data/levels/enigma_vi/ral10_2.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_vi/ral10_2.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -3,7 +3,7 @@
   <el:protected >
     <el:info el:type="level">
       <el:identity el:title="Bodyguard" el:subtitle="In the line of thieves" el:id="20060730ral012"/>
-      <el:version el:score="1" el:release="2" el:revision="$Revision: 106 $" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="$Revision: 152 $" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
       <el:copyright>Copyright ? 2006 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -15,12 +15,12 @@
 wo["ConserveLevel"] = false
 
 ti[" "] = {"fl_bluegray"}
-ti["."] = {"fl_thief"}
+ti["."] = {"fl_thief", friction=2.0}
 ti["#"] = {"st_rawglass"}
 ti["+"] = {"st_rawglass", "doorA#"}
 ti["*"] = {"st_rawglass", "doorB#"}
-ti["B"] = {"st_passage_black_frame"}
-ti["W"] = {"st_passage_white_frame"}
+ti["B"] = {"st_passage_black", flavor="frame"}
+ti["W"] = {"st_passage_white", flavor="frame"}
 ti["b"] = ti["B"] .. {"it_yinyang"}
 ti["w"] = ti["W"] .. {"it_yinyang"}
 ti["c"] = {"it_cross"}
@@ -30,8 +30,8 @@
 ti["m"] = ti["W"] .. {"it_key", code="%3"}
 ti["n"] = ti["W"] .. {"it_key", code="%4"}
 
-ti["1"] = ti["."] .. {"#ac_marble_black", owner=0}
-ti["0"] = ti["."] .. {"#ac_marble_white", owner=1, controllers=2}
+ti["1"] = ti["."] .. {"#ac_marble_black"}
+ti["0"] = ti["."] .. {"#ac_marble_white"}
 ti["H"] = ti["."] .. {"#ac_horse", strength=1, destination={"op%1", "op%2","op%3", "op%4"}}
 ti["h"] = ti["."] .. {"#ac_horse", strength=1, destination={"ip%1", "ip%2","ip%3", "ip%4"}}
 
@@ -53,8 +53,8 @@
 
 ti["x"] = {"st_oxyd"}
 
-local resolver = res.autotile(ti, {"2", "5", "template_outer"},
-        {"6", "9", "template_inner"}, {"P","S", "template_P"},
+local resolver = res.autotile(ti, {"2", "5", "template_outer"}, 
+        {"6", "9", "template_inner"}, {"P","S", "template_P"}, 
         {"K","N", "template_K"})
 
 w, h = wo(resolver, " ", {

Deleted: trunk/data/levels/enigma_vii/duffy156_1.xml
===================================================================
--- trunk/data/levels/enigma_vii/duffy156_1.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_vii/duffy156_1.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -1,96 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="level">
-      <el:identity el:title="Protected Exhibition" el:subtitle="" el:id="duffy156"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
-      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007 Jacob Scott</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.01">
-      </el:compatibility>
-      <el:modes el:easy="true" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:credits el:showinfo="true" el:showstart="false">Ronald Lamprecht for idea and solution of difficult mode</el:credits>
-        <el:code>Lua 5.1 and XML</el:code>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-rooms_wide=1
-rooms_high=1
-
-levelw=1+(19*rooms_wide)
-levelh=1+(12*rooms_high)
-
-create_world( levelw, levelh)
-
-fill_floor("fl-bluegray", 0,0,levelw,levelh)
-
-function renderLine( line, pattern)
-    for i=1, strlen(pattern) do
-        local c = strsub( pattern, i, i)
-        if c =="#" then
-            set_stone( "st-rock1", i-1, line)
-        elseif c == "o" then
-            oxyd( i-1, line)
-        elseif c == "O" then
-            if difficult then
-                oxyd( i-1, line)
-            else
-                set_stone("st-rock1", i-1, line)
-            end
-        elseif c == "T" and difficult then
-            set_floor("fl-thief",i-1,line)
-        elseif c == "*" then
-            set_stone( "st-brownie", i-1, line)
-        elseif c == "!" then
-            abyss(i-1,line)
-        elseif c == "~" then
-            set_floor("fl-water",i-1,line)
-        elseif c=="z" then
-            set_actor("ac-blackball", i-.5,line+.5, {player=0})
-        elseif c == "g" then
-            draw_stones("st-grate1",{i-1,line}, {1,1}, 1)
-        elseif c=="+" then
-            set_stone( "st-wood", i-1, line)
-        elseif c=="=" then
-            set_floor("fl-space",i-1,line)
-        elseif c=="s" then
-            set_stone("st-stoneimpulse",i-1,line)
-        elseif c=="N" then
-            set_stone("st-laser",i-1,line,{dir=NORTH,on=TRUE})
-        elseif c=="E" then
-            set_stone("st-laser",i-1,line,{dir=EAST,on=TRUE})
-        elseif c=="S" then
-            set_stone("st-laser",i-1,line,{dir=SOUTH,on=TRUE})
-        elseif c=="W" then
-            set_stone("st-laser",i-1,line,{dir=WEST,on=TRUE})
-        end
-    end
-end
-
-renderLine(00,"####################")
-renderLine(01,"#o~     S  S     ~o#")
-renderLine(02,"#~~              ~~#")
-renderLine(03,"# T      ##      T #")
-renderLine(04,"#      +    +      #")
-renderLine(05,"O~N   #  ++  #   N~O")
-renderLine(06,"# ~~E   +  +   W~~ #")
-renderLine(07,"O~S   #  ++  #   S~O")
-renderLine(08,"#      +    +      #")
-renderLine(09,"# T      ##      T #")
-renderLine(10,"#~~ z            ~~#")
-renderLine(11,"#o~     N  N     ~o#")
-renderLine(12,"####################")
-
-oxyd_shuffle()
-
-    ]]></el:luamain>
-    <el:i18n>
-      <el:string el:key="title">
-        <el:english el:translate="false"/>
-      </el:string>
-    </el:i18n>
-  </el:protected>
-</el:level>

Copied: trunk/data/levels/enigma_vii/duffy156_2.xml (from rev 1575, trunk/data/levels/enigma_vii/duffy156_1.xml)
===================================================================
--- trunk/data/levels/enigma_vii/duffy156_1.xml	2009-03-04 00:25:51 UTC (rev 1575)
+++ trunk/data/levels/enigma_vii/duffy156_2.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Protected Exhibition" el:subtitle="" el:id="duffy156"/>
+      <el:version el:score="1" el:release="2" el:revision="4" el:status="released"/>
+      <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2007 Jacob Scott</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:comments>
+        <el:credits el:showinfo="true" el:showstart="false">Ronald Lamprecht for idea and solution of difficult mode</el:credits>
+        <el:code>New API converted by R. Bourquin</el:code>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+ti[" "] = {"fl_bluegray"}
+ti["~"] = {"fl_water"}
+ti["-"] = {"fl_thief"}
+ti["#"] = {"st_granite"}
+ti["+"] = {"st_box"}
+ti["^"] = {"st_laser", orientation=NORTH, state=ON}
+ti[">"] = {"st_laser", orientation=EAST, state=ON}
+ti["V"] = {"st_laser", orientation=SOUTH, state=ON}
+ti["<"] = {"st_laser", orientation=WEST, state=ON}
+ti["O"] = {"st_oxyd"}
+if wo["IsDifficult"] then
+    ti["o"] = ti["O"]
+else
+    ti["o"] = ti["#"]
+end
+ti["@"] = {"#ac_marble_black"}
+
+wo(ti, " ", {
+    "####################",
+    "#O~     V  V     ~O#",
+    "#~~              ~~#",
+    "# -      ##      - #",
+    "#      +    +      #",
+    "o~^   #  ++  #   ^~o",
+    "# ~~>   +  +   <~~ #",
+    "o~V   #  ++  #   V~o",
+    "#      +    +      #",
+    "# -      ##      - #",
+    "#~~ @            ~~#",
+    "#O~     ^  ^     ~O#",
+    "####################"})
+
+wo:shuffleOxyd()
+ ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>

Modified: trunk/data/levels/enigma_vii/index.xml
===================================================================
--- trunk/data/levels/enigma_vii/index.xml	2009-03-04 20:35:33 UTC (rev 1576)
+++ trunk/data/levels/enigma_vii/index.xml	2009-03-04 20:51:23 UTC (rev 1577)
@@ -21,7 +21,7 @@
     <level _seq="13" _title="Oneway for White" _xpath="./duffy157_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy157" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="14" _title="The Wild Hunt" _xpath="./duffy159_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy159" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="15" _title="Widgets in the Attic" _xpath="./duffy158_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy158" rel="2" rev="2" score="1" target="time" unit="duration"/>
-    <level _seq="16" _title="Protected Exhibition" _xpath="./duffy156_1" author="Jacob Scott" ctrl="force" easy="true" id="duffy156" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="16" _title="Protected Exhibition" _xpath="./duffy156_2" author="Jacob Scott" ctrl="force" easy="true" id="duffy156" rel="2" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="17" _title="Upstairs Meditation" _xpath="./duffy138_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy138" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="18" _title="Speed Meditation" _xpath="./duffy148_2" author="Jacob Scott" ctrl="force" easy="false" id="duffy148" rel="2" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="19" _title="Pool with a pole" _xpath="./alain28_2" author="Alain Busser" ctrl="force" easy="false" id="alain28" rel="2" rev="2" score="1" target="time" unit="duration"/>



From ral at mail.berlios.de  Wed Mar  4 22:35:35 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Wed, 4 Mar 2009 22:35:35 +0100
Subject: [Enigma-game-svn] r1578 - homepage/input
Message-ID: <200903042135.n24LZZmu015273@sheep.berlios.de>

Author: ral
Date: 2009-03-04 22:35:27 +0100 (Wed, 04 Mar 2009)
New Revision: 1578

Modified:
   homepage/input/stat-other.html
   homepage/input/table-hcp.html
   homepage/input/table-rat.html
   homepage/input/table-solved.html
   homepage/input/table-wr.html
   homepage/input/userlist.html
Log:
Homepage:
- statistics February 2009



Modified: homepage/input/stat-other.html
===================================================================
--- homepage/input/stat-other.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/stat-other.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -1,22 +1,22 @@
   <div class="stat-help">
     <h3>$$Other_Statistics$$</h3>
     <h4>$$Scores$$</h4>
-      88846 $$single_level_scores$$.
+      89561 $$single_level_scores$$.
     <h4>$$Ratings$$</h4>
-      17020 $$single_level_ratings$$ 4.93 $$and_distribution$$: 
+      17166 $$single_level_ratings$$ 4.93 $$and_distribution$$: 
       <table>
         <colgroup><col width="80"><col width="80"></colgroup>
         <tr><th>$$rating$$</th><th>$$count$$</th></tr>
         <tr><td class="num">0</td><td class="num">113</td></tr>
-        <tr><td class="num">1</td><td class="num">309</td></tr>
-        <tr><td class="num">2</td><td class="num">884</td></tr>
-        <tr><td class="num">3</td><td class="num">2338</td></tr>
-        <tr><td class="num">4</td><td class="num">3216</td></tr>
-        <tr><td class="num">5</td><td class="num">4079</td></tr>
-        <tr><td class="num">6</td><td class="num">2882</td></tr>
-        <tr><td class="num">7</td><td class="num">1948</td></tr>
-        <tr><td class="num">8</td><td class="num">778</td></tr>
-        <tr><td class="num">9</td><td class="num">313</td></tr>
-        <tr><td class="num">10</td><td class="num">160</td></tr>
+        <tr><td class="num">1</td><td class="num">311</td></tr>
+        <tr><td class="num">2</td><td class="num">895</td></tr>
+        <tr><td class="num">3</td><td class="num">2362</td></tr>
+        <tr><td class="num">4</td><td class="num">3251</td></tr>
+        <tr><td class="num">5</td><td class="num">4097</td></tr>
+        <tr><td class="num">6</td><td class="num">2907</td></tr>
+        <tr><td class="num">7</td><td class="num">1966</td></tr>
+        <tr><td class="num">8</td><td class="num">787</td></tr>
+        <tr><td class="num">9</td><td class="num">315</td></tr>
+        <tr><td class="num">10</td><td class="num">162</td></tr>
       </table>
   </div>

Modified: homepage/input/table-hcp.html
===================================================================
--- homepage/input/table-hcp.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/table-hcp.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -1,174 +1,176 @@
   <table>
-    <caption>$$Handicap_Statistics$$ $$January$$ 2009</caption>
+    <caption>$$Handicap_Statistics$$ $$February$$ 2009</caption>
     <colgroup><col width="130"><col width="220"></colgroup>
     <tr><th>$$solved_hcp$$</th><th class="left">$$user$$</th></tr>
-     <tr><td class="num">-145.9</td><td class="left">'Moneymaker'</td></tr>
-     <tr><td class="num"> -89.8</td><td class="left">'daydreamer'</td></tr>
-     <tr><td class="num"> -78.5</td><td class="left">'Stupid'</td></tr>
-     <tr><td class="num"> -78.3</td><td class="left">'Johannes'</td></tr>
-     <tr><td class="num"> -67.1</td><td class="left">'Great Scott'</td></tr>
-     <tr><td class="num"> -64.7</td><td class="left">'dev0'</td></tr>
-     <tr><td class="num"> -57.1</td><td class="left">'Mentist'</td></tr>
-     <tr><td class="num"> -57.1</td><td class="left">'Duffy'</td></tr>
-     <tr><td class="num"> -55.7</td><td class="left">'Malla'</td></tr>
-     <tr><td class="num"> -52.8</td><td class="left">'ryujun'</td></tr>
-     <tr><td class="num"> -50.5</td><td class="left">'Crystalicum'</td></tr>
-     <tr><td class="num"> -48.0</td><td class="left">'Daisy'</td></tr>
-     <tr><td class="num"> -47.6</td><td class="left">'Alexandros'</td></tr>
-     <tr><td class="num"> -45.1</td><td class="left">'Django'</td></tr>
-     <tr><td class="num"> -43.0</td><td class="left">'Gloop'</td></tr>
-     <tr><td class="num"> -36.0</td><td class="left">'Taztunes'</td></tr>
-     <tr><td class="num"> -33.4</td><td class="left">'Safalra'</td></tr>
-     <tr><td class="num"> -33.1</td><td class="left">'Emmanuel'</td></tr>
-     <tr><td class="num"> -30.8</td><td class="left">'Ludmian'</td></tr>
-     <tr><td class="num"> -28.0</td><td class="left">'B-Huff'</td></tr>
-     <tr><td class="num"> -26.0</td><td class="left">'dpl'</td></tr>
-     <tr><td class="num"> -25.2</td><td class="left">'Zekobah'</td></tr>
-     <tr><td class="num"> -24.0</td><td class="left">'bojster'</td></tr>
-     <tr><td class="num"> -21.4</td><td class="left">'ged'</td></tr>
-     <tr><td class="num"> -19.6</td><td class="left">'hendrik'</td></tr>
-     <tr><td class="num"> -18.3</td><td class="left">'ABS'</td></tr>
-     <tr><td class="num"> -17.7</td><td class="left">'Raoul'</td></tr>
-     <tr><td class="num"> -17.3</td><td class="left">'Ghatotkacha'</td></tr>
-     <tr><td class="num"> -14.7</td><td class="left">'Ronald'</td></tr>
-     <tr><td class="num"> -13.4</td><td class="left">'Angolino'</td></tr>
-     <tr><td class="num">  -9.5</td><td class="left">'Lukas'</td></tr>
-     <tr><td class="num">  -8.8</td><td class="left">'HuB34'</td></tr>
-     <tr><td class="num">  -5.4</td><td class="left">'Iceshark7'</td></tr>
-     <tr><td class="num">  -5.2</td><td class="left">'Timo'</td></tr>
-     <tr><td class="num">  -5.1</td><td class="left">'joseba'</td></tr>
-     <tr><td class="num">  -1.7</td><td class="left">'Daniel'</td></tr>
-     <tr><td class="num">  -0.5</td><td class="left">'fabian'</td></tr>
-     <tr><td class="num">  -0.1</td><td class="left">'U-Punkt'</td></tr>
-     <tr><td class="num">   0.0</td><td class="left">'Hairball'</td></tr>
-     <tr><td class="num">   1.0</td><td class="left">'Craven'</td></tr>
-     <tr><td class="num">   1.0</td><td class="left">'JuSt'</td></tr>
-     <tr><td class="num">   1.2</td><td class="left">'Wuzzy'</td></tr>
-     <tr><td class="num">   1.7</td><td class="left">'Freshman'</td></tr>
-     <tr><td class="num">   2.6</td><td class="left">'mrduke'</td></tr>
-     <tr><td class="num">   3.6</td><td class="left">'para_doks'</td></tr>
+     <tr><td class="num">-146.9</td><td class="left">'Moneymaker'</td></tr>
+     <tr><td class="num"> -96.2</td><td class="left">'daydreamer'</td></tr>
+     <tr><td class="num"> -77.6</td><td class="left">'Stupid'</td></tr>
+     <tr><td class="num"> -77.3</td><td class="left">'Johannes'</td></tr>
+     <tr><td class="num"> -66.1</td><td class="left">'Great Scott'</td></tr>
+     <tr><td class="num"> -64.3</td><td class="left">'dev0'</td></tr>
+     <tr><td class="num"> -61.2</td><td class="left">'Mentist'</td></tr>
+     <tr><td class="num"> -56.1</td><td class="left">'Duffy'</td></tr>
+     <tr><td class="num"> -55.9</td><td class="left">'Crystalicum'</td></tr>
+     <tr><td class="num"> -54.9</td><td class="left">'Malla'</td></tr>
+     <tr><td class="num"> -51.8</td><td class="left">'ryujun'</td></tr>
+     <tr><td class="num"> -51.4</td><td class="left">'Daisy'</td></tr>
+     <tr><td class="num"> -46.6</td><td class="left">'Alexandros'</td></tr>
+     <tr><td class="num"> -44.2</td><td class="left">'Django'</td></tr>
+     <tr><td class="num"> -42.1</td><td class="left">'Gloop'</td></tr>
+     <tr><td class="num"> -35.0</td><td class="left">'Taztunes'</td></tr>
+     <tr><td class="num"> -32.6</td><td class="left">'Safalra'</td></tr>
+     <tr><td class="num"> -32.1</td><td class="left">'Emmanuel'</td></tr>
+     <tr><td class="num"> -30.0</td><td class="left">'Ludmian'</td></tr>
+     <tr><td class="num"> -27.0</td><td class="left">'B-Huff'</td></tr>
+     <tr><td class="num"> -25.3</td><td class="left">'dpl'</td></tr>
+     <tr><td class="num"> -24.4</td><td class="left">'Zekobah'</td></tr>
+     <tr><td class="num"> -23.4</td><td class="left">'bojster'</td></tr>
+     <tr><td class="num"> -21.4</td><td class="left">'Angolino'</td></tr>
+     <tr><td class="num"> -20.2</td><td class="left">'ged'</td></tr>
+     <tr><td class="num"> -18.5</td><td class="left">'hendrik'</td></tr>
+     <tr><td class="num"> -17.5</td><td class="left">'ABS'</td></tr>
+     <tr><td class="num"> -17.1</td><td class="left">'Raoul'</td></tr>
+     <tr><td class="num"> -16.4</td><td class="left">'Ghatotkacha'</td></tr>
+     <tr><td class="num"> -14.0</td><td class="left">'Ronald'</td></tr>
+     <tr><td class="num">  -9.4</td><td class="left">'Dime'</td></tr>
+     <tr><td class="num">  -8.9</td><td class="left">'Lukas'</td></tr>
+     <tr><td class="num">  -8.2</td><td class="left">'HuB34'</td></tr>
+     <tr><td class="num">  -4.8</td><td class="left">'Iceshark7'</td></tr>
+     <tr><td class="num">  -4.7</td><td class="left">'Timo'</td></tr>
+     <tr><td class="num">  -4.3</td><td class="left">'joseba'</td></tr>
+     <tr><td class="num">  -0.9</td><td class="left">'Daniel'</td></tr>
+     <tr><td class="num">   0.0</td><td class="left">'fabian'</td></tr>
+     <tr><td class="num">   0.4</td><td class="left">'U-Punkt'</td></tr>
+     <tr><td class="num">   0.6</td><td class="left">'Hairball'</td></tr>
+     <tr><td class="num">   1.5</td><td class="left">'Craven'</td></tr>
+     <tr><td class="num">   1.5</td><td class="left">'JuSt'</td></tr>
+     <tr><td class="num">   1.8</td><td class="left">'Wuzzy'</td></tr>
+     <tr><td class="num">   2.2</td><td class="left">'Freshman'</td></tr>
+     <tr><td class="num">   2.6</td><td class="left">'mecke'</td></tr>
+     <tr><td class="num">   3.0</td><td class="left">'mrduke'</td></tr>
      <tr><td class="num">   3.7</td><td class="left">'Kevin'</td></tr>
-     <tr><td class="num">   3.8</td><td class="left">'mecke'</td></tr>
-     <tr><td class="num">   3.9</td><td class="left">'Tobias'</td></tr>
-     <tr><td class="num">   4.4</td><td class="left">'Dime'</td></tr>
-     <tr><td class="num">   5.1</td><td class="left">'Guglielmo'</td></tr>
-     <tr><td class="num">   5.2</td><td class="left">'Tiza'</td></tr>
-     <tr><td class="num">   5.3</td><td class="left">'alfred69'</td></tr>
-     <tr><td class="num">   5.9</td><td class="left">'Sigma'</td></tr>
-     <tr><td class="num">   6.2</td><td class="left">'serpent'</td></tr>
-     <tr><td class="num">   6.3</td><td class="left">'Andy'</td></tr>
-     <tr><td class="num">   8.6</td><td class="left">'Austin'</td></tr>
-     <tr><td class="num">  10.0</td><td class="left">'shoki'</td></tr>
-     <tr><td class="num">  12.7</td><td class="left">'ShadowPhrogg32642342'</td></tr>
-     <tr><td class="num">  14.5</td><td class="left">'Andreas'</td></tr>
-     <tr><td class="num">  14.9</td><td class="left">'Mark P.'</td></tr>
-     <tr><td class="num">  15.9</td><td class="left">'Chocolate Zero'</td></tr>
-     <tr><td class="num">  16.0</td><td class="left">'AlephD'</td></tr>
-     <tr><td class="num">  16.1</td><td class="left">'Sim_Ed'</td></tr>
-     <tr><td class="num">  16.5</td><td class="left">'Agnieszka'</td></tr>
-     <tr><td class="num">  20.3</td><td class="left">'Ale'</td></tr>
-     <tr><td class="num">  20.7</td><td class="left">'Alex'</td></tr>
-     <tr><td class="num">  23.0</td><td class="left">'Antonio EE'</td></tr>
-     <tr><td class="num">  23.3</td><td class="left">'Jinajon'</td></tr>
-     <tr><td class="num">  23.4</td><td class="left">'Klaus'</td></tr>
-     <tr><td class="num">  23.9</td><td class="left">'Marc-Hendrik'</td></tr>
-     <tr><td class="num">  24.2</td><td class="left">'Chris'</td></tr>
-     <tr><td class="num">  24.8</td><td class="left">'Thomas'</td></tr>
-     <tr><td class="num">  25.3</td><td class="left">'Feynman'</td></tr>
-     <tr><td class="num">  25.6</td><td class="left">'hdwow'</td></tr>
-     <tr><td class="num">  26.0</td><td class="left">'Gottseinsohn'</td></tr>
-     <tr><td class="num">  26.3</td><td class="left">'Bent'</td></tr>
-     <tr><td class="num">  26.8</td><td class="left">'Hans-HD'</td></tr>
-     <tr><td class="num">  28.2</td><td class="left">'un_guru'</td></tr>
-     <tr><td class="num">  28.4</td><td class="left">'Little_Mole'</td></tr>
-     <tr><td class="num">  28.7</td><td class="left">'J3FF'</td></tr>
-     <tr><td class="num">  29.7</td><td class="left">'biotopa'</td></tr>
-     <tr><td class="num">  29.7</td><td class="left">'GiannuzzITA'</td></tr>
-     <tr><td class="num">  29.7</td><td class="left">'oxyd4ever'</td></tr>
-     <tr><td class="num">  29.8</td><td class="left">'Vinksu'</td></tr>
-     <tr><td class="num">  30.2</td><td class="left">'oblo'</td></tr>
-     <tr><td class="num">  30.6</td><td class="left">'redsantz'</td></tr>
-     <tr><td class="num">  31.4</td><td class="left">'geembo_90'</td></tr>
-     <tr><td class="num">  31.7</td><td class="left">'Edgar_Flesk'</td></tr>
-     <tr><td class="num">  32.0</td><td class="left">'Melanie'</td></tr>
-     <tr><td class="num">  32.4</td><td class="left">'IChrisI'</td></tr>
-     <tr><td class="num">  32.7</td><td class="left">'NorthForty'</td></tr>
-     <tr><td class="num">  32.9</td><td class="left">'erich'</td></tr>
-     <tr><td class="num">  32.9</td><td class="left">'Gorn'</td></tr>
-     <tr><td class="num">  35.7</td><td class="left">'niebie'</td></tr>
-     <tr><td class="num">  35.8</td><td class="left">'MicWa'</td></tr>
-     <tr><td class="num">  36.0</td><td class="left">'WP319'</td></tr>
-     <tr><td class="num">  36.3</td><td class="left">'Kosby'</td></tr>
-     <tr><td class="num">  37.2</td><td class="left">'alain'</td></tr>
-     <tr><td class="num">  37.9</td><td class="left">'Liam Sheehan'</td></tr>
-     <tr><td class="num">  38.1</td><td class="left">'Rugby4ever'</td></tr>
-     <tr><td class="num">  38.7</td><td class="left">'H-J.Epting'</td></tr>
-     <tr><td class="num">  39.3</td><td class="left">'Drotten'</td></tr>
-     <tr><td class="num">  39.3</td><td class="left">'WesleyCrusher'</td></tr>
-     <tr><td class="num">  39.7</td><td class="left">'Archcorenth'</td></tr>
-     <tr><td class="num">  40.0</td><td class="left">'Harry Lim'</td></tr>
-     <tr><td class="num">  40.4</td><td class="left">'B-man'</td></tr>
-     <tr><td class="num">  40.6</td><td class="left">'Nfol'</td></tr>
-     <tr><td class="num">  41.6</td><td class="left">'Tiger'</td></tr>
-     <tr><td class="num">  41.8</td><td class="left">'gringer'</td></tr>
-     <tr><td class="num">  42.2</td><td class="left">'Snaily'</td></tr>
-     <tr><td class="num">  42.3</td><td class="left">'Vlad'</td></tr>
-     <tr><td class="num">  43.5</td><td class="left">'Momcat'</td></tr>
-     <tr><td class="num">  44.1</td><td class="left">'Breezy'</td></tr>
-     <tr><td class="num">  44.5</td><td class="left">'Uli'</td></tr>
-     <tr><td class="num">  45.8</td><td class="left">'Tarim'</td></tr>
-     <tr><td class="num">  46.6</td><td class="left">'IntKecsk'</td></tr>
-     <tr><td class="num">  46.9</td><td class="left">'tjRaven'</td></tr>
-     <tr><td class="num">  47.7</td><td class="left">'Valkyrie2'</td></tr>
-     <tr><td class="num">  47.9</td><td class="left">'ntaeijr'</td></tr>
-     <tr><td class="num">  47.9</td><td class="left">'mhatta'</td></tr>
-     <tr><td class="num">  49.7</td><td class="left">'Zak'</td></tr>
-     <tr><td class="num">  50.1</td><td class="left">'rima'</td></tr>
-     <tr><td class="num">  50.5</td><td class="left">'Sandra'</td></tr>
-     <tr><td class="num">  50.6</td><td class="left">'brynn'</td></tr>
-     <tr><td class="num">  51.1</td><td class="left">'ReasonAnce'</td></tr>
-     <tr><td class="num">  51.5</td><td class="left">'jdcampo'</td></tr>
-     <tr><td class="num">  51.7</td><td class="left">'Jeffrey S'</td></tr>
-     <tr><td class="num">  51.8</td><td class="left">'Tomson'</td></tr>
-     <tr><td class="num">  52.5</td><td class="left">'Slav'</td></tr>
-     <tr><td class="num">  52.6</td><td class="left">'AkRa'</td></tr>
-     <tr><td class="num">  52.9</td><td class="left">'Pascal'</td></tr>
-     <tr><td class="num">  52.9</td><td class="left">'Vaily'</td></tr>
-     <tr><td class="num">  53.9</td><td class="left">'Turbogurk'</td></tr>
-     <tr><td class="num">  53.9</td><td class="left">'Neophilus'</td></tr>
-     <tr><td class="num">  53.9</td><td class="left">'Cyphase'</td></tr>
-     <tr><td class="num">  56.1</td><td class="left">'krazy62'</td></tr>
-     <tr><td class="num">  57.2</td><td class="left">'Adonica'</td></tr>
-     <tr><td class="num">  57.5</td><td class="left">'Kadu'</td></tr>
-     <tr><td class="num">  59.6</td><td class="left">'Mecki'</td></tr>
-     <tr><td class="num">  60.2</td><td class="left">'Sopoforic'</td></tr>
-     <tr><td class="num">  61.0</td><td class="left">'jumbo'</td></tr>
-     <tr><td class="num">  61.6</td><td class="left">'jdrexler'</td></tr>
-     <tr><td class="num">  62.3</td><td class="left">'Asbel'</td></tr>
-     <tr><td class="num">  64.1</td><td class="left">'tasker'</td></tr>
-     <tr><td class="num">  64.4</td><td class="left">'Meeve'</td></tr>
-     <tr><td class="num">  66.4</td><td class="left">'ael'</td></tr>
-     <tr><td class="num">  67.0</td><td class="left">'Samuel'</td></tr>
-     <tr><td class="num">  67.1</td><td class="left">'Fred_the_wise'</td></tr>
-     <tr><td class="num">  67.3</td><td class="left">'schmusi20'</td></tr>
-     <tr><td class="num">  67.5</td><td class="left">'Sparkey'</td></tr>
-     <tr><td class="num">  67.8</td><td class="left">'Alf'</td></tr>
-     <tr><td class="num">  69.4</td><td class="left">'Magnus and Susi'</td></tr>
-     <tr><td class="num">  70.0</td><td class="left">'Zhura'</td></tr>
-     <tr><td class="num">  70.8</td><td class="left">'xmouse'</td></tr>
-     <tr><td class="num">  72.2</td><td class="left">'Joona'</td></tr>
+     <tr><td class="num">   4.1</td><td class="left">'para_doks'</td></tr>
+     <tr><td class="num">   4.4</td><td class="left">'Tobias'</td></tr>
+     <tr><td class="num">   5.6</td><td class="left">'Guglielmo'</td></tr>
+     <tr><td class="num">   5.7</td><td class="left">'alfred69'</td></tr>
+     <tr><td class="num">   5.7</td><td class="left">'Tiza'</td></tr>
+     <tr><td class="num">   6.5</td><td class="left">'Sigma'</td></tr>
+     <tr><td class="num">   6.8</td><td class="left">'Andy'</td></tr>
+     <tr><td class="num">   6.8</td><td class="left">'serpent'</td></tr>
+     <tr><td class="num">   9.1</td><td class="left">'Austin'</td></tr>
+     <tr><td class="num">  10.5</td><td class="left">'shoki'</td></tr>
+     <tr><td class="num">  13.2</td><td class="left">'ShadowPhrogg32642342'</td></tr>
+     <tr><td class="num">  15.1</td><td class="left">'Andreas'</td></tr>
+     <tr><td class="num">  15.4</td><td class="left">'Mark P.'</td></tr>
+     <tr><td class="num">  16.3</td><td class="left">'AlephD'</td></tr>
+     <tr><td class="num">  16.5</td><td class="left">'Sim_Ed'</td></tr>
+     <tr><td class="num">  16.6</td><td class="left">'Chocolate Zero'</td></tr>
+     <tr><td class="num">  17.0</td><td class="left">'Agnieszka'</td></tr>
+     <tr><td class="num">  20.7</td><td class="left">'Ale'</td></tr>
+     <tr><td class="num">  21.0</td><td class="left">'Alex'</td></tr>
+     <tr><td class="num">  23.4</td><td class="left">'Antonio EE'</td></tr>
+     <tr><td class="num">  23.7</td><td class="left">'Jinajon'</td></tr>
+     <tr><td class="num">  23.7</td><td class="left">'Klaus'</td></tr>
+     <tr><td class="num">  24.2</td><td class="left">'Marc-Hendrik'</td></tr>
+     <tr><td class="num">  24.5</td><td class="left">'Chris'</td></tr>
+     <tr><td class="num">  25.3</td><td class="left">'Thomas'</td></tr>
+     <tr><td class="num">  25.7</td><td class="left">'Feynman'</td></tr>
+     <tr><td class="num">  25.9</td><td class="left">'hdwow'</td></tr>
+     <tr><td class="num">  26.4</td><td class="left">'Gottseinsohn'</td></tr>
+     <tr><td class="num">  26.6</td><td class="left">'Bent'</td></tr>
+     <tr><td class="num">  27.2</td><td class="left">'Hans-HD'</td></tr>
+     <tr><td class="num">  28.4</td><td class="left">'un_guru'</td></tr>
+     <tr><td class="num">  28.7</td><td class="left">'Little_Mole'</td></tr>
+     <tr><td class="num">  29.1</td><td class="left">'J3FF'</td></tr>
+     <tr><td class="num">  29.9</td><td class="left">'biotopa'</td></tr>
+     <tr><td class="num">  30.0</td><td class="left">'Vinksu'</td></tr>
+     <tr><td class="num">  30.0</td><td class="left">'oxyd4ever'</td></tr>
+     <tr><td class="num">  30.2</td><td class="left">'GiannuzzITA'</td></tr>
+     <tr><td class="num">  30.5</td><td class="left">'oblo'</td></tr>
+     <tr><td class="num">  30.9</td><td class="left">'redsantz'</td></tr>
+     <tr><td class="num">  31.7</td><td class="left">'geembo_90'</td></tr>
+     <tr><td class="num">  32.1</td><td class="left">'Edgar_Flesk'</td></tr>
+     <tr><td class="num">  32.3</td><td class="left">'Melanie'</td></tr>
+     <tr><td class="num">  32.9</td><td class="left">'NorthForty'</td></tr>
+     <tr><td class="num">  32.9</td><td class="left">'IChrisI'</td></tr>
+     <tr><td class="num">  33.2</td><td class="left">'erich'</td></tr>
+     <tr><td class="num">  33.2</td><td class="left">'Gorn'</td></tr>
+     <tr><td class="num">  36.0</td><td class="left">'niebie'</td></tr>
+     <tr><td class="num">  36.1</td><td class="left">'MicWa'</td></tr>
+     <tr><td class="num">  36.2</td><td class="left">'WP319'</td></tr>
+     <tr><td class="num">  36.6</td><td class="left">'Kosby'</td></tr>
+     <tr><td class="num">  37.4</td><td class="left">'alain'</td></tr>
+     <tr><td class="num">  38.2</td><td class="left">'Liam Sheehan'</td></tr>
+     <tr><td class="num">  38.5</td><td class="left">'Rugby4ever'</td></tr>
+     <tr><td class="num">  39.0</td><td class="left">'H-J.Epting'</td></tr>
+     <tr><td class="num">  39.6</td><td class="left">'WesleyCrusher'</td></tr>
+     <tr><td class="num">  39.7</td><td class="left">'Drotten'</td></tr>
+     <tr><td class="num">  40.0</td><td class="left">'Archcorenth'</td></tr>
+     <tr><td class="num">  40.3</td><td class="left">'Harry Lim'</td></tr>
+     <tr><td class="num">  40.7</td><td class="left">'B-man'</td></tr>
+     <tr><td class="num">  40.9</td><td class="left">'Nfol'</td></tr>
+     <tr><td class="num">  41.9</td><td class="left">'Tiger'</td></tr>
+     <tr><td class="num">  42.1</td><td class="left">'gringer'</td></tr>
+     <tr><td class="num">  42.5</td><td class="left">'Vlad'</td></tr>
+     <tr><td class="num">  42.6</td><td class="left">'Snaily'</td></tr>
+     <tr><td class="num">  43.7</td><td class="left">'Momcat'</td></tr>
+     <tr><td class="num">  44.4</td><td class="left">'Breezy'</td></tr>
+     <tr><td class="num">  44.8</td><td class="left">'Uli'</td></tr>
+     <tr><td class="num">  46.0</td><td class="left">'Tarim'</td></tr>
+     <tr><td class="num">  46.8</td><td class="left">'IntKecsk'</td></tr>
+     <tr><td class="num">  47.2</td><td class="left">'tjRaven'</td></tr>
+     <tr><td class="num">  47.9</td><td class="left">'Valkyrie2'</td></tr>
+     <tr><td class="num">  48.1</td><td class="left">'mhatta'</td></tr>
+     <tr><td class="num">  48.2</td><td class="left">'ntaeijr'</td></tr>
+     <tr><td class="num">  50.2</td><td class="left">'Zak'</td></tr>
+     <tr><td class="num">  50.3</td><td class="left">'rima'</td></tr>
+     <tr><td class="num">  50.8</td><td class="left">'brynn'</td></tr>
+     <tr><td class="num">  50.8</td><td class="left">'Sandra'</td></tr>
+     <tr><td class="num">  50.8</td><td class="left">'Tomson'</td></tr>
+     <tr><td class="num">  51.4</td><td class="left">'ReasonAnce'</td></tr>
+     <tr><td class="num">  51.6</td><td class="left">'jdcampo'</td></tr>
+     <tr><td class="num">  51.8</td><td class="left">'Jeffrey S'</td></tr>
+     <tr><td class="num">  52.8</td><td class="left">'Slav'</td></tr>
+     <tr><td class="num">  52.8</td><td class="left">'AkRa'</td></tr>
+     <tr><td class="num">  53.1</td><td class="left">'Vaily'</td></tr>
+     <tr><td class="num">  53.2</td><td class="left">'Pascal'</td></tr>
+     <tr><td class="num">  53.8</td><td class="left">'Mecki'</td></tr>
+     <tr><td class="num">  54.2</td><td class="left">'Turbogurk'</td></tr>
+     <tr><td class="num">  54.2</td><td class="left">'Cyphase'</td></tr>
+     <tr><td class="num">  54.3</td><td class="left">'Neophilus'</td></tr>
+     <tr><td class="num">  56.3</td><td class="left">'krazy62'</td></tr>
+     <tr><td class="num">  57.4</td><td class="left">'Adonica'</td></tr>
+     <tr><td class="num">  57.9</td><td class="left">'Kadu'</td></tr>
+     <tr><td class="num">  59.7</td><td class="left">'Enrymather'</td></tr>
+     <tr><td class="num">  60.4</td><td class="left">'Sopoforic'</td></tr>
+     <tr><td class="num">  61.1</td><td class="left">'jumbo'</td></tr>
+     <tr><td class="num">  61.8</td><td class="left">'jdrexler'</td></tr>
+     <tr><td class="num">  62.5</td><td class="left">'Asbel'</td></tr>
+     <tr><td class="num">  64.3</td><td class="left">'tasker'</td></tr>
+     <tr><td class="num">  64.6</td><td class="left">'Meeve'</td></tr>
+     <tr><td class="num">  66.5</td><td class="left">'ael'</td></tr>
+     <tr><td class="num">  67.3</td><td class="left">'Samuel'</td></tr>
+     <tr><td class="num">  67.4</td><td class="left">'schmusi20'</td></tr>
+     <tr><td class="num">  67.4</td><td class="left">'Fred_the_wise'</td></tr>
+     <tr><td class="num">  67.6</td><td class="left">'Sparkey'</td></tr>
+     <tr><td class="num">  67.9</td><td class="left">'Alf'</td></tr>
+     <tr><td class="num">  69.6</td><td class="left">'Magnus and Susi'</td></tr>
+     <tr><td class="num">  70.3</td><td class="left">'Zhura'</td></tr>
+     <tr><td class="num">  71.0</td><td class="left">'xmouse'</td></tr>
      <tr><td class="num">  72.4</td><td class="left">'AQZ'</td></tr>
+     <tr><td class="num">  72.4</td><td class="left">'Joona'</td></tr>
      <tr><td class="num">  74.0</td><td class="left">'crypto_rsa'</td></tr>
-     <tr><td class="num">  74.2</td><td class="left">'Dvorhagen'</td></tr>
-     <tr><td class="num">  75.0</td><td class="left">'Eselchen'</td></tr>
+     <tr><td class="num">  74.3</td><td class="left">'Dvorhagen'</td></tr>
+     <tr><td class="num">  75.2</td><td class="left">'Eselchen'</td></tr>
      <tr><td class="num">  75.3</td><td class="left">'Nicol?s'</td></tr>
-     <tr><td class="num">  75.3</td><td class="left">'jojo'</td></tr>
-     <tr><td class="num">  75.4</td><td class="left">'AsuCaga'</td></tr>
+     <tr><td class="num">  75.5</td><td class="left">'jojo'</td></tr>
+     <tr><td class="num">  75.5</td><td class="left">'AsuCaga'</td></tr>
      <tr><td class="num">  78.9</td><td class="left">'colonel crayon'</td></tr>
-     <tr><td class="num">  79.5</td><td class="left">'Kroetchen'</td></tr>
+     <tr><td class="num">  79.7</td><td class="left">'Kroetchen'</td></tr>
      <tr><td class="num">  80.4</td><td class="left">'Agares'</td></tr>
-     <tr><td class="num">  85.2</td><td class="left">'Miel56'</td></tr>
-     <tr><td class="num">  90.1</td><td class="left">'The red O'</td></tr>
-     <tr><td class="num">  90.3</td><td class="left">'Sequoyah'</td></tr>
+     <tr><td class="num">  81.6</td><td class="left">'IIkka'</td></tr>
+     <tr><td class="num">  85.3</td><td class="left">'Miel56'</td></tr>
+     <tr><td class="num">  90.2</td><td class="left">'The red O'</td></tr>
+     <tr><td class="num">  90.4</td><td class="left">'Sequoyah'</td></tr>
      <tr><td class="num">  92.4</td><td class="left">'Michael'</td></tr>
   </table>

Modified: homepage/input/table-rat.html
===================================================================
--- homepage/input/table-rat.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/table-rat.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -1,11 +1,11 @@
   <table>
-    <caption>$$Rating_Statistics$$ $$January$$ 2009</caption>
+    <caption>$$Rating_Statistics$$ $$February$$ 2009</caption>
     <colgroup><col width="80"><col width="80"><col width="220"></colgroup>
     <tr><th>$$count$$</th><th>$$average$$</th><th class="left">$$user$$</th></tr>    <tr><td class="num">1062</td><td class="num"> 5.06</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1056</td><td class="num"> 4.83</td><td class="left">'Taztunes'</td></tr>
     <tr><td class="num">1045</td><td class="num"> 4.93</td><td class="left">'Crystalicum'</td></tr>
-    <tr><td class="num">1035</td><td class="num"> 5.05</td><td class="left">'dev0'</td></tr>
-    <tr><td class="num">896</td><td class="num"> 4.79</td><td class="left">'daydreamer'</td></tr>
+    <tr><td class="num">1036</td><td class="num"> 5.04</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num">898</td><td class="num"> 4.80</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num">871</td><td class="num"> 5.09</td><td class="left">'Stupid'</td></tr>
     <tr><td class="num">653</td><td class="num"> 5.01</td><td class="left">'Duffy'</td></tr>
     <tr><td class="num">643</td><td class="num"> 4.79</td><td class="left">'U-Punkt'</td></tr>
@@ -16,11 +16,11 @@
     <tr><td class="num">534</td><td class="num"> 4.97</td><td class="left">'B-Huff'</td></tr>
     <tr><td class="num">511</td><td class="num"> 5.30</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num">505</td><td class="num"> 5.05</td><td class="left">'Ronald'</td></tr>
+    <tr><td class="num">494</td><td class="num"> 5.29</td><td class="left">'Mentist'</td></tr>
     <tr><td class="num">482</td><td class="num"> 4.04</td><td class="left">'Vinksu'</td></tr>
     <tr><td class="num">448</td><td class="num"> 5.08</td><td class="left">'Johannes'</td></tr>
     <tr><td class="num">433</td><td class="num"> 4.36</td><td class="left">'ged'</td></tr>
     <tr><td class="num">401</td><td class="num"> 4.99</td><td class="left">'Tiza'</td></tr>
-    <tr><td class="num">390</td><td class="num"> 5.48</td><td class="left">'Mentist'</td></tr>
     <tr><td class="num">388</td><td class="num"> 4.86</td><td class="left">'Gloop'</td></tr>
     <tr><td class="num">307</td><td class="num"> 4.01</td><td class="left">'Sim_Ed'</td></tr>
     <tr><td class="num">285</td><td class="num"> 4.60</td><td class="left">'ABS'</td></tr>
@@ -32,9 +32,9 @@
     <tr><td class="num">132</td><td class="num"> 5.65</td><td class="left">'Raoul'</td></tr>
     <tr><td class="num">124</td><td class="num"> 4.44</td><td class="left">'Sigma'</td></tr>
     <tr><td class="num"> 97</td><td class="num"> 4.16</td><td class="left">'Safalra'</td></tr>
+    <tr><td class="num"> 95</td><td class="num"> 5.17</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 91</td><td class="num"> 4.41</td><td class="left">'Zhura'</td></tr>
     <tr><td class="num"> 85</td><td class="num"> 4.76</td><td class="left">'para_doks'</td></tr>
-    <tr><td class="num"> 80</td><td class="num"> 5.34</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 75</td><td class="num"> 4.52</td><td class="left">'Kroetchen'</td></tr>
     <tr><td class="num"> 72</td><td class="num"> 5.63</td><td class="left">'Wuzzy'</td></tr>
     <tr><td class="num"> 64</td><td class="num"> 6.08</td><td class="left">'mecke'</td></tr>
@@ -53,12 +53,13 @@
     <tr><td class="num"> 31</td><td class="num"> 7.61</td><td class="left">'AkRa'</td></tr>
     <tr><td class="num"> 30</td><td class="num"> 4.40</td><td class="left">'Archcorenth'</td></tr>
     <tr><td class="num"> 30</td><td class="num"> 6.93</td><td class="left">'un_guru'</td></tr>
+    <tr><td class="num"> 27</td><td class="num"> 6.59</td><td class="left">'Dime'</td></tr>
     <tr><td class="num"> 25</td><td class="num"> 4.88</td><td class="left">'Drotten'</td></tr>
     <tr><td class="num"> 22</td><td class="num"> 7.45</td><td class="left">'Ghatotkacha'</td></tr>
     <tr><td class="num"> 19</td><td class="num"> 3.74</td><td class="left">'Eselchen'</td></tr>
+    <tr><td class="num"> 17</td><td class="num"> 4.06</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 17</td><td class="num"> 5.53</td><td class="left">'Jeffrey S'</td></tr>
     <tr><td class="num"> 16</td><td class="num"> 3.25</td><td class="left">'tasker'</td></tr>
-    <tr><td class="num"> 16</td><td class="num"> 3.88</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 13</td><td class="num"> 5.23</td><td class="left">'Samuel'</td></tr>
     <tr><td class="num"> 13</td><td class="num"> 8.15</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 11</td><td class="num"> 6.36</td><td class="left">'ShadowPhrogg32642342'</td></tr>
@@ -66,7 +67,6 @@
     <tr><td class="num">  8</td><td class="num"> 3.25</td><td class="left">'Vlad'</td></tr>
     <tr><td class="num">  8</td><td class="num"> 7.63</td><td class="left">'Antonio EE'</td></tr>
     <tr><td class="num">  7</td><td class="num"> 4.29</td><td class="left">'Snaily'</td></tr>
-    <tr><td class="num">  6</td><td class="num"> 5.17</td><td class="left">'Dime'</td></tr>
     <tr><td class="num">  5</td><td class="num"> 6.80</td><td class="left">'Breezy'</td></tr>
     <tr><td class="num">  5</td><td class="num"> 9.20</td><td class="left">'HuB34'</td></tr>
     <tr><td class="num">  4</td><td class="num"> 6.75</td><td class="left">'Agares'</td></tr>
@@ -82,6 +82,7 @@
     <tr><td class="num">  3</td><td class="num"> 3.00</td><td class="left">'Rugby4ever'</td></tr>
     <tr><td class="num">  3</td><td class="num"> 4.33</td><td class="left">'krazy62'</td></tr>
     <tr><td class="num">  2</td><td class="num"> 6.50</td><td class="left">'tjRaven'</td></tr>
+    <tr><td class="num">  2</td><td class="num"> 2.50</td><td class="left">'Enrymather'</td></tr>
     <tr><td class="num">  2</td><td class="num"> 0.00</td><td class="left">'mhatta'</td></tr>
     <tr><td class="num">  1</td><td class="num"> 5.00</td><td class="left">'jumbo'</td></tr>
     <tr><td class="num">  1</td><td class="num"> 5.00</td><td class="left">'ael'</td></tr>

Modified: homepage/input/table-solved.html
===================================================================
--- homepage/input/table-solved.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/table-solved.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -1,22 +1,23 @@
   <table>
-    <caption>$$Solved_Level_Statistics$$ $$January$$ 2009</caption>
+    <caption>$$Solved_Level_Statistics$$ $$February$$ 2009</caption>
     <colgroup><col width="130"><col width="130"><col width="130"><col width="240"></colgroup>
     <tr><th>$$difficult$$</th><th>$$easy$$</th><th>$$total$$</th><th class="left">$$user$$</th></tr>
     <tr><td class="num">1045/1045</td><td class="num">189/189</td><td class="num">100.00%</td><td class="left">'ryujun'</td></tr>
     <tr><td class="num">1043/1045</td><td class="num">189/189</td><td class="num"> 99.84%</td><td class="left">'Taztunes'</td></tr>
-    <tr><td class="num">1036/1045</td><td class="num">189/189</td><td class="num"> 99.27%</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num">1037/1045</td><td class="num">189/189</td><td class="num"> 99.35%</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num">1029/1045</td><td class="num">186/189</td><td class="num"> 98.46%</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num">1029/1045</td><td class="num">185/189</td><td class="num"> 98.38%</td><td class="left">'Freshman'</td></tr>
     <tr><td class="num">1025/1045</td><td class="num">189/189</td><td class="num"> 98.38%</td><td class="left">'Ronald'</td></tr>
     <tr><td class="num">1029/1045</td><td class="num">183/189</td><td class="num"> 98.22%</td><td class="left">'Craven'</td></tr>
     <tr><td class="num">1026/1045</td><td class="num">185/189</td><td class="num"> 98.14%</td><td class="left">'Ale'</td></tr>
-    <tr><td class="num">1026/1045</td><td class="num">184/189</td><td class="num"> 98.06%</td><td class="left">'daydreamer'</td></tr>
     <tr><td class="num">1031/1045</td><td class="num">179/189</td><td class="num"> 98.06%</td><td class="left">'Moneymaker'</td></tr>
     <tr><td class="num">1021/1045</td><td class="num">177/189</td><td class="num"> 97.08%</td><td class="left">'Malla'</td></tr>
     <tr><td class="num">1014/1045</td><td class="num">175/189</td><td class="num"> 96.35%</td><td class="left">'Stupid'</td></tr>
     <tr><td class="num"> 999/1045</td><td class="num">177/189</td><td class="num"> 95.30%</td><td class="left">'biotopa'</td></tr>
-    <tr><td class="num"> 973/1045</td><td class="num">175/189</td><td class="num"> 93.03%</td><td class="left">'Daisy'</td></tr>
+    <tr><td class="num"> 984/1045</td><td class="num">172/189</td><td class="num"> 93.68%</td><td class="left">'Dime'</td></tr>
+    <tr><td class="num"> 979/1045</td><td class="num">175/189</td><td class="num"> 93.52%</td><td class="left">'Daisy'</td></tr>
     <tr><td class="num"> 970/1045</td><td class="num">166/189</td><td class="num"> 92.06%</td><td class="left">'Andy'</td></tr>
-    <tr><td class="num"> 960/1045</td><td class="num">173/189</td><td class="num"> 91.82%</td><td class="left">'mecke'</td></tr>
+    <tr><td class="num"> 961/1045</td><td class="num">173/189</td><td class="num"> 91.90%</td><td class="left">'mecke'</td></tr>
     <tr><td class="num"> 949/1045</td><td class="num">170/189</td><td class="num"> 90.68%</td><td class="left">'para_doks'</td></tr>
     <tr><td class="num"> 922/1045</td><td class="num">154/189</td><td class="num"> 87.20%</td><td class="left">'mrduke'</td></tr>
     <tr><td class="num"> 933/1045</td><td class="num">125/189</td><td class="num"> 85.74%</td><td class="left">'Alex'</td></tr>
@@ -26,6 +27,7 @@
     <tr><td class="num"> 917/1045</td><td class="num">106/189</td><td class="num"> 82.90%</td><td class="left">'Django'</td></tr>
     <tr><td class="num"> 874/1045</td><td class="num">147/189</td><td class="num"> 82.74%</td><td class="left">'H-J.Epting'</td></tr>
     <tr><td class="num"> 866/1045</td><td class="num">151/189</td><td class="num"> 82.41%</td><td class="left">'Gloop'</td></tr>
+    <tr><td class="num"> 854/1045</td><td class="num">147/189</td><td class="num"> 81.12%</td><td class="left">'Mentist'</td></tr>
     <tr><td class="num"> 849/1045</td><td class="num">151/189</td><td class="num"> 81.04%</td><td class="left">'WP319'</td></tr>
     <tr><td class="num"> 867/1045</td><td class="num">124/189</td><td class="num"> 80.31%</td><td class="left">'Lukas'</td></tr>
     <tr><td class="num"> 846/1045</td><td class="num">144/189</td><td class="num"> 80.23%</td><td class="left">'Gorn'</td></tr>
@@ -33,11 +35,9 @@
     <tr><td class="num"> 874/1045</td><td class="num">103/189</td><td class="num"> 79.17%</td><td class="left">'Melanie'</td></tr>
     <tr><td class="num"> 950/1045</td><td class="num">  0/189</td><td class="num"> 76.99%</td><td class="left">'Tarim'</td></tr>
     <tr><td class="num"> 804/1045</td><td class="num">142/189</td><td class="num"> 76.66%</td><td class="left">'Safalra'</td></tr>
-    <tr><td class="num"> 811/1045</td><td class="num">132/189</td><td class="num"> 76.42%</td><td class="left">'Mentist'</td></tr>
-    <tr><td class="num"> 812/1045</td><td class="num">125/189</td><td class="num"> 75.93%</td><td class="left">'Dime'</td></tr>
     <tr><td class="num"> 800/1045</td><td class="num">135/189</td><td class="num"> 75.77%</td><td class="left">'dpl'</td></tr>
+    <tr><td class="num"> 802/1045</td><td class="num">129/189</td><td class="num"> 75.45%</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 812/1045</td><td class="num">114/189</td><td class="num"> 75.04%</td><td class="left">'brynn'</td></tr>
-    <tr><td class="num"> 796/1045</td><td class="num">128/189</td><td class="num"> 74.88%</td><td class="left">'Ludmian'</td></tr>
     <tr><td class="num"> 782/1045</td><td class="num">132/189</td><td class="num"> 74.07%</td><td class="left">'AlephD'</td></tr>
     <tr><td class="num"> 779/1045</td><td class="num">121/189</td><td class="num"> 72.93%</td><td class="left">'U-Punkt'</td></tr>
     <tr><td class="num"> 739/1045</td><td class="num">131/189</td><td class="num"> 70.50%</td><td class="left">'ABS'</td></tr>
@@ -87,22 +87,23 @@
     <tr><td class="num"> 369/1045</td><td class="num">112/189</td><td class="num"> 38.98%</td><td class="left">'Jinajon'</td></tr>
     <tr><td class="num"> 438/1045</td><td class="num">  3/189</td><td class="num"> 35.74%</td><td class="left">'oblo'</td></tr>
     <tr><td class="num"> 392/1045</td><td class="num"> 40/189</td><td class="num"> 35.01%</td><td class="left">'hendrik'</td></tr>
+    <tr><td class="num"> 357/1045</td><td class="num"> 74/189</td><td class="num"> 34.93%</td><td class="left">'Crystalicum'</td></tr>
     <tr><td class="num"> 391/1045</td><td class="num"> 36/189</td><td class="num"> 34.60%</td><td class="left">'Iceshark7'</td></tr>
     <tr><td class="num"> 397/1045</td><td class="num"> 24/189</td><td class="num"> 34.12%</td><td class="left">'Chocolate Zero'</td></tr>
-    <tr><td class="num"> 349/1045</td><td class="num"> 72/189</td><td class="num"> 34.12%</td><td class="left">'Crystalicum'</td></tr>
     <tr><td class="num"> 376/1045</td><td class="num"> 35/189</td><td class="num"> 33.31%</td><td class="left">'Jeffrey S'</td></tr>
+    <tr><td class="num"> 354/1045</td><td class="num"> 55/189</td><td class="num"> 33.14%</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 392/1045</td><td class="num"> 12/189</td><td class="num"> 32.74%</td><td class="left">'NorthForty'</td></tr>
     <tr><td class="num"> 344/1045</td><td class="num"> 51/189</td><td class="num"> 32.01%</td><td class="left">'Momcat'</td></tr>
     <tr><td class="num"> 382/1045</td><td class="num"> 10/189</td><td class="num"> 31.77%</td><td class="left">'J3FF'</td></tr>
     <tr><td class="num"> 347/1045</td><td class="num"> 45/189</td><td class="num"> 31.77%</td><td class="left">'rima'</td></tr>
     <tr><td class="num"> 335/1045</td><td class="num"> 50/189</td><td class="num"> 31.20%</td><td class="left">'Harry Lim'</td></tr>
+    <tr><td class="num"> 351/1045</td><td class="num"> 31/189</td><td class="num"> 30.96%</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 361/1045</td><td class="num"> 18/189</td><td class="num"> 30.71%</td><td class="left">'MicWa'</td></tr>
     <tr><td class="num"> 370/1045</td><td class="num">  7/189</td><td class="num"> 30.55%</td><td class="left">'IChrisI'</td></tr>
     <tr><td class="num"> 350/1045</td><td class="num"> 25/189</td><td class="num"> 30.39%</td><td class="left">'IntKecsk'</td></tr>
     <tr><td class="num"> 323/1045</td><td class="num"> 52/189</td><td class="num"> 30.39%</td><td class="left">'Kevin'</td></tr>
     <tr><td class="num"> 277/1045</td><td class="num"> 90/189</td><td class="num"> 29.74%</td><td class="left">'gringer'</td></tr>
     <tr><td class="num"> 347/1045</td><td class="num"> 15/189</td><td class="num"> 29.34%</td><td class="left">'WesleyCrusher'</td></tr>
-    <tr><td class="num"> 303/1045</td><td class="num"> 50/189</td><td class="num"> 28.61%</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 331/1045</td><td class="num"> 14/189</td><td class="num"> 27.96%</td><td class="left">'Archcorenth'</td></tr>
     <tr><td class="num"> 281/1045</td><td class="num"> 63/189</td><td class="num"> 27.88%</td><td class="left">'erich'</td></tr>
     <tr><td class="num"> 295/1045</td><td class="num"> 29/189</td><td class="num"> 26.26%</td><td class="left">'Tiger'</td></tr>
@@ -110,11 +111,10 @@
     <tr><td class="num"> 300/1045</td><td class="num"> 19/189</td><td class="num"> 25.85%</td><td class="left">'Nfol'</td></tr>
     <tr><td class="num"> 261/1045</td><td class="num"> 53/189</td><td class="num"> 25.45%</td><td class="left">'Andreas'</td></tr>
     <tr><td class="num"> 266/1045</td><td class="num"> 39/189</td><td class="num"> 24.72%</td><td class="left">'oxyd4ever'</td></tr>
-    <tr><td class="num"> 269/1045</td><td class="num"> 26/189</td><td class="num"> 23.91%</td><td class="left">'Mecki'</td></tr>
     <tr><td class="num"> 276/1045</td><td class="num"> 15/189</td><td class="num"> 23.58%</td><td class="left">'Thomas'</td></tr>
     <tr><td class="num"> 258/1045</td><td class="num"> 27/189</td><td class="num"> 23.10%</td><td class="left">'un_guru'</td></tr>
+    <tr><td class="num"> 245/1045</td><td class="num"> 39/189</td><td class="num"> 23.01%</td><td class="left">'Tomson'</td></tr>
     <tr><td class="num"> 245/1045</td><td class="num"> 36/189</td><td class="num"> 22.77%</td><td class="left">'B-man'</td></tr>
-    <tr><td class="num"> 231/1045</td><td class="num"> 39/189</td><td class="num"> 21.88%</td><td class="left">'Tomson'</td></tr>
     <tr><td class="num"> 259/1045</td><td class="num">  7/189</td><td class="num"> 21.56%</td><td class="left">'geembo_90'</td></tr>
     <tr><td class="num"> 243/1045</td><td class="num"> 23/189</td><td class="num"> 21.56%</td><td class="left">'Snaily'</td></tr>
     <tr><td class="num"> 201/1045</td><td class="num"> 54/189</td><td class="num"> 20.66%</td><td class="left">'mhatta'</td></tr>
@@ -134,6 +134,7 @@
     <tr><td class="num"> 160/1045</td><td class="num"> 15/189</td><td class="num"> 14.18%</td><td class="left">'AkRa'</td></tr>
     <tr><td class="num"> 156/1045</td><td class="num"> 17/189</td><td class="num"> 14.02%</td><td class="left">'Zak'</td></tr>
     <tr><td class="num"> 163/1045</td><td class="num"> 10/189</td><td class="num"> 14.02%</td><td class="left">'tjRaven'</td></tr>
+    <tr><td class="num"> 131/1045</td><td class="num"> 36/189</td><td class="num"> 13.53%</td><td class="left">'Enrymather'</td></tr>
     <tr><td class="num"> 164/1045</td><td class="num">  0/189</td><td class="num"> 13.29%</td><td class="left">'Bent'</td></tr>
     <tr><td class="num"> 124/1045</td><td class="num"> 33/189</td><td class="num"> 12.72%</td><td class="left">'joseba'</td></tr>
     <tr><td class="num"> 127/1045</td><td class="num"> 29/189</td><td class="num"> 12.64%</td><td class="left">'ael'</td></tr>
@@ -154,6 +155,7 @@
     <tr><td class="num">  75/1045</td><td class="num"> 12/189</td><td class="num">  7.05%</td><td class="left">'schmusi20'</td></tr>
     <tr><td class="num">  67/1045</td><td class="num"> 19/189</td><td class="num">  6.97%</td><td class="left">'Dvorhagen'</td></tr>
     <tr><td class="num">  57/1045</td><td class="num"> 26/189</td><td class="num">  6.73%</td><td class="left">'Meeve'</td></tr>
+    <tr><td class="num">  68/1045</td><td class="num"> 14/189</td><td class="num">  6.65%</td><td class="left">'IIkka'</td></tr>
     <tr><td class="num">  65/1045</td><td class="num"> 16/189</td><td class="num">  6.56%</td><td class="left">'Slav'</td></tr>
     <tr><td class="num">  64/1045</td><td class="num"> 16/189</td><td class="num">  6.48%</td><td class="left">'AQZ'</td></tr>
     <tr><td class="num">  59/1045</td><td class="num"> 21/189</td><td class="num">  6.48%</td><td class="left">'AsuCaga'</td></tr>

Modified: homepage/input/table-wr.html
===================================================================
--- homepage/input/table-wr.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/table-wr.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -1,36 +1,37 @@
   <table>
-    <caption>$$Worldrecord_Statistics$$ $$January$$ 2009</caption>
+    <caption>$$Worldrecord_Statistics$$ $$February$$ 2009</caption>
     <colgroup><col width="80"><col width="80"><col width="470"></colgroup>
     <tr><th>$$total$$</th><th>$$shared$$</th><th class="left">$$user$$</th></tr>
-    <tr><td class="num">976</td><td class="num">264</td><td class="left">'Moneymaker'</td></tr>
-    <tr><td class="num">177</td><td class="num">153</td><td class="left">'Crystalicum'</td></tr>
-    <tr><td class="num">148</td><td class="num"> 89</td><td class="left">'Stupid'</td></tr>
-    <tr><td class="num">135</td><td class="num">115</td><td class="left">'daydreamer'</td></tr>
-    <tr><td class="num">102</td><td class="num"> 95</td><td class="left">'Johannes'</td></tr>
-    <tr><td class="num"> 91</td><td class="num"> 77</td><td class="left">'dev0'</td></tr>
-    <tr><td class="num"> 67</td><td class="num"> 61</td><td class="left">'Mentist'</td></tr>
-    <tr><td class="num"> 51</td><td class="num"> 39</td><td class="left">'Duffy'</td></tr>
-    <tr><td class="num"> 42</td><td class="num"> 29</td><td class="left">'Malla'</td></tr>
-    <tr><td class="num"> 39</td><td class="num"> 39</td><td class="left">'Great Scott'</td></tr>
-    <tr><td class="num"> 38</td><td class="num"> 29</td><td class="left">'Daisy'</td></tr>
-    <tr><td class="num"> 37</td><td class="num"> 30</td><td class="left">'Alexandros'</td></tr>
-    <tr><td class="num"> 33</td><td class="num"> 30</td><td class="left">'ryujun'</td></tr>
+    <tr><td class="num">969</td><td class="num">293</td><td class="left">'Moneymaker'</td></tr>
+    <tr><td class="num">189</td><td class="num">163</td><td class="left">'Crystalicum'</td></tr>
+    <tr><td class="num">185</td><td class="num">146</td><td class="left">'daydreamer'</td></tr>
+    <tr><td class="num">142</td><td class="num"> 88</td><td class="left">'Stupid'</td></tr>
+    <tr><td class="num">101</td><td class="num"> 94</td><td class="left">'Johannes'</td></tr>
+    <tr><td class="num"> 90</td><td class="num"> 76</td><td class="left">'dev0'</td></tr>
+    <tr><td class="num"> 79</td><td class="num"> 71</td><td class="left">'Mentist'</td></tr>
+    <tr><td class="num"> 49</td><td class="num"> 38</td><td class="left">'Duffy'</td></tr>
+    <tr><td class="num"> 46</td><td class="num"> 37</td><td class="left">'Daisy'</td></tr>
+    <tr><td class="num"> 39</td><td class="num"> 26</td><td class="left">'Malla'</td></tr>
+    <tr><td class="num"> 37</td><td class="num"> 37</td><td class="left">'Great Scott'</td></tr>
+    <tr><td class="num"> 35</td><td class="num"> 31</td><td class="left">'Alexandros'</td></tr>
     <tr><td class="num"> 31</td><td class="num"> 29</td><td class="left">'Django'</td></tr>
-    <tr><td class="num"> 30</td><td class="num"> 27</td><td class="left">'Iceshark7'</td></tr>
-    <tr><td class="num"> 29</td><td class="num"> 26</td><td class="left">'Zekobah'</td></tr>
+    <tr><td class="num"> 30</td><td class="num"> 28</td><td class="left">'Iceshark7'</td></tr>
+    <tr><td class="num"> 30</td><td class="num"> 29</td><td class="left">'ryujun'</td></tr>
+    <tr><td class="num"> 29</td><td class="num"> 27</td><td class="left">'Zekobah'</td></tr>
+    <tr><td class="num"> 27</td><td class="num"> 23</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 26</td><td class="num"> 25</td><td class="left">'joseba'</td></tr>
     <tr><td class="num"> 24</td><td class="num"> 19</td><td class="left">'Emmanuel'</td></tr>
     <tr><td class="num"> 24</td><td class="num"> 23</td><td class="left">'Ghatotkacha'</td></tr>
     <tr><td class="num"> 21</td><td class="num"> 20</td><td class="left">'ged'</td></tr>
-    <tr><td class="num"> 19</td><td class="num"> 17</td><td class="left">'Angolino'</td></tr>
     <tr><td class="num"> 16</td><td class="num"> 14</td><td class="left">'B-Huff'</td></tr>
-    <tr><td class="num"> 16</td><td class="num"> 15</td><td class="left">'Safalra'</td></tr>
     <tr><td class="num"> 15</td><td class="num"> 14</td><td class="left">'HuB34'</td></tr>
-    <tr><td class="num"> 15</td><td class="num"> 15</td><td class="left">'Ludmian'</td></tr>
-    <tr><td class="num"> 14</td><td class="num">  9</td><td class="left">'Gloop'</td></tr>
+    <tr><td class="num"> 15</td><td class="num"> 15</td><td class="left">'Safalra' + 'Ludmian'</td></tr>
     <tr><td class="num"> 14</td><td class="num"> 14</td><td class="left">'bojster'</td></tr>
     <tr><td class="num"> 13</td><td class="num">  7</td><td class="left">'Ronald'</td></tr>
-    <tr><td class="num"> 11</td><td class="num"> 11</td><td class="left">'dpl' + 'ABS'</td></tr>
+    <tr><td class="num"> 12</td><td class="num">  8</td><td class="left">'Gloop'</td></tr>
+    <tr><td class="num"> 11</td><td class="num">  9</td><td class="left">'Dime'</td></tr>
+    <tr><td class="num"> 11</td><td class="num"> 11</td><td class="left">'ABS'</td></tr>
+    <tr><td class="num"> 10</td><td class="num"> 10</td><td class="left">'dpl'</td></tr>
     <tr><td class="num">  9</td><td class="num">  5</td><td class="left">'ShadowPhrogg32642342'</td></tr>
     <tr><td class="num">  9</td><td class="num">  9</td><td class="left">'fabian'</td></tr>
     <tr><td class="num">  8</td><td class="num">  7</td><td class="left">'Chocolate Zero'</td></tr>
@@ -38,15 +39,14 @@
     <tr><td class="num">  6</td><td class="num">  3</td><td class="left">'para_doks' + 'Breezy'</td></tr>
     <tr><td class="num">  6</td><td class="num">  5</td><td class="left">'Taztunes' + 'Guglielmo'</td></tr>
     <tr><td class="num">  6</td><td class="num">  6</td><td class="left">'Raoul' + 'Tobias'</td></tr>
-    <tr><td class="num">  5</td><td class="num">  4</td><td class="left">'Sigma' + 'Lukas'</td></tr>
+    <tr><td class="num">  5</td><td class="num">  4</td><td class="left">'mecke' + 'Lukas'</td></tr>
     <tr><td class="num">  5</td><td class="num">  5</td><td class="left">'Thomas' + 'Chris' + 'Wuzzy' + 'Ralf'</td></tr>
     <tr><td class="num">  4</td><td class="num">  2</td><td class="left">'Hairball'</td></tr>
-    <tr><td class="num">  4</td><td class="num">  3</td><td class="left">'mecke'</td></tr>
-    <tr><td class="num">  4</td><td class="num">  4</td><td class="left">'U-Punkt' + 'J3FF' + 'Cyphase' + 'GiannuzzITA' + 'Dime'</td></tr>
+    <tr><td class="num">  4</td><td class="num">  4</td><td class="left">'Sigma' + 'U-Punkt' + 'J3FF' + 'Cyphase' + 'GiannuzzITA'</td></tr>
     <tr><td class="num">  3</td><td class="num">  2</td><td class="left">'Stephanie'</td></tr>
     <tr><td class="num">  3</td><td class="num">  3</td><td class="left">'geembo_90' + 'Tiza' + 'Neophilus' + 'Nicol?s' + 'Andy'</td></tr>
     <tr><td class="num">  2</td><td class="num">  2</td><td class="left">'alfred69' + 'ReasonAnce' + 'mrduke' + 'Drotten' + 'tjRaven' + 'Sim_Ed' + 'hendrik' + 'Bent' + 'Austin' + 'Snaily' + 'Craven' + 'Sopoforic' + 'Ingo' + 'serpent'</td></tr>
     <tr><td class="num">  1</td><td class="num">  0</td><td class="left">'Ale' + 'Feynman' + 'alain' + 'colonel crayon' + 'Gorn' + 'Nat'</td></tr>
     <tr><td class="num">  1</td><td class="num">  1</td><td class="left">'Agares' + 'Tiger' + 'Zak' + 'Daniel' + 'Slav' + 'niebie' + 'Andreas' + 'AlephD' + 'Samuel' + 'Mark P.' + 'oblo' + 'Pascal' + 'hdwow' + 'B-man' + 'Asbel' + 'Vlad' + 'Jinajon' + 'Vaily' + 'Antonio EE' + 'JuSt' + 'Timo'</td></tr>
-    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'tasker' + 'jumbo' + 'Miel56' + 'Zhura' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'ntaeijr' + 'Eselchen' + 'ael' + 'biotopa' + 'H-J.Epting' + 'brynn' + 'IntKecsk' + 'Adonica' + 'Joona' + 'Sandra' + 'schmusi20' + 'Kosby' + 'Magnus and Susi' + 'WP319' + 'Kevin' + 'jdrexler' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Alex' + 'Valkyrie2' + 'Fred_the_wise' + 'jdcampo' + 'Freshman' + 'Little_Mole' + 'Kroetchen' + 'crypto_rsa' + 'Harry Lim' + 'Sequoyah' + 'AkRa' + 'Momcat' + 'Tomson' + 'NorthForty' + 'Mecki' + 'The red O' + 'gringer' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'Kadu' + 'shoki' + 'jojo' + 'WesleyCrusher' + 'rima' + 'Klaus' + 'MicWa' + 'AsuCaga' + 'oxyd4ever' + 'Rugby4ever' + 'Archcorenth' + 'Meeve' + 'mhatta' + 'Hans-HD' + 'un_guru' + 'krazy62' + 'Dvorhagen' + 'Sparkey' + 'Holger' + 'Ingo_K' + 'Ant' + 'Melanie' + 'IChrisI' + 'redsantz' + 'Markus' + 'Michael' + 'Liam Sheehan' + 'Tarim' + '!
 Agnieszka'</td></tr>
+    <tr><td class="num">  0</td><td class="num">  0</td><td class="left">'AQZ' + 'tasker' + 'jumbo' + 'Miel56' + 'Zhura' + 'Alf' + 'Turbogurk' + 'Gottseinsohn' + 'ntaeijr' + 'Eselchen' + 'ael' + 'biotopa' + 'H-J.Epting' + 'brynn' + 'IntKecsk' + 'Adonica' + 'Joona' + 'Sandra' + 'schmusi20' + 'Kosby' + 'Magnus and Susi' + 'WP319' + 'Kevin' + 'jdrexler' + 'xmouse' + 'erich' + 'Vinksu' + 'Uli' + 'Alex' + 'Valkyrie2' + 'Fred_the_wise' + 'jdcampo' + 'Freshman' + 'Little_Mole' + 'Kroetchen' + 'crypto_rsa' + 'Harry Lim' + 'Sequoyah' + 'AkRa' + 'Momcat' + 'Tomson' + 'NorthForty' + 'Mecki' + 'The red O' + 'gringer' + 'IIkka' + 'Jeffrey S' + 'Nfol' + 'Marc-Hendrik' + 'Kadu' + 'shoki' + 'Enrymather' + 'jojo' + 'WesleyCrusher' + 'rima' + 'Klaus' + 'MicWa' + 'AsuCaga' + 'oxyd4ever' + 'Rugby4ever' + 'Archcorenth' + 'Meeve' + 'mhatta' + 'Hans-HD' + 'un_guru' + 'krazy62' + 'Dvorhagen' + 'Sparkey' + 'Holger' + 'Ingo_K' + 'Ant' + 'Melanie' + 'IChrisI' + 'redsantz' + 'Markus' + 'Michael' + 'Li!
 am Sheehan' + 'Tarim' + 'Agnieszka'</td></tr>
   </table>

Modified: homepage/input/userlist.html
===================================================================
--- homepage/input/userlist.html	2009-03-04 20:51:23 UTC (rev 1577)
+++ homepage/input/userlist.html	2009-03-04 21:35:27 UTC (rev 1578)
@@ -50,6 +50,7 @@
     <li>Dvorhagen</li>
     <li>Edgar_Flesk</li>
     <li>Emmanuel</li>
+    <li>Enrymather</li>
     <li>erich</li>
     <li>Eselchen</li>
     <li>fabian</li>
@@ -76,6 +77,7 @@
     <li>HuB34</li>
     <li>Iceshark7</li>
     <li>IChrisI</li>
+    <li>IIkka</li>
     <li>Ingo</li>
     <li>Ingo_K</li>
     <li>IntKecsk</li>



From raoul at mail.berlios.de  Wed Mar  4 22:38:26 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Wed, 4 Mar 2009 22:38:26 +0100
Subject: [Enigma-game-svn] r1579 - in trunk/data/levels: enigma_cross
	enigma_iii enigma_viii
Message-ID: <200903042138.n24LcQYf015407@sheep.berlios.de>

Author: raoul
Date: 2009-03-04 22:38:25 +0100 (Wed, 04 Mar 2009)
New Revision: 1579

Modified:
   trunk/data/levels/enigma_cross/newlevels.xml
   trunk/data/levels/enigma_cross/newlevels_1.1.0.xml
   trunk/data/levels/enigma_iii/andreas04_1.xml
   trunk/data/levels/enigma_iii/index.xml
   trunk/data/levels/enigma_viii/andreas54_1.xml
   trunk/data/levels/enigma_viii/andreas55_2.xml
   trunk/data/levels/enigma_viii/index.xml
   trunk/data/levels/enigma_viii/mecke20_2.xml
   trunk/data/levels/enigma_viii/mecke22_2.xml
   trunk/data/levels/enigma_viii/ral35_1.xml
   trunk/data/levels/enigma_viii/ral36_1.xml
   trunk/data/levels/enigma_viii/ral37_1.xml
Log:
-> New api levelupdates for greenbrown seed item



Modified: trunk/data/levels/enigma_cross/newlevels.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_cross/newlevels.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="37" title="Enigma 1.00 new"/>
+  <info enigma="1.00" group="Facets" location="15400" network="false" owner="Enigma Team" release="1" revision="38" title="Enigma 1.00 new"/>
 
   <attributes/>
 
@@ -67,7 +67,7 @@
     <level _seq="59" _title="Manamana" _xpath="enigma_iii/just07_1" author="JuSt" ctrl="force" easy="false" id="just07" rel="1" rev="3" score="1" target="time" unit="duration"/>
     <level _seq="60" _title="Bad Flowers" _xpath="enigma_iii/nat30_1" author="Nat Pryce" ctrl="force" easy="true" id="nat30" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="Don't Touch" _xpath="enigma_iii/raoul07_2" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul07" rel="2" rev="1" score="2" target="time" unit="duration"/>
-    <level _seq="62" _title="Laser Castle" _xpath="enigma_iii/andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="16" score="1" target="time" unit="duration"/>
+    <level _seq="62" _title="Laser Castle" _xpath="enigma_iii/andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="17" score="1" target="time" unit="duration"/>
     <level _seq="63" _title="Bump Ahead" _xpath="enigma_iii/illmind01_1" author="illmind" ctrl="force" easy="false" id="illmind01" rel="1" rev="1" score="1" target="time" unit="duration"/>
     <level _seq="64" _title="Killer Hills" _xpath="enigma_iii/luc11_1" author="Lukas Sch?ller" ctrl="force" easy="false" id="luc11" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="Fox in the Henhouse" _xpath="enigma_iii/nat26_1" author="Nat Pryce" ctrl="force" easy="false" id="nat26" rel="1" rev="0" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_cross/newlevels_1.1.0.xml
===================================================================
--- trunk/data/levels/enigma_cross/newlevels_1.1.0.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_cross/newlevels_1.1.0.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="44" title="Enigma 1.1 new"/>
+  <info enigma="1.00" group="Facets" location="15600" network="false" owner="Enigma Team" release="1" revision="45" title="Enigma 1.1 new"/>
 
   <attributes/>
 
@@ -83,7 +83,7 @@
     <level _seq="75" _title="Black Liberation" _xpath="enigma_vii/mecke11_2" author="mecke" ctrl="force" easy="true" id="mecke11" rel="2" rev="43" score="1" target="time" unit="duration"/>
     <level _seq="76" _title="Jack-Of-All-Trades" _xpath="enigma_vii/mecke12_2" author="mecke" ctrl="force" easy="true" id="mecke12" rel="2" rev="49" score="1" target="time" unit="duration"/>
     <level _seq="77" _title="Enigmaparcour I" _xpath="enigma_viii/mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="36" score="1" target="time" unit="duration"/>
-    <level _seq="78" _title="Rhythm of Space" _xpath="enigma_viii/mecke20_2" author="mecke" ctrl="force" easy="true" id="mecke20" rel="2" rev="36" score="1" target="time" unit="duration"/>
+    <level _seq="78" _title="Rhythm of Space" _xpath="enigma_viii/mecke20_2" author="mecke" ctrl="force" easy="true" id="mecke20" rel="2" rev="37" score="1" target="time" unit="duration"/>
     <level _seq="79" _title="The Show Jumper" _xpath="enigma_viii/andreas47_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas47" rel="1" rev="11" score="1" target="time" unit="duration"/>
     <level _seq="80" _title="The Red Room" _xpath="enigma_viii/joe29_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe29" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="81" _title="Enigmines" _xpath="enigma_viii/huffman01_1" author="Brian Huffman" ctrl="force" easy="true" id="huffman01" rel="1" rev="2" score="1" target="time" unit="duration"/>
@@ -93,7 +93,7 @@
     <level _seq="85" _title="Southside Life" _xpath="enigma_viii/mecke10_2" author="mecke" ctrl="force" easy="true" id="mecke10" rel="2" rev="34" score="1" target="time" unit="duration"/>
     <level _seq="86" _title="Joona's Chess" _xpath="enigma_viii/joona02_1" author="Joona Laire" ctrl="force" easy="true" id="joona02" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="87" _title="Helios I" _xpath="enigma_viii/mecke07_1" author="mecke" ctrl="force" easy="false" id="mecke48" rel="1" rev="22" score="1" target="time" unit="duration"/>
-    <level _seq="88" _title="The Green Hell" _xpath="enigma_viii/mecke22_2" author="mecke" ctrl="force" easy="true" id="mecke22" rel="2" rev="83" score="1" target="time" unit="duration"/>
+    <level _seq="88" _title="The Green Hell" _xpath="enigma_viii/mecke22_2" author="mecke" ctrl="force" easy="true" id="mecke22" rel="2" rev="84" score="1" target="time" unit="duration"/>
     <level _seq="89" _title="Tilt Board" _xpath="enigma_viii/ulf06_2" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="2" rev="116" score="2" target="time" unit="duration"/>
     <level _seq="90" _title="4 - 8 - 4" _xpath="enigma_viii/dpl03_3" author="Dominik Leipold" ctrl="force" easy="true" id="20070821dpl003" rel="3" rev="4" score="3" target="time" unit="duration"/>
     <level _seq="91" _title="Impulsive Order" _xpath="enigma_viii/raywick05_1" author="Ray Wick" ctrl="force" easy="true" id="raywick5" rel="1" rev="13" score="1" target="time" unit="duration"/>
@@ -136,13 +136,13 @@
     <level _seq="128" _title="Techno Voodoo" _xpath="enigma_viii/mecke06_1" author="mecke" ctrl="force" easy="false" id="mecke06" rel="1" rev="19" score="1" target="time" unit="duration"/>
     <level _seq="129" _title="Plutos World" _xpath="enigma_viii/mecke02_1" author="mecke" ctrl="force" easy="false" id="mecke16" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="130" _title="Plutos Confusion" _xpath="enigma_viii/mecke13_1" author="mecke" ctrl="force" easy="false" id="mecke30" rel="1" rev="20" score="1" target="time" unit="duration"/>
-    <level _seq="131" _title="Coober Pedy Opals" _xpath="enigma_viii/ral35_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral610" rel="1" rev="126" score="1" target="time" unit="duration"/>
-    <level _seq="132" _title="Butterfly Opals" _xpath="enigma_viii/ral36_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral708" rel="1" rev="126" score="1" target="time" unit="duration"/>
-    <level _seq="133" _title="Brilliant Opals" _xpath="enigma_viii/ral37_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081212ral162" rel="1" rev="126" score="1" target="time" unit="duration"/>
+    <level _seq="131" _title="Coober Pedy Opals" _xpath="enigma_viii/ral35_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral610" rel="1" rev="127" score="1" target="time" unit="duration"/>
+    <level _seq="132" _title="Butterfly Opals" _xpath="enigma_viii/ral36_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral708" rel="1" rev="127" score="1" target="time" unit="duration"/>
+    <level _seq="133" _title="Brilliant Opals" _xpath="enigma_viii/ral37_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081212ral162" rel="1" rev="127" score="1" target="time" unit="duration"/>
     <level _seq="134" _title="Squared Microwire" _xpath="enigma_viii/ral39_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20081227ral230" rel="1" rev="150" score="1" target="time" unit="duration"/>
     <level _seq="135" _title="More or Less Wired" _xpath="enigma_viii/ral42_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20081229ral" rel="1" rev="149" score="1" target="time" unit="duration"/>
-    <level _seq="136" _title="Sokopal" _xpath="enigma_viii/andreas55_2" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas55" rel="2" rev="5" score="2" target="time" unit="duration"/>
-    <level _seq="137" _title="Minopal" _xpath="enigma_viii/andreas54_1" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas54" rel="1" rev="3" score="1" target="time" unit="duration"/>
+    <level _seq="136" _title="Sokopal" _xpath="enigma_viii/andreas55_2" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas55" rel="2" rev="6" score="2" target="time" unit="duration"/>
+    <level _seq="137" _title="Minopal" _xpath="enigma_viii/andreas54_1" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas54" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="138" _title="Mole Hill Meditation" _xpath="enigma_viii/ral43_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20090112ral228" rel="1" rev="138" score="1" target="time" unit="duration"/>
     <level _seq="139" _title="Involution" _xpath="enigma_viii/raoul32_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul32" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="140" _title="Near Halley I" _xpath="enigma_viii/devnull19_1" author="/dev/null" ctrl="force" easy="true" id="devnull19" rel="1" rev="6" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_iii/andreas04_1.xml
===================================================================
--- trunk/data/levels/enigma_iii/andreas04_1.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_iii/andreas04_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Laser Castle" el:subtitle="" el:id="andreas04"/>
-      <el:version el:score="1" el:release="1" el:revision="16" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="17" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2006 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -76,7 +76,7 @@
 ti["  3 "]={"it_trigger", target = {"fo_c", "fo_d"}}
 ti["  4 "]={"it_trigger", target = {"fo_d", "fo_b"}}
 ti["  O "]={"it_trigger", target = "castle_door"}
-ti["  # "]={"it_seed", flavor="fake"}
+ti["  # "]={"it_seed", flavor="greenbrown"}
 ti["  $ "]={"it_wormhole"}
 ti["  % "]={"it_hammer"}
 ti["  ' "]={"it_seed"}

Modified: trunk/data/levels/enigma_iii/index.xml
===================================================================
--- trunk/data/levels/enigma_iii/index.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_iii/index.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10400" network="false" owner="Enigma Team" release="1" revision="21" title="Enigma III"/>
+  <info enigma="1.00" group="Enigma" location="10400" network="false" owner="Enigma Team" release="1" revision="22" title="Enigma III"/>
 
   <attributes/>
 
@@ -69,7 +69,7 @@
     <level _seq="61" _title="Fool the Warden" _xpath="./duffy37_1" author="Jacob Scott" ctrl="force" easy="false" id="duffy37" rel="1" rev="2" score="1" target="time" unit="duration"/>
     <level _seq="62" _title="Don't Touch" _xpath="./raoul07_2" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul07" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="63" _title="Emergency Exit" _xpath="./ss05_1" author="Sven Siggelkow" ctrl="force" easy="false" id="ss5" rel="1" rev="0" score="1" target="time" unit="duration"/>
-    <level _seq="64" _title="Laser Castle" _xpath="./andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="16" score="1" target="time" unit="duration"/>
+    <level _seq="64" _title="Laser Castle" _xpath="./andreas04_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas04" rel="1" rev="17" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="The Safe" _xpath="./siegfried77_1" author="Siegfried Fennig" ctrl="force" easy="false" id="siegfried77" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="66" _title="Block its way!" _xpath="./wb05_2" author="Jon 'WB' Sneyers" ctrl="force" easy="true" id="wb5" rel="2" rev="1" score="2" target="time" unit="duration"/>
     <level _seq="67" _title="Bump Ahead" _xpath="./illmind01_1" author="illmind" ctrl="force" easy="false" id="illmind01" rel="1" rev="1" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_viii/andreas54_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas54_1.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/andreas54_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Minopal" el:subtitle="Every marble is the architect of its own fortune" el:id="andreas54"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="4" el:status="released"/>
       <el:author el:name="Andreas Lochmann, Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008, 2009 Andreas Lochmann, Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -20,7 +20,7 @@
 ti[" "] = {"fl_wood_framed"}
 ti["~"] = {"fl_water"}
 ti[":"] = {"it_seed"}
-ti[";"] = {"it_seed_fake"}
+ti[";"] = {"it_seed", flavor="greenbrown"}
 ti["."] = {"st_oxyd", target = "oxyd_callback"} .. ti["~"]
 if wo["IsDifficult"] then
     ti["@"] = {"#ac_pearl", owner = 0}

Modified: trunk/data/levels/enigma_viii/andreas55_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas55_2.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/andreas55_2.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Sokopal" el:subtitle="" el:id="andreas55"/>
-      <el:version el:score="2" el:release="2" el:revision="5" el:status="released"/>
+      <el:version el:score="2" el:release="2" el:revision="6" el:status="released"/>
       <el:author el:name="Andreas Lochmann, Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008, 2009 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -35,7 +35,7 @@
 ti["*"] = {"st_blocker", "door#"}
 ti["w"] = {"st_box_wood"}
 ti[":"] = {"it_seed"}
-ti[";"] = {"it_seed_fake"}
+ti[";"] = {"it_seed", flavor="greenbrown"}
 ti["f"] = {"st_quake"}
 
 local resolver = res.random(ti, "#", {{"#1", 1}, {"#2", 1}, {"#3", 1}, {"#4", 1}})

Modified: trunk/data/levels/enigma_viii/index.xml
===================================================================
--- trunk/data/levels/enigma_viii/index.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/index.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -1,14 +1,14 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <index xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd">
 
-  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="39" title="Enigma VIII"/>
+  <info enigma="1.00" group="Enigma" location="10900" network="false" owner="Enigma Team" release="1" revision="40" title="Enigma VIII"/>
 
   <attributes/>
 
   <levels>
     <level _seq="1" _title="Welcome" _xpath="./welcometopack8_1" author="Raoul Bourquin" ctrl="force" easy="true" id="welcometopack8" rel="1" rev="6" score="1" target="time" unit="duration"/>
     <level _seq="2" _title="Enigmaparcour I" _xpath="./mecke15_1" author="mecke" ctrl="force" easy="true" id="mecke15" rel="1" rev="36" score="1" target="time" unit="duration"/>
-    <level _seq="3" _title="Rhythm of Space" _xpath="./mecke20_2" author="mecke" ctrl="force" easy="true" id="mecke20" rel="2" rev="36" score="1" target="time" unit="duration"/>
+    <level _seq="3" _title="Rhythm of Space" _xpath="./mecke20_2" author="mecke" ctrl="force" easy="true" id="mecke20" rel="2" rev="37" score="1" target="time" unit="duration"/>
     <level _seq="4" _title="The Show Jumper" _xpath="./andreas47_1" author="Andreas Lochmann" ctrl="force" easy="true" id="andreas47" rel="1" rev="11" score="1" target="time" unit="duration"/>
     <level _seq="5" _title="The Red Room" _xpath="./joe29_1" author="Joseph Dunne" ctrl="force" easy="true" id="joe29" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="6" _title="Enigmines" _xpath="./huffman01_1" author="Brian Huffman" ctrl="force" easy="true" id="huffman01" rel="1" rev="2" score="1" target="time" unit="duration"/>
@@ -18,7 +18,7 @@
     <level _seq="10" _title="Southside Life" _xpath="./mecke10_2" author="mecke" ctrl="force" easy="true" id="mecke10" rel="2" rev="34" score="1" target="time" unit="duration"/>
     <level _seq="11" _title="Joona's Chess" _xpath="./joona02_1" author="Joona Laire" ctrl="force" easy="true" id="joona02" rel="1" rev="0" score="1" target="time" unit="duration"/>
     <level _seq="12" _title="Helios I" _xpath="./mecke07_1" author="mecke" ctrl="force" easy="false" id="mecke48" rel="1" rev="22" score="1" target="time" unit="duration"/>
-    <level _seq="13" _title="The Green Hell" _xpath="./mecke22_2" author="mecke" ctrl="force" easy="true" id="mecke22" rel="2" rev="83" score="1" target="time" unit="duration"/>
+    <level _seq="13" _title="The Green Hell" _xpath="./mecke22_2" author="mecke" ctrl="force" easy="true" id="mecke22" rel="2" rev="84" score="1" target="time" unit="duration"/>
     <level _seq="14" _title="Tilt Board" _xpath="./ulf06_2" author="Ulf Stegemann" ctrl="force" easy="true" id="20080529ulf118" rel="2" rev="116" score="2" target="time" unit="duration"/>
     <level _seq="15" _title="4 - 8 - 4" _xpath="./dpl03_3" author="Dominik Leipold" ctrl="force" easy="true" id="20070821dpl003" rel="3" rev="4" score="3" target="time" unit="duration"/>
     <level _seq="16" _title="Impulsive Order" _xpath="./raywick05_1" author="Ray Wick" ctrl="force" easy="true" id="raywick5" rel="1" rev="13" score="1" target="time" unit="duration"/>
@@ -61,13 +61,13 @@
     <level _seq="53" _title="Techno Voodoo" _xpath="./mecke06_1" author="mecke" ctrl="force" easy="false" id="mecke06" rel="1" rev="19" score="1" target="time" unit="duration"/>
     <level _seq="54" _title="Plutos World" _xpath="./mecke02_1" author="mecke" ctrl="force" easy="false" id="mecke16" rel="1" rev="21" score="1" target="time" unit="duration"/>
     <level _seq="55" _title="Plutos Confusion" _xpath="./mecke13_1" author="mecke" ctrl="force" easy="false" id="mecke30" rel="1" rev="20" score="1" target="time" unit="duration"/>
-    <level _seq="56" _title="Minopal" _xpath="./andreas54_1" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas54" rel="1" rev="3" score="1" target="time" unit="duration"/>
-    <level _seq="57" _title="Coober Pedy Opals" _xpath="./ral35_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral610" rel="1" rev="126" score="1" target="time" unit="duration"/>
-    <level _seq="58" _title="Butterfly Opals" _xpath="./ral36_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral708" rel="1" rev="126" score="1" target="time" unit="duration"/>
-    <level _seq="59" _title="Brilliant Opals" _xpath="./ral37_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081212ral162" rel="1" rev="126" score="1" target="time" unit="duration"/>
+    <level _seq="56" _title="Minopal" _xpath="./andreas54_1" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas54" rel="1" rev="4" score="1" target="time" unit="duration"/>
+    <level _seq="57" _title="Coober Pedy Opals" _xpath="./ral35_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral610" rel="1" rev="127" score="1" target="time" unit="duration"/>
+    <level _seq="58" _title="Butterfly Opals" _xpath="./ral36_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081207ral708" rel="1" rev="127" score="1" target="time" unit="duration"/>
+    <level _seq="59" _title="Brilliant Opals" _xpath="./ral37_1" author="Ronald Lamprecht, Andreas Lochmann" ctrl="force" easy="true" id="20081212ral162" rel="1" rev="127" score="1" target="time" unit="duration"/>
     <level _seq="60" _title="Squared Microwire" _xpath="./ral39_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20081227ral230" rel="1" rev="150" score="1" target="time" unit="duration"/>
     <level _seq="61" _title="More or Less Wired" _xpath="./ral42_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20081229ral" rel="1" rev="149" score="1" target="time" unit="duration"/>
-    <level _seq="62" _title="Sokopal" _xpath="./andreas55_2" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas55" rel="2" rev="5" score="2" target="time" unit="duration"/>
+    <level _seq="62" _title="Sokopal" _xpath="./andreas55_2" author="Andreas Lochmann, Ronald Lamprecht" ctrl="force" easy="true" id="andreas55" rel="2" rev="6" score="2" target="time" unit="duration"/>
     <level _seq="63" _title="Mole Hill Meditation" _xpath="./ral43_1" author="Ronald Lamprecht" ctrl="force" easy="true" id="20090112ral228" rel="1" rev="138" score="1" target="time" unit="duration"/>
     <level _seq="64" _title="Involution" _xpath="./raoul32_1" author="Raoul Bourquin" ctrl="force" easy="true" id="raoul32" rel="1" rev="4" score="1" target="time" unit="duration"/>
     <level _seq="65" _title="Near Halley I" _xpath="./devnull19_1" author="/dev/null" ctrl="force" easy="true" id="devnull19" rel="1" rev="6" score="1" target="time" unit="duration"/>

Modified: trunk/data/levels/enigma_viii/mecke20_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke20_2.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/mecke20_2.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Rhythm of Space" el:subtitle="Only A Labyrinth" el:id="mecke20"/>
-      <el:version el:score="1" el:release="2" el:revision="$Revision: 36 $" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="$Revision: 37 $" el:status="released"/>
       <el:author  el:name="mecke" el:email=""/>
       <el:copyright>Copyright ? 2008 Thomas Bernhardt</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -36,8 +36,8 @@
 ti["- "] = {"st_grate_cross"}
 ti["ny"] = ti[" ("] .. {"st_break_oxydc"}
 ti["nw"] = ti[" '"] .. {"st_break_oxydc"}
-ti["nn"] = ti["ny"] .. {"it_seed_fake"}
-ti["nm"] = ti["nw"] .. {"it_seed_fake"}
+ti["nn"] = ti["ny"] .. {"it_seed", flavor="greenbrown"}
+ti["nm"] = ti["nw"] .. {"it_seed", flavor="greenbrown"}
 ti[". "] = {"st_plop_slate"}
 ti["/ "] = {"st_ghost_break"}
 ti["0 "] = {"st_puzzle", connections="e"}

Modified: trunk/data/levels/enigma_viii/mecke22_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/mecke22_2.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/mecke22_2.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="The Green Hell" el:subtitle="Exploration Trip to Green Waters" el:id="mecke22"/>
-      <el:version el:score="1" el:release="2" el:revision="$Revision:83$" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="$Revision:84$" el:status="released"/>
       <el:author  el:name="mecke" el:email=""/>
       <el:copyright>Copyright ? 2008 Thomas Bernhardt</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -128,8 +128,8 @@
 ti["~,"] = ti[" ,"] .. {"it_strip_ew"}
 ti["+$"] = ti["+ "] .. {"fl_water"}
 ti["s~"] = ti["+$"] .. {"it_strip_ns"}
-ti["jl"] = ti[" l"] .. {"it_seed_fake"}
-ti["j$"] = ti[" $"] .. {"it_seed_fake"}
+ti["jl"] = ti[" l"] .. {"it_seed", flavor="greenbrown"}
+ti["j$"] = ti[" $"] .. {"it_seed", flavor="greenbrown"}
 ti["jx"] = ti[" +"] .. {"it_glasses"}
 ti["=-"] = ti[" -"] .. {"st_rawglass_movable"}
 ti["=+"] = ti[" +"] .. {"st_rawglass_movable"}
@@ -215,7 +215,7 @@
 ti["LS"] = ti[" +"] .. {"st_laser_s",state=OFF}
 
 if wo ["IsDifficult"] then
-   ti["i+"] = ti[" +"] .. {"it_seed_fake"}
+   ti["i+"] = ti[" +"] .. {"it_seed", flavor="greenbrown"}
    ti["rr"] = ti[" $"] .. {"#ac_rotor", range=3, strength=3}
    ti["ww"] = {"fl_water"}
    ti["))"] = ti[" l"] .. {"it_burnable_burning"}

Modified: trunk/data/levels/enigma_viii/ral35_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral35_1.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/ral35_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Coober Pedy Opals" el:subtitle="Crocodile Harry's Dream" el:id="20081207ral610"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 126 $" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 127 $" el:status="released"/>
       <el:author el:name="Ronald Lamprecht, Andreas Lochmann" el:email="ral at users.berlios.de" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -20,7 +20,7 @@
 ti[" "] = {"fl_wood_framed"}
 ti["~"] = {"fl_water"}
 ti[":"] = {"it_seed"}
-ti[";"] = {"it_seed_fake"}
+ti[";"] = {"it_seed", flavor="greenbrown"}
 ti["@"] = {"#ac_pearl"}
 ti["F"] = {"st_quake"}
 ti["."] = {"st_oxyd_e", target = "oxyd_callback"} .. ti["~"]

Modified: trunk/data/levels/enigma_viii/ral36_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral36_1.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/ral36_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Butterfly Opals" el:subtitle="" el:id="20081207ral708"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 126 $" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 127 $" el:status="released"/>
       <el:author el:name="Ronald Lamprecht, Andreas Lochmann" el:email="ral at users.berlios.de" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -21,7 +21,7 @@
 ti[" "] = {"fl_wood_framed"}
 ti["~"] = {"fl_water"}
 ti[":"] = {"it_seed"}
-ti[";"] = {"it_seed_fake"}
+ti[";"] = {"it_seed", flavor="greenbrown"}
 ti["@"] = {"#ac_pearl"}
 ti["B"] = {"st_oxyd_e", "ox", oxydcolor=OXYD_BOLD, noshuffle=true, target = "shuffle"} .. ti["~"] .. ti[":"]
 ti["."] = {"st_oxyd_e", target = "oxyd_callback"} .. ti["~"]

Modified: trunk/data/levels/enigma_viii/ral37_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral37_1.xml	2009-03-04 21:35:27 UTC (rev 1578)
+++ trunk/data/levels/enigma_viii/ral37_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Brilliant Opals" el:subtitle="The journey is the reward" el:id="20081212ral162"/>
-      <el:version el:score="1" el:release="1" el:revision="$Revision: 126 $" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision: 127 $" el:status="released"/>
       <el:author el:name="Ronald Lamprecht, Andreas Lochmann" el:email="ral at users.berlios.de" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -22,7 +22,7 @@
 ti[" "] = {"fl_wood_framed"}
 ti["~"] = {"fl_water"}
 ti[":"] = {"it_seed"}
-ti[";"] = {"it_seed_fake"}
+ti[";"] = {"it_seed", flavor="greenbrown"}
 ti["@"] = {"#ac_pearl"}
 ti["B"] = {"st_oxyd_e", oxydcolor=OXYD_BOLD, noshuffle=true, target = "shuffle"} .. ti["~"] .. ti[":"]
 ti["."] = {"st_oxyd_e", target = "oxyd_callback"} .. ti["~"]



From raoul at mail.berlios.de  Wed Mar  4 22:44:51 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Wed, 4 Mar 2009 22:44:51 +0100
Subject: [Enigma-game-svn] r1580 - trunk/data/levels/enigma_experimental
Message-ID: <200903042144.n24Lip1f016208@sheep.berlios.de>

Author: raoul
Date: 2009-03-04 22:44:51 +0100 (Wed, 04 Mar 2009)
New Revision: 1580

Modified:
   trunk/data/levels/enigma_experimental/floors_1.xml
   trunk/data/levels/enigma_experimental/items_1.xml
   trunk/data/levels/enigma_experimental/stones_1.xml
Log:
-> Levels with all floors, stones and items of enigma 1.10
--> Up to date with the objectes listed in the refman
--> Objects which are not yet mentioned in the refman are still missing



Modified: trunk/data/levels/enigma_experimental/floors_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
+++ trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-04 21:44:51 UTC (rev 1580)
@@ -2,183 +2,97 @@
 <el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
   <el:protected>
     <el:info el:type="level">
-      <el:identity el:title="All Floors" el:subtitle="Testlevel with all Floors" el:id="floors"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="stable"/>
-      <el:author  el:name="Raoul Bourquin" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007 Raoul Bourquin</el:copyright>
+      <el:identity el:title="All Floors as of Enigma 1.10" el:subtitle="" el:id="floors"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Raoul Bourquin" el:email=""/>
+      <el:copyright>Copyright ? 2009 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.00">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="true"/>
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
--- GENERAL --
-levelh = 13
-levelw = 120
+local floors = {
+{"fl_aquamarine", _text="fl_aquamarine"},
+{"fl_aquamarine_framed", _text="fl_aquamarine_framed"},
+{"fl_bluegray", _text="fl_bluegray"},
+{"fl_bluegray_framed", _text="fl_bluegray_framed"},
+{"fl_bluegreen", _text="fl_bluegreen"},
+{"fl_bluegreen_framed", _text="fl_bluegreen_framed"},
+{"fl_sahara", _text="fl_sahara"},
+{"fl_sahara_framed", _text="fl_sahara_framed"},
+{"fl_sand", _text="fl_sand"},
+{"fl_sand_framed", _text="fl_sand_framed"},
 
-create_world(levelw, levelh)
-enigma.ConserveLevel = TRUE
-display.SetFollowMode(display.FOLLOW_SCROLLING)
+{"fl_bridge", _text="fl_bridge, default"},
+{"fl_bridge", state=OPEN, _text="fl_bridge, state=OPEN"},
+{"fl_bridge", state=CLOSED, _text="fl_bridge, state=CLOSED"},
+{"fl_bridge", state=CLOSED, flavor="gc", _text="fl_bridge, flavor=\"gc\", state=CLOSED"},
+{"fl_bridge", state=CLOSED, flavor="bw", _text="fl_bridge, flavor=\"bw\", state=CLOSED"},
+{"fl_bridge", state=CLOSED, flavor="bn", _text="fl_bridge, flavor=\"bn\", state=CLOSED"},
 
--- DESIGN --
-floor="fl-black"
-wall="st-glass"
+{"fl_slope", _text="fl_slope, default"},
+{"fl_slope", slope=WEST, shape="pw", _text="fl_slope, slope=WEST, shape=\"pw\""},
+{"fl_slope", slope=SOUTH, shape="ps", _text="fl_slope, slope=SOUTH, shape=\"ps\""},
+{"fl_slope", slope=EAST, shape="pe", _text="fl_slope, slope=EAST, shape=\"pe\""},
+{"fl_slope", slope=NORTH, shape="pn", _text="fl_slope, slope=NORTH, shape=\"pn\""},
+{"fl_slope", slope=NORTHWEST, shape="inw", _text="fl_slope, slope=NORTHWEST, shape=\"inw\""},
+{"fl_slope", slope=SOUTHWEST, shape="isw", _text="fl_slope, slope=SOUTHWEST, shape=\"isw\""},
+{"fl_slope", slope=SOUTHEAST, shape="ise", _text="fl_slope, slope=SOUTHEAST, shape=\"ise\""},
+{"fl_slope", slope=NORTHEAST, shape="ine", _text="fl_slope, slope=NORTHEAST, shape=\"ine\""},
+{"fl_slope", slope=NORTHWEST, shape="onw", _text="fl_slope, slope=NORTHWEST, shape=\"onw\""},
+{"fl_slope", slope=SOUTHWEST, shape="osw", _text="fl_slope, slope=SOUTHWEST, shape=\"osw\""},
+{"fl_slope", slope=SOUTHEAST, shape="ose", _text="fl_slope, slope=SOUTHEAST, shape=\"ose\""},
+{"fl_slope", slope=NORTHEAST, shape="one", _text="fl_slope, slope=NORTHEAST, shape=\"one\""},
+{"fl_slope", slope=WEST, shape="tw", _text="fl_slope, slope=WEST, shape=\"tw\""},
+{"fl_slope", slope=SOUTH, shape="ts", _text="fl_slope, slope=SOUTH, shape=\"ts\""},
+{"fl_slope", slope=EAST, shape="te", _text="fl_slope, slope=EAST, shape=\"te\""},
+{"fl_slope", slope=NORTH, shape="tn", _text="fl_slope, slope=NORTH, shape=\"tn\""},
+{"fl_slope", slope=NORTHWEST, shape="twl", _text="fl_slope, slope=NORTHWEST, shape=\"twl\""},
+{"fl_slope", slope=SOUTHWEST, shape="tsl", _text="fl_slope, slope=SOUTHWEST, shape=\"tsl\""},
+{"fl_slope", slope=SOUTHEAST, shape="tel", _text="fl_slope, slope=SOUTHEAST, shape=\"tel\""},
+{"fl_slope", slope=NORTHEAST, shape="tnl", _text="fl_slope, slope=NORTHEAST, shape=\"tnl\""},
+{"fl_slope", slope=SOUTHWEST, shape="twr", _text="fl_slope, slope=SOUTHWEST, shape=\"twr\""},
+{"fl_slope", slope=SOUTHEAST, shape="tsr", _text="fl_slope, slope=SOUTHEAST, shape=\"tsr\""},
+{"fl_slope", slope=NORTHEAST, shape="ter", _text="fl_slope, slope=NORTHEAST, shape=\"ter\""},
+{"fl_slope", slope=NORTHWEST, shape="tnr", _text="fl_slope, slope=NORTHWEST, shape=\"tnr\""}
 
--- FLOOR --
-fill_floor(floor, 0,0,levelw,levelh)
+}
 
--- STONES --
---draw_border(wall)
 
--- ITEMS --
-set_item("it-document", 10, 5, {text="text1"})
+ti[" "] = {"fl_sahara"}
+ti["#"] = {"st_rawglass"}
+ti["S"] = {"st_switch", target="set_floor"}
+ti["x"] = {"st_brake", name="here"}
 
--- ACTORS --
-set_actor("ac-blackball", 4.5,3.5, {player=0})
-set_actor("ac-whiteball", 6.5,3.5, {player=1})
-set_item("it-yinyang",4,3)
-set_item("it-yinyang",6,3)
+wo(ti, " ", 12+#floors, 13)
+wo:drawBorder(po(0, 0), wo["Width"], wo["Height"], ti["#"])
+wo[{1,1}] = {"#ac_marble_black"}
+wo[{1,2}] = {"#ac_marble_white"}
+wo[{1,3}] = ti["x"]
 
--- Funktionen
--- VARS
-    floorlist = {
-        -- The first two sections are copied from models-2d.lua,
-        -- except for "fl_abyss", which has been replaced by "fl_abyss_fake".
-        -- (see below for "fl_abyss")
-        -- single
-        {"fl-abyss_fake", noframe = true},
-        {"fl-acblack", noframe = true},
-        {"fl-acwhite", noframe = true},
-        {"fl-black"},
-        {"fl-bluegreen"},
-        {"fl-darkgray"},
-        {"fl-dummy", noframe = true},
-        {"fl-dunes"},
-        {"fl-floor_001"},
-        {"fl_ice", noframe = true},
-        {"fl-inverse", noframe = true},
-        {"fl-inverse2", noframe = true},
-        {"fl-light"},
-        {"fl-lightgray"},
-        {"fl-nomouse", noframe = true},
-        {"fl-normal"},
-        {"fl-sand"},
-        {"fl-stone"},
-        {"fl-springboard"},
-        {"fl-trigger"},
-        {"fl-white"},
-        -- multiple, with height and width (or 1)
-        {"fl-bluegray", 4},
-        {"fl-bluegreenx", 2},
-        {"fl-brick", 3},
-        {"fl-bumps", 2, 2},
-        {"fl-concrete", 4},
-        {"fl-gravel", 4},
-        {"fl-gray", 5},
-        {"fl-hay", 4},
-        {"fl-himalaya", 4},
-        {"fl-marble", 4},
-        {"fl-metal", 6},
-        {"fl-mortar", 2, 2},
-        {"fl-plank", 4},
-        {"fl-red", 4},
-        {"fl-rock", 2},
-        {"fl-rough", 5},
-        {"fl-rough-blue", 4},
-        {"fl-rough-red", 4},
-        {"fl-sahara", 4},
-        {"fl-samba", 2},
-        {"fl_space", 3, 2, noframe = true},
-        {"fl-stwood", 2},
-        {"fl_swamp", 4, noframe = true},
-        {"fl-tigris", 4},
-        {"fl_water", 4, noframe = true},
-        {"fl-woven", 5},
-        -- Additional floors
-        {"fl-leaves", noframe = true},
-        {"fl-leavesb", noframe = true},
-        {"fl-leavesc1", noframe = true},
-        {"fl-leavesc2", noframe = true},
-        {"fl-leavesc3", noframe = true},
-        {"fl-leavesc4", noframe = true},
-        {"fl-leavesd1", noframe = true},
-        {"fl-leavesd2", noframe = true},
-        {"fl-leavesd3", noframe = true},
-        {"fl-leavesd4", noframe = true},
-        {"fl-leavese1", noframe = true},
-        {"fl-leavese2", noframe = true},
-        {"fl-leavese3", noframe = true},
-        {"fl-leavese4", noframe = true},
-        {"fl-metal1"},
-        {"fl-metal2"},
-        {"fl-metal3"},
-        {"fl-metal4"},
-        {"fl-metal5"},
-        {"fl-metal6"},
-        {"fl-normal_x"},
-        {"fl-rough_medium"},
-        {"fl-rough_slow"},
-        {"fl-samba1"},
-        {"fl-samba2"},
-        {"fl-stwood1"},
-        {"fl-stwood2"},
-        {"fl-wood", noframe = true},
-        {"fl-wood1", noframe = true},
-        {"fl-wood2", noframe = true},
-        {"fl-abyss", noframe = true},
-        {"fl-acblack", noframe = true},
-        {"fl-acwhite", noframe = true},
-        {"fl-bridge-closed", noframe = true},
-        {"fl-gradient1", noframe = true},
-        {"fl-gradient2", noframe = true},
-        {"fl-gradient3", noframe = true},
-        {"fl-gradient4", noframe = true},
-        {"fl-gradient5", noframe = true},
-        {"fl-gradient6", noframe = true},
-        {"fl-gradient7", noframe = true},
-        {"fl-gradient8", noframe = true},
-        {"fl-gradient9", noframe = true},
-        {"fl-gradient10", noframe = true},
-        {"fl-gradient11", noframe = true},
-        {"fl-gradient12", noframe = true},
-        {"fl-gradient13", noframe = true},
-        {"fl-gradient14", noframe = true},
-        {"fl-gradient15", noframe = true},
-        {"fl-gradient16", noframe = true},
-        {"fl-inverse", noframe = true},
-        {"fl-inverse2", noframe = true},
-        {"fl-space-force", noframe = true},
-        {"fl-thief", noframe = true}        
-    }
-    
-------
-
-nr=1
-for i=1,table.getn(floorlist) do
-    nr = nr+1
-    set_stone("st-switch", 1 + i, 2, {action="callback", target="sw"..nr, name="switch"..nr})
-    func = "function sw"..nr.."() flnr="..i.."; setfloor(flnr) ; end"
-    dostring(func)
+for i=1, #floors do
+    wo[po(5+i, 1)] = ti["S"]
+    wo[po(5+i, 2)] = {"it_document", text=floors[i]["_text"]}
+    wo[po(5+i, 5)] = floors[i]
+    wo[po(5+i, 6)] = floors[i]
+    wo[po(5+i, 7)] = floors[i]
+    wo[po(5+i, 8)] = floors[i]
+    wo[po(5+i, 9)] = floors[i]
 end
 
-function setfloor(flnr)
-    local floor = floorlist[flnr]
-    draw_floor(floor[1], {1 + flnr, 4}, {0, 1}, 8)
-    if not floorlist[flnr].noframe then
-        draw_floor(floor[1].."_framed", {1 + flnr, 8}, {0, 1}, 4)
+-- Floortile express worldwide:
+function set_floor(value, sender)
+    wo[po(sender) + po(0, 1)] = {"it_document", text=floors[sender.x-5]["_text"]}
+    if no["here"]:exists() then
+        wo[no["here"]] = floors[sender.x-5]
     end
-    set_item("it-document", 1 + flnr, 0, {text = floor[1]})
 end
-
-    ]]></el:luamain>
+ ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">
         <el:english el:translate="false"/>
       </el:string>
-      <el:string el:key="text1">
-        <el:english el:translate="false">Level with all floors of Enigma 1.01!</el:english>
-      </el:string> 
     </el:i18n>
   </el:protected>
 </el:level>

Modified: trunk/data/levels/enigma_experimental/items_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/items_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
+++ trunk/data/levels/enigma_experimental/items_1.xml	2009-03-04 21:44:51 UTC (rev 1580)
@@ -2,77 +2,182 @@
 <el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
   <el:protected>
     <el:info el:type="level">
-      <el:identity el:title="All Items" el:subtitle="Testlevel with all Items" el:id="items"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="stable"/>
-      <el:author  el:name="Raoul Bourquin" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2006, 2007 Raoul Bourquin</el:copyright>
+      <el:identity el:title="All Items as of Enigma 1.10" el:subtitle="" el:id="items"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Raoul Bourquin" el:email=""/>
+      <el:copyright>Copyright ? 2009 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.00">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
-      <el:comments>
-        <el:code>Lua 5.1 and XML converted by Leveladministrators</el:code>
-      </el:comments>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="true"/>
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
--- GENERAL --
-levelw = 120
-levelh = 13
-create_world(levelw, levelh)
-enigma.ConserveLevel = TRUE
-display.SetFollowMode(display.FOLLOW_SCROLLING)
+local items = {
 
--- DESIGN --
-boden="fl-black"
-wand="st-glass"
+{"it_bag", _text="it_bag"},
 
--- FLOOR --
-fill_floor(boden, 0,0,levelw,levelh)
+{"it_banana", _text="it_banana"},
 
--- STONES --
-draw_border(wand)
+{"it_blocker", _text="it_blocker, default"},
+{"it_blocker", state=OPEN, _text="it_blocker, state=OPEN"},
+{"it_blocker", autoclose=true, _text="it_blocker, autoclose=true"},
 
--- ITEMS --
-set_item("it-document", 10, 6, {text="text1"})
+{"it_brake", _text="it_brake"},
 
--- ACTORS --
-set_actor("ac-blackball", 4.5,4.5, {player=0})
-set_actor("ac-whiteball", 6.5,4.5, {player=1})
-set_item("it-yinyang",4,4)
-set_item("it-yinyang",6,4)
+{"it_brush", _text="it_brush"},
 
--- Funktionen
--- VARS
-itemlist={"it-abyss", "it-bag", "it-banana", "it-blackbomb", "it-blocker", "it-booze", "it-booze-broken", "it-brake", "it-brush", "it-burnable", "it-burnable_ash", "it-burnable_burning", "it-burnable_fireproof", "it-burnable_ignited", "it-burnable_oil", "it-cherry", "it-coffee", "it-coin1", "it-coin2", "it-coin4", "it-crack0", "it-crack1", "it-crack2", "it-crack3", "it-cross", "it-death", "it-document", "it-drop", "it-dynamite", "it-extinguisher", "it-extinguisher_medium", "it-extinguisher_empty", "it-extralife", "it-flagblack", "it-flagwhite", "it-floppy", "it-glasses", "it-glasses-broken", "it-hammer", "it-hill", "it-hollow", "it-hstrip", "it-inversesensor", "it-key", "it-landmine", "it-magicwand", "it-magnet", "it-magnet-on", "it-pencil", "it-pin", "it-pipe-e", "it-pipe-es", "it-pipe-h", "it-pipe-n", "it-pipe-ne", "it-pipe-s", "it-pipe-sw", "it-pipe-v", "it-pipe-w", "it-pipe-wn", "it-puller-n", "it-puller-e", "it-puller-s", "it-puller-w", "it-ring", "it-rubberband", "it-!
 seed", "it-seed_nowood", "it-seed_volcano", "it-sensor", "it-shogun-l", "it-shogun-m", "it-shogun-s", "it-spade", "it-spoon", "it-spring1", "it-spring2", "it-springboard", "it-squashed", "it-surprise", "it-sword", "it-tinyhill", "it-tinyhollow", "it-trigger", "it-umbrella", "it-vortex-closed", "it-vortex-open", "it-vstrip", "it-weight", "it-whitebomb", "it-wormhole", "it-wormhole-off", "it-wrench", "it-yinyang" }
+{"it_cherry", _text="it_cherry"},
 
-------
-nr=1
-for i=1,table.getn(itemlist) do
-      nr = nr+1
-      set_stone("st-switch",1+i,3, {action="callback", target="sw"..nr, name="switch"..nr})
-      func = "function sw"..nr.."() itnr="..i.."; settem(itnr) ; end"
-      dostring(func)
+{"it_coin", _text="it_coin, default"},
+{"it_coin_s", _text="it_coin_s"},
+{"it_coin_m", _text="it_coin_m"},
+{"it_coin_l", _text="it_coin_l"},
+
+{"it_cross", _text="it_cross"},
+
+{"it_death", _text="it_death"},
+
+{"it_extralife", _text="it_extralife"},
+
+{"it_floppy", _text="it_floppy"},
+
+{"it_glasses", _text="it_glasses, default"},
+{"it_glasses_broken", _text="it_glasses_broken"},
+
+{"it_hammer", _text="it_hammer"},
+
+{"it_key", _text="it_key, default"},
+
+{"it_landmine", _text="it_landmine"},
+
+{"it_magicwand", _text="it_magicwand"},
+
+{"it_magnet", _text="it_magnet, default"},
+{"it_magnet", state=ON, _text="it_magnet, state=ON"},
+{"it_magnet", state=OFF, _text="it_magnet, state=OFF"},
+
+{"it_meditation", _text="it_meditation, default"},
+{"it_meditation", state=MEDITATION_CALDERA, _text="it_meditation, state=MEDITATION_CALDERA"},
+{"it_meditation", state=MEDITATION_HOLLOW, _text="it_meditation, state=MEDITATION_HOLLOW"},
+{"it_meditation", state=MEDITATION_DENT, _text="it_meditation, state=MEDITATION_DENT"},
+{"it_meditation", state=MEDITATION_BUMP, _text="it_meditation, state=MEDITATION_BUMP"},
+{"it_meditation", state=MEDITATION_HILL, _text="it_meditation, state=MEDITATION_HILL"},
+{"it_meditation", state=MEDITATION_VOLCANO, _text="it_meditation, state=MEDITATION_VOLCANO"},
+
+{"it_pin", _text="it_pin"},
+
+{"it_pipe", _text="it_pipe, default"},
+{"it_pipe", connections="w", _text="it_pipe, connections=\"w\""},
+{"it_pipe", connections="s", _text="it_pipe, connections=\"s\""},
+{"it_pipe", connections="sw", _text="it_pipe, connections=\"sw\""},
+{"it_pipe", connections="e", _text="it_pipe, connections=\"e\""},
+{"it_pipe", connections="ew", _text="it_pipe, connections=\"ew\""},
+{"it_pipe", connections="es", _text="it_pipe, connections=\"es\""},
+{"it_pipe", connections="n", _text="it_pipe, connections=\"n\""},
+{"it_pipe", connections="nw", _text="it_pipe, connections=\"nw\""},
+{"it_pipe", connections="ns", _text="it_pipe, connections=\"ns\""},
+{"it_pipe", connections="ne", _text="it_pipe, connections=\"ne\""},
+
+{"it_rubberband", _text="it_rubberband"},
+
+{"it_seed", _text="it_seed, default"},
+{"it_seed", flavor="wood", _text="it_seed, flavor=\"wood\""},
+{"it_seed", flavor="hay", _text="it_seed, flavor=\"hay\""},
+{"it_seed", flavor="greenbrown", _text="it_seed, flavor=\"greenbrown\""},
+{"it_seed", flavor="volcano", _text="it_seed, flavor=\"volcano\""},
+
+{"it_sensor", _text="it_sensor, default"},
+{"it_sensor", invisible=true, _text="it_sensor, invisible=true"},
+{"it_sensor", exit=true, _text="it_sensor, exit=true"},
+{"it_sensor", exit=true, invisible=true, _text="it_sensor, exit=true, invisible=true"},
+
+{"it_shogun", _text="it_shogun, default"},
+{"it_shogun", flavor="s", _text="it_shogun, flavor=\"s\""},
+{"it_shogun", flavor="m", _text="it_shogun, flavor=\"m\""},
+{"it_shogun", flavor="l", _text="it_shogun, flavor=\"l\""},
+
+{"it_squashed", _text="it_squashed"},
+
+{"it_strip", _text="it_strip, default"},
+{"it_strip", connections="w", _text="it_strip, connections=\"w\""},
+{"it_strip", connections="s", _text="it_strip, connections=\"s\""},
+{"it_strip", connections="sw", _text="it_strip, connections=\"sw\""},
+{"it_strip", connections="e", _text="it_strip, connections=\"e\""},
+{"it_strip", connections="ew", _text="it_strip, connections=\"ew\""},
+{"it_strip", connections="es", _text="it_strip, connections=\"es\""},
+{"it_strip", connections="esw", _text="it_strip, connections=\"esw\""},
+{"it_strip", connections="n", _text="it_strip, connections=\"n\""},
+{"it_strip", connections="nw", _text="it_strip, connections=\"nw\""},
+{"it_strip", connections="ns", _text="it_strip, connections=\"ns\""},
+{"it_strip", connections="nsw", _text="it_strip, connections=\"nsw\""},
+{"it_strip", connections="ne", _text="it_strip, connections=\"ne\""},
+{"it_strip", connections="new", _text="it_strip, connections=\"new\""},
+{"it_strip", connections="nes", _text="it_strip, connections=\"nes\""},
+{"it_strip", connections="nesw", _text="it_strip, connections=\"nesw\""},
+
+{"it_surprise", _text="it_surprise"},
+
+{"it_sword", _text="it_sword"},
+
+{"it_trap", _text="it_trap, default"},
+{"it_trap", state=OPEN, _text="it_trap, state=OPEN"},
+{"it_trap", state=CLOSED, _text="it_trap, state=CLOSED"},
+
+{"it_trigger", _text="it_trigger, default"},
+{"it_trigger", invisible=true, _text="it_trigger, invisible=true"},
+
+{"it_umbrella", _text="it_umbrella"},
+
+{"it_vortex", _text="it_vortex, default"},
+{"it_vortex", state=OPEN, _text="it_vortex, state=OPEN"},
+{"it_vortex", state=CLOSED, _text="it_vortex, state=CLOSED"},
+{"it_vortex", autoclose=true, _text="it_vortex, autoclose=true"},
+
+{"it_weight", _text="it_weight"},
+
+{"it_wormhole", _text="it_wormhole, default"},
+{"it_wormhole", state=ON, _text="it_wormhole, state=ON"},
+{"it_wormhole", state=OFF, _text="it_wormhole, state=OFF"},
+
+{"it_wrench", _text="it_wrench"},
+
+{"it_yinyang", _text="it_yinyang"}
+
+}
+
+
+ti[" "] = {"fl_sahara"}
+ti["#"] = {"st_rawglass"}
+ti["S"] = {"st_switch", target="set_item"}
+ti["x"] = {"st_brake", name="here"}
+ti["@"] = {"#ac_marble_black"}
+
+wo(ti, " ", 12+#items, 13)
+wo:drawBorder(po(0, 0), wo["Width"], wo["Height"], ti["#"])
+wo[{1,1}] = {"#ac_marble_black"}
+wo[{1,2}] = {"#ac_marble_white"}
+wo[{1,3}] = ti["x"]
+
+for i=1, #items do
+    wo[po(5+i, 1)] = ti["S"]
+    wo[po(5+i, 5)] = items[i]
+    wo[po(5+i, 2)] = {"it_document", text=items[i]["_text"]}
 end
 
-function settem(itnr)
- item= itemlist[itnr]
- itdo=itemlist[itnr]
- set_item(item,1+itnr,5)
- set_item("it-document", 1+itnr, 1, {text=itdo})
+-- Items on demand:
+function set_item(value, sender)
+    wo[po(sender) + po(0, 4)] = items[sender.x-5]
+    wo[po(sender) + po(0, 1)] = {"it_document", text=items[sender.x-5]["_text"]}
+    -- Item express worldwide:
+    if no["here"]:exists() then
+        wo[no["here"] + po(0,1)] = items[sender.x-5]
+    end
 end
-
---Laser:
-set_stone("st-laser", 115, 3, {name="laser1", dir=SOUTH, on="0"})
-set_stone("st-switch", 115,1, {action="onoff", target="laser1"})
-    ]]></el:luamain>
+ ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">
         <el:english el:translate="false"/>
       </el:string>
-      <el:string el:key="text1">
-        <el:english el:translate="false">Level with all items of Enigma 1.01!</el:english>
-      </el:string> 
     </el:i18n>
   </el:protected>
 </el:level>

Modified: trunk/data/levels/enigma_experimental/stones_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/stones_1.xml	2009-03-04 21:38:25 UTC (rev 1579)
+++ trunk/data/levels/enigma_experimental/stones_1.xml	2009-03-04 21:44:51 UTC (rev 1580)
@@ -2,72 +2,626 @@
 <el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
   <el:protected>
     <el:info el:type="level">
-      <el:identity el:title="All Stones" el:subtitle="Testlevel with all Stones" el:id="stones"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="stable"/>
-      <el:author  el:name="Raoul Bourquin" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007 Raoul Bourquin</el:copyright>
+      <el:identity el:title="All Stones as of Enigma 1.10" el:subtitle="" el:id="stones"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author  el:name="Raoul Bourquin" el:email=""/>
+      <el:copyright>Copyright ? 2009 Raoul Bourquin</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.00">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:compatibility el:enigma="1.10"/>
+      <el:modes el:easy="false" el:single="true" el:network="true"/>
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
--- GENERAL --
-levelh = 13
-levelw = 300
+wo["AllowSingleOxyds"] = true
 
-create_world(levelw, levelh)
-enigma.ConserveLevel = TRUE
-display.SetFollowMode(display.FOLLOW_SCROLLING)
+local stones = {
 
--- DESIGN --
-floor="fl-black"
-wall="st-glass"
+{"st_ancient", _text="st_ancient"},
+{"st_bluegray", _text="st_bluegray"},
+{"st_bluegray_hollow", _text="st_bluegray_hollow"},
+{"st_brownie", _text="st_brownie"},
+{"st_brownmarble", _text="st_brownmarble"},
+{"st_camouflage", _text="st_camouflage"},
+{"st_camouflage_hollow", _text="st_camouflage_hollow"},
+{"st_camouflage_movable", _text="st_camouflage_movable"},
+{"st_concrete", _text="st_concrete"},
+{"st_darkgray", _text="st_darkgray"},
+{"st_darkgray_hollow", _text="st_darkgray_hollow"},
+{"st_granite", _text="st_granite"},
+{"st_granite_hollow", _text="st_granite_hollow"},
+{"st_granite_movable", _text="st_granite_movable"},
+{"st_greengray", _text="st_greengray"},
+{"st_invisible", _text="st_invisible"},
+{"st_invisible_hollow", _text="st_invisible_hollow"},
+{"st_invisible_movable", _text="st_invisible_movable"},
+{"st_metal", _text="st_metal"},
+{"st_metal_hollow", _text="st_metal_hollow"},
+{"st_pinkbumps", _text="st_pinkbumps"},
+{"st_purplegray", _text="st_purplegray"},
+{"st_purplemarble", _text="st_purplemarble"},
+{"st_redbrown", _text="st_redbrown"},
+{"st_redbrown_hollow", _text="st_redbrown_hollow"},
+{"st_redbrown_movable", _text="st_redbrown_movable"},
+{"st_redmarble", _text="st_redmarble"},
+{"st_redrock", _text="st_redrock"},
+{"st_tigris", _text="st_tigris"},
+{"st_woven", _text="st_woven"},
+{"st_yellow", _text="st_yellow"},
 
--- FLOOR --
-fill_floor(floor, 0,0,levelw,levelh)
+{"st_bluesand", _text="st_bluesand, default"},
+{"st_bluesand", faces="", _text="st_bluesand, faces=\"\""},
+{"st_bluesand", faces="w", _text="st_bluesand, faces=\"w\""},
+{"st_bluesand", faces="s", _text="st_bluesand, faces=\"s\""},
+{"st_bluesand", faces="sw", _text="st_bluesand, faces=\"sw\""},
+{"st_bluesand", faces="e", _text="st_bluesand, faces=\"e\""},
+{"st_bluesand", faces="ew", _text="st_bluesand, faces=\"ew\""},
+{"st_bluesand", faces="es", _text="st_bluesand, faces=\"es\""},
+{"st_bluesand", faces="esw", _text="st_bluesand, faces=\"esw\""},
+{"st_bluesand", faces="n", _text="st_bluesand, faces=\"n\""},
+{"st_bluesand", faces="nw", _text="st_bluesand, faces=\"nw\""},
+{"st_bluesand", faces="ns", _text="st_bluesand, faces=\"ns\""},
+{"st_bluesand", faces="nsw", _text="st_bluesand, faces=\"nsw\""},
+{"st_bluesand", faces="ne", _text="st_bluesand, faces=\"ne\""},
+{"st_bluesand", faces="new", _text="st_bluesand, faces=\"new\""},
+{"st_bluesand", faces="nes", _text="st_bluesand, faces=\"nes\""},
+{"st_bluesand", faces="nesw", _text="st_bluesand, faces=\"nesw\""},
 
--- STONES --
-draw_border(wall)
+{"st_brick", _text="st_brick, default"},
+{"st_brick", faces="", _text="st_brick, faces=\"\""},
+{"st_brick", faces="w", _text="st_brick, faces=\"w\""},
+{"st_brick", faces="s", _text="st_brick, faces=\"s\""},
+{"st_brick", faces="sw", _text="st_brick, faces=\"sw\""},
+{"st_brick", faces="e", _text="st_brick, faces=\"e\""},
+{"st_brick", faces="ew", _text="st_brick, faces=\"ew\""},
+{"st_brick", faces="es", _text="st_brick, faces=\"es\""},
+{"st_brick", faces="esw", _text="st_brick, faces=\"esw\""},
+{"st_brick", faces="n", _text="st_brick, faces=\"n\""},
+{"st_brick", faces="nw", _text="st_brick, faces=\"nw\""},
+{"st_brick", faces="ns", _text="st_brick, faces=\"ns\""},
+{"st_brick", faces="nsw", _text="st_brick, faces=\"nsw\""},
+{"st_brick", faces="ne", _text="st_brick, faces=\"ne\""},
+{"st_brick", faces="new", _text="st_brick, faces=\"new\""},
+{"st_brick", faces="nes", _text="st_brick, faces=\"nes\""},
+{"st_brick", faces="nesw", _text="st_brick, faces=\"nesw\""},
 
--- ITEMS --
-set_item("it-document", 10, 6, {text="text1"})
+{"st_panel", _text="st_panel, default"},
+{"st_panel", faces="", _text="st_panel, faces=\"\""},
+{"st_panel", faces="w", _text="st_panel, faces=\"w\""},
+{"st_panel", faces="s", _text="st_panel, faces=\"s\""},
+{"st_panel", faces="sw", _text="st_panel, faces=\"sw\""},
+{"st_panel", faces="e", _text="st_panel, faces=\"e\""},
+{"st_panel", faces="ew", _text="st_panel, faces=\"ew\""},
+{"st_panel", faces="es", _text="st_panel, faces=\"es\""},
+{"st_panel", faces="esw", _text="st_panel, faces=\"esw\""},
+{"st_panel", faces="n", _text="st_panel, faces=\"n\""},
+{"st_panel", faces="nw", _text="st_panel, faces=\"nw\""},
+{"st_panel", faces="ns", _text="st_panel, faces=\"ns\""},
+{"st_panel", faces="nsw", _text="st_panel, faces=\"nsw\""},
+{"st_panel", faces="ne", _text="st_panel, faces=\"ne\""},
+{"st_panel", faces="new", _text="st_panel, faces=\"new\""},
+{"st_panel", faces="nes", _text="st_panel, faces=\"nes\""},
+{"st_panel", faces="nesw", _text="st_panel, faces=\"nesw\""},
 
--- ACTORS --
-set_actor("ac-blackball", 4.5,4.5, {player=0})
-set_actor("ac-whiteball", 6.5,4.5, {player=1})
-set_item("it-yinyang",4,4)
-set_item("it-yinyang",6,4)
+{"st_actorimpulse", _text="st_actorimpulse, default"},
+{"st_actorimpulse", invisible=true, _text="st_actorimpulse, invisible=true"},
 
--- Funktionen
--- VARS
-stonelist={"st-beads", "st-blue-sand", "st-bluegray", "st-bluegray_hole", "st-brick", "st-brownie", "st-bumps", "st-camouflage", "st-camouflage_hole", "st-camouflage_move", "st-fakeoxyd", "st-glass", "st-glass1", "st-glass2", "st-glass3", "st-glass1_hole", "st-glass2_hole", "st-glass_move", "st-glass1_move", "st-glass2_move", "st-greenbrown", "st-greenbrown_hole", "st-greenbrown_move", "st-likeoxyda", "st-likeoxydb", "st-likeoxydc", "st-likeoxydd", "st-likeoxyda-open", "st-likeoxydb-open", "st-likeoxydc-open", "st-likeoxydd-open", "st-marble", "st-marble_hole", "st-marble_move", "st-metal", "st-metal_hole", "st-redrock", "st-rock1", "st-rock2", "st-rock3", "st-rock4", "st-rock5", "st-rock6", "st-rock7", "st-rock8", "st-rock9", "st-rock10", "st-rock1_hole", "st-rock2_hole", "st-rock3_hole", "st-rock1_move", "st-rock3_move", "st-stone1", "st-stone2", "st-wood", "st-wood1", "st-wood2", "st-wood_001", "st-woven", "st-yellow", "st-actorimpulse", "st-actorimpulse_invisible", "st-!
 bigbluesand-n", "st-bigbluesand-e", "st-bigbluesand-s", "st-bigbluesand-w", "st-bigbluesand-ne", "st-bigbluesand-ns", "st-bigbluesand-nw", "st-bigbluesand-es", "st-bigbluesand-ew", "st-bigbluesand-sw", "st-bigbluesand-nes", "st-bigbluesand-new", "st-bigbluesand-nsw", "st-bigbluesand-esw", "st-bigbluesand-nesw", "st-bigbrick-n", "st-bigbrick-e", "st-bigbrick-s", "st-bigbrick-w", "st-bigbrick-ne", "st-bigbrick-ns", "st-bigbrick-nw", "st-bigbrick-es", "st-bigbrick-ew", "st-bigbrick-sw", "st-bigbrick-nes", "st-bigbrick-new", "st-bigbrick-nsw", "st-bigbrick-esw", "st-bigbrick-nesw", "st-black1", "st-black2", "st-black3", "st-black4", "st-blackballs", "st-block", "st-blocker", "st-bolder-e", "st-bolder-n", "st-bolder-s", "st-bolder-w", "st-bombs", "st-brake", "st-break_acblack", "st-break_acwhite", "st-break_bolder", "st-break_gray", "st-break_invisible", "st-brick_magic", "st-bug", "st-chameleon", "st-chargeminus", "st-chargeplus", "st-chargezero", "st-chess_black", "st-chess_wh!
 ite", "st-coffee", "st-coinslot", "st-death", "st-death_invisi!
 ble", "s
t-disco-dark", "st-disco-light", "st-disco-medium", "st-door-h", "st-door-v", "st-door_a", "st-door_b", "st-door_c", "st-fakeoxyda", "st-fart", "st-firebreak", "st-firebreak_move", "st-flash", "st-flhay", "st-floppy", "st-flrock", "st-fourswitch", "st-grate1", "st-grate2", "st-grate3", "st-invisible", "st-invisible_magic", "st-key", "st-knight", "st-laser-e", "st-laser-n", "st-laser-s", "st-laser-w", "st-laserbreak", "st-laserswitch", "st-lasertimeswitch", "st-lightpassenger", "st-magic", "st-mail-e", "st-mail-n", "st-mail-s", "st-mail-w", "st-mirror-3<", "st-mirror-3<m", "st-mirror-3<t", "st-mirror-3<tm", "st-mirror-3>", "st-mirror-3>m", "st-mirror-3>t", "st-mirror-3>tm", "st-mirror-3^", "st-mirror-3^m", "st-mirror-3^t", "st-mirror-3^tm", "st-mirror-3v", "st-mirror-3vm", "st-mirror-3vt", "st-mirror-3vtm", "st-mirror-p-", "st-mirror-p-m", "st-mirror-p-t", "st-mirror-p-tm", "st-mirror-p/", "st-mirror-p/m", "st-mirror-p/t", "st-mirror-p/tm", "st-mirror-p\\", "st-mirror-p\\m", !
 "st-mirror-p\\t", "st-mirror-p\\tm", "st-mirror-p|", "st-mirror-p|m", "st-mirror-p|t", "st-mirror-p|tm", "st-oneway-n", "st-oneway-e", "st-oneway-s", "st-oneway-w", "st-oneway_black-n", "st-oneway_black-e", "st-oneway_black-s", "st-oneway_black-w", "st-oneway_white-n", "st-oneway_white-e", "st-oneway_white-s", "st-oneway_white-w", "st-oxyd", "st-plain", "st-plain_break", "st-plain_cracked", "st-plain_hole", "st-plain_move", "st-polarswitch", "st-pull", "st-puzzle-hollow", "st-puzzle-n", "st-puzzle-e", "st-puzzle-s", "st-puzzle-w", "st-puzzle-ne", "st-puzzle-ns", "st-puzzle-nw", "st-puzzle-es", "st-puzzle-ew", "st-puzzle-sw", "st-puzzle-nes", "st-puzzle-new", "st-puzzle-nsw", "st-puzzle-esw", "st-puzzle-nesw", "st-puzzle2-hollow", "st-puzzle2-n", "st-puzzle2-e", "st-puzzle2-s", "st-puzzle2-w", "st-puzzle2-ne", "st-puzzle2-ns", "st-puzzle2-nw", "st-puzzle2-es", "st-puzzle2-ew", "st-puzzle2-sw", "st-puzzle2-nes", "st-puzzle2-new", "st-puzzle2-nsw", "st-puzzle2-esw", "st-puzzle!
 2-nesw", "st-rock3_break", "st-rock3_movebreak", "st-rotator-l!
 eft", "s
t-rotator-right", "st-rotator_move-left", "st-rotator_move-right", "st-rubberband", "st-scissors", "st-shogun-s", "st-shogun-m", "st-shogun-l", "st-spitter", "st-stone_break", "st-stonebrush", "st-stoneimpulse", "st-stoneimpulse-hollow", "st-stoneimpulse_movable", "st-surprise", "st-swap", "st-switch", "st-switch_black", "st-switch_white", "st-thief", "st-timer", "st-timeswitch", "st-turnstile", "st-turnstile-green", "st-turnstile-e", "st-turnstile-n", "st-turnstile-s", "st-turnstile-w", "st-volcano", "st-volcano_active", "st-volcano_inactive", "st-white1", "st-white2", "st-white3", "st-white4", "st-whiteballs", "st-window", "st-yinyang1", "st-yinyang2", "st-yinyang3"}
+{"st_beads", _text="st_beads"},
 
-------
-nr=1
-for i=1,table.getn(stonelist) do
-      nr = nr+1
-      set_stone("st-switch",1+i,3, {action="callback", target="sw"..nr, name="switch"..nr})
-      func = "function sw"..nr.."() stnr="..i.."; setstone(stnr) ; end"
-      dostring(func)
+{"st_blocker", _text="st_blocker, default"},
+{"st_blocker", state=CLOSED, _text="st_blocker, state=CLOSED"},
+
+{"st_blur", _text="st_blur, default"},
+{"st_blur", flavor="straight", _text="st_blur, flavor=\"straight\""},
+{"st_blur", flavor="cross", _text="st_blur, flavor=\"cross\""},
+{"st_blur", flavor="magic", _text="st_blur, flavor=\"magic\""},
+
+{"st_boulder", _text="st_boulder, default"},
+{"st_boulder", orientation=NORTH, _text="st_boulder, orientation=NORTH"},
+{"st_boulder", orientation=EAST, _text="st_boulder, orientation=EAST"},
+{"st_boulder", orientation=SOUTH, _text="st_boulder, orientation=SOUTH"},
+{"st_boulder", orientation=WEST, _text="st_boulder, orientation=WEST"},
+
+{"st_box", _text="st_box, default"}, -- flavor attributes!
+{"st_box_wood", _text="st_box_wood"}, -- flavor attributes!
+{"st_box_wood_h", _text="st_box_wood_h"}, -- flavor attributes!
+{"st_box_wood_v", _text="st_box_wood_v"}, -- flavor attributes!
+{"st_box_wood_growing", _text="st_box_wood_growing"}, -- flavor attributes!
+{"st_box_hay", _text="st_box_hay"}, -- flavor attributes!
+{"st_box_hay_growing", _text="st_box_hay_growing"}, -- flavor attributes!
+{"st_box_rock", _text="st_box_rock"}, -- flavor attributes!
+
+{"st_brake", _text="st_brake"},
+
+{"st_break", _text="st_break, default"},
+{"st_break_plain", _text="st_break_plain"}, -- flavor attributes!
+{"st_break_black", _text="st_break_black"}, -- flavor attributes!
+{"st_break_white", _text="st_break_white"}, -- flavor attributes!
+{"st_break_oxydc", _text="st_break_oxydc"}, -- flavor attributes!
+{"st_break_boulder", _text="st_break_boulder"}, -- flavor attributes!
+{"st_break_bug", _text="st_break_bug"}, -- flavor attributes!
+{"st_break_laser", _text="st_break_laser"}, -- flavor attributes!
+
+{"st_brownpyramide", _text="st_brownpyramide"},
+
+{"st_chameleon", _text="st_chameleon"},
+
+{"st_charge", _text="st_charge, default"}, -- flavor attributes?
+{"st_charge_zero", _text="st_charge_zero"}, -- flavor attributes?
+{"st_charge_plus", _text="st_charge_plus"}, -- flavor attributes?
+{"st_charge_minus", _text="st_charge_minus"}, -- flavor attributes?
+
+{"st_chess", _text="st_chess, default"},
+{"st_chess", color=BLACK, _text="st_chess, color=BLACK"},
+{"st_chess", color=WHITE, _text="st_chess, color=WHITE"},
+
+{"st_coinslot", _text="st_coinslot"},
+
+{"st_darkglass", _text="st_darkglass"},
+{"st_darkglass_hollow", _text="st_darkglass_hollow"}, -- flavor attributes?
+{"st_darkglass_movable", _text="st_darkglass_movable"}, -- flavor attributes?
+
+{"st_death", _text="st_death, default"},
+{"st_death", invisible=true, _text="st_death, invisible=true"},
+
+{"st_disco", _text="st_disco, default"},
+{"st_disco", state=LIGHT, _text="st_disco, state=LIGHT"},
+{"st_disco", state=MEDIUM, _text="st_disco, state=MEDIUM"},
+{"st_disco", state=DARK, _text="st_disco, state=DARK"},
+
+{"st_dispenser", _text="st_dispenser, default"},
+{"st_dispenser_bombblack", _text="st_dispenser_bombblack"}, -- flavor attributes?
+{"st_dispenser_bombwhite", _text="st_dispenser_bombwhite"}, -- flavor attributes?
+{"st_dispenser_dynamite", _text="st_dispenser_dynamite"}, -- flavor attributes?
+
+{"st_door", _text="st_door, default"},
+{"st_door", flavor="a", _text="st_door, flavor=\"a\""},
+{"st_door", flavor="a", state=OPEN, _text="st_door, flavor=\"a\", state=OPEN"},
+{"st_door", flavor="b", _text="st_door, flavor=\"b\""},
+{"st_door", flavor="b", state=OPEN, _text="st_door, flavor=\"b\", state=OPEN"},
+{"st_door", flavor="c", _text="st_door, flavor=\"c\""},
+{"st_door", flavor="c", state=OPEN, _text="st_door, flavor=\"c\", state=OPEN"},
+{"st_door", flavor="d", faces="ns", _text="st_door, flavor=\"d\", faces=\"ns\""},
+{"st_door", flavor="d", faces="ns", state=OPEN, _text="st_door, flavor=\"d\", faces=\"ns\", state=OPEN"},
+{"st_door", flavor="d", faces="ew", _text="st_door, flavor=\"d\", faces=\"ew\""},
+{"st_door", flavor="d", faces="ew", state=OPEN, _text="st_door, flavor=\"d\", faces=\"ew\", state=OPEN"},
+
+--{"st_fake", _text="st_fake, default"}, broken default?
+{"st_fake_quake", _text="st_fake_quake"}, -- flavor attributes?
+{"st_fake_oxyda", _text="st_fake_oxyda"}, -- flavor attributes?
+{"st_fake_oxydb", _text="st_fake_oxydb"}, -- flavor attributes?
+{"st_fake_oxydc", _text="st_fake_oxydc"}, -- flavor attributes?
+{"st_fake_oxydd", _text="st_fake_oxydd"}, -- flavor attributes?
+{"st_fake_oxyde", _text="st_fake_oxyde"}, -- flavor attributes?
+
+{"st_flash", _text="st_flash"},
+
+{"st_flat", _text="st_flat, default"}, -- flavor attributes!
+{"st_flat_hollow", _text="st_flat_hollow"}, -- flavor attributes?
+{"st_flat_movable", _text="st_flat_movable"}, -- flavor attributes?
+{"st_flat_breakable", _text="st_flat_breakable"}, -- flavor attributes?
+{"st_flat_cracked", _text="st_flat_cracked"}, -- flavor attributes?
+{"st_flat_burnable", _text="st_flat_burnable"}, -- flavor attributes?
+{"st_flat_moveburnable", _text="st_flat_moveburnable"}, -- flavor attributes?
+--{"st_flat_breaking", _text="st_flat_breaking"}, -- flavor attributes?
+
+{"st_floppy", _text="st_floppy, default"},
+{"st_floppy", state=ON, _text="st_floppy, state=ON"},
+{"st_floppy", state=OFF, _text="st_floppy, state=OFF"},
+
+{"st_fourswitch", _text="st_fourswitch, default"},
+{"st_fourswitch", counterclock=false, _text="st_fourswitch, counterclock=false"},
+{"st_fourswitch", counterclock=true, _text="st_fourswitch, counterclock=true"},
+{"st_fourswitch", state=NORTH, _text="st_fourswitch, state=NORTH"},
+{"st_fourswitch", state=EAST, _text="st_fourswitch, state=EAST"},
+{"st_fourswitch", state=SOUTH, _text="st_fourswitch, state=SOUTH"},
+{"st_fourswitch", state=WEST, _text="st_fourswitch, state=WEST"},
+
+{"st_ghost", _text="st_ghost, default"},
+{"st_ghost", flavor="purplemarble", _text="st_ghost, flavor=\"purplemarble\""},
+{"st_ghost", flavor="greenbrown", _text="st_ghost, flavor=\"greenbrown\""},
+{"st_ghost", flavor="break", _text="st_ghost, flavor=\"break\""},
+
+{"st_grate", _text="st_grate, default"},
+{"st_grate", flavor="cross", _text="st_grate, flavor=\"cross\""},
+{"st_grate", flavor="framed", _text="st_grate, flavor=\"framed\""},
+
+{"st_greenbrown", _text="st_greenbrown"},
+{"st_greenbrown_hollow", _text="st_greenbrown_hollow"},
+{"st_greenbrown_movable", _text="st_greenbrown_movable"},
+{"st_greenbrown_growing", _text="st_greenbrown_growing"},
+
+{"st_jamb", _text="st_jamb, default"},
+{"st_jamb", color=BLACK, _text="st_jamb, color=BLACK"},
+{"st_jamb", color=WHITE, _text="st_jamb, color=WHITE"},
+
+{"st_key", _text="st_key, default"},
+{"st_key", state=ON, _text="st_key, state=ON"},
+{"st_key", state=OFF, _text="st_key, state=OFF"},
+
+{"st_knight", _text="st_knight"},
+
+{"st_laser", _text="st_laser, default"},
+{"st_laser", state=ON, _text="st_laser, state=ON"},
+{"st_laser", state=OFF, _text="st_laser, state=OFF"},
+{"st_laser", orientation=NORTH, _text="st_laser, orientation=NORTH"},
+{"st_laser", orientation=EAST, _text="st_laser, orientation=EAST"},
+{"st_laser", orientation=SOUTH, _text="st_laser, orientation=SOUTH"},
+{"st_laser", orientation=WEST, _text="st_laser, orientation=WEST"},
+
+{"st_laserflop", _text="st_laserflop, default"},
+{"st_laserflop", state=ON, _text="st_laserflop, state=ON"},
+{"st_laserflop", state=OFF, _text="st_laserflop, state=OFF"},
+
+{"st_laserswitch", _text="st_laserswitch"},
+
+{"st_lightglass", _text="st_lightglass"},
+{"st_lightglass_hollow", _text="st_lightglass_hollow"}, -- flavor attributes?
+{"st_lightglass_movable", _text="st_lightglass_movable"}, -- flavor attributes?
+
+{"st_lightpassenger", _text="st_lightpassenger, default"},
+{"st_lightpassenger", state=ON, _text="st_lightpassenger, state=ON"},
+{"st_lightpassenger", state=OFF, _text="st_lightpassenger, state=OFF"},
+
+{"st_magic", _text="st_magic, default"},
+{"st_magic_brick", _text="st_magic_brick"}, -- flavor attributes?
+{"st_magic_oxyda", _text="st_magic_oxyda"}, -- flavor attributes?
+{"st_magic_oxydc", _text="st_magic_oxydc"}, -- flavor attributes?
+
+{"st_mail", _text="st_mail, default"},
+{"st_mail", orientation=NORTH, _text="st_mail, orientation=NORTH"},
+{"st_mail", orientation=EAST, _text="st_mail, orientation=EAST"},
+{"st_mail", orientation=SOUTH, _text="st_mail, orientation=SOUTH"},
+{"st_mail", orientation=WEST, _text="st_mail, orientation=WEST"},
+
+{"st_mirror", _text="st_mirror, default"},
+{"st_mirror", movable=true, _text="st_mirror, movable=true"},
+{"st_mirror", transparent=true, _text="st_mirror, transparent=true"},
+{"st_mirror", movable=true, transparent=true, _text="st_mirror, movable=true, transparent=true"},
+{"st_mirror", counterclock=true, _text="st_mirror, counterclock=true"},
+{"st_mirror", orientation=NORTH, _text="st_mirror, orientation=NORTH"},
+{"st_mirror", orientation=EAST, _text="st_mirror, orientation=EAST"},
+{"st_mirror", orientation=SOUTH, _text="st_mirror, orientation=SOUTH"},
+{"st_mirror", orientation=WEST, _text="st_mirror, orientation=WEST"},
+{"st_mirror", flavor="sheets", orientation=NORTH, _text="st_mirror, flavor=\"sheets\", orientation=NORTH"},
+{"st_mirror", flavor="sheets", orientation=EAST, _text="st_mirror, flavor=\"sheets\", orientation=EAST"},
+{"st_mirror", flavor="sheets", orientation=SOUTH, _text="st_mirror, flavor=\"sheets\", orientation=SOUTH"},
+{"st_mirror", flavor="sheets", orientation=WEST, _text="st_mirror, flavor=\"sheets\", orientation=WEST"},
+{"st_mirror", flavor="triangle", orientation=NORTH, _text="st_mirror, flavor=\"triangle\", orientation=NORTH"},
+{"st_mirror", flavor="triangle", orientation=EAST, _text="st_mirror, flavor=\"triangle\", orientation=EAST"},
+{"st_mirror", flavor="triangle", orientation=SOUTH, _text="st_mirror, flavor=\"triangle\", orientation=SOUTH"},
+{"st_mirror", flavor="triangle", orientation=WEST, _text="st_mirror, flavor=\"triangle\", orientation=WEST"},
+{"st_mirror", movable=true, orientation=NORTH, _text="st_mirror, movable=true, orientation=NORTH"},
+{"st_mirror", movable=true, orientation=EAST, _text="st_mirror, movable=true, orientation=EAST"},
+{"st_mirror", movable=true, orientation=SOUTH, _text="st_mirror, movable=true, orientation=SOUTH"},
+{"st_mirror", movable=true, orientation=WEST, _text="st_mirror, movable=true, orientation=WEST"},
+{"st_mirror", movable=true, flavor="sheets", orientation=NORTH, _text="st_mirror, movable=true, flavor=\"sheets\", orientation=NORTH"},
+{"st_mirror", movable=true, flavor="sheets", orientation=EAST, _text="st_mirror, movable=true, flavor=\"sheets\", orientation=EAST"},
+{"st_mirror", movable=true, flavor="sheets", orientation=SOUTH, _text="st_mirror, movable=true, flavor=\"sheets\", orientation=SOUTH"},
+{"st_mirror", movable=true, flavor="sheets", orientation=WEST, _text="st_mirror, movable=true, flavor=\"sheets\", orientation=WEST"},
+{"st_mirror", movable=true, flavor="triangle", orientation=NORTH, _text="st_mirror, movable=true, flavor=\"triangle\", orientation=NORTH"},
+{"st_mirror", movable=true, flavor="triangle", orientation=EAST, _text="st_mirror, movable=true, flavor=\"triangle\", orientation=EAST"},
+{"st_mirror", movable=true, flavor="triangle", orientation=SOUTH, _text="st_mirror, movable=true, flavor=\"triangle\", orientation=SOUTH"},
+{"st_mirror", movable=true, flavor="triangle", orientation=WEST, _text="st_mirror, movable=true, flavor=\"triangle\", orientation=WEST"},
+{"st_mirror", transparent=true, orientation=NORTH, _text="st_mirror, transparent=true, orientation=NORTH"},
+{"st_mirror", transparent=true, orientation=EAST, _text="st_mirror, transparent=true, orientation=EAST"},
+{"st_mirror", transparent=true, orientation=SOUTH, _text="st_mirror, transparent=true, orientation=SOUTH"},
+{"st_mirror", transparent=true, orientation=WEST, _text="st_mirror, transparent=true, orientation=WEST"},
+{"st_mirror", transparent=true, flavor="sheets", orientation=NORTH, _text="st_mirror, transparent=true, flavor=\"sheets\", orientation=NORTH"},
+{"st_mirror", transparent=true, flavor="sheets", orientation=EAST, _text="st_mirror, transparent=true, flavor=\"sheets\", orientation=EAST"},
+{"st_mirror", transparent=true, flavor="sheets", orientation=SOUTH, _text="st_mirror, transparent=true, flavor=\"sheets\", orientation=SOUTH"},
+{"st_mirror", transparent=true, flavor="sheets", orientation=WEST, _text="st_mirror, transparent=true, flavor=\"sheets\", orientation=WEST"},
+{"st_mirror", transparent=true, flavor="triangle", orientation=NORTH, _text="st_mirror, transparent=true, flavor=\"triangle\", orientation=NORTH"},
+{"st_mirror", transparent=true, flavor="triangle", orientation=EAST, _text="st_mirror, transparent=true, flavor=\"triangle\", orientation=EAST"},
+{"st_mirror", transparent=true, flavor="triangle", orientation=SOUTH, _text="st_mirror, transparent=true, flavor=\"triangle\", orientation=SOUTH"},
+{"st_mirror", transparent=true, flavor="triangle", orientation=WEST, _text="st_mirror, transparent=true, flavor=\"triangle\", orientation=WEST"},
+{"st_mirror", movable=true, transparent=true, orientation=NORTH, _text="st_mirror, movable=true, transparent=true, orientation=NORTH"},
+{"st_mirror", movable=true, transparent=true, orientation=EAST, _text="st_mirror, movable=true, transparent=true, orientation=EAST"},
+{"st_mirror", movable=true, transparent=true, orientation=SOUTH, _text="st_mirror, movable=true, transparent=true, orientation=SOUTH"},
+{"st_mirror", movable=true, transparent=true, orientation=WEST, _text="st_mirror, movable=true, transparent=true, orientation=WEST"},
+{"st_mirror", movable=true, transparent=true, flavor="sheets", orientation=NORTH, _text="st_mirror, movable=true, transparent=true, flavor=\"sheets\", orientation=NORTH"},
+{"st_mirror", movable=true, transparent=true, flavor="sheets", orientation=EAST, _text="st_mirror, movable=true, transparent=true, flavor=\"sheets\", orientation=EAST"},
+{"st_mirror", movable=true, transparent=true, flavor="sheets", orientation=SOUTH, _text="st_mirror, movable=true, transparent=true, flavor=\"sheets\", orientation=SOUTH"},
+{"st_mirror", movable=true, transparent=true, flavor="sheets", orientation=WEST, _text="st_mirror, movable=true, transparent=true, flavor=\"sheets\", orientation=WEST"},
+{"st_mirror", movable=true, transparent=true, flavor="triangle", orientation=NORTH, _text="st_mirror, movable=true, transparent=true, flavor=\"triangle\", orientation=NORTH"},
+{"st_mirror", movable=true, transparent=true, flavor="triangle", orientation=EAST, _text="st_mirror, movable=true, transparent=true, flavor=\"triangle\", orientation=EAST"},
+{"st_mirror", movable=true, transparent=true, flavor="triangle", orientation=SOUTH, _text="st_mirror, movable=true, transparent=true, flavor=\"triangle\", orientation=SOUTH"},
+{"st_mirror", movable=true, transparent=true, flavor="triangle", orientation=WEST, _text="st_mirror, movable=true, transparent=true, flavor=\"triangle\", orientation=WEST"},
+
+{"st_monoflop", _text="st_monoflop, default"},
+{"st_monoflop", state=ON, _text="st_monoflop, state=ON"},
+{"st_monoflop", state=OFF, _text="st_monoflop, state=OFF"},
+
+{"st_oneway", _text="st_oneway, default"},
+{"st_oneway", orientation=NORTH, _text="st_oneway, orientation=NORTH"},
+{"st_oneway", orientation=EAST, _text="st_oneway, orientation=EAST"},
+{"st_oneway", orientation=SOUTH, _text="st_oneway, orientation=SOUTH"},
+{"st_oneway", orientation=WEST, _text="st_oneway, orientation=WEST"},
+{"st_oneway", color=BLACK, orientation=NORTH, _text="st_oneway, color=BLACK, orientation=NORTH"},
+{"st_oneway", color=BLACK, orientation=EAST, _text="st_oneway, color=BLACK, orientation=EAST"},
+{"st_oneway", color=BLACK, orientation=SOUTH, _text="st_oneway, color=BLACK, orientation=SOUTH"},
+{"st_oneway", color=BLACK, orientation=WEST, _text="st_oneway, color=BLACK, orientation=WEST"},
+{"st_oneway", color=WHITE, orientation=NORTH, _text="st_oneway, color=WHITE, orientation=NORTH"},
+{"st_oneway", color=WHITE, orientation=EAST, _text="st_oneway, color=WHITE, orientation=EAST"},
+{"st_oneway", color=WHITE, orientation=SOUTH, _text="st_oneway, color=WHITE, orientation=SOUTH"},
+{"st_oneway", color=WHITE, orientation=WEST, _text="st_oneway, color=WHITE, orientation=WEST"},
+
+{"st_oxyd", _text="st_oxyd, default"},
+{"st_oxyd", flavor="a", _text="st_oxyd, flavor=\"a\""},
+{"st_oxyd", flavor="b", _text="st_oxyd, flavor=\"b\""},
+{"st_oxyd", flavor="c", _text="st_oxyd, flavor=\"c\""},
+{"st_oxyd", flavor="d", _text="st_oxyd, flavor=\"d\""},
+{"st_oxyd", flavor="e", _text="st_oxyd, flavor=\"e\""},
+{"st_oxyd", oxydcolor=OXYD_BLUE, _text="st_oxyd, oxydcolor=OXYD_BLUE"},
+{"st_oxyd", oxydcolor=OXYD_RED, _text="st_oxyd, oxydcolor=OXYD_RED"},
+{"st_oxyd", oxydcolor=OXYD_GREEN, _text="st_oxyd, oxydcolor=OXYD_GREEN"},
+{"st_oxyd", oxydcolor=OXYD_YELLOW, _text="st_oxyd, oxydcolor=OXYD_YELLOW"},
+{"st_oxyd", oxydcolor=OXYD_CYAN, _text="st_oxyd, oxydcolor=OXYD_CYAN"},
+{"st_oxyd", oxydcolor=OXYD_PURPLE, _text="st_oxyd, oxydcolor=OXYD_PURPLE"},
+{"st_oxyd", oxydcolor=OXYD_WHITE, _text="st_oxyd, oxydcolor=OXYD_WHITE"},
+{"st_oxyd", oxydcolor=OXYD_BLACK, _text="st_oxyd, oxydcolor=OXYD_BLACK"},
+{"st_oxyd", oxydcolor=OXYD_GRAY, _text="st_oxyd, oxydcolor=OXYD_GRAY"},
+{"st_oxyd", oxydcolor=OXYD_ORANGE, _text="st_oxyd, oxydcolor=OXYD_ORANGE"},
+{"st_oxyd", oxydcolor=OXYD_PINE, _text="st_oxyd, oxydcolor=OXYD_PINE"},
+{"st_oxyd", oxydcolor=OXYD_BROWN, _text="st_oxyd, oxydcolor=OXYD_BROWN"},
+{"st_oxyd", oxydcolor=OXYD_FAKE, _text="st_oxyd, oxydcolor=OXYD_FAKE"},
+{"st_oxyd", oxydcolor=OXYD_QUAKE, _text="st_oxyd, oxydcolor=OXYD_QUAKE"},
+{"st_oxyd", oxydcolor=OXYD_BOLD, _text="st_oxyd, oxydcolor=OXYD_BOLD"},
+
+{"st_passage", _text="st_passage, default"},
+{"st_passage", flavor="square", _text="st_passage, flavor=\"square\""},
+{"st_passage", flavor="slash", _text="st_passage, flavor=\"slash\""},
+{"st_passage", flavor="cross", _text="st_passage, flavor=\"cross\""},
+{"st_passage", flavor="frame", _text="st_passage, flavor=\"frame\""},
+{"st_passage", color=BLACK, flavor="square", _text="st_passage, color=BLACK, flavor=\"square\""},
+{"st_passage", color=BLACK, flavor="slash", _text="st_passage, color=BLACK, flavor=\"slash\""},
+{"st_passage", color=BLACK, flavor="cross", _text="st_passage, color=BLACK, flavor=\"cross\""},
+{"st_passage", color=BLACK, flavor="frame", _text="st_passage, color=BLACK, flavor=\"frame\""},
+{"st_passage", color=WHITE, flavor="square", _text="st_passage, color=WHITE, flavor=\"square\""},
+{"st_passage", color=WHITE, flavor="slash", _text="st_passage, color=WHITE, flavor=\"slash\""},
+{"st_passage", color=WHITE, flavor="cross", _text="st_passage, color=WHITE, flavor=\"cross\""},
+{"st_passage", color=WHITE, flavor="frame", _text="st_passage, color=WHITE, flavor=\"frame\""},
+
+{"st_plaster", _text="st_plaster, default"}, -- flavor attributes?
+{"st_plaster_hollow", _text="st_plaster_hollow"}, -- flavor attributes?
+{"st_plaster_movable", _text="st_plaster_movable"}, -- flavor attributes?
+{"st_plaster_breakable", _text="st_plaster_breakable"}, -- flavor attributes?
+{"st_plaster_movebreakable", _text="st_plaster_movebreakable"}, -- flavor attributes?
+
+{"st_plop", _text="st_plop, default"},
+{"st_plop_slate", _text="st_plop_slate"}, -- flavor attributes?
+
+{"st_polarswitch", _text="st_oplarswitch, default"},
+{"st_polarswitch", state=ON, _text="st_oplarswitch, state=ON"},
+{"st_polarswitch", state=OFF, _text="st_polarswitch, state=OFF"},
+
+{"st_portal", _text="st_portal, default"},
+{"st_portal_horse", _text="st_portal_horse"}, -- flavor attributes?
+{"st_portal_pearl", _text="st_portal_pearl"}, -- flavor attributes?
+
+{"st_pull", _text="st_pull"},
+
+{"st_puzzle", _text="st_puzzle, default"},
+{"st_puzzle", connections="", _text="st_puzzle, connections=\"\""},
+{"st_puzzle", connections="w", _text="st_puzzle, connections=\"w\""},
+{"st_puzzle", connections="s", _text="st_puzzle, connections=\"s\""},
+{"st_puzzle", connections="sw", _text="st_puzzle, connections=\"sw\""},
+{"st_puzzle", connections="e", _text="st_puzzle, connections=\"e\""},
+{"st_puzzle", connections="ew", _text="st_puzzle, connections=\"ew\""},
+{"st_puzzle", connections="es", _text="st_puzzle, connections=\"es\""},
+{"st_puzzle", connections="esw", _text="st_puzzle, connections=\"esw\""},
+{"st_puzzle", connections="n", _text="st_puzzle, connections=\"n\""},
+{"st_puzzle", connections="nw", _text="st_puzzle, connections=\"nw\""},
+{"st_puzzle", connections="ns", _text="st_puzzle, connections=\"ns\""},
+{"st_puzzle", connections="nsw", _text="st_puzzle, connections=\"nsw\""},
+{"st_puzzle", connections="ne", _text="st_puzzle, connections=\"ne\""},
+{"st_puzzle", connections="new", _text="st_puzzle, connections=\"new\""},
+{"st_puzzle", connections="nes", _text="st_puzzle, connections=\"nes\""},
+{"st_puzzle", connections="nesw", _text="st_puzzle, connections=\"nesw\""},
+{"st_puzzle", hollow=true, connections="", _text="st_puzzle, hollow=true, connections=\"\""},
+{"st_puzzle", hollow=true, connections="w", _text="st_puzzle, hollow=true, connections=\"w\""},
+{"st_puzzle", hollow=true, connections="s", _text="st_puzzle, hollow=true, connections=\"s\""},
+{"st_puzzle", hollow=true, connections="sw", _text="st_puzzle, hollow=true, connections=\"sw\""},
+{"st_puzzle", hollow=true, connections="e", _text="st_puzzle, hollow=true, connections=\"e\""},
+{"st_puzzle", hollow=true, connections="ew", _text="st_puzzle, hollow=true, connections=\"ew\""},
+{"st_puzzle", hollow=true, connections="es", _text="st_puzzle, hollow=true, connections=\"es\""},
+{"st_puzzle", hollow=true, connections="esw", _text="st_puzzle, hollow=true, connections=\"esw\""},
+{"st_puzzle", hollow=true, connections="n", _text="st_puzzle, hollow=true, connections=\"n\""},
+{"st_puzzle", hollow=true, connections="nw", _text="st_puzzle, hollow=true, connections=\"nw\""},
+{"st_puzzle", hollow=true, connections="ns", _text="st_puzzle, hollow=true, connections=\"ns\""},
+{"st_puzzle", hollow=true, connections="nsw", _text="st_puzzle, hollow=true, connections=\"nsw\""},
+{"st_puzzle", hollow=true, connections="ne", _text="st_puzzle, hollow=true, connections=\"ne\""},
+{"st_puzzle", hollow=true, connections="new", _text="st_puzzle, hollow=true, connections=\"new\""},
+{"st_puzzle", hollow=true, connections="nes", _text="st_puzzle, hollow=true, connections=\"nes\""},
+{"st_puzzle", hollow=true, connections="nesw", _text="st_puzzle, hollow=true, connections=\"nesw\""},
+{"st_puzzle", color=YELLOW, connections="", _text="st_puzzle, color=YELLOW, connections=\"\""},
+{"st_puzzle", color=YELLOW, connections="w", _text="st_puzzle, color=YELLOW, connections=\"w\""},
+{"st_puzzle", color=YELLOW, connections="s", _text="st_puzzle, color=YELLOW, connections=\"s\""},
+{"st_puzzle", color=YELLOW, connections="sw", _text="st_puzzle, color=YELLOW, connections=\"sw\""},
+{"st_puzzle", color=YELLOW, connections="e", _text="st_puzzle, color=YELLOW, connections=\"e\""},
+{"st_puzzle", color=YELLOW, connections="ew", _text="st_puzzle, color=YELLOW, connections=\"ew\""},
+{"st_puzzle", color=YELLOW, connections="es", _text="st_puzzle, color=YELLOW, connections=\"es\""},
+{"st_puzzle", color=YELLOW, connections="esw", _text="st_puzzle, color=YELLOW, connections=\"esw\""},
+{"st_puzzle", color=YELLOW, connections="n", _text="st_puzzle, color=YELLOW, connections=\"n\""},
+{"st_puzzle", color=YELLOW, connections="nw", _text="st_puzzle, color=YELLOW, connections=\"nw\""},
+{"st_puzzle", color=YELLOW, connections="ns", _text="st_puzzle, color=YELLOW, connections=\"ns\""},
+{"st_puzzle", color=YELLOW, connections="nsw", _text="st_puzzle, color=YELLOW, connections=\"nsw\""},
+{"st_puzzle", color=YELLOW, connections="ne", _text="st_puzzle, color=YELLOW, connections=\"ne\""},
+{"st_puzzle", color=YELLOW, connections="new", _text="st_puzzle, color=YELLOW, connections=\"new\""},
+{"st_puzzle", color=YELLOW, connections="nes", _text="st_puzzle, color=YELLOW, connections=\"nes\""},
+{"st_puzzle", color=YELLOW, connections="nesw", _text="st_puzzle, color=YELLOW, connections=\"nesw\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="w", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"w\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="s", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"s\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="sw", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"sw\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="e", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"e\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="ew", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"ew\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="es", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"es\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="esw", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"esw\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="n", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"n\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="nw", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"nw\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="ns", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"ns\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="nsw", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"nsw\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="ne", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"ne\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="new", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"new\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="nes", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"nes\""},
+{"st_puzzle", color=YELLOW, hollow=true, connections="nesw", _text="st_puzzle, color=YELLOW, hollow=true, connections=\"nesw\""},
+
+{"st_quake", _text="st_quake, default"},
+--{"st_quake", state=IDLE, _text="st_quake, state=IDLE"}, --!
+--{"st_quake", state=ACTIVE, _text="st_quake, state=ACTIVE"},
+--{"st_quake", state=BREAKING, _text="st_quake, state=BREAKING"},
+
+{"st_rawglass", _text="st_rawglass"},
+{"st_rawglass_movable", _text="st_rawglass, movable=true"}, -- flavor attributes?
+
+{"st_redfiber", _text="st_redfiber"},
+
+{"st_rotator", _text="st_rotator, default"},
+{"st_rotator", counterclock=false, _text="st_rotator, counterclock=false"},
+{"st_rotator", counterclock=true, _text="st_rotator, counterclock=true"},
+{"st_rotator", movable=true, counterclock=false, _text="st_rotator, movable=true, counterclock=false"},
+{"st_rotator", movable=true, counterclock=true, _text="st_rotator, movable=true, counterclock=true"},
+
+{"st_rubberband", _text="st_rubberband"},
+
+{"st_scissors", _text="st_scissors"},
+
+{"st_shogun", _text="st_shogun, default"},
+{"st_shogun", flavor="s", _text="st_shogun, flavor=\"s\""},
+{"st_shogun", flavor="m", _text="st_shogun, flavor=\"m\""},
+{"st_shogun", flavor="sm", _text="st_shogun, flavor=\"sm\""},
+{"st_shogun", flavor="l", _text="st_shogun, flavor=\"l\""},
+{"st_shogun", flavor="sl", _text="st_shogun, flavor=\"sl\""},
+{"st_shogun", flavor="ml", _text="st_shogun, flavor=\"ml\""},
+{"st_shogun", flavor="sml", _text="st_shogun, flavor=\"sml\""},
+
+{"st_stoneimpulse", _text="st_stoneimpulse, default"},
+{"st_stoneimpulse_movable", _text="st_stoneimpulse_movable"},
+{"st_stoneimpulse_hollow", _text="st_stoneimpulse_hollow"},
+{"st_stoneimpulse_steady", _text="st_stoneimpulse_steady"},
+{"st_stoneimpulse_new", _text="st_stoneimpulse_new"},
+{"st_stoneimpulse_new", hollow=true, _text="st_stoneimpulse_new, hollow=true"},
+
+{"st_surprise", _text="st_surprise"},
+
+{"st_swap", _text="st_swap"},
+
+{"st_switch", _text="st_switch, default"},
+{"st_switch", state=ON, _text="st_switch, state=ON"},
+{"st_switch", state=OFF, _text="st_switch, state=OFF"},
+{"st_switch", color=BLACK, state=ON, _text="st_switch, color=BLACK, state=ON"},
+{"st_switch", color=BLACK, state=OFF, _text="st_switch, color=BLACK, state=OFF"},
+{"st_switch", color=WHITE, state=ON, _text="st_switch, color=WHITE, state=ON"},
+{"st_switch", color=WHITE, state=OFF, _text="st_switch, color=WHITE, state=OFF"},
+
+{"st_thief", _text="st_thief"},
+
+{"st_timer", _text="st_timer, default"},
+{"st_timer", state=ON, _text="st_timer, state=ON"},
+{"st_timer", state=OFF, _text="st_timer, state=OFF"},
+{"st_timer", invisible=true, _text="st_timer, invisible=true"},
+
+{"st_turnstile", _text="st_turnstile, default"},
+{"st_turnstile", flavor="red", _text="st_turnstile, flavor=\"red\""},
+{"st_turnstile", flavor="green", _text="st_turnstile, flavor=\"green\""},
+
+{"st_turnstilearm", _text="st_turnstilearm, default"},
+{"st_turnstilearm", orientation=NORTH, _text="st_turnstilearm, orientation=NORTH"},
+{"st_turnstilearm", orientation=EAST, _text="st_turnstilearm, orientation=EAST"},
+{"st_turnstilearm", orientation=SOUTH, _text="st_turnstilearm, orientation=SOUTH"},
+{"st_turnstilearm", orientation=WEST, _text="st_turnstilearm, orientation=WEST"},
+
+{"st_volcano", _text="st_volcano, default"},
+{"st_volcano", state=IDLE, _text="st_volcano, state=IDLE"},
+{"st_volcano", state=ACTIVE, _text="st_volcano, state=ACTIVE"},
+
+{"st_window", _text="st_window, default"},
+{"st_window", faces="nesw", scratches="nesw", _text="st_window, faces=\"nesw\", scratches=\"nesw\""},
+{"st_window", faces="s", _text="st_window, faces=\"s\""},
+{"st_window", faces="w", _text="st_window, faces=\"w\""},
+{"st_window", faces="s", _text="st_window, faces=\"s\""},
+{"st_window", faces="sw", _text="st_window, faces=\"sw\""},
+{"st_window", faces="e", _text="st_window, faces=\"e\""},
+{"st_window", faces="ew", _text="st_window, faces=\"ew\""},
+{"st_window", faces="es", _text="st_window, faces=\"es\""},
+{"st_window", faces="esw", _text="st_window, faces=\"esw\""},
+{"st_window", faces="n", _text="st_window, faces=\"n\""},
+{"st_window", faces="nw", _text="st_window, faces=\"nw\""},
+{"st_window", faces="ns", _text="st_window, faces=\"ns\""},
+{"st_window", faces="nsw", _text="st_window, faces=\"nsw\""},
+{"st_window", faces="ne", _text="st_window, faces=\"ne\""},
+{"st_window", faces="new", _text="st_window, faces=\"new\""},
+{"st_window", faces="nes", _text="st_window, faces=\"nes\""},
+{"st_window", faces="nesw", _text="st_window, faces=\"nesw\""},
+{"st_window", secure=true, faces="s", _text="st_window, secure=true, faces=\"s\""},
+{"st_window", secure=true, faces="w", _text="st_window, secure=true, faces=\"w\""},
+{"st_window", secure=true, faces="s", _text="st_window, secure=true, faces=\"s\""},
+{"st_window", secure=true, faces="sw", _text="st_window, secure=true, faces=\"sw\""},
+{"st_window", secure=true, faces="e", _text="st_window, secure=true, faces=\"e\""},
+{"st_window", secure=true, faces="ew", _text="st_window, secure=true, faces=\"ew\""},
+{"st_window", secure=true, faces="es", _text="st_window, secure=true, faces=\"es\""},
+{"st_window", secure=true, faces="esw", _text="st_window, secure=true, faces=\"esw\""},
+{"st_window", secure=true, faces="n", _text="st_window, secure=true, faces=\"n\""},
+{"st_window", secure=true, faces="nw", _text="st_window, secure=true, faces=\"nw\""},
+{"st_window", secure=true, faces="ns", _text="st_window, secure=true, faces=\"ns\""},
+{"st_window", secure=true, faces="nsw", _text="st_window, secure=true, faces=\"nsw\""},
+{"st_window", secure=true, faces="ne", _text="st_window, secure=true, faces=\"ne\""},
+{"st_window", secure=true, faces="new", _text="st_window, secure=true, faces=\"new\""},
+{"st_window", secure=true, faces="nes", _text="st_window, secure=true, faces=\"nes\""},
+{"st_window", secure=true, faces="nesw", _text="st_window, secure=true, faces=\"nesw\""},
+
+{"st_yinyang", _text="st_yinyang, default"},
+{"st_yinyang", state=IDLE, _text="st_yinyang, state=IDLE"},
+{"st_yinyang", state=ACTIVE, _text="st_yinyang, state=ACTIVE"},
+{"st_yinyang", state=INACTIVE, _text="st_yinyang, state=INACTIVE"},
+{"st_yinyang", loop=false, state=IDLE, _text="st_yinyang, loop=false, state=IDLE"},
+{"st_yinyang", loop=false, state=ACTIVE, _text="st_yinyang, loop=false, state=ACTIVE"},
+{"st_yinyang", loop=false, state=INACTIVE, _text="st_yinyang, loop=false, state=INACTIVE"}
+
+}
+
+
+ti[" "] = {"fl_sahara"}
+ti["#"] = {"st_rawglass"}
+ti["S"] = {"st_switch", target="set_stone"}
+ti["x"] = {"it_rubberband", name="here"}
+
+w, h = wo(ti, " ", 12+#stones, 13)
+wo:drawBorder(po(0, 0), wo["Width"], wo["Height"], ti["#"])
+wo[{1,1}] = {"#ac_marble_black"}
+wo[{1,2}] = {"#ac_marble_white"}
+wo[{1,3}] = ti["x"]
+
+wo[po(5, 1)] = {"st_rawglass"}
+wo[po(5, 2)] = {"st_rawglass"}
+wo[po(5, 3)] = {"st_rawglass"}
+wo[po(5+#stones+1, 1)] = {"st_rawglass"}
+wo[po(5+#stones+1, 2)] = {"st_rawglass"}
+wo[po(5+#stones+1, 3)] = {"st_rawglass"}
+wo[po(1, 6)] = {"it_vortex", name="begin", destination="end"}
+wo[po(w-2, 6)] = {"it_vortex", name="end", destination="begin"}
+
+
+for i=1, #stones do
+    wo[po(5+i, 1)] = stones[i]
+    wo[po(5+i, 2)] = ti["#"]
+    wo[po(5+i, 3)] = ti["S"]
+    wo[po(5+i, 4)] = {"it_document", text=stones[i]["_text"]}
 end
 
-function setstone(stnr)
-    stone=stonelist[stnr]
-    stdo=stonelist[stnr]
-    set_stone(stone,1+stnr,5)
-    set_item("it-document", 1+stnr, 1, {text=stdo})
+-- Stones express worldwide:
+function set_stone(value, sender)
+    wo[po(sender) + po(0, 5)] = stones[sender.x-5]
+    wo[po(sender) + po(0, 1)] = {"it_document", text=stones[sender.x-5]["_text"]}
+    if no["here"]:exists() then
+        wo[no["here"]+po(0,1)] = stones[sender.x-5]
+    end
 end
-    ]]></el:luamain>
+ ]]></el:luamain>
     <el:i18n>
       <el:string el:key="title">
         <el:english el:translate="false"/>
       </el:string>
-      <el:string el:key="text1">
-        <el:english el:translate="false">Level with all stones of Enigma 1.01!</el:english>
-      </el:string>
     </el:i18n>
   </el:protected>
 </el:level>
-



From ral at mail.berlios.de  Wed Mar  4 23:57:24 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Wed, 4 Mar 2009 23:57:24 +0100
Subject: [Enigma-game-svn] r1581 - trunk/doc/reference
Message-ID: <200903042257.n24MvOM9022881@sheep.berlios.de>

Author: ral
Date: 2009-03-04 23:57:16 +0100 (Wed, 04 Mar 2009)
New Revision: 1581

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API reengineering
- refman: further updates on floor objects and last missing stone


Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-04 21:44:51 UTC (rev 1580)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-04 22:57:16 UTC (rev 1581)
@@ -6286,8 +6286,16 @@
 
 @menu
 * fl_aquamarine::     Aquamarine floor with low friction
+* fl_bast::           Brown woven bast with black background
 * fl_bluegray::       Light blue gray floor
 * fl_bluegreen::      Dark blue green floor
+* fl_brick::          Floor composed of small red bricks
+* fl_concrete::       Granular gray concrete
+* fl_dunes::          Brown granular dunes
+* fl_gravel::         Dark gray, granular floor
+* fl_gray::           Gray with some brown spots
+* fl_himalaya::       Blue purple marbled floor
+* fl_pinkbumps::      Pink floor with white bumps
 * fl_sahara::         Bright yellow sandstone floor
 * fl_sand::           Granular orange gray sand floor
 @end menu
@@ -6296,7 +6304,7 @@
 @subsection fl_aquamarine
 @obindex fl_aquamarine
 
-Aquamarine floor with low friction
+Aquamarine floor with low friction.
 
 @table @asis
 @item @b{Attributes:}
@@ -6312,6 +6320,27 @@
 @end table
 @end table
 
+ at c ----------------- Bast Floor --------------------
+ at node fl_bast
+ at subsection fl_bast
+ at obindex fl_bast
+
+Brown woven bast with black background.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.5 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 1.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_bast}
+ at item @b{fl_bast_framed}
+ at end table
+ at end table
+
 @c ----------------- Bluegray Floor --------------------
 @node fl_bluegray
 @subsection fl_bluegray
@@ -6354,6 +6383,153 @@
 @end table
 @end table
 
+ at c ----------------- Brick Floor --------------------
+ at node fl_brick
+ at subsection fl_brick
+ at obindex fl_brick
+
+Floor composed of small red bricks.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_brick}
+ at item @b{fl_brick_framed}
+ at end table
+ at end table
+
+ at c ----------------- Concrete Floor --------------------
+ at node fl_concrete
+ at subsection fl_concrete
+ at obindex fl_concrete
+
+Granular gray concrete.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.3 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 4.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_concrete}
+ at item @b{fl_concrete_framed}
+ at end table
+ at end table
+
+ at c ----------------- Dunes Floor --------------------
+ at node fl_dunes
+ at subsection fl_dunes
+ at obindex fl_dunes
+
+Brown granular dunes.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 1.3 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_dunes}
+ at item @b{fl_dunes_framed}
+ at end table
+ at end table
+
+ at c ----------------- Gravel Floor --------------------
+ at node fl_gravel
+ at subsection fl_gravel
+ at obindex fl_gravel
+
+Dark gray, granular floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.5 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.2 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_gravel}
+ at item @b{fl_gravel_framed}
+ at end table
+ at end table
+
+ at c ----------------- Gray Floor --------------------
+ at node fl_gray
+ at subsection fl_gray
+ at obindex fl_gray
+
+Gray with some brown spots.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 5.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_gray}
+ at item @b{fl_gray_framed}
+ at end table
+ at end table
+
+ at c ----------------- Himalaya Floor --------------------
+ at node fl_himalaya
+ at subsection fl_himalaya
+ at obindex fl_himalaya
+
+Blue purple marbled floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 5.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_himalaya}
+ at item @b{fl_himalaya_framed}
+ at end table
+ at end table
+
+ at c ----------------- Pinkbumps Floor --------------------
+ at node fl_pinkbumps
+ at subsection fl_pinkbumps
+ at obindex fl_pinkbumps
+
+Pink floor with white bumps.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.2 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 5.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_pinkbumps}
+ at item @b{fl_pinkbumps_framed}
+ at end table
+ at end table
+
 @c ----------------- Sahara Floor --------------------
 @node fl_sahara
 @subsection fl_sahara
@@ -6403,6 +6579,7 @@
 @menu
 * fl_bridge::         Abyss Bridge
 * fl_slope::          Slopes in various shapes
+* fl_thief::          Hidden Thief
 @end menu
 
 @c ----------------- Bridge Floor --------------------
@@ -6564,6 +6741,39 @@
 
 @end table
 
+ at c ----------------- Thief Floor --------------------
+ at node fl_thief
+ at subsection fl_thief
+ at obindex fl_thief
+
+A thief steals the item on its position plus an item from the player's inventory
+when it is entered by an owned actor. Unfortunatly the thief floor is visually
+indistinguishable from an @ref{fl_bluegray} and has even the same
+ at samp{friction} and @samp{adhesion} values.
+
+The item is not directly stolen at the moment of entering the grid. The enterin
+itself just causes the thief to emerge from his hiding-place. The thief steals 
+from the actor that did conjur him at the moment of maximum visibility. He takes
+a random item from the owner's inventory. But he just will steal an item if
+the actor is not shielded due to an activated @ref{it_umbrella}.
+
+Thieves have an addiction to alcohol. Thus they get drunken and inactive if
+they happen to steal a bottle filled with stuff.
+
+Thieves have an enemy - the @ref{st_chess}. If a chess stone is pushed onto
+a thief it will capture the thief, sober or drunken. The thief vanishes leaving
+an inactive standard floor and the chess stone jumps onto its position. But the
+thief will leave behind on the grid all stolen items in his own @ref{it_bag}. 
+If the thief has not stolen any items he leaves no empty bag.
+
+ at table @asis
+ at item @b{Attributes:} none
+
+ at item @b{Messages:} none
+
+ at item @b{Action:}  none
+ at end table
+
 @c ===================  Items  =======================
 
 @node Item Objects
@@ -8660,7 +8870,7 @@
 * st_rubberband::      Rubberband generator
 * st_scissors::        Scissors cutting rubberbands
 * st_shogun::          Stackable Hole Stones
-* st_spitter::
+* st_spitter::         Cannonball spitting Stone
 * st_stoneimpulse::    Neighbor Pushing pulsing Stone
 * st_surprise::        Random Transforming Stone
 * st_swap::            Neighbor Swapping Stone
@@ -10682,7 +10892,8 @@
 solvabitlity and fairness (@pxref{shuffleOxyd}).
 
 Oxyds are opened either by an actor hit, an additional laser beam, an
- at ref{st_boulder} triggering or a message call. A single opened oxyd is in the
+ at ref{st_boulder} triggering, an @ref{ot_cannonball} emitted from an
+ at ref{st_spitter} or a message call. A single opened oxyd is in the
 state @samp{OPEN}. If a matching second oxyd is opened both switch to the state
 @samp{OXYDPAIR}. Note that this state can be requested, but it can not be set
 directly.
@@ -11070,7 +11281,9 @@
 is isolated from any adjacent, same colored further puzzle stone. Such clusters
 explode on an additional new laser beam hitting one of its solid stones. Yellow
 ones explode on any actor hit. Blue ones only on actor hits with a revealed
- at ref{it_magicwand}.
+ at ref{it_magicwand}. Additionally complete clusters will explode when an
+ at ref{ot_cannonball} emitted by an @ref{st_spitter} happens to fall on top of
+one of the puzzle stones of the cluster.
 
 Exploding puzzles will stay on place and do not interact any more. The exploding
 stones are lethal for actors hitting them, but an actor can start an explosion
@@ -11438,6 +11651,94 @@
 
 @end table
 
+ at c ----------------- Spitter Stone --------------------
+ at node st_spitter
+ at subsection st_spitter
+ at obindex st_spitter
+
+A stone that spits @ref{ot_cannonball}s on actor hits and on proper messages.
+
+On an actor hit the spitter checks the owner's inventory for an existing
+ at ref{it_extralife}. If one exists that is not stuffed in a @ref{it_bag}, it
+takes it and spits an @ref{ot_cannonball} according to the actors velocity
+and its own hit attributes. The cannonball flies into the resulting direction
+with a speed that is proportional to the actors hit speed.
+
+All cannonballs fly the same period of time. They fly above all other objects
+and cross all stone walls. The flight distance is proportional to their initial
+speed. On landing they cause actions on some objects and destroy others:
+
+ at itemize @bullet
+ at item @ref{st_oxyd} do open,
+ at item @ref{st_stoneimpulse} do pulse,
+ at item @ref{st_yinyang} do toggle,
+ at item @ref{st_puzzle} do explode completely connected clusters, 
+ at item @ref{st_brownpyramide} do break,
+ at item other stones do remain unmodified and protect items and floors,
+ at item @ref{it_dynamite} do ignite,
+ at item @ref{it_crack} do crack,
+ at item other indestructable items do remain and protect floors,
+ at item other items are blown away,
+ at item floors do crack to @ref{fl_abyss} if not indestructable as @ref{fl_water}, @ref{fl_swamp}, @ref{fl_abyss}.
+ at end itemize
+
+Actors will not be harmed by falling cannonballs.
+
+The spitting can be initiated by the message @code{"hit"}, too. No 
+ at ref{it_extralife} is needed in this case. The hit messages takes either a
+destination as message value or in case no value is given it evaluates the
+ at samp{destination} attribute. The second case is suitable for usage of 
+ at samp{hit} as an action message.
+
+The destination can be any value that evaluates to a valid position, object
+references and object names included. In case of an @samp{destination}
+attribute you can even supply tokens describing a series of destination
+positions. The destinations will be targeted by the cannonballs in turn on
+a sequence of @samp{hit} actions.
+
+Note that the destruction of target objects can have unexpected sideeffects
+on the destination sequence. If you list three @ref{st_stoneimpulse} as
+destinations they will be targeted in the given sequence as none of them
+gets destroyed. But if you list three @ref{st_brownpyramide} the first
+cannonball destroys the first target, leaving two valid destinations. The
+spitter now targets the second target of its list, which happens to evaluate
+to the third brown pyramid stone. Finally the destination list has just one
+still existing brown pyramid, the second one, as target. This one will be
+destroyed on the next spit as the spitter starts again on the first (remaining)
+destination when the end of list is reached. This may be no problem if you
+wand to destroy objects randomly or if you use named destinations with
+wildcards. But if you need control about the sequence you need either 
+destinations targets that get not destroyed or floor object references, as
+they represent @ref{Named Positions} that are persistent to object destructions.
+
+ at table @asis
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{hit_strength} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{1.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_xx} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{1.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_xy} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{0.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_yx} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{0.0}; @ @ @xref{hit_*}
+ at item @b{hit_distortion_yy} @ @ @i{values}: floating point numbers; @ @ @i{default}: @code{1.0}; @ @ @xref{hit_*}
+ at item @b{destination}, @ @ @i{values}: tokens or position; @ @ @i{default}: @code{nil} @ @ @xref{destination}
+The destination of the cannonball given by an object or a position.
+ at item @b{secure} @ @ @i{values}: @code{true}, @code{false}; @ @ @i{default}: @code{false}
+ at end table
+
+ at item @b{Messages:}
+
+ at table @asis
+ at item @b{hit}
+Spit a cannonball. Takes either a destination as message value or @samp{nil}.
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{st_spitter}: secure = @code{false}
+ at end table
+
+ at end table
+
 @c ----------------- Stoneimpulse Stone --------------------
 @node st_stoneimpulse
 @subsection st_stoneimpulse
@@ -11481,6 +11782,9 @@
 when the stoneimpulse gets activated otherwise it will push back the boulder,
 which will in return hit the stoneimpulse again.
 
+An @ref{ot_cannonball} emitted from an @ref{st_spitter} and now falling onto
+a stoneimpulse causes it to pulse, too.
+
 On a chain of stoneimpulse stones the pulsing will propagate along the chain
 without backfiring, as the previous stone is still active when its successor
 impulses. This feature lets propagate a linear front of impulses through a field
@@ -11676,7 +11980,8 @@
 @obindex st_thief
 
 A thief steals an item from the player's inventory when it is hit by an owned
-actor.
+actor. Unfortunatly the thief is visually indistinguishable from a
+ at ref{st_bluegray}.
 
 The item is not directly stolen at the moment of the hit. The hit itself just
 causes the thief to emerge from his hiding-place. The thief steals from the
@@ -11892,7 +12197,7 @@
 The position of an arm in a turnstile cluster.
 @item @b{connections} @ @ @i{values}: string; @ @ @i{default}: @code{"s"}
 Describes the @ref{st_puzzle} like connection that is the opposite of the
-turnstile position. The string is a string of a single character describing the
+orientation. The string is a string of a single character describing the
 sole connection.
 @end table
 
@@ -12079,7 +12384,9 @@
 In contrast to @ref{it_yinyang} the player can not switch at any point of time
 but is limited to situations where he can hit the stone by one of the actors
 he controls. Of course other objects can send @code{"toggle"} messages on
-actions to this switch, too.
+actions to this switch, too. Additionally an @ref{ot_cannonball} emitted by
+an @ref{st_spitter} that now happens to fall on top of a yinyang stone
+activates it, too.
 
 When being activated the yinyang stone switches from the @samp{IDLE} state to
 the @samp{ACTIVE} state which is animated by a turning yinyang symbol. By
@@ -12711,11 +13018,21 @@
 @section Visible Others
 
 @menu
+* ot_cannonball::     Projectile of a Spitter
 * ot_rubberband::     Rubberband with forces
-* ot_wire::    Stone connection that transfers impulses
+* ot_wire::           Stone connection that transfers impulses
 @end menu
 
 
+ at c ----------------- Cannonball --------------------
+ at node ot_cannonball
+ at subsection ot_cannonball
+ at obindex ot_cannonball
+
+A short living projectil emitted by an @ref{st_spitter}. It is an internal
+object that can not be directly instanciated. It is listed here just for
+completness.
+
 @c ----------------- Rubberband --------------------
 @node ot_rubberband
 @subsection ot_rubberband



From raoul at mail.berlios.de  Thu Mar  5 01:56:21 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Thu, 5 Mar 2009 01:56:21 +0100
Subject: [Enigma-game-svn] r1582 - trunk/data/levels/enigma_experimental
Message-ID: <200903050056.n250uLvF009100@sheep.berlios.de>

Author: raoul
Date: 2009-03-05 01:56:21 +0100 (Thu, 05 Mar 2009)
New Revision: 1582

Modified:
   trunk/data/levels/enigma_experimental/floors_1.xml
   trunk/data/levels/enigma_experimental/stones_1.xml
Log:
-> Updates of objectlevels to get in sync with refman



Modified: trunk/data/levels/enigma_experimental/floors_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-04 22:57:16 UTC (rev 1581)
+++ trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-05 00:56:21 UTC (rev 1582)
@@ -15,10 +15,26 @@
 local floors = {
 {"fl_aquamarine", _text="fl_aquamarine"},
 {"fl_aquamarine_framed", _text="fl_aquamarine_framed"},
+{"fl_bast", _text="fl_bast"},
+{"fl_bast_framed", _text="fl_bast_framed"},
 {"fl_bluegray", _text="fl_bluegray"},
 {"fl_bluegray_framed", _text="fl_bluegray_framed"},
 {"fl_bluegreen", _text="fl_bluegreen"},
 {"fl_bluegreen_framed", _text="fl_bluegreen_framed"},
+{"fl_brick", _text="fl_brick"},
+{"fl_brick_framed", _text="fl_brick_framed"},
+{"fl_concrete", _text="fl_concrete"},
+{"fl_concrete_framed", _text="fl_concrete_framed"},
+{"fl_dunes", _text="fl_dunes"},
+{"fl_dunes_framed", _text="fl_dunes_framed"},
+{"fl_gravel", _text="fl_gravel"},
+{"fl_gravel_framed", _text="fl_gravel_framed"},
+{"fl_gray", _text="fl_gray"},
+{"fl_gray_framed", _text="fl_gray_framed"},
+{"fl_himalaya", _text="fl_himalaya"},
+{"fl_himalaya_framed", _text="fl_himalaya_framed"},
+{"fl_pinkbumps", _text="fl_pinkbumps"},
+{"fl_pinkbumps_framed", _text="fl_pinkbumps_framed"},
 {"fl_sahara", _text="fl_sahara"},
 {"fl_sahara_framed", _text="fl_sahara_framed"},
 {"fl_sand", _text="fl_sand"},
@@ -55,8 +71,10 @@
 {"fl_slope", slope=SOUTHWEST, shape="twr", _text="fl_slope, slope=SOUTHWEST, shape=\"twr\""},
 {"fl_slope", slope=SOUTHEAST, shape="tsr", _text="fl_slope, slope=SOUTHEAST, shape=\"tsr\""},
 {"fl_slope", slope=NORTHEAST, shape="ter", _text="fl_slope, slope=NORTHEAST, shape=\"ter\""},
-{"fl_slope", slope=NORTHWEST, shape="tnr", _text="fl_slope, slope=NORTHWEST, shape=\"tnr\""}
+{"fl_slope", slope=NORTHWEST, shape="tnr", _text="fl_slope, slope=NORTHWEST, shape=\"tnr\""},
 
+{"fl_thief", _text="fl_thief"}
+
 }
 
 

Modified: trunk/data/levels/enigma_experimental/stones_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/stones_1.xml	2009-03-04 22:57:16 UTC (rev 1581)
+++ trunk/data/levels/enigma_experimental/stones_1.xml	2009-03-05 00:56:21 UTC (rev 1582)
@@ -495,6 +495,8 @@
 {"st_shogun", flavor="ml", _text="st_shogun, flavor=\"ml\""},
 {"st_shogun", flavor="sml", _text="st_shogun, flavor=\"sml\""},
 
+{"st_spitter", _text="st_spitter"},
+
 {"st_stoneimpulse", _text="st_stoneimpulse, default"},
 {"st_stoneimpulse_movable", _text="st_stoneimpulse_movable"},
 {"st_stoneimpulse_hollow", _text="st_stoneimpulse_hollow"},



From ral at mail.berlios.de  Tue Mar 10 00:47:20 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 10 Mar 2009 00:47:20 +0100
Subject: [Enigma-game-svn] r1583 - in trunk: data data/schemas src src/stones
Message-ID: <200903092347.n29NlK8f003305@sheep.berlios.de>

Author: ral
Date: 2009-03-10 00:47:18 +0100 (Tue, 10 Mar 2009)
New Revision: 1583

Modified:
   trunk/data/api2init.lua
   trunk/data/schemas/objects.xml
   trunk/src/lua.cc
   trunk/src/stones/PuzzleStone.cc
Log:
Trunk 1.1: new API
- fix missing redraw of inventory on wo:add()
- st_puzzle add messages:
  - "get_cluster": returns object group of all connected puzzle stones
  - "is_complete": returns bool, indicating if cluster is full connected
- add group and positionlist operators:
  - obj + grp = group of join of obj with group (same as "grp + obj")
  - po .. po = positionlist of the two positions
  - polist +/- po/obj/tbl = new polist with offset added to all polist members
  - grp1 == grp2 comparison
  - negativ grp indices: grp[-1] = grp[#grp], ... grp[-#grp] = grp[1]
- constant definitions:
  - N,E,S,W,NE,NW,SE,SW as position vectors
  - NEIGHBORS_4, NEIGHBORS_8, NEIGHBORS_CHESS as position lists


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-05 00:56:21 UTC (rev 1582)
+++ trunk/data/api2init.lua	2009-03-09 23:47:18 UTC (rev 1583)
@@ -122,7 +122,7 @@
 OXYD_QUAKE  = -3
 OXYD_BOLD   = -4
 
--- direction
+-- direction/orientations
 NODIR = -1
 WEST  = 0
 SOUTH = 1
@@ -139,16 +139,30 @@
 SLASH      = 2
 VERTICAL   = 3
 
--- multidirections as used by st_chess
-NNE = po(1, -2)
-ENE = po(2, -1)
-ESE = po(2, 1)
-SSE = po(1, 2)
-SSW = po(-1, 2)
-WSW = po(-2, 1)
-WNW = po(-2, -1)
-NNW = po(-1, -2)
+-- direction offsets
+N = po(0, -1)
+E = po(1, 0)
+S = po(0, 1)
+W = po(-1, 0)
+NE = N + E
+NW = N + W
+SE = S + E
+SW = S + W
+NNE = N + NE
+ENE = E + NE
+ESE = E + SE
+SSE = S + SE
+SSW = S + SW
+WSW = W + SW
+WNW = W + NW
+NNW = N + NW
 
+-- neighbors
+
+NEIGHBORS_4     = W .. S .. E .. N
+NEIGHBORS_8     = NEIGHBORS_4 .. NW .. SW ..SE .. NE
+NEIGHBORS_CHESS = NNE .. ENE .. ESE .. SSE .. SSW .. WSW .. WNW .. NNW
+
 -- essential
 DISPENSIBLE   = 0
 INDISPENSIBLE = 1

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-05 00:56:21 UTC (rev 1582)
+++ trunk/data/schemas/objects.xml	2009-03-09 23:47:18 UTC (rev 1583)
@@ -106,6 +106,8 @@
     <msg name="flip" type="nil"/>
     <msg name="forcefire" type="nil"/>
     <msg name="get_adjacents" type="nil"/>
+    <msg name="get_cluster" type="nil"/>
+    <msg name="is_complete" type="nil"/>
     <msg name="grow" type="nil"/>
     <msg name="heat" type="nil"/>
     <msg name="hit" type="object"/>
@@ -1652,6 +1654,8 @@
       <attr name="intensity" default="3"/>
       <attr name="state" rw="r"/>
       <msg name="get_adjacents"/>
+      <msg name="get_cluster"/>
+      <msg name="is_complete"/>
       <msg name="pull_rotate"/>
       <msg name="push_rotate"/>
       <msg name="_scramble"/>

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2009-03-05 00:56:21 UTC (rev 1582)
+++ trunk/src/lua.cc	2009-03-09 23:47:18 UTC (rev 1583)
@@ -343,7 +343,9 @@
     lua_pushvalue(L, -3);
     lua_rawseti(L, -2, 2);
 
-    lua_setmetatable(L, -2);    
+    lua_setmetatable(L, -2);
+    
+    //TODO stack cleanup - remove x, y !? check usage first!
     return 1;
 }
 
@@ -984,20 +986,21 @@
     return 1;
 }
 
-static int newPosition(lua_State *L) {
+static int newPosition(lua_State *L, int idx =1) {
     // (pos|obj|table|(num,num))
-    if (is_table(L, 1)) {  // table 
-        lua_rawgeti(L, 1, 1);
-        lua_rawgeti(L, 1, 2);
-    } else if (is_position(L, 1)) {
-        lua_getmetatable(L, 1);
-        lua_rawgeti(L, 2, 1);
-        lua_rawgeti(L, 2, 2);
-    } else if (is_object(L, 1)) {
+    if (is_table(L, idx)) {  // table 
+        lua_rawgeti(L, idx, 1);
+        lua_rawgeti(L, idx, 2);
+    } else if (is_position(L, idx)) {
+        lua_getmetatable(L, idx);
+        lua_rawgeti(L, -1, 1);
+        lua_rawgeti(L, -2, 2);
+        lua_remove(L, -3);     // remove metatable
+    } else if (is_object(L, idx)) {
         lua_pushstring(L, "x");
-        lua_gettable(L, 1); 
+        lua_gettable(L, idx); 
         lua_pushstring(L, "y");
-        lua_gettable(L, 1); 
+        lua_gettable(L, idx); 
     }
     
     if ((lua_type(L, -2) != LUA_TNUMBER) || (lua_type(L, -1) != LUA_TNUMBER)) {
@@ -1022,47 +1025,102 @@
 }
 
 static int addPositionsBase(lua_State *L, int factorArg2) {
-    // (pos|obj|table) +|- (pos|obj|table)
-    double x = 0;
-    double y = 0;
-    for (int i = 1; i<=2; i++) {
-        if (is_table(L, i)) {  // table
-            lua_rawgeti(L, i, 1);
-            lua_rawgeti(L, i, 2);
-        } else if (is_position(L, i)) {
-            lua_getmetatable(L, i);
-            lua_rawgeti(L, -1, 1);
-            lua_rawgeti(L, -2, 2);
-            lua_remove(L, -3);
-        } else if (is_object(L, i)) {
-            lua_pushstring(L, "x");
-            lua_gettable(L, i); 
-            lua_pushstring(L, "y");
-            lua_gettable(L, i); 
+    // (pos|obj|table|polist) +|- (pos|obj|table|polist)
+    if (!(is_polist(L, 1) || is_polist(L, 2) )) {
+        // add two positions resulting a new position
+        double x = 0;
+        double y = 0;
+        for (int i = 1; i<=2; i++) {
+            if (is_table(L, i)) {  // table
+                lua_rawgeti(L, i, 1);
+                lua_rawgeti(L, i, 2);
+            } else if (is_position(L, i)) {
+                lua_getmetatable(L, i);
+                lua_rawgeti(L, -1, 1);
+                lua_rawgeti(L, -2, 2);
+                lua_remove(L, -3);
+            } else if (is_object(L, i)) {
+                lua_pushstring(L, "x");
+                lua_gettable(L, i); 
+                lua_pushstring(L, "y");
+                lua_gettable(L, i); 
+            } else {
+                throwLuaError(L, "Invalid add position value type");
+            }
+            if ((lua_type(L, -2) != LUA_TNUMBER) || (lua_type(L, -1) != LUA_TNUMBER)) {
+                throwLuaError(L, "Invalid add position value type");
+                return 0;
+            }            
+            x += (i == 1 ? 1 : factorArg2) *  lua_tonumber(L, -2);
+            y += (i == 1 ? 1 : factorArg2) *  lua_tonumber(L, -1);
+            lua_pop(L, 2);
+        }
+    
+        lua_pushnumber(L, x);
+        lua_pushnumber(L, y);
+    } else {
+        // add a position to a list of postions resulting a list of positions
+        PositionList pl;
+        PositionList newpl;
+        bool found = false;
+        if (is_polist(L, 1)) {
+            pl = toPositionList(L, 1);
+            found = true;
         } else {
-            throwLuaError(L, "Invalid add position value type");
+            newPosition(L, 1);
         }
-        if ((lua_type(L, -2) != LUA_TNUMBER) || (lua_type(L, -1) != LUA_TNUMBER)) {
-            throwLuaError(L, "Invalid add position value type");
-            return 0;
-        }            
-        x += (i == 1 ? 1 : factorArg2) *  lua_tonumber(L, -2);
-        y += (i == 1 ? 1 : factorArg2) *  lua_tonumber(L, -1);
-        lua_pop(L, 2);
+        if (is_polist(L, 2)) {
+            if (found)
+                throwLuaError(L, "Addition of two position lists not supported");                
+            pl = toPositionList(L, 2);
+        } else {
+            newPosition(L, 2);
+        }
+        ecl::V2 offset = toPosition(L, -1);
+        lua_pop(L, 1);
+        for (PositionList::iterator itr = pl.begin(); itr != pl.end(); ++itr) {
+             ecl::V2 newpos = offset + factorArg2 * (ecl::V2)(*itr);
+             newpl.push_back(newpos);
+        }
+        return pushNewPolist(L, newpl);
     }
-
-    lua_pushnumber(L, x);
-    lua_pushnumber(L, y);
     return pushNewPosition(L);
 }
 
+static int joinGroup(lua_State *L) {
+    // (grp|obj) + (grp|obj)
+    if (!((is_group(L, 1) || is_object(L, 1)) &&  (is_group(L, 2) || is_object(L, 2)))) {
+        throwLuaError(L, "Join Group - argument is no object or group");
+        return 0;
+    }
+    std::list<Object *> objects;
+    for (int j = 1; j <= 2; j++) {
+        if (is_group(L, j)) {
+            lua_getmetatable(L, j);
+            int numObjects = lua_objlen(L, -1);
+            for (int i = 1; i <= numObjects; ++i) {
+                lua_rawgeti(L, -1, i);  // the object
+                objects.push_back(to_object(L, -1));
+                lua_pop(L, 1);          // the object        
+            }
+            lua_pop(L, 1);          // the metatable        
+        } else {
+            objects.push_back(to_object(L, j));
+        }
+    }
+    return pushNewGroup(L, objects);    
+}
+
 static int addPositions(lua_State *L) {
-    // (pos|obj|table) + (pos|obj|table)
-    return addPositionsBase(L, 1);
+    if (!(is_group(L, 1) || is_group(L, 2) ))
+        // (pos|obj|table|polist) + (pos|obj|table|polist)
+        return addPositionsBase(L, 1);
+    else
+        return joinGroup(L);
 }
     
 static int subPositions(lua_State *L) {
-    // (pos|obj|table) - (pos|obj|table)
+    // (pos|obj|table|polist) - (pos|obj|table|polist)
     return addPositionsBase(L, -1);
 }
 
@@ -1405,7 +1463,7 @@
     }
     lua_pushnumber(L, double(p.x));
     lua_pushnumber(L, double(p.y));
-    return 2;    
+    return 2;
 }
 
 static int objectEquality(lua_State *L) {
@@ -1580,31 +1638,7 @@
     return pushNewGroup(L, objects);
 }
 
-static int joinGroup(lua_State *L) {
-    // (grp|obj) + (grp|obj)
-    if (!((is_group(L, 1) || is_object(L, 1)) &&  (is_group(L, 2) || is_object(L, 2)))) {
-        throwLuaError(L, "Join Group - argument is no object or group");
-        return 0;
-    }
-    std::list<Object *> objects;
-    for (int j = 1; j <= 2; j++) {
-        if (is_group(L, j)) {
-            lua_getmetatable(L, j);
-            int numObjects = lua_objlen(L, -1);
-            for (int i = 1; i <= numObjects; ++i) {
-                lua_rawgeti(L, -1, i);  // the object
-                objects.push_back(to_object(L, -1));
-                lua_pop(L, 1);          // the object        
-            }
-            lua_pop(L, 1);          // the metatable        
-        } else {
-            objects.push_back(to_object(L, j));
-        }
-    }
-    return pushNewGroup(L, objects);    
-}
-
-static int intersectGroupBase(lua_State *L, bool isIntersect) {
+static int intersectGroupBase(lua_State *L, bool isIntersect, bool equal =false) {
     // (grp|obj) (*|-) (grp|obj)
     if (!((is_group(L, 1) || is_object(L, 1)) &&  (is_group(L, 2) || is_object(L, 2)))) {
         throwLuaError(L, "Intersect or Diff Group - argument is no object or group");
@@ -1644,7 +1678,15 @@
                 (!isIntersect && objSet.find(obj) == objSet.end()))
             objects.push_back(obj);
     }
-    return pushNewGroup(L, objects);    
+    if (!equal)
+        return pushNewGroup(L, objects);
+    else {
+        // check on equality
+        // remove NULL objects first
+        pushNewGroup(L, objects);
+        objects = toObjectList(L, -1);
+        return !objects.size();
+    }    
 }
 
 static int intersectGroup(lua_State *L) {
@@ -1657,23 +1699,20 @@
     return intersectGroupBase(L, false);    
 }
 
+static int groupEquality(lua_State *L) {
+    lua_pushboolean(L, intersectGroupBase(L, false, true));
+    return 1;
+}
+
 static int newPolist(lua_State *L) {
-    // (grp | table | (obj | pos [,obj | pos]))
+    // (grp )
     PositionList positions;
     if (is_group(L, 1)) {
         ObjectList ol = toObjectList(L, 1);
         for (ObjectList::iterator itr = ol.begin(); itr != ol.end(); ++itr) {
+            // eliminate invalid object references and add every object as value of its own
             if (*itr != NULL) {
-                switch ((*itr)->getObjectType()) {
-                    case Object::STONE :
-                    case Object::FLOOR :
-                    case Object::ITEM  :
-                        positions.push_back(dynamic_cast<GridObject *>(*itr)->get_pos());
-                        break;
-                    case Object::ACTOR :
-                        positions.push_back(dynamic_cast<Actor *>(*itr)->get_pos());
-                        break;
-                } 
+                positions.push_back(*itr);
             }
         }
     } else {
@@ -1690,7 +1729,6 @@
         return 0;
     }
     PositionList positions;
-    std::list<Object *> objects;
     for (int j = 1; j <= 2; j++) {
         if (is_polist(L, j)) {
             PositionList addList = toPositionList(L, j);
@@ -2166,8 +2204,11 @@
             if (it->isStatic()) {
                 DisposeObject(obj);
                 throwLuaError(L, "Attempt to add a static item to a bag or inventory");
-            } else
+            } else {
                 itemHolder->add_item(it);
+                // just in case itemholder is displayed
+                player::RedrawInventory(player::GetInventory(player::CurrentPlayer())); 
+            }
         }
     } else {
         switch (obj->getObjectType()) {
@@ -2960,6 +3001,8 @@
         int i = lua_tointeger(L, 2);
         lua_getmetatable(L, 1);
         int size = lua_objlen(L, -1);
+        if (i < 0)  // backward indices
+            i = size + 1 + i;
         if (i >= 1 && i <= size)
             lua_rawgeti(L, -1, i);
         else
@@ -3343,6 +3386,7 @@
     {dividePositions,               "__div"},      //  obj / obj
     {centerPosition,                "__len"},      //  #obj
     {minusPosition,                 "__unm"},      //  -obj
+    {joinPolist,                    "__concat"},   //  obj .. obj
     {0,0}
 };
 
@@ -3423,6 +3467,7 @@
     {joinGroup,                     "__add"},      //  obj + obj
     {intersectGroup,                "__mul"},      //  obj * obj
     {differenceGroup,               "__sub"},      //  obj - obj
+    {groupEquality,                 "__eq"},       //  ==
     {iteratorGroup,                 "__call"},
     {0,0}
 };
@@ -3441,6 +3486,8 @@
     {dispatchPolistWriteAccess,     "__newindex"}, //  obj[key]=value
     {dispatchPolistReadAccess,      "__index"},    //  obj[key]
     {lengthPolist,                  "__len"},      //  #obj
+    {addPositions,                  "__add"},      //  obj + obj
+    {subPositions,                  "__sub"},      //  obj - obj
     {joinPolist,                    "__concat"},   //  obj .. obj
     {0,0}
 };

Modified: trunk/src/stones/PuzzleStone.cc
===================================================================
--- trunk/src/stones/PuzzleStone.cc	2009-03-05 00:56:21 UTC (rev 1582)
+++ trunk/src/stones/PuzzleStone.cc	2009-03-09 23:47:18 UTC (rev 1583)
@@ -94,6 +94,18 @@
             for (PuzzleList::iterator itr = huddle.begin(); itr != huddle.end(); ++itr)
                 adj.push_back(*itr);
             return adj;
+        } else if (m.message == "get_cluster") {
+            // need a message instead of getAttr as we write mark puzzles what contradicts "const"
+            PuzzleList fragment;
+            findFragment(fragment);
+            ObjectList adj;
+            for (PuzzleList::iterator itr = fragment.begin(); itr != fragment.end(); ++itr)
+                adj.push_back(*itr);
+            return adj;
+        } else if (m.message == "is_complete") {
+            // need a message instead of getAttr as we write mark puzzles what contradicts "const"
+            PuzzleList fragment;
+            return findFragment(fragment);
         } else if (m.message == "pull_rotate") {
             rotateLine(to_direction(m.value), false);
             return Value();



From ral at mail.berlios.de  Tue Mar 10 23:58:15 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 10 Mar 2009 23:58:15 +0100
Subject: [Enigma-game-svn] r1584 - in trunk: data src src/stones
Message-ID: <200903102258.n2AMwFjD002682@sheep.berlios.de>

Author: ral
Date: 2009-03-10 23:58:15 +0100 (Tue, 10 Mar 2009)
New Revision: 1584

Modified:
   trunk/data/api2init.lua
   trunk/src/Value.cc
   trunk/src/stones/OxydStone.cc
Log:
Trunk 1.1: new API reengineering
- autotile resolver: introduce offsets and support %% usage on int attributes:
  - for suffix range syntax add 4th argument of an int offset, default 1
  - the generated %% substitutions will start with the offset value
  - on int attribute usage the value must be declared as string "%%"
- value: support of autoconvertion of strings "%N" to int N.
Note:
- some int attributes may still cause problems as they are lasy on int
  conversion. Please report remaining problems


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-09 23:47:18 UTC (rev 1583)
+++ trunk/data/api2init.lua	2009-03-10 22:58:15 UTC (rev 1584)
@@ -474,17 +474,21 @@
 
 function res.autotile_implementation(context, evaluator, key, x, y)
     for i, rule in ipairs (context[4]) do
-        if #rule == 3 then   -- from, to substitution
+        if #rule >= 3 then   -- from, to substitution
             --
             local first = string.byte(rule[1], #rule[1])
             local last = string.byte(rule[2], #rule[2])
             local candidate = string.byte(key, #key)
+            local offset = 1
+            if #rule == 4 then
+                offset = rule[4]
+            end
             
-            if #key == #rule[1] and string.sub(key, 1, -2) == string.sub(rule[1], 1, -2)
+            if #rule[1] == #key and string.sub(key, 1, -2) == string.sub(rule[1], 1, -2)
                     and first <= candidate and candidate <= last then
                 local tile = evaluator(context[3], key, x, y)
                 if tile == nil then
-                    res.autotile_newtile(key, ti[rule[3]], candidate - first + 1)
+                    res.autotile_newtile(key, ti[rule[3]], candidate - first + offset)
                     return ti[key]
                 else
                     return tile
@@ -505,22 +509,34 @@
 end
 
 function res.autotile(subresolver, ...)
-    -- syntax: ... = <{prefixkey, template} | {fistkey, lastkey, template}>
+    -- syntax: ... = <{prefixkey, template} | {fistkey, lastkey, template[, offset]}>
     -- context: [4] = table with unmodified rule tables
     local args = {...}
     for i, rule in ipairs(args) do
         if type(rule) ~= "table" then
             error("Resolver autotile rule " .. i.." is not a table", 2)
         else
-            if #rule < 2 or #rule > 3 then
+            if #rule < 2 or #rule > 4 then
                 error("Resolver autotile rule "..i.." wrong number of arguments", 2)
             end
-            for j, str in ipairs(rule) do
-                if type(str) ~= "string" then
-                    error("Resolver autotile rule "..i.." has not a string in position "..j, 2)
+            local template_pos = 2
+            local string_pos = {1,2}
+            if #rule >= 3  then
+                template_pos = 3
+                string_pos = {1,2,3}
+            end
+            
+            for j, num in ipairs(string_pos) do
+                if type(rule[string_pos[num]]) ~= "string" then
+                    error("Resolver autotile rule "..i.." has no string at position "..num, 2)
                 end
             end
-            if #rule == 3 then
+            if #rule == 4 then
+                if type(rule[4]) ~= "number" then
+                    error("Resolver autotile rule "..i.." has no number at position 4", 2)
+                end
+            end
+            if #rule >= 3 then
                 local first = string.byte(rule[1], #rule[1])
                 local last  = string.byte(rule[2], #rule[2])
                 if #rule[2] ~= #rule[1] or string.sub(rule[2], 1, -2) ~= string.sub(rule[1], 1, -2)
@@ -528,8 +544,8 @@
                     error("Resolver autotile rule "..i.." bad range start-end strings", 2)
                 end
             end
-            if ti[rule[#rule]] == nil then
-                error("Resolver autotile missing template tile '"..rule[#rule].."'", 2)
+            if ti[rule[template_pos]] == nil then
+                error("Resolver autotile missing template tile '"..rule[template_pos].."'", 2)
             end
         end
     end

Modified: trunk/src/Value.cc
===================================================================
--- trunk/src/Value.cc	2009-03-09 23:47:18 UTC (rev 1583)
+++ trunk/src/Value.cc	2009-03-10 22:58:15 UTC (rev 1584)
@@ -267,7 +267,10 @@
             case BOOL: 
                 return (val.dval[0] != 0) ? 1 : 0;
             case STRING: 
-                return atoi(val.str);  //TODO use strtol and eval remaining part of string
+                if (val.str[0] == '%')
+                    return std::strtol(&(val.str[1]), NULL, 0);
+                else
+                    return std::strtol(val.str, NULL, 0);
             default: return 0;
         }
     }

Modified: trunk/src/stones/OxydStone.cc
===================================================================
--- trunk/src/stones/OxydStone.cc	2009-03-09 23:47:18 UTC (rev 1583)
+++ trunk/src/stones/OxydStone.cc	2009-03-10 22:58:15 UTC (rev 1584)
@@ -360,7 +360,7 @@
                 if ((to_bool(o1->getAttr("noshuffle")) || o1->state != CLOSED) &&
                         (to_bool(o2->getAttr("noshuffle")) || o2->state != CLOSED) &&
                         (int)(o1->getAttr("oxydcolor")) >= 0 &&  (int)(o2->getAttr("oxydcolor")) >= 0 &&
-                        o1->getAttr("oxydcolor") != o2->getAttr("oxydcolor")) {
+                        (int)o1->getAttr("oxydcolor") != (int)o2->getAttr("oxydcolor")) {
                     logBadFrameCount++;
                     return 0;
                 }
@@ -883,8 +883,8 @@
             } else if (objFlags & OBJBIT_OPENPAIR) {
                 state = OPEN_PAIR;
                 std::string flavor(getAttr("flavor"));
-                string color(getDefaultedAttr("oxydcolor", 0));
-                set_model(string("st_oxyd") + flavor + color + "_open");
+                int color(getDefaultedAttr("oxydcolor", 0));
+                set_model(ecl::strf("st_oxyd%s%d_open", flavor.c_str(), color));
                 objFlags &= ~OBJBIT_OPENPAIR;
             }
             return Value();
@@ -989,9 +989,9 @@
     
     void OxydStone::setClosedModel(bool isInitial) {
         std::string flavor(getDefaultedAttr("flavor", "a"));
-        Value c = getAttr("oxydcolor");
+        int c = getAttr("oxydcolor");
         if (flavor == "e" && !isInitial && (int)c != FAKE)
-            set_model(std::string("st_oxyd") + flavor + (std::string)c);
+            set_model(ecl::strf("st_oxyd%s%d", flavor.c_str(), c));
         else
             set_model(std::string("st_oxyd") + flavor);
         
@@ -1018,7 +1018,7 @@
             }
         }
         
-        Value mycolor = getAttr("oxydcolor");    
+        int mycolor = getAttr("oxydcolor");    
         if ((int)mycolor < AUTO) {
             // pseudo open
             if (isSingleOpened) {
@@ -1040,10 +1040,10 @@
                     // open both stones. Close one of them otherwise.
                     // (This is the Oxyd behaviour; it doesn't work with
                     // some Enigma levels.)
-                    can_open = (mycolor == pairCandidate->getAttr("oxydcolor") && pairCandidate->state==OPEN_SINGLE);
+                    can_open = (pairCandidate->getAttr("oxydcolor") == mycolor && pairCandidate->state==OPEN_SINGLE);
                 }
                 else 
-                    can_open = (mycolor == pairCandidate->getAttr("oxydcolor"));
+                    can_open = (pairCandidate->getAttr("oxydcolor") == mycolor);
     
                 if (can_open) {
                     pairCandidate->set_iState(OPEN_PAIR);
@@ -1084,8 +1084,8 @@
             return;
         }
         
-        string flavor(getDefaultedAttr("flavor","a"));
-        string color(getDefaultedAttr("oxydcolor", 0));
+        std::string flavor(getDefaultedAttr("flavor","a"));
+        std::string color = ecl::strf("%d", (int)getDefaultedAttr("oxydcolor", 0));
     
         string basemodelname = string("st_oxyd") + flavor;
         string modelname = basemodelname + color;



From andreasl at mail.berlios.de  Wed Mar 11 22:32:33 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Wed, 11 Mar 2009 22:32:33 +0100
Subject: [Enigma-game-svn] r1585 - in trunk: data data/levels/lib
	doc/reference
Message-ID: <200903112132.n2BLWXs2032474@sheep.berlios.de>

Author: andreasl
Date: 2009-03-11 22:32:29 +0100 (Wed, 11 Mar 2009)
New Revision: 1585

Modified:
   trunk/data/api2init.lua
   trunk/data/levels/lib/liblua.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - resolver res.random:
   - allow non-integer frequencies
   - insert checks for correct argument types
 - liblua:
   - allow position and userdata as key types in print_table
   - slight beautification of deep_copy-code
Note:
 - Superfluous attributes in res.random-rules are
   silently ignored.


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-10 22:58:15 UTC (rev 1584)
+++ trunk/data/api2init.lua	2009-03-11 21:32:29 UTC (rev 1585)
@@ -374,7 +374,7 @@
                 super = evaluator(context[3], hit_pair[2], x, y)
             end
             local repl_key
-            local r = math.random(context[6])
+            local r = math.random() * context[6]
             local i = 1
             local s = context[5][i][2]
             while s < r do
@@ -399,35 +399,54 @@
 function res.random(subresolver, hits, replacements)
     -- syntax: hits = key | {key, [key]*, [{key, superkey}]*}
     --         replacements = {key, [key]*, [{key, frequency}]*}
-    -- TODO check args!
-    
     local hit_table = {}
     if type(hits) == "string" then
         hit_table[1] = {hits, nil}
-    else
+    elseif type(hits) == "table" then
         for i, v in ipairs(hits) do
             if type(v) == "string" then
                 hit_table[i] = {v, nil}
             elseif type(v) == "table" then
+                if     (type(v[1]) ~= "string") or (type(v[2]) ~= "string") then
+                    error("res.random: Unsupported type or syntax error in second argument.", 2)
+                end
                 hit_table[i] = v
+            else
+                error("res.random: Unsupported type or syntax error in second argument.", 2)
             end
         end
+    else
+        error("res.random: Unsupported type or syntax error in second argument.", 2)
     end
     
     local repl_table = {}
-    for i, v in ipairs(replacements) do
-        if type(v) == "string" then
-            repl_table[i] = {v, 1}
-        elseif type(v) == "table" then
-            repl_table[i] = v
+    if type(replacements) == "string" then
+        repl_table[1] = {replacements, 1}
+    elseif type(replacements) == "table" then
+        for i, v in ipairs(replacements) do
+            if type(v) == "string" then
+                repl_table[i] = {v, 1}
+            elseif type(v) == "table" then
+                if (type(v[1]) ~= "string") and (type(v[2]) ~= "number") then
+                    error("res.random: Unsupported type or syntax error in third argument.", 2)
+                end
+                if v[2] < 0 then
+                    error("res.random: Frequency must be a positive number or zero.", 2)
+                end
+                repl_table[i] = v
+            else
+                error("res.random: Unsupported type or syntax error in third argument.", 2)
+            end
         end
+    else
+        error("res.random: Unsupported type or syntax error in third argument.", 2)
     end
     local repl_sum = 0
     for i, v in ipairs(repl_table) do
         repl_sum = repl_sum + v[2]
     end
     local context = {res.random_implementation, nil, subresolver, hit_table, 
-                      repl_table, repl_sum}
+                     repl_table, repl_sum}
     return context
 end
 

Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-10 22:58:15 UTC (rev 1584)
+++ trunk/data/levels/lib/liblua.xml	2009-03-11 21:32:29 UTC (rev 1585)
@@ -41,21 +41,20 @@
 -- deep_copy returns a copy of SOURCE, where table entries are
 -- not copied as memory references, but complete ("deep copy").
 -- Metatables are transfered, but not deep-copied.
--- TODO: use rawset/rawget instead.
 function lib.lua.deep_copy(source)
- if type(source) ~= "table" then
-   return source
- end
- local dest = {}
- for k, v in pairs(source) do
-   if type(source[k]) == "table" then
-     dest[k] = lib.lua.deep_copy(source[k])
-   else
-     dest[k] = source[k]
-   end
- end
- setmetatable(dest, getmetatable(source))
- return dest
+  if type(source) ~= "table" then
+    return source
+  end
+  local dest = {}
+  for k, v in pairs(source) do
+    if type(v) == "table" then
+      rawset(dest, k, lib.lua.deep_copy(v))
+    else
+      rawset(dest, k, v)
+    end
+  end
+  setmetatable(dest, getmetatable(source))
+  return dest
 end 
 
 -- combine_tables returns a table consisting of all entries of the
@@ -130,6 +129,10 @@
       key_s = "\"" .. key .. "\""
     elseif type(key) == "number" then
       key_s = key
+    elseif usertype(key) == "position" then
+      key_s = "<" .. key.x .. "/" .. key.y .. ">"
+    elseif type(key) == "userdata" then
+      key_s = "<" .. usertype(key) .. ">"
     else
       key_s = "<" .. type(key) .. ">"
     end

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-10 22:58:15 UTC (rev 1584)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-11 21:32:29 UTC (rev 1585)
@@ -15045,7 +15045,8 @@
 should be selected with randomness.
 @item @i{replacement} = @i{key} | @{@i{key}, @i{frequency}@}
 Either a single tile key string that should be taken with a frequency of @samp{1},
-or a pair of a tile key string with a given frequency number.
+or a pair of a tile key string with a given frequency number. The frequency can
+be an integer or non-integer number, but must be positive or zero.
 @end table
 
 @item @b{Syntax Samples:}



From ral at mail.berlios.de  Wed Mar 11 23:22:31 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Wed, 11 Mar 2009 23:22:31 +0100
Subject: [Enigma-game-svn] r1586 - team_levelpacks/team_test_new_api
Message-ID: <200903112222.n2BMMVsc003248@sheep.berlios.de>

Author: ral
Date: 2009-03-11 23:22:24 +0100 (Wed, 11 Mar 2009)
New Revision: 1586

Added:
   team_levelpacks/team_test_new_api/ralT082_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT067_1.xml
Log:
Test Level new API:
- updates for Position List test level by r1583 operator tests
- add test level for autotile with offset


Modified: team_levelpacks/team_test_new_api/ralT067_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT067_1.xml	2009-03-11 21:32:29 UTC (rev 1585)
+++ team_levelpacks/team_test_new_api/ralT067_1.xml	2009-03-11 22:22:24 UTC (rev 1586)
@@ -34,6 +34,10 @@
 ti["A"] = {"st_disco_dark", "anchor"}
 ti["s"] = {"st_switch", target="anchor", action="lighten"}
 ti["S"] = {"st_switch", target="other#*", action="darken"}
+ti["t"] = {"st_switch", target="lightoff"}
+ti["u"] = {"st_switch", target="posconcat"}
+ti["v"] = {"st_switch", target="ploffset"}
+ti["x"] = {"st_switch", target="equality"}
 
 
 
@@ -44,17 +48,40 @@
 "AD    ___     w     ",
 "                    ",
 "s   wwwwww          ",
+"t                   ",
+"u                   ",
+"v      @            ",
+"x                   ",
 "                    ",
-"                    ",
-"       @            ",
-"                    ",
-"                    ",
 "      wwwww         ",
 "                    ",
 "      .....         ",
 "    W .....  X      "
 })
 
+function lightoff()
+--    (no["other#*"] + no["anchor"]):kill()
+    (no["anchor"] + no["other#*"]):kill()
+end
+
+function posconcat()
+    wo[po(3,3) .. po(4,4)] = {"it_umbrella"}
+end
+
+function ploffset()
+--    newpl =  {1,4} + po["other#*"] + no["water"]
+    newpl =  {1,4} - po["other#*"] + no["water"]
+    wo[newpl] = {"it_squashed"}
+end
+
+function equality()
+    grp1 = no["other#*"]
+    grp2 = no["ab#*"]
+    if grp1 == grp1 then print("grp1 == grp1") else print("grp1 != grp1") end
+    if grp1 == grp2 then print("grp1 == grp2") else print("grp1 != grp2") end
+    if grp1 + grp2 == (grp2 + grp1) then print("grp1 + grp2 == grp2 + grp1") else print("grp1 + grp2 != grp2 + grp1") end
+end
+
 aby = no["ab#*"]
 abypos = po(aby)
 

Added: team_levelpacks/team_test_new_api/ralT082_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT082_1.xml	2009-03-11 21:32:29 UTC (rev 1585)
+++ team_levelpacks/team_test_new_api/ralT082_1.xml	2009-03-11 22:22:24 UTC (rev 1586)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Autotile Offsets new API" el:subtitle="" el:id="20090310ral503"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="true"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl_sahara"}
+ti["@"] = {"#ac_marble_black"} 
+
+ti["  "] = {"fl_sahara"}
+ti["@@"] = {"#ac_marble_black"} 
+
+
+ti["lasers"] = {"st_laser", orientation="%%"}
+ti["oxyds"] = {"st_oxyd_d", oxydcolor="%%"}
+
+auto1 = res.autotile(ti, {"A","P","oxyds", -4}, {"0","3","lasers", 0})
+auto2 = res.autotile(ti, {"OA","OP","oxyds", -4}, {"L0","L3","lasers", 0})
+
+if wo["IsDifficult"] then
+    wo(auto1, " ", {
+    "                    ",
+    "  @    0 1 2 3      ",
+    "                    ",
+    "       A B C        ",
+    "                    ",
+    "   EFGHIJKLMNOP     ",
+    "   EFGHIJKLMNOP     ",
+    "                    "
+    })
+else
+    wo(auto2, "  ", {
+    "                                        ",
+    "    @@        L0  L1  L2  L3            ",
+    "                                        ",
+    "              OA  OB  OC                ",
+    "                                        ",
+    "      OEOFOGOHOIOJOKOLOMONOOOP          ",
+    "      OEOFOGOHOIOJOKOLOMONOOOP          ",
+    "                                        "
+    })
+end
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT082_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From ral at mail.berlios.de  Thu Mar 12 00:06:33 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Thu, 12 Mar 2009 00:06:33 +0100
Subject: [Enigma-game-svn] r1587 - in trunk: doc src
Message-ID: <200903112306.n2BN6Xkx010828@sheep.berlios.de>

Author: ral
Date: 2009-03-12 00:06:32 +0100 (Thu, 12 Mar 2009)
New Revision: 1587

Modified:
   trunk/doc/README.macosx
   trunk/src/Makefile.am
Log:
Trunk 1.1: 
- Mac OS X patch by Sidney:
  - makefile fix
  - readme update


Modified: trunk/doc/README.macosx
===================================================================
--- trunk/doc/README.macosx	2009-03-11 22:22:24 UTC (rev 1586)
+++ trunk/doc/README.macosx	2009-03-11 23:06:32 UTC (rev 1587)
@@ -41,22 +41,6 @@
 combining separate builds on Intel and PPC machines are included
 below.
 
-Step 0 Install MacPorts: How to do that is outside the scope of this
-README, but it is pretty much a matter of finding the MacPorts web
-site, downloading and running their install package, and then checking
-to make sure that you have a ~/.profile file that adds
-/opt/local/bin to your path. For more information see the
-documentation at the MacPorts web site.
-
-Step 0a Fix up an autconf problem:
-
-I don't know if this is the most correct way to fix a problem with
-some builds not seeing some MacPorts installed packages, but it does
-work. Create a file named /usr/share/aclocal/dirlist that contains
-just the one line
-
-/opt/local/share/aclocal
-
 Step 1 Install SDL frameworks: Download the binary packages for Mac OS
 X from the SDL project web site for the current stable version of SDL
 (SDL 1.2 at the time of this writing), SDL_image, SDL_ttf, and
@@ -71,127 +55,141 @@
 directory, e.g., SDL.framework. Copy each of those directories into
 /Library/Frameworks/ to install it.
 
-  ------------
+Step 2 Install MacPorts:
 
-NOTE: If you are running under MacOS 10.5 (Leopard) and you want to
-build a binary that can run under 10.4 (Tiger) skip ahead to Step
-2a. The simpler steps 2 and 3 will work to build under 10.4 to run under
-either 10.4 or 10.5, or to build under 10.5 to run only under 10.5.
+Basic instruction for installing Macports is outside the scope of this
+README, but it is pretty much a matter of finding the MacPorts web
+site, downloading and running their install package, and then checking
+to make sure that you have a ~/.profile file that adds
+/opt/local/bin to your path. For more information see the
+documentation at the MacPorts web site.
 
-  -----------
+NOTE: Do not install any Macports packages after you install Macports
+until you have completed steps 2a through 2c below.
 
-Step 2 At a Terminal.app command line, run the command
+NOTE: If you already use Macports, you may want to rename /opt/local
+to save your existing installation, re-install Macports in order
+to set up a build environment just for Enigma, set it up according to
+the instructions below, then save that by renaming the new /opt/local
+to somehing like /opt/local-enigma. It is likely that you want to do
+that if you are going to build on MacOS 10.5 for a 10.3.9+ or 10.4+
+target, as that requires Macports to be configured specially.
 
- sudo port install libsdl libsdl_mixer libsdl_image libsdl_ttf xercesc
+Step 2a Fix up an autconf problem:
 
-Step 3 Build Enigma:
+I don't know if this is the most correct way to fix a problem with
+some builds not seeing some MacPorts installed packages, but it does
+work. Create a file named /usr/share/aclocal/dirlist that contains
+just the one line
 
-Important: The configure step requires you to be logged in with access
-to the window system, i.e., either at the Mac keyboard or using remote
-screen sharing, and in a Terminal.app comand line. It will hang trying
-to test the SDL library if you are using ssh to log in remotely with no
-GUI screen.
+/opt/local/share/aclocal
 
-At the Terminal.app command line, cd to the Enigma directory tree and
-type
+Step 2b. (Optional) Set up deployment target if different from the OS
+version and architecture which you are building on
 
- ./autogen.sh
- env CPPFLAGS="-I/opt/local/include" LDFLAGS="-L/opt/local/lib" ./configure
- make
- make macapp
+Building on 10.5 Intel to deploy on 10.4 or 10.5 Intel, or 
+Building on 10.5 ppc to deploy on 10.3.9+ ppc
 
-That's it! If it all works, there will be a copy of enigma.dmg in the
-etc/ subdirectory and a copy of Enigma.app in etc/macfiles/
-subdirectory.
+Note: See the section below for using Intel and PPC 10.5 Macs,
+combining the results to get one Universal 10.3.9+ build.
 
-  ------------
+Before intalling any packages, edit
+/opt/local/etc/macports/macports.conf and change the following three
+options to the values shown. On the Intel machine, use
 
-Building on 10.5 to deploy on 10.4 or 10.5:
+universal_target        10.4
+universal_sysroot	/Developer/SDKs/MacOSX10.4u.sdk
+universal_archs		i386
 
-Note: See the section below on making a Universal build for
-instructions on building on 10.5 on a PPC Mac to deploy on 10.3.9 or
-higher.
+On the PPC machine use
 
-Step 2a: The Macports packages are not set up to allow
-building under Mac OS 10.5 (Leopard) to produce a binary that can run
-under Mac OS 10.4 (Tiger). This optional step tells how to patch the
-Macports packages so that the resulting binary can run under 10.4 as
-well as 10.5. Note that nothing special needs to be done when building
-on a machine running 10.4 to result in a binary that can run on 10.5
-too.
+universal_target        10.3
+universal_sysroot	/Developer/SDKs/MacOSX10.3.9.sdk
+universal_archs		ppc
 
-The files to be patched are all named Portfile and are under the directory
-/opt/local/var/macports/sources/rsync.macports.org/release/ports
-in the subdirectory indicated in the right column in the following list.
+Save the file, then edit
+/opt/local/etc/macports/variants.conf
+adding the line at the end of the file
++universal
 
-The Macports packages that will be installed are:
+Make sure you make this change before you sudo port install any specific
+packages. Note that these changes are not suitable for general
+installations of Macports and should be used only within a Macports
+installation that you intend to use for the Enigma build
+environment. You don't need to do this step and therefore don't need a
+special copy of Macports that is only for building Enigma if you are building to
+target only your own version of MacOS and your own architecture.
 
-freetype          print/freetype
-jpeg              graphics/jpeg
-libogg            multimedia/libogg
-libpng            graphics/libpng
-libsdl            devel/libsdl
-libsdl_image      devel/libsdl_image
-libsdl_mixer      audio/libsdl_mixer
-libsdl_ttf        devel/libsdl_ttf
-libvorbis         audio/libvorbis
-pkgconfig         devel/pkgconfig
-smpeg             multimedia/smpeg
-tiff              graphics/tiff
-xercesc           textproc/xercesc
+Step 2c Deal with an idiosynchratic package
 
-Add the following sections to each of the port files above, with the
-exceptions listed below. Some of this may be unnecessary overkill, but
-it does seem to work. NOTE: When editing the Portfiles also remove any
-dependency delcaration for port:zlib.
+The build environment for Enigma will require installing libtool in
+Macports. That package has a listed build dependency on automake which
+in turn has dependencies that bring in all of perl and other large
+packages. MacOS 10.5 has a sufficiently current automake, so the
+dependency can simply be removed before installing libtool. Edit the
+Portfile for libtool using the following command, substituting your
+favorite editor for nano if you don't want the default vim or whatever
+is specified in the EDITOR environment variable:
 
-platform darwin 8 {
-	 configure.env-append    MACOSX_DEPLOYMENT_TARGET=10.4
-	 build.env-append        MACOSX_DEPLOYMENT_TARGET=10.4
-	 configure.cflags-delete	"-isysroot"
-	 configure.cflags-delete	"/Developer/SDKs/MacOSX10.5.sdk"
-	 configure.cxxflags-delete	"-isysroot"
-	 configure.cxxflags-delete	"/Developer/SDKs/MacOSX10.5.sdk"
-	 configure.ldflags-delete	"-isysroot"
-	 configure.ldflags-delete	"/Developer/SDKs/MacOSX10.5.sdk"
- 	 configure.ldflags-delete	"-Wl,-syslibroot,Developer/SDKs/MacOSX10.5.sdk"
-	 configure.cflags-append	"-mmacosx-version-min=10.4 -isysroot /Developer/SDKs/MacOSX10.4u.sdk"
-	 configure.cxxflags-append	"-mmacosx-version-min=10.4 -isysroot /Developer/SDKs/MacOSX10.4u.sdk"
- 	 configure.ldflags-append	"-mmacosx-version-min=10.4 -isysroot /Developer/SDKs/MacOSX10.4u.sdk -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk"
-}
+ sudo port edit --editor nano libtool
 
-   --------
-Exceptions:
+and remove the line that specifies a build dependency on
+automake. This step is not necessary if you already have perl5
+installed in MacPorts, as it is just to let you avoid that
+installation. Then install it with the following option:
 
-pkgconfig does not have to be altered, as it is only a build dependency
-tiff does not have to be altered, as it is already configured properly
+ sudo port install libtool -universal
 
-libsdl already has a darwin_8 section, so add the above
-contents to the end of the existing section.
+NOTE: If you ever do a port sync or port selfupgrade on this
+installation it will wipe out this change, so you would have to edit
+it again before doing a port upgrade to avoid downloading and
+installing automake and the large packages it requires.
 
-xercesc needs the following section instead of the above:
+Step 2d. Fix the xercesc package
 
-platform darwin 8 {
-	 configure.env-append    MACOSX_DEPLOYMENT_TARGET=10.4
-	 build.env-append        MACOSX_DEPLOYMENT_TARGET=10.4
-	configure.pre_args-append	-c /usr/bin/gcc-4.0 -x /usr/bin/g++-4.0 -z -isysroot -z /Developer/SDKs/MacOSX10.4u.sdk -z -mmacosx-version-min=10.4 -l -isysroot -l /Developer/SDKs/MacOSX10.4u.sdk -l -mmacosx-version-min=10.4 -l -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk
+Edit the portfile of the xercesc package using the command
+
+ sudo port edit --editor nano xercesc
+
+and after the closing bracket of the darwin 8 section insert the
+following section if on an Intel Mac, or the second one if on a PPC
+
+platform universal {
+	configure.env-append    MACOSX_DEPLOYMENT_TARGET=10.4
+	build.env-append        MACOSX_DEPLOYMENT_TARGET=10.4
+	configure.pre_args-append	-c /usr/bin/gcc-4.0 -x /usr/bin/g++-4.0 \
+		-z -isysroot -z /Developer/SDKs/MacOSX10.4u.sdk -z -mmacosx-version-min=10.4 \
+		-l -isysroot -l /Developer/SDKs/MacOSX10.4u.sdk -l -mmacosx-version-min=10.4 \
+		-l -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk
 }
 
-   --------
 
-Uninstall and clean each of the above packages if they are installed
-in MacPorts, then edit the Portfile for each one, then install all of
-them with variant +darwin_8. The following commands will get all of the
-required packages once dependencies are followed:
+platform universal {
+	configure.env-append    MACOSX_DEPLOYMENT_TARGET=10.3
+	build.env-append        MACOSX_DEPLOYMENT_TARGET=10.3
+	configure.pre_args-append	-c /usr/bin/gcc-4.0 -x /usr/bin/g++-4.0 \
+		-z -isysroot -z /Developer/SDKs/MacOSX10.3.9.sdk -z -mmacosx-version-min=10.3 \
+		-l -isysroot -l /Developer/SDKs/MacOSX10.3.9.sdk -l -mmacosx-version-min=10.3 \
+		-l -Wl,-syslibroot,/Developer/SDKs/MacOSX10.3.9.sdk
+}
 
- sudo port install xercesc +darwin_8
- sudo port install libsdl +darwin_8
- sudo port install libsdl_image +darwin_8
- sudo port install libsdl_ttf +darwin_8
- sudo port install libsdl_mixer +darwin_8
+NOTE: If you ever do a port sync or port selfupgrade on this
+installation it will wipe out this change, so you would have to edit
+it again before doing a port upgrade to ensure it builds properly.
 
-Step 3a Build Enigma:
+Step 3. Install the remaining required Macports packages
 
+ At a Terminal.app command line, run the commands
+
+ sudo port install libiconv gettext libsdl libsdl_mixer libsdl_image libsdl_ttf xercesc
+
+Wait a long time for it to finish. If you want to see more output
+scroll by on your terminal to keep from being bored while waiting (and
+to know that the build is not hung), use
+the -d option, as in sudo port -d install etc.
+
+Step 4 Build Enigma:
+
 Important: The configure step requires you to be logged in with access
 to the window system, i.e., either at the Mac keyboard or using remote
 screen sharing, and in a Terminal.app comand line. It will hang trying
@@ -199,8 +197,17 @@
 GUI screen.
 
 At the Terminal.app command line, cd to the Enigma directory tree and
-type
+type the correct set of commands below depending on what you are doing:
 
+a) simple case, building to target your own platform only:
+
+ ./autogen.sh
+ env CPPFLAGS="-I/opt/local/include" LDFLAGS="-L/opt/local/lib" ./configure
+ make
+ make macapp
+
+b) building on a 10.5 Intel machine to target 10.4+ Intel
+
  export MACOSX_DEPLOYMENT_TARGET=10.4
  export SDK=/Developer/SDKs/MacOSX10.4u.sdk
  ./autogen.sh
@@ -208,28 +215,26 @@
  make
  make macapp
 
+c) building on a 10.5 PPC machine to target 10.3.9+ PPC
+
+ export MACOSX_DEPLOYMENT_TARGET=10.3
+ export SDK=/Developer/SDKs/MacOSX10.3.9.sdk
+ ./autogen.sh
+ env CPPFLAGS="-I/opt/local/include -mmacosx-version-min=10.3 -isysroot ${SDK}" LDFLAGS="-L/opt/local/lib -mmacosx-version-min=10.3 -isysroot ${SDK} -Wl,-syslibroot,${SDK}" ./configure
+ make
+ make macapp
+
 That's it! If it all works, there will be a copy of enigma.dmg in the
 etc/ subdirectory and a copy of Enigma.app in etc/macfiles/
 subdirectory.
 
-Creating a universal binary with support for 10.3.9+
----------------------------
+Step 5. (optional) Creating a universal binary with support for 10.3.9+
 
 To get a Universal binary, you must create separate builds on a PPC
 and an Intel Mac, then combine them to form one Universal
 build. Follow the instructions above to get a build for 10.4+ on the
-Intel machine. Modify the instructions above on the PPC machine as
-follows to get a build that will work on 10.3.9 or higher:
+Intel machine and for 10.3.9+ on the PPC machine.
 
-Instead of adding a "platform darwin 8" section to the MacPorts
-Portfiles, add an equivalent "platform darwin 7" section in which each
-"10.4" is replaced by "10.3" and each "MacOSX10.4u.sdk" is replaced by
-"MacOSX10.3.9.sdk". In the steps to install the MacPorts packages, use
-+darwin_7 in the install commands instead of +darwin_8
-
-If you then complete the bulld process on the PPC machine it will
-produce a PPC-only build compatible with MacOS 10.3.9 and higher.
-
 On the PPC machine, go into the direcctory tree of the resulting
 Enigma.app, either using a terminal command line or in the finder
 using control-click Show Package Contents, and copy the file
@@ -254,190 +259,4 @@
 
  make bundle-dmg
 
--------------------------
--------------------------
--------------------------
-
-The remainder of this file is being kept to document the procedures
-that were used with older versions of MacOS X, but we have not tested
-them using current versions of Enigma.
-
-Building under MacOS 10.4:
--------------------------
-
-The easiest way to install what you need under MacOS 10.4 is to use
-the Fink environment and use it to install SDL, SDL_mixer, SDL_image,
-SDL_ttf, and Xerces-c. DarwinPorts provides a similar environment and
-set of packages as Fink, but as of this writing we have not tried it
-for building Enigma. Neither have we tried the older version of Fink
-that runs on 10.3.9.
-
-As of this writing, xerces-c is only in the unstable package tree of
-fink. The fink FAQ describes how to temporarily switch to using
-unstable so that you can install a package from there even though you
-are in general using the stable tree.
-
-The Fink install of Xerces-c does not build the static library
-libxerces-c.a so the following additional steps are necessary.
-
-1. If you have not yet installed xerces-c, install it and some
-associated packages using the -k option to keep the build directories
-for a later step:
- 
-  fink -k install xerces-c xerces-c-dev xerces-c-shlibs
-
-If you already installed them, rebuild the using the -k option
-
-  fink -k rebuild xerces-c xerces-c-dev xerces-c-shlibs
-
-2. The xerces-c source tree can now be found under /sw/src/fink.build/
-in a directory that corresponds to the version of xerces that you
-installed. cd to it and set the XERCESCROOT environment variable as in
-the following example:
-
-  cd /sw/src/fink.build/ xerces-c-2.7.0-1002/xerces-c-src_2_7_0
-  export XERCESCROOT=`pwd`
-
-Put the following in an executable file in the
-$XERCESCROOT/src/xercesc directory, cd to that directory and run it,
-using sudo if fink is configured to always build as root.
-
-   #!/bin/sh
-   make -n XML_LIB_DIR=$XERCESCROOT/lib/dummy |
-     grep 'c++ .*\.dylib' |
-     tr \  \\n |
-     grep '\.o$' |
-     ( cd ../../obj ; xargs ar rcs $XERCESCROOT/lib/libxerces-c.a )
-   
-Then 
-
-    sudo cp $XERCESCROOT/lib/libxerces-c.a /sw/lib/
-    sudo ranlib /sw/lib/libxerces-c.a
-
-If you do use Fink or DarwinPorts, as long as the required additional
-libraries are consistently placed in the same directory, e.g.,
-/usr/fink/lib, then the Enigma build scripts should work. There will
-be a problem if you install, for example, SDL in /usr/fink/lib and
-Xerces-c in /usr/local/lib.
-
-Once the Fink packages are installed, follow step 7 below to build
-Enigma.
-
-Building under 10.3.9, or under 10.4 without Fink:
---------------------------------------------------
-
-Here are steps I used to build Enigma under MacOS 10.3.9 that already
-had X-11 installed (I use OpenOffice, so whatever that needs was there
-already), using svn trunk. I can't say for sure if having X-11 installed
-made any difference. I mention it in case that is a necessary prerequisite.
-
-1. Very important for building a number of unix projects in 10.3.9 is
-   to downgrade QuickTime 7.0.4 to version 7.0.1 using
-   http://www.apple.com/support/downloads/quicktime701reinstallerforquicktime704.html
-
-   The QuickTime 7.0.4 upgrade was pushed out as part of a 10.3.9
-   software update. It installs a version of libstdc++ that was built
-   with a newer version of gcc than the 3.3 that ships with MacOS
-   10.3.9, resulting in various linker errors when trying to build
-   many projects ported from unix that used to build fine. The
-   downgrade fixes that.
-   
-   The downgrade is not necessary to build in MacOS 10.4.
-
-   If you continue to get mysterious linker errors under 10.3.9 you
-   can also try reinstalling xcode 1.5. Some people said it restored
-   some files messed up by a software update. I tried it at one point
-   earlier before I found out about the QuickTime problem and it
-   didn't by itself help, so I can't say for sure if it that really is
-   also necessary.
-
-2. I earlier installed, for some other projects, gettext, freetype,
-   and libpng, so I can't say for sure if any of the other required
-   libraries requires one or more of them. If you see errors about
-   anything like that missing when you try the next steps, download the
-   source of whichever you need from its project web site, and use
-     ./configure ; make ; sudo make install
-
-3. (10.3.9 only) Download latest versions of autoconf (2.59) and automake
-   (1.9.6). The versions included in 10.3.9 are too old. Build and install
-   them from sources using
-     ./configure ; make ; sudo make install 
-
-4. Install binary packages of SDL, SDL-devel, SDL_mixer, SDL_image, and
-   SDL_ttf, available from http://libsdl.org in the links under
-   Download. I used SDL 1.2, the current stable build at the time,
-   downloading http://www.libsdl.org/release/SDL-1.2.9.dmg and
-   http://www.libsdl.org/release/SDL-devel-1.2.9.pkg.tar.gz and found
-   the other packages at the Libraries link under Downloads:
-
-   http://www.libsdl.org/projects/SDL_mixer
-   http://www.libsdl.org/projects/SDL_image
-   http://www.libsdl.org/projects/SDL_ttf
-
-   In each case download both the source and the MacOSX binary
-   package. For this step install the binary packages into the
-   /Library directory (which is the default).
-
-5. Download the source tarballs (see previous step) of SDL, SDL_mixer,
-   SDL_image, and SDL_ttf. Unpack them somewhere convenient, then
-   build and install each of them, starting with SDL.
-
-   All of them installed fine using
-     ./configure ; make ; sudo make install
-
-6. Download the source tarball of xerces-c from
-      http://xml.apache.org/dist/xerces-c/stable/
-   I got version 2.7.0 and unpacked it in /usr/local/src. Change
-   references to those in the following commands to match your
-   circumstances:
-
-   export XERCESCROOT=/usr/local/src/xerces-c-src_2_7_0
-   cd /usr/local/src/xerces-c-src_2_7_0/src/xercesc
-   ./configure
-   make
-   sudo make install
-
-6(a) Then I had to do the following important step, which create a
-   static link library, as the MacOSX version of the xerces-c 2.7
-   build does not do that. Put the following in an executable file
-   in the $XERCESCROOT/src/xercesc directory, cd to that directory
-   and run it.
-
-   #!/bin/sh
-   make -n XML_LIB_DIR=$XERCESCROOT/lib/dummy |
-     grep 'c++ .*\.dylib' |
-     tr \  \\n |
-     grep '\.o$' |
-     ( cd ../../obj ; xargs ar rcs $XERCESCROOT/lib/libxerces-c.a )
-   
-  Then
-
-    sudo cp $XERCESCROOT/lib/libxerces-c.a /usr/local/lib/
-    sudo ranlib /usr/local/lib/libxerces-c.a
-
-7. Once all the above are all installed, build a Mac
-   application bundle from the command line by cd to the root directory of
-   the Enigma source tree (i.e., the directory above src) and running the
-   commands:
-
-     ./autogen.sh
-     ./configure
-     make
-     make macapp
-
-  The first line is only necessary if you are starting from the svn
-  sources. If you downloaded a release tarball, it should already have
-  had autogen.sh run and you can start with ./configure.
-
-  The final line builds a Mac OS X application bundle called
-  Enigma.app and a compressed disk image containing it called
-  enigma.dmg, both in the etc/ directory under the source tree root.
-
- You should be able to copy the enigma.dmg file to a Mac running
- 10.3.9 that has not had the various libraries required for building
- Enigma installed, open the disk image, and drop the Enigma app into
- any disk folder, e.g., Applications, to install Enigma.
-
-I have tested this only by building under 10.3.9 and running on
-10.3.9. Someone should update this file once they have tried building
-on 10.4 and tested the resulting application on both 10.3.9 and 10.4.
+----------------------------

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2009-03-11 22:22:24 UTC (rev 1586)
+++ trunk/src/Makefile.am	2009-03-11 23:06:32 UTC (rev 1587)
@@ -554,7 +554,7 @@
 static_prefix := `$(SDL_CONFIG) --prefix`
 .PHONY: enigma-fw-mosx
 enigma-fw-mosx: $(enigma_OBJECTS) $(enigma_DEPENDENCIES)
-	$(CXX) $(LDFLAGS) -o enigma-fw $(enigma_OBJECTS) $(enigma_DEPENDENCIES) ${LIBINTL} $(static_prefix)/lib/libxerces-c.a -L$(static_prefix)/lib -lsdlmain -lz -framework SDL -framework SDL_image -framework SDL_mixer -framework Cocoa -framework OpenGL -framework SDL_ttf $(static_prefix)/lib/libpng.a 
+	$(CXX) $(LDFLAGS) -o enigma-fw $(enigma_OBJECTS) $(enigma_DEPENDENCIES) $(static_prefix)/lib/libintl.a /usr/lib/libiconv.dylib $(static_prefix)/lib/libxerces-c.a -L$(static_prefix)/lib -lsdlmain -lz -framework SDL -framework SDL_image -framework SDL_mixer -framework Cocoa -framework OpenGL -framework SDL_ttf $(static_prefix)/lib/libpng.a 
 
 # Special target to make a disk image of the bundled app
 .PHONY: bundle-dmg



From andreasl at mail.berlios.de  Thu Mar 12 17:18:59 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Thu, 12 Mar 2009 17:18:59 +0100
Subject: [Enigma-game-svn] r1588 - in trunk: data/levels/lib doc/reference
Message-ID: <200903121618.n2CGIx6x006907@sheep.berlios.de>

Author: andreasl
Date: 2009-03-12 17:18:54 +0100 (Thu, 12 Mar 2009)
New Revision: 1588

Added:
   trunk/data/levels/lib/libimport.xml
Modified:
   trunk/data/levels/lib/liblua.xml
   trunk/data/levels/lib/libmap.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - New library libimport:
    libimport holds routines and tools to convert external 
    level files to libmap-maps. Most of its functions derive
    from earlier versions in libsoko. Currently, only
    Sokoban and Wanderer level files can be converted.
    -> Note that the simple conversion into a map does NOT
       mean that the needed game objects exist in the engine.
    Available functions:
     - lib.import.unpack_multilevel
     - lib.import.uncompress_rle
     - lib.import.string_replace (a wrapper for string.gsub)
     - lib.import.string_remove_multiples
     - lib.import.level_to_map
     - lib.import.map_sokoban
     - lib.import.map_wanderer
 - libmap:
     - New function lib.map.match
        Returns a polist of all positions which match a given
        set of conditions.
     - New function lib.map.defuse
        Returns a table of keylength-1-maps, holding the subkeys
        of the original key. Sometimes useful when converting
        levels into new API or working with maps.       
     - New function lib.map.replace_outside
        Outsorced and generalized from libsoko.
     - New function lib.map.trim
        Removes unneccessary lines and columns from a map.
     - Add support for polists for map:set, map:get, map:paste.
     - Fix lib.map.sub: Last line was sometimes missing.
    Note: libmap now depends on lib.lua.deep_copy.
 - liblua:
    - add support for polists to print_table
Todo:
 - The sokoban libraries are currently rewritten and will be
   updated lateron.


Added: trunk/data/levels/lib/libimport.xml
===================================================================
--- trunk/data/levels/lib/libimport.xml	2009-03-11 23:06:32 UTC (rev 1587)
+++ trunk/data/levels/lib/libimport.xml	2009-03-12 16:18:54 UTC (rev 1588)
@@ -0,0 +1,228 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="library">
+      <el:identity el:title="" el:id="lib/libimport"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2009 Enigma Team</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libmap" el:id="lib/libmap" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="false" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+-- libimport.xml is dedicated to parse level files of other
+-- games or formats and typically returns libmap-maps.
+-- In this context, the word "level" refers to a string,
+-- representing a level of the other game. "multilevel"
+-- is a string composed of one or more levels.
+-- A "monolevel" is a string which holds a single level,
+-- but also additional information, so it has to be handled
+-- as multilevel to extract the level.
+-- A map is a map in the libmap-sense, i.e. an Enigma level.
+
+lib.import = {}
+setmetatable(lib.import, getmetatable(lib))
+
+lib.import.line_regexp = {}
+
+-------------------
+-- General tools --
+-------------------
+
+function lib.import.unpack_multilevel(multilevel, sublevel_number, format)
+    if type(multilevel) ~= "string" then
+        error("lib.import.unpack_multilevel: Can't make sense of level type "..type(level)..".", 2)
+    end
+    if (type(sublevel_number or 1) ~= "number") then
+        error("lib.import.unpack_multilevel: Sublevel number must be an integer.", 2)
+    end
+    local current_level_number = 0
+    local level = ""
+    -- search the correct sublevel by pattern matching, line for line
+    local in_level = false
+    for line in string.gfind(multilevel, "([^\n\|]*)[\n\|]") do
+        local start_match, end_match = string.find(line, lib.import.line_regexp[format])
+        if (start_match == 1) and (end_match == string.len(line)) then
+            if not in_level then
+                -- we just entered a new level
+                current_level_number = current_level_number + 1
+                in_level = true
+            end
+            if current_level_number == (sublevel_number or 1) then
+                level = level..line.."\n"
+            end
+        else
+            in_level = false
+        end
+    end  
+    if level == "" then
+        error("lib.import.unpack_multilevel: Multilevel holds less than "..sublevel_number.." levels!", 2)
+    end
+    return level
+end
+
+function lib.import.uncompress_rle(level, attribs)
+    local uncompressed = ""
+    local rle_counter = nil
+    local error_on_multiple = (attribs or {}).error_on_multiple
+    for j = 1, string.len(level) do
+        local ch = string.sub(level, j, j)
+        if tonumber(ch) then
+            -- add number for runlength encoding
+            rle_counter = 10 * (rle_counter or 0) + tonumber(ch)
+        else
+            if error_on_multiple and ((rle_counter or 1) > 1) then
+                -- check whether character is allowed as multiple
+                if string.find(ch, error_on_multiple) then
+                    error("lib.import.uncompress_rle: Level uses rle-compression on an invalid character.", 2)
+                end
+            end
+            uncompressed = uncompressed .. string.rep(ch, rle_counter or 1)
+            rle_counter = nil
+        end
+    end
+    return uncompressed
+end
+
+function lib.import.string_replace(level, old_string, new_string)
+    return string.gsub(level, old_string, function(s) return new_string end)
+end
+
+function lib.import.string_remove_multiples(level, ch)
+    local result = level
+    while string.find(result, ch..ch) do
+        result = lib.import.string_replace(result, ch..ch, ch)
+    end
+    return result
+end
+
+-- When using level_to_map, make sure in advance that the level ends
+-- with a proper line ending, and only one line ending.
+function lib.import.level_to_map(level, _line_ending, _default_key)
+    local line_ending = _line_ending or "\n"
+    local default_key = _default_key or " "
+    if type(level) ~= "string" then
+        error("lib.import.level_to_map: Can't make sense of level type "..type(level)..".", 2)
+    end
+    if type(line_ending) ~= "string" then
+        error("lib.import.level_to_map: Can't make sense of line ending type "..type(level)..".", 2)
+    end
+    if type(default_key) ~= "string" then
+        error("lib.import.level_to_map: Can't make sense of default key type "..type(level)..".", 2)
+    end
+    local premap = {}
+    local reg_exp_line = "(.-)" .. line_ending
+    string.gsub(level, reg_exp_line, function (s)
+        table.insert(premap, s)
+    end)
+    return wo:newMap(default_key, premap)
+end
+
+----------------------------------------
+-- Specific import data and functions --
+----------------------------------------
+
+--------------------------
+-- Sokoban level format --
+--------------------------
+
+-- Sokoban level files can be very different - they can use
+-- runlength encoding and multilevel files. Sometimes, "|"
+-- is used as line ending instead of or together with "\n".
+-- " ", "_" and "-" can all represent space. Sometimes, the
+-- outside is filled with " ", then again with "#" (what we
+-- call "redundant walls"). Finally, line width can vary.
+-- We use a slightly generalized version, to include
+-- chessoban levels. Allowed characters are:
+--    - _ space  space
+--    #          wall
+--    .          goal
+--    $ *        box, box with goal
+--    n N        st_chess, st_chess with goal
+--    @ +        player, player with goal
+-- The returned map will use " " for inside space, "-" for
+-- outside space, default key is " ".
+
+lib.import.line_regexp["sokoban"] =
+      "[ \-\#\_\$\.@\*0-9Nn\+]*"  -- all allowed characters except line ending
+   .. "[\#\$\.@\*Nn\+]+"          -- at least one non-space character
+   .. "[ \-\#\_\$\.@\*0-9Nn\+]*"  -- again all allowed characters except line ending
+
+function lib.import.map_sokoban(multilevel, sublevel_number, keylength_one)
+    if type(multilevel) ~= "string" then
+        error("lib.import.map_sokoban: Multilevel is not a string.", 2)
+    end
+    local level
+    level = lib.import.unpack_multilevel(multilevel .. "\n", sublevel_number or 1, "sokoban")
+    level = lib.import.uncompress_rle(level, {error_on_multiple = "|\n"})
+    level = lib.import.string_replace(level, "|", "\n")
+    level = lib.import.string_remove_multiples(level .. "\n", "\n")
+    local map = lib.import.level_to_map(level, "\n", " ")
+    map:replace("_")
+    map:replace("-")
+    map:replace_outside(" ", "-")
+    -- Remove redundant walls by outside:
+    -- A wall is redundant, if it is surrounded by "-" or "#".
+    -- In this case, it can be replaced by "-".
+    map.defaultkey = "-"
+    map[map:match({{po(0,0), "#"}, {NEIGHBORS_8, "-", "#"}})] = "-"
+    map = map:trim()
+    map.defaultkey = " "
+    -- MAP now is a ready-to-use keylength-one-map.
+    -- If KEYLENGTH_ONE is true, we may return the map;
+    -- otherwise, we resolve the characters "*", "N" and
+    -- "+", which include triggers.
+    if keylength_one then
+        return map
+    end
+    twocharmap = map * wo:newMap(" ")
+    twocharmap:replace(". ", " .")
+    twocharmap:replace("* ", "$.")
+    twocharmap:replace("N ", "n.")
+    twocharmap:replace("+ ", "@.")
+    return twocharmap
+end
+
+---------------------------
+-- Wanderer level format --
+---------------------------
+
+-- Wanderer is a game originally created by Steven Shipway in 1988.
+-- Wanderer level files are uncompressed monolevels with fixed
+-- width. The level itself is followed by a short description
+-- (title/author/email) in a single line or a line of "#"s. Last
+-- line optionally is a number. A Wanderer level knows the
+-- following characters (taken from Wanderer's editor):
+--    : _ #      earth, rock, indestructible rock
+--    * - space  treasure, alternative space, space
+--    O < > ^    falling boulder, arrow from right, arrow from left, balloon
+--    ! + B      landmine, cage, bomb
+--    / \\       deflectors
+--    T A X @    teleport, arrival, exit, start
+--    M S C ~    big monster, baby monster, time capsule, thingy
+
+lib.import.line_regexp["wanderer"] =
+      "[ \:\_\#\*\-O\<\>\^\!\+B\/\\TAX at MSC\~]+" -- at least one character
+
+function lib.import.map_wanderer(monolevel)
+    -- strip level from text lines
+    local level = lib.import.unpack_multilevel(monolevel, 1, "wanderer")
+    local map = lib.import.level_to_map(level, "\n", " ")
+    -- replace alternative space by space (i.e. default key)
+    map:replace("-")
+    return map
+end
+
+    ]]></el:luamain>
+    <el:i18n>
+    </el:i18n>
+  </el:protected>
+</el:level>
+

Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-11 23:06:32 UTC (rev 1587)
+++ trunk/data/levels/lib/liblua.xml	2009-03-12 16:18:54 UTC (rev 1588)
@@ -150,10 +150,13 @@
       else
         print((prefix or "") .. "|" .. key_s .. " = | ...")
       end
-    elseif (type(value) == "userdata") and (usertype(value) == "position") then
+    elseif usertype(value) == "position" then
       print((prefix or "") .. "|" .. key_s .. " = position " .. value.x
             .. "/" .. value.y)
-    elseif (type(value) == "userdata") and (usertype(value) == "object") then
+    elseif usertype(value) == "polist" then
+      print((prefix or "") .. "|" .. key_s .. " = polist of " .. #value
+            .. " position(s)")
+    elseif usertype(value) == "object" then
       print((prefix or "") .. "|" .. key_s .. " = object of name '"
             .. (value.name or "") .. "'")
     else

Modified: trunk/data/levels/lib/libmap.xml
===================================================================
--- trunk/data/levels/lib/libmap.xml	2009-03-11 23:06:32 UTC (rev 1587)
+++ trunk/data/levels/lib/libmap.xml	2009-03-12 16:18:54 UTC (rev 1588)
@@ -8,6 +8,7 @@
       <el:copyright>Copyright ? 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="false" el:single="false" el:network="false"/>
       <el:comments>
@@ -30,14 +31,21 @@
 --   lib.map.fuse(arg1, arg2)                 aka. map1 * map2
 --   lib.map.transform(map, op)               aka. map ^ op
 --   lib.map.get(map, posarg)                 aka. map[posarg]
---   lib.map.set(map, posarg, value)            aka. map[posarg] = value
---   lib.map.extend(map, posarg)                aka. map:extend(posarg)
---   lib.map.sub(map, arg1, arg2)               aka. map:sub(arg1, arg2)
---   lib.map.paste(map1, map2, posarg, ignore)  aka. map1:paste(map2, posarg, ignore)
---   lib.map.covers(map, pos)                   aka. map:covers(pos)
---   lib.map.set_default_key(map, newkey)       aka. map:set_default_key(newkey)
+--   lib.map.set(map, posarg, value)          aka. map[posarg] = value
+--   lib.map.covers(map, pos)                 aka. map:covers(pos)
+--   lib.map.defuse(map)                      aka. map:defuse()
+--   lib.map.extend(map, posarg)              aka. map:extend(posarg)
+--   lib.map.match(map, conditions)           aka. map:match(conditions)
+--   lib.map.paste(map1, map2, posarg, ignore)
+--                                            aka. map1:paste(map2, posarg, ignore)
 --   lib.map.print(map, withXYCounts, left_separator, right_separator)
 --                                            aka. map:print(...)
+--   lib.map.replace(map, oldkey, newkey)     aka. map:replace(oldkey, newkey)
+--   lib.map.replace_outside(map, oldkey, newkey)
+--                                            aka. map:replace_outside(oldkey, newkey)
+--   lib.map.set_default_key(map, newkey)     aka. map:set_default_key(newkey)
+--   lib.map.sub(map, arg1, arg2)             aka. map:sub(arg1, arg2)
+--   lib.map.trim(map, trimkey)               aka. map:trim(trimkey)
 -- Please consult the reference manual for details.
 --
 
@@ -104,6 +112,27 @@
   return wo:newMap(map1.defaultkey .. map2.defaultkey, result)  
 end
 
+function lib.map.defuse(map)
+  if (type(map) ~= "table") or (map.type ~= "map") then
+    error("lib.map.defuse: Can only work on maps.", 2)
+  end
+  local kl = rawget(map, "__keylength")
+  local dk = rawget(map, "__defaultkey")
+  local result = {}
+  for j = 1, kl do
+    result[j] = wo:newMap(string.sub(dk, j, j), map.width, map.height)
+  end
+  for y = 0, map.height - 1 do
+    for x = 0, map.width - 1 do
+      local key = map[{x,y}]
+      for j = 1, kl do
+        result[j][{x,y}] = string.sub(key, j, j)
+      end
+    end
+  end
+  return result
+end
+
 function lib.map.transform(map, op)
   if (type(map) ~= "table") or (map.type ~= "map") then
     error("lib.map.transform: Can only work on maps.", 2)
@@ -161,12 +190,12 @@
   local result = {}
   local kl = map.keylength
   for y = pos1.y + 1, pos2.y + 1 do
-    if y < map.height then
+    if y <= map.height then
       result[y-pos1.y] = string.sub(rawget(map, y) or "",
                              pos1.x * kl + 1, (pos2.x + 1) * kl) or ""
     end
   end
-  return wo:newMap(map.defaultkey, result)  
+  return wo:newMap(rawget(map, "__defaultkey"), result)  
 end
 
 function lib.map.paste(map1, map2, posarg)
@@ -192,6 +221,10 @@
     for obj in posarg do
       lib.map.paste(map1, map2, obj)
     end
+  elseif usertype(posarg) == "polist" then
+    for j = 1, #posarg do
+      lib.map.paste(map1, map2, posarg[j])
+    end
   elseif type(posarg) == "table" then
     lib.map.paste(map1, map2, po(posarg))
   else
@@ -207,7 +240,7 @@
   local tile2 = tile2arg or rawget(map, "__defaultkey")
   if    (type(tile1) ~= "string") or (type(tile2) ~= "string")
      or (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
-    error("lib.map.replace: Tiles do not have the same length as default key.")
+    error("lib.map.replace: Tiles do not have the same length as default key.", 2)
   end
   for y = 1, map.height do
     local line = rawget(map, y)
@@ -220,6 +253,107 @@
   end
 end
 
+function lib.map.replace_outside(map, tile1, tile2arg)
+  if (type(map) ~= "table") or (map.type ~= "map") then
+    error("lib.map.replace_outside: Can only work on maps.", 2)
+  end
+  local kl = rawget(map, "__keylength")
+  local tile2 = tile2arg or rawget(map, "__defaultkey")
+  if    (type(tile1) ~= "string") or (type(tile2) ~= "string")
+     or (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
+    error("lib.map.replace_outside: Tiles do not have the same length as default key.", 2)
+  end
+  if tile1 == tile2 then
+    error("lib.map.replace_outside: Old and new tile must be different.", 2)
+  end
+  -- mark outside floor fields from the border
+  local function check_for_outside(x, y)
+    if string.sub(rawget(map, y), kl * (x - 1) + 1, x * kl) == tile1 then
+      map[{x-1, y-1}] = tile2
+      if y > 1          then  check_for_outside(x, y - 1)  end
+      if y < map.height then  check_for_outside(x, y + 1)  end
+      if x > 1          then  check_for_outside(x - 1, y)  end
+      if x < map.width  then  check_for_outside(x + 1, y)  end
+    end
+  end
+  for y = 1, map.height do
+    check_for_outside(1, y)
+    check_for_outside(map.width, y)
+  end
+  for x = 1, map.width do
+    check_for_outside(x, 1)
+    check_for_outside(x, map.height)
+  end
+end
+
+function lib.map.match(map, conditionsarg, ...)
+  if (type(map) ~= "table") or (map.type ~= "map") then
+    error("lib.map.match: Can only work on maps.", 2)
+  end
+  local kl = rawget(map, "__keylength")
+  local conditions 
+  if #{...} == 0 then
+    if      (type(conditionsarg) == "table")
+       and ((usertype(conditionsarg[1]) == "position") or (usertype(conditionsarg[1]) == "polist")) then
+      conditions = lib.lua.deep_copy({conditionsarg})
+    else
+      conditions = lib.lua.deep_copy(conditionsarg)
+    end
+  else
+    conditions = lib.lua.deep_copy({conditionsarg, ...})
+  end
+  if type(conditions) == "nil" then
+    conditions = {}
+  end
+  if type(conditions) == "string" then
+    conditions = {{po(0,0), conditions}}
+  end
+  if type(conditions) ~= "table" then
+    error("lib.map.match: Conditions of wrong type " .. type(conditions)
+        .. ", expected table, string, or nil.", 2)
+  end
+  for _, condition in pairs(conditions) do
+    if (type(condition) ~= "table") or (#condition < 2) then
+      error("lib.map.match: Wrong type in condition list, expected a table with "
+          .. "at least two entries.", 2)
+    end
+    if (usertype(condition[1]) == "position") then
+      condition[1] = po(grp({})) .. condition[1]
+    end
+    if (usertype(condition[1]) ~= "polist") then
+      error("lib.map.match: Wrong type in condition, expected position or "
+          .. "position list as first entry.", 2)
+    end
+    for j = 2, #condition do
+      if (type(condition[j]) ~= "string") or (string.len(condition[j]) ~= kl) then
+        error("lib.map.match: Tile key in condition has wrong type or key length.", 2)
+      end
+    end       
+  end
+  local result = po(grp({}))
+  for y = 0, map.height - 1 do
+    for x = 0, map.width - 1 do
+      local conditions_fulfilled = true
+      for _, condition in pairs(conditions) do
+        for j = 1, #condition[1] do
+          if conditions_fulfilled then
+            local ch = map[{x + condition[1][j].x, y + condition[1][j].y}]
+            local found = false
+            for j = 2, #condition do
+              found = found or (condition[j] == ch)
+            end
+            conditions_fulfilled = found  -- at this point, cf was always true
+          end
+        end
+      end
+      if conditions_fulfilled then
+        result = result .. po(x,y)
+      end
+    end
+  end
+  return result
+end
+
 function lib.map.covers(map, pos)
   if type(pos) == "table" then
     return (pos[1] >= 0) and (pos[2] >= 0)
@@ -247,6 +381,12 @@
       table.insert(result, lib.map.get(map, obj))
     end
     return result
+  elseif usertype(posarg) == "polist" then
+    local result = {}
+    for j = 1, #posarg do
+      result[j] = lib.map.get(map, posarg[j])
+    end
+    return result
   elseif type(posarg) == "table" then
     if map:covers(posarg) then
       local kl = rawget(map, "__keylength")
@@ -313,6 +453,14 @@
           .. value
           .. string.sub(rawget(map, obj.y + 1), (obj.x + 1) * kl + 1, -1))
       end
+    elseif usertype(posarg) == "polist" then
+      for j = 1, #posarg do
+        map:extend(posarg[j])
+        rawset(map, posarg[j].y + 1,
+             string.sub(rawget(map, posarg[j].y + 1), 1, posarg[j].x * kl)
+          .. value
+          .. string.sub(rawget(map, posarg[j].y + 1), (posarg[j].x + 1) * kl + 1, -1))
+      end
     elseif type(posarg) == "table" then
       lib.map.set(map, po(posarg), value)
     end
@@ -350,6 +498,31 @@
   end
 end
 
+function lib.map.trim(map, trimkeyarg)
+  if (type(map) ~= "table") or (map.type ~= "map") then
+    error("lib.map.trim: Can only work on maps.", 2)
+  end
+  local border_n = map.height - 1
+  local border_s = 0
+  local border_w = map.width - 1
+  local border_e = 0
+  local trimkey = trimkeyarg or rawget(map, "__defaultkey")
+  for x = 0, map.width - 1 do
+    for y = 0, map.height - 1 do
+      if map[{x,y}] ~= trimkey then
+        border_n = math.min(border_n, y)
+        border_s = math.max(border_s, y)
+        border_w = math.min(border_w, x)
+        border_e = math.max(border_e, x)        
+      end
+    end
+  end
+  if (border_n >= border_s) or (border_w >= border_e) then
+    return wo:newMap(trimkey)
+  end
+  return map:sub(po(border_w, border_n), po(border_e, border_s))
+end  
+
 function lib.map.print(map, withXYCounts, left_separator, right_separator)
   if (type(map) ~= "table") or (map.type ~= "map") then
     error("lib.map.print: Can only print maps, sorry.", 2)
@@ -476,13 +649,17 @@
     newmap.__defaultkey = defaultKey
     newmap.__keylength = string.len(defaultKey)
     -- Set methods and finally metatable.
-    newmap.print = lib.map.print
     newmap.covers = lib.map.covers
-    newmap.set_default_key = lib.map.set_default_key
+    newmap.defuse = lib.map.defuse
     newmap.extend = lib.map.extend
-    newmap.sub = lib.map.sub
+    newmap.match = lib.map.match
     newmap.paste = lib.map.paste
+    newmap.print = lib.map.print
     newmap.replace = lib.map.replace
+    newmap.replace_outside = lib.map.replace_outside
+    newmap.set_default_key = lib.map.set_default_key
+    newmap.sub = lib.map.sub
+    newmap.trim = lib.map.trim
     setmetatable(newmap, lib.map.metatable)
     return newmap
   end

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-11 23:06:32 UTC (rev 1587)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-12 16:18:54 UTC (rev 1588)
@@ -13176,6 +13176,7 @@
 * liblua::       General methods for tables.
 * libmath::      Mathematical algorithms, like random permutations.
 * libmap::       Methods for API 2-maps.
+* libimport::    Methods for importing external level files.
 * libsoko::      A library to interpret Sokoban level files.
 @end menu
 
@@ -13964,6 +13965,45 @@
 Note that the reference to @samp{marble2} only works after the marble has been
 set.
 
+Requesting and changing map entries can be used with position lists, object and
+group references as well.
+
+You can replace any occurence of a tile key @samp{tile1} by @samp{tile2} simply
+by
+ at example
+mymap:replace(tile1, tile2)
+ at end example
+You can omit @samp{tile2}, then any occurence of @samp{tile1} will be replaced
+by the default key.
+
+You can also search for positions in a map which fulfill given conditions by
+using @samp{match}, the return value is a position list. The syntax is simple:
+ at example
+mymap:match()
+mymap:match(tilekey)
+mymap:match(@{pos1, key1a, key1b, ...@}, @{pos2, key2a, key2b, ...@}, ...)
+mymap:match(@{@{pos1, key1a, key1b, ...@}, @{pos2, key2a, key2b, ...@}, ...@})
+ at end example
+The first call will return all positions of the map. The second call will
+return all positions with the desired @code{tilekey}. The third and fourth call
+will return all positions @code{x} such that @code{x + pos1} is one of the keys
+ at code{key1a} or @code{key1b} or ..., and such that @code{x + pos2} is one of
+the keys @code{key2a}, @code{2b}, ..., and so on. A tile outside of the map is
+considered to be a default key.
+
+The resulting position list can then be used to replace the matching tile keys:
+ at example
+mymap[mymap:match(oldkey)] = newkey
+ at end example
+is equivalent to @samp{mymap:replace(oldkey, newkey)} (only slower), and
+ at example
+mymap[mymap:match({po(0,0), " "}, {NEIGHBORS_4, ".", ":"})] = "."
+ at end example
+will find all occurences of @samp{ }, which are completely surrounded by
+ at samp{.}, or @samp{:}, or mixtures of these, and replace them by @samp{.}. As
+all replacements are done after matching, and hence simultaneously, the newly
+introduced @samp{.} will not participate in the matching.
+
 @c ----------------- Connecting Two Maps --------------------
 
 @node Connecting Two Maps
@@ -14017,11 +14057,12 @@
 the default key of @samp{map2} will be ignored, i.e. not drawn onto
 @samp{map1}. You can change the default key with @samp{map2.defaultkey = ...}
 prior to the paste command to circumvent this, or use
- at samp{map2.replace(tile)} to replace more tile keys by the default key, such
-that they are not drawn as well. You can use an object group for @samp{pos}, in
-this case several copies of @samp{map2} will be pasted into @samp{map1}. There
-is no guarantee about the sequence in which the maps will be pasted into
- at samp{map1}.
+ at samp{map2:replace(tile)} to replace more tile keys by the default key, such
+that they are not drawn as well. You can use an object group or position list
+for @samp{pos}, in this case several copies of @samp{map2} will be pasted into
+ at samp{map1}. In the first case, there is no guarantee about the sequence in
+which the maps will be pasted into @samp{map1}. In the second case, a latter
+entry in the position list may overwrite the result of earlier entries.
 
 However, there's a fourth possibility: Two maps may represent two different
 parts of tile keys. Let's give an example to fuse two tile key layers:
@@ -14061,6 +14102,9 @@
 Fusing maps can be a mighty technique in combination with the
 @ref{res.composer}- and @ref{res.autotile}-resolvers.
 
+A map can also be defused: @samp{map:defuse()} will return a table of maps,
+where each map is of keylength one, holding the corresponding subkey character.
+
 @c ----------------- Other Map Tasks --------------------
 
 @node Other Map Tasks
@@ -14075,14 +14119,6 @@
 The new default key should have the same length as the old one. However, it is
 possible to choose a new key length as long as it fits to the map.
 
-You can replace any occurence of a tile key @samp{tile1} by @samp{tile2} simply
-by
- at example
-mymap:replace(tile1, tile2)
- at end example
-You can omit @samp{tile2}, then any occurence of @samp{tile1} will be replaced
-by the default key.
-
 Width and height of a map can be accessed via @samp{mymap.width} and
 @samp{mymap.height}. However, these values can be changed only through the
 following commands @samp{mymap:extend} and @samp{mymap:sub}.
@@ -14096,6 +14132,10 @@
 be filled with the default key. If the map already covers this position, no
 change will be done.
 
+If you want to check whether a position @samp{pos} lies inside a map, you can
+use @samp{mymap:covers(pos)}, which returns a boolean value. Note that a map
+always starts in @samp{@{0,0@}}.
+
 @samp{lib.map.sub} allows you to copy a rectangular area of a map and create a
 "submap" this way. @samp{lib.map.sub} uses the same syntax as
 @samp{wo:drawRect}, i.e. either
@@ -14114,10 +14154,56 @@
 Use @samp{submap:extend(width, height)} to ensure the full width and height.
 The default key of the submap of course is the default key of the original map.
 
-If you want to check whether a position @samp{pos} lies inside a map, you can
-use @samp{mymap:covers(pos)}, which returns a boolean value. Note that a map
-always starts in @samp{@{0,0@}}.
+ at samp{lib.map.trim} or @samp{mymap:trim(tilekey)} removes all lines and
+columns from the North, South, East and West that consist of @code{tilekey}
+only; it's like trimming a string from white spaces. You can omit
+ at samp{tilekey}, then the default key is used instead.
 
+ at samp{mymap:replace_outside(tile1, tile2)} is a kind of combination of
+ at samp{replace} and @samp{trim}: All occurrences of @code{tile1}, which are
+connected to the border by a path of @samp{tile1}, are replaced by
+ at code{tile2} (or default key). Example:
+ at example
+map1 = wo:newMap(" ", @{" ##########",
+                       "###      ##",
+                       "F# D ## # #",
+                       "#       # #",
+                       "########   "@})
+map2 = map1:replace_outside(" ", ".")
+map3 = map1:replace_outside(" ", "#")
+map3 = map3:replace_outside("#", ".")
+ at end example
+will yield:
+ at example
+map2 = @{".##########",
+        "###      ##",
+        "F# D ## #.#",
+        "#       #.#",
+        "########..."@})
+map3 = @{"...........",
+        "...      ..",
+        "F. D ## ...",
+        ".       ...",
+        "..........."@})
+ at end example
+You can combine @samp{replace_outside} with @samp{match} to remove irrelevant
+walls:
+ at example
+map1.defaultkey = "-"
+map1:replace_outside(" ")
+map1[map1:match({{po(0,0), "#"}, {NEIGHBORS_4, "-", "#", "F"}})] = "-"
+map1:trim()
+map1.defaultkey = " "
+ at end example
+will yield:
+ at example
+map1 = @{"---######-",
+         "--#      #",
+         "F# D ## #-",
+         "#       #-",
+         "-#######--"@})
+ at end example
+
 Finally, you can use @samp{mymap:print()} to print @samp{mymap} to standard
 output. Similar to @ref{lib.lua.print_table}, this is useful for debugging a
 level by taking a look at its maps, but should not appear in the final level.
@@ -14130,6 +14216,243 @@
 be strings to be put between the left coordinate axis and the map, and behind
 the map (to analyse space characters).
 
+ at node libimport
+ at section libimport
+
+libimport is dedicated to parse level files of other games or formats and
+typically returns @ref{libmap}-maps. In this context, the word "level" refers to
+a string, representing a level of the other game. A "monolevel" is a string
+which holds a single level, but also additional information, like titles or
+author names. A "multilevel" is a string composed of one or more monolevels.
+A "map" is a map in the libmap-sense, i.e. an Enigma level.
+
+Apart from the following functions, lib.import includes the minor routines
+ at samp{lib.import.string_replace}, which is a wrapper for @code{string.gsub},
+and @samp{lib.import.string_remove_multiples}, which removes multiple
+occurences of a string in another string.
+
+ at menu
+* lib.import.unpack_multilevel::        Extract a level from a multilevel.
+* lib.import.uncompress_rle::           Decode run-length encoding.
+* lib.import.level_to_map::             Converts a level into a map.
+* lib.import.map_sokoban::              Converts a Sokoban level into a map.
+* lib.import.map_wanderer::             Converts a Wanderer level into a map.
+ at end menu
+
+ at c ----------------- unpack_multilevel --------------------
+
+ at node lib.import.unpack_multilevel
+ at subsection lib.import.unpack_multilevel
+
+ at samp{unpack_multilevel} extracts a level from a multilevel string. For this,
+it needs a regexp describing a single level line.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.import.unpack_multilevel}(multilevel, sublevel_number, format)
+ at table @asis
+ at item @i{multilevel}
+A multilevel string.
+
+ at item @i{sublevel_number}
+The number of the level in @code{multilevel} to be extracted. First level is
+ at samp{1}. If @code{nil}, @samp{1} is taken as default.
+
+ at item @i{format}
+A string referencing an entry in @samp{lib.import.line_regexp}. Currently, only
+ at samp{sokoban} and @samp{wanderer} are supported. But you can add further
+entries to @samp{lib.import.line_regexp} if neccessary.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+level_four = lib.import.unpack_multilevel(large_string, 4, "sokoban")
+ at end example
+
+ at item @b{Details:}
+A level extracted with @code{unpack_multilevel} has still to be converted into
+a format Enigma understands. A level is a string, and lines of the level are to
+be determined by line endings, which can be quite different. In contrast to
+this, an Enigma map is a table of strings, with each line in a separate entry
+of the table. Hence, at least the line endings have to be dealt with.
+
+ at c ----------------- uncompress_rle --------------------
+
+ at node lib.import.uncompress_rle
+ at subsection lib.import.uncompress_rle
+
+ at samp{uncompress_rle} takes a string as argument and returns a decoded version
+without run-length encoding.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.import.uncompress_rle}(level, attribs)
+ at table @asis
+ at item @i{level}
+A level string.
+
+ at item @i{attribs}
+A table containing further parameters. Currently, the only supported parameter
+is @samp{error_on_multiple}.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+uncompressed = lib.import.uncompress_rle(compressed, @{error_on_multiple = "\n"@})
+ at end example
+
+ at item @b{Details:}
+Levels typically include long lines of repeating characters, like walls or
+spaces. To save space, these are sometimes counted and replaced by the total
+number and a single example of the character. This is called "run-length
+encoding", or RLE.
+ at example
+"############  A #####BB#" compresses to "12#2 A5#2B#"
+ at end example
+However, some characters don't make sense to be repeated, like line endings.
+To return an error when trying to repeat a line ending during decompression,
+you can hand a string to the attribute @samp{error_on_multiple}. Any character
+in this string is then forbidden to be repeated. Remember that the @samp{new
+line}-character is represented by @samp{\n} in Lua.
+
+ at c ----------------- level_to_map --------------------
+
+ at node lib.import.level_to_map
+ at subsection lib.import.level_to_map
+
+ at samp{level_to_map} breaks a level string down into a table of strings, which
+is then converted into a @ref{libmap}-map.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.import.level_to_map}(level, line_ending, default_key)
+ at table @asis
+ at item @i{level}
+A level string.
+
+ at item @i{line_ending}
+A string describing a single line ending. Default: @samp{\n}
+
+ at item @i{default_key}
+The default key of the returned map. Default: @samp{ }
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+mymap = lib.import.level_to_map(level, "|", " ")
+ at end example
+
+ at item @b{Details:}
+Multiple line endings are interpreted as multiple lines (of which the last
+lines are filled with the default key).
+
+Make sure that the last line of the level ends in a proper line ending, and only
+one line ending. Otherwise, the returned map will be too short or too long.
+
+ at c ----------------- map_sokoban --------------------
+
+ at node lib.import.map_sokoban
+ at subsection lib.import.map_sokoban
+
+ at samp{map_sokoban} takes a Sokoban multilevel as argument, and returns a
+beautified @ref{libmap}-map.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.import.map_sokoban}(multilevel, sublevel_number, keylength_one)
+ at table @asis
+ at item @i{multilevel}
+A multilevel string.
+
+ at item @i{sublevel_number}
+The number of the level to be extracted. First level is @samp{1}. Default:
+ at samp{1}
+
+ at item @i{keylength_one}
+A boolean value. If @code{false}, the returned map has keylength two. Otherwise,
+it has keylength one. Default: @samp{false}
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+map_four = lib.import.map_sokoban(multilevel, 4, true)
+ at end example
+
+ at item @b{Details:}
+Sokoban level files can be very different - they can use run-length encoding and
+multilevel files. Sometimes, @samp{|} is used as line ending instead of or even
+together with @samp{\n}. @samp{ }, @samp{_} and @samp{-} can all represent
+space. Sometimes, the outside is filled with @samp{ }, then again with @samp{#}.
+Finally, line width can vary. We use a slightly generalized version, to include
+chessoban levels. Allowed characters are:
+ at example
+   - _ space  space
+   #          wall
+   .          goal
+   $ *        box, box with goal
+   n N        st_chess, st_chess with goal
+   @@ +        player, player with goal
+ at end example
+The returned map will use @samp{ } for inside space, @samp{-} for
+outside space, default key is @samp{ }.
+
+If you chose @samp{keylength_one = true}, the returned map will use the
+characters as described above. Otherwise, the returned map will have keylength
+two, and the characters @samp{*}, @samp{N}, and @samp{+} are resolved into
+ at samp{$.}, @samp{n.}, and @samp{@@.} respectively, while the other keys become
+ at samp{  }, @samp{- }, @samp{# }, @samp{ .}, @samp{$ }, @samp{n }, and
+ at samp{@@ }. You can then use @ref{res.composer} to easily draw your map.
+
+Remember that the returned map uses the inner space @samp{ } or @samp{  } as
+default key. Hence, if you want to paste the map into another one
+(@ref{Connecting Two Maps}), you will have to switch the default key to
+ at samp{-} or @samp{- } in beforehand to yield a good result.
+
+ at c ----------------- map_wanderer --------------------
+
+ at node lib.import.map_wanderer
+ at subsection lib.import.map_wanderer
+
+ at samp{map_wanderer} takes a Wanderer monolevel as argument, and returns a
+ at ref{libmap}-map. Note that Enigma does not yet have the neccessary game objects
+to simulate Wanderer.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.import.map_wanderer}(monolevel)
+ at table @asis
+ at item @i{monolevel}
+A monolevel string.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+mymap = lib.import.map_wanderer(monolevel)
+ at end example
+
+ at item @b{Details:}
+Wanderer is a game originally created by Steven Shipway in 1988.
+Wanderer level files are uncompressed monolevels with fixed
+width. The level itself is followed by a short description
+(title/author/email) in a single line or a line of @samp{#}. Last
+line optionally is a number. A Wanderer level knows the
+following characters (taken from Wanderer's editor):
+ at example
+   : _ #      earth, rock, indestructible rock
+   * - space  treasure, alternative space, space
+   O < > ^    falling boulder, arrow from right, arrow from left, balloon
+   ! + B      landmine, cage, bomb
+   / \        deflectors
+   T A X @@    teleport, arrival, exit, start
+   M S C ~    big monster, baby monster, time capsule, thingy
+ at end example
+Due to its fixed width (40) and height (16), a Wanderer level is not always
+surrounded by walls; you might have to add them.
+
+Note that Enigma does not yet support the game elements of Wanderer, hence this
+function currently is only of use to developers.
+
+
 @node libsoko
 @section libsoko
 



From ral at mail.berlios.de  Sat Mar 14 02:08:14 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 14 Mar 2009 02:08:14 +0100
Subject: [Enigma-game-svn] r1589 - in trunk: data/schemas src
Message-ID: <200903140108.n2E18Eq2023317@sheep.berlios.de>

Author: ral
Date: 2009-03-14 02:08:12 +0100 (Sat, 14 Mar 2009)
New Revision: 1589

Modified:
   trunk/data/schemas/objects.xml
   trunk/src/Object.cc
   trunk/src/lua.cc
Log:
Trunk 1.1: new API reengineering
- fix naming of objects via direct attribute set obj["name"]
- fix bad error messages on attribute set on not exisiting objects
- disallow kill of items in bags or inventory
- add attribute "basename" for all objects: read only, name without autonaming
    or autotiling suffix
- polist add negativ indices: pol[-1] = pol[#pol], ... pol[-#pol] = pol[1]

Modified: trunk/data/schemas/objects.xml
===================================================================
--- trunk/data/schemas/objects.xml	2009-03-12 16:18:54 UTC (rev 1588)
+++ trunk/data/schemas/objects.xml	2009-03-14 01:08:12 UTC (rev 1589)
@@ -8,6 +8,7 @@
     <attr name="anchor2" type="tokens" default="nil" rw="rw"/>
     <attr name="attacknearest" type="bool" default="false" rw="rw"/>
     <attr name="autoclose" type="bool" default="false" rw="rw"/>
+    <attr name="basename" type="string" default="nil" rw="r"/>
     <attr name="breakable" type="bool" default="false" rw="rw"/>
     <attr name="burnable" type="bool" default="nil" rw="rw"/>
     <attr name="charge" type="double" default="0" rw="rw"/>
@@ -172,6 +173,7 @@
   <zoo>
     <object name="" abstract="true" states="2">
       <attr name="action"/>
+      <attr name="basename"/>
       <attr name="checkerboard"/>
       <attr name="inverse"/>
       <attr name="name"/>

Modified: trunk/src/Object.cc
===================================================================
--- trunk/src/Object.cc	2009-03-12 16:18:54 UTC (rev 1588)
+++ trunk/src/Object.cc	2009-03-14 01:08:12 UTC (rev 1589)
@@ -209,7 +209,9 @@
     
     void Object::setAttrChecked(const std::string& key, const Value &val) {
         // allow all user attributes and those system attributes with write allowance
-        if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeWrite(this, key, val))
+        if (key == "name")
+            NameObject(this, val.to_string());
+        else if (key.find('_') == 0 || ObjectValidator::instance()->validateAttributeWrite(this, key, val))
             setAttr(key, val);
         else
             ASSERT(false, XLevelRuntime, ecl::strf("Object: attribute '%s' write not allowed for kind '%s'",
@@ -231,6 +233,15 @@
             return (objFlags & OBJBIT_INVERSE) != 0;            
         } else if (key == "nopaction") {
             return (objFlags & OBJBIT_NOP) != 0;
+        } else if (key == "basename") {
+            std::string name = getAttr("name").to_string();
+            std::string::size_type p = name.rfind('%');
+            if (p != std::string::npos)
+                return name.substr(0, p);
+            p = name.rfind('#');
+            if (p != std::string::npos)
+                return name.substr(0, p);
+            return name;
         } else {
             AttribMap::const_iterator i = attribs.find(key);
             if (i == attribs.end()) 

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2009-03-12 16:18:54 UTC (rev 1588)
+++ trunk/src/lua.cc	2009-03-14 01:08:12 UTC (rev 1589)
@@ -1281,12 +1281,7 @@
          lua_pushvalue(L, -2); // a copy of key for work
          if (!lua_isnumber(L, -1) && lua_isstring(L, -1)) {
             std::string key = lua_tostring(L, -1);
-            if (key == "name") {
-                if (lua_isstring(L, -2))
-                    NameObject(obj, lua_tostring(L, -2));
-            } else {
-                obj->setAttrChecked(key, to_value(L, -2));
-            }
+            obj->setAttrChecked(key, to_value(L, -2));  // name set gets handeled by Object
          } else if (lua_tointeger(L, -1) == 2) {  // second entry without a string key is taken as name
              if (!lua_isnumber(L, -2) && lua_isstring(L, -2))
                  NameObject(obj, lua_tostring(L, -2));
@@ -1394,7 +1389,7 @@
     return getStoneItemFloor(L, Object::STONE);
 }
 
-static int killObjectBase(lua_State *L) {  // TODO Itemholder owner objects
+static int killObjectBase(lua_State *L) {
     Object *obj = to_object(L, -1);
     if (obj) {   // ignore not existing object
         GridObject *gobj;
@@ -1412,7 +1407,8 @@
                 break;
             case Object::ITEM  :
                 gobj = dynamic_cast<GridObject*>(obj);
-                KillItem(gobj->get_pos());
+                if (gobj->isDisplayable())
+                    KillItem(gobj->get_pos());
                 break;
             case Object::ACTOR :
             default :
@@ -1795,7 +1791,8 @@
     } else {
         // attribute
         Value val;  // nil
-        if ((keyStr.find('_') != 0) && (obj == NULL || obj->validateMessage(keyStr, Value(Value::DEFAULT)))) {
+        if ((keyStr.find('_') != 0) && ((obj != NULL && obj->validateMessage(keyStr, Value(Value::DEFAULT))) 
+                || (obj == NULL && (keyStr == "exists" || keyStr == "kill")))) {
             // it is a valid public message - try to send it
             messageLIFO.push_back(keyStr);
             lua_pushcfunction(L, objectDirectMessage);
@@ -3237,6 +3234,8 @@
         int i = lua_tointeger(L, 2);
         lua_getmetatable(L, 1);
         int size = lua_objlen(L, -1)  / 2;
+        if (i < 0)  // backward indices
+            i = size + 1 + i;
         if (i >= 1 && i <= size) {
             lua_rawgeti(L, -1, 2*i - 1);
             lua_rawgeti(L, -2, 2*i);



From ral at mail.berlios.de  Sun Mar 15 00:58:59 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 15 Mar 2009 00:58:59 +0100
Subject: [Enigma-game-svn] r1590 - trunk/doc/reference
Message-ID: <200903142358.n2ENwx5e016666@sheep.berlios.de>

Author: ral
Date: 2009-03-15 00:58:47 +0100 (Sun, 15 Mar 2009)
New Revision: 1590

Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API reengineering
- refman: further updates and fixes


Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-14 01:08:12 UTC (rev 1589)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-14 23:58:47 UTC (rev 1590)
@@ -5908,11 +5908,12 @@
 @node ElectricStrength
 @subsection ElectricStrength
 
-A global scalar default factor for electrical forces. Positive numbers are
-attracting forces for opposite charges where as negative numbers are repelling
-forces for opposite charges. This global value is always multiplied by the
-charge load of the affected actors. The actors charge load usually results
-from hits of @ref{st_charge}.
+A global scalar default factor for electrical forces. Positive numbers result in
+attracting forces for opposite charges and repelling forces for equal signed
+charges. Where as negative numbers result in repelling forces for opposite 
+charges and attracting forces for equal signed charges. This global value is
+always multiplied by the charge load of the affected actors. The actor's charge
+load usually results from hits of @ref{st_charge}.
 
 @table @asis
 @item @b{Type:} @ @ number
@@ -6015,7 +6016,7 @@
 
 A global scalar default factor for floor friction values. This global value is
 always multiplied by the floor specific friction on calculation of the friction
-forced applied to actors.
+force applied to actors.
 
 @table @asis
 @item @b{Type:} @ @ number
@@ -6146,7 +6147,7 @@
 @item @b{Values:} @ @ positive float number
 @item @b{Default:} @ @ @code{50.0}
 @item @b{Access:} @ @ read/write
- at item @b{Support:} @ @ @ref{it_magnet}
+ at item @b{Support:} @ @ @ref{ot_rubberband}
 @end table
 
 @node ShowMoves
@@ -6197,7 +6198,7 @@
 @subsection SwampSinkTime
 
 A global default for the time it takes a static actor to sink in @ref{fl_swamp}.
-Fast moving actors will needs slightly more time than static actors.
+Fast moving actors will need slightly more time than static actors.
 
 @table @asis
 @item @b{Type:} @ @ number or @code{nil}
@@ -6285,20 +6286,57 @@
 @section Standard Floors
 
 @menu
+* fl_adhesionless::   Floor without adhesion but friction
 * fl_aquamarine::     Aquamarine floor with low friction
 * fl_bast::           Brown woven bast with black background
 * fl_bluegray::       Light blue gray floor
 * fl_bluegreen::      Dark blue green floor
+* fl_blueslab::       Dark blue marbled slab
 * fl_brick::          Floor composed of small red bricks
+* fl_bright::         Nearly white floor
 * fl_concrete::       Granular gray concrete
+* fl_dark::           Nearly black floor
+* fl_darkgray::       Cold gray floor
 * fl_dunes::          Brown granular dunes
 * fl_gravel::         Dark gray, granular floor
 * fl_gray::           Gray with some brown spots
 * fl_himalaya::       Blue purple marbled floor
+* fl_ivory::          Warm pearl white floor
+* fl_marble::         Light red brown marbled floor
+* fl_mortar::         Rough white floor with gray wrinkles
 * fl_pinkbumps::      Pink floor with white bumps
+* fl_plank::          Small diagonal planks
+* fl_platinum::       Warm light gray floor
+* fl_red::            Warm red floor with low friction
+* fl_redslab::        Dark red marbled slab
+* fl_rough::          Rough warm white floor
 * fl_sahara::         Bright yellow sandstone floor
 * fl_sand::           Granular orange gray sand floor
+* fl_stone::          Granular brown gray floor
+* fl_tigris::         Red sandstone floor
+* fl_white::          Pure white floor
+* fl_woven::          White black woven floor
 @end menu
+ at c ----------------- Adhesionless Floor --------------------
+ at node fl_adhesionless
+ at subsection fl_adhesionless
+ at obindex fl_adhesionless
+
+Orange velvet that offers no adhesion but causes friction.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 0.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 2.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_adhesionless}
+ at end table
+ at end table
+
 @c ----------------- Aquamarine Floor --------------------
 @node fl_aquamarine
 @subsection fl_aquamarine
@@ -6346,7 +6384,7 @@
 @subsection fl_bluegray
 @obindex fl_bluegray
 
-Light blue gray floor, visually indistinguishable form @ref{fl_thief}.
+Light blue gray floor, visually indistinguishable from @ref{fl_thief}.
 
 @table @asis
 @item @b{Attributes:}
@@ -6367,7 +6405,7 @@
 @subsection fl_bluegreen
 @obindex fl_bluegreen
 
-Dark blue green floor
+Dark blue green floor.
 
 @table @asis
 @item @b{Attributes:}
@@ -6383,6 +6421,28 @@
 @end table
 @end table
 
+ at c ----------------- Blueslab Floor --------------------
+ at node fl_blueslab
+ at subsection fl_blueslab
+ at obindex fl_blueslab
+
+Dark blue slab like floor, that is marbled with black. A matching floor is
+ at ref{fl_redslab}.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 7.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_blueslab}
+ at item @b{fl_blueslab_framed}
+ at end table
+ at end table
+
 @c ----------------- Brick Floor --------------------
 @node fl_brick
 @subsection fl_brick
@@ -6404,6 +6464,28 @@
 @end table
 @end table
 
+ at c ----------------- Bright Floor --------------------
+ at node fl_bright
+ at subsection fl_bright
+ at obindex fl_bright
+
+Nearly white floor without any yinyang related features. A matching floor is
+ at ref{fl_dark}.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.5 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_bright}
+ at item @b{fl_bright_framed}
+ at end table
+ at end table
+
 @c ----------------- Concrete Floor --------------------
 @node fl_concrete
 @subsection fl_concrete
@@ -6425,6 +6507,49 @@
 @end table
 @end table
 
+ at c ----------------- Dark Floor --------------------
+ at node fl_dark
+ at subsection fl_dark
+ at obindex fl_dark
+
+Nearly black floor without any yinyang related features. A matching floor is
+ at ref{fl_bright}.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.5 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_dark}
+ at item @b{fl_dark_framed}
+ at end table
+ at end table
+
+ at c ----------------- Darkgray Floor --------------------
+ at node fl_darkgray
+ at subsection fl_darkgray
+ at obindex fl_darkgray
+
+A medium to drak gray floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.6 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_darkgray}
+ at item @b{fl_darkgray_framed}
+ at end table
+ at end table
+
 @c ----------------- Dunes Floor --------------------
 @node fl_dunes
 @subsection fl_dunes
@@ -6509,6 +6634,69 @@
 @end table
 @end table
 
+ at c ----------------- Ivory Floor --------------------
+ at node fl_ivory
+ at subsection fl_ivory
+ at obindex fl_ivory
+
+Warm ivory or pearl white floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.6 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 2.2 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_ivory}
+ at item @b{fl_ivory_framed}
+ at end table
+ at end table
+
+ at c ----------------- Marble Floor --------------------
+ at node fl_marble
+ at subsection fl_marble
+ at obindex fl_marble
+
+Light red brown marbled floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.4 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_marble}
+ at item @b{fl_marble_framed}
+ at end table
+ at end table
+
+ at c ----------------- Mortar Floor --------------------
+ at node fl_mortar
+ at subsection fl_mortar
+ at obindex fl_mortar
+
+Very rough brilliant white floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.8 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 7.2 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_mortar}
+ at item @b{fl_mortar_framed}
+ at end table
+ at end table
+
 @c ----------------- Pinkbumps Floor --------------------
 @node fl_pinkbumps
 @subsection fl_pinkbumps
@@ -6530,12 +6718,118 @@
 @end table
 @end table
 
+ at c ----------------- Plank Floor --------------------
+ at node fl_plank
+ at subsection fl_plank
+ at obindex fl_plank
+
+Floor build up by small diagonal orange brown planks.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 5.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_plank}
+ at item @b{fl_plank_framed}
+ at end table
+ at end table
+
+ at c ----------------- Platinum Floor --------------------
+ at node fl_platinum
+ at subsection fl_platinum
+ at obindex fl_platinum
+
+Warm light gray floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.6 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_platinum}
+ at item @b{fl_platinum_framed}
+ at end table
+ at end table
+
+ at c ----------------- Red Floor --------------------
+ at node fl_red
+ at subsection fl_red
+ at obindex fl_red
+
+Warm red, very slippy floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 0.9 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_red}
+ at item @b{fl_red_framed}
+ at end table
+ at end table
+
+ at c ----------------- Redslab Floor --------------------
+ at node fl_redslab
+ at subsection fl_redslab
+ at obindex fl_redslab
+
+Dark red slab floor, that is marbled with black. A matching floor is 
+ at ref{fl_blueslab}.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 7.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_redslab}
+ at item @b{fl_redslab_framed}
+ at end table
+ at end table
+
+ at c ----------------- Rough Floor --------------------
+ at node fl_rough
+ at subsection fl_rough
+ at obindex fl_rough
+
+Rough warm white floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 7.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_rough}
+ at item @b{fl_rough_framed}
+ at end table
+ at end table
+
 @c ----------------- Sahara Floor --------------------
 @node fl_sahara
 @subsection fl_sahara
 @obindex fl_sahara
 
-Bright yellow sandstone floor
+Bright yellow sandstone floor.
 
 @table @asis
 @item @b{Attributes:}
@@ -6556,7 +6850,7 @@
 @subsection fl_sand
 @obindex fl_sand
 
-Granular orange gray sand floor
+Granular orange gray sand floor.
 
 @table @asis
 @item @b{Attributes:}
@@ -6572,6 +6866,90 @@
 @end table
 @end table
 
+ at c ----------------- Stone Floor --------------------
+ at node fl_stone
+ at subsection fl_stone
+ at obindex fl_stone
+
+Granular brown gray floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 1.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 1.4 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_stone}
+ at item @b{fl_stone_framed}
+ at end table
+ at end table
+
+ at c ----------------- Tigris Floor --------------------
+ at node fl_tigris
+ at subsection fl_tigris
+ at obindex fl_tigris
+
+Red sandstone floor.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_tigris}
+ at item @b{fl_tigris_framed}
+ at end table
+ at end table
+
+ at c ----------------- White Floor --------------------
+ at node fl_white
+ at subsection fl_white
+ at obindex fl_white
+
+Pure white floor without any yinyang related features.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 2.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 4.0 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_white}
+ at item @b{fl_white_framed}
+ at end table
+ at end table
+
+ at c ----------------- Woven Floor --------------------
+ at node fl_woven
+ at subsection fl_woven
+ at obindex fl_woven
+
+Diagonal woven white floor with black shadows.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at item @b{adhesion}, @ @ @i{values}: number; @ @ @i{default}: 3.0 @ @ @xref{adhesion}
+ at item @b{friction}, @ @ @i{values}: number; @ @ @i{default}: 6.5 @ @ @xref{friction}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{fl_woven}
+ at item @b{fl_woven_framed}
+ at end table
+ at end table
+
 @c ----------------- Special Floor --------------------
 @node Special Floors
 @section Special Floors
@@ -6747,11 +7125,11 @@
 @obindex fl_thief
 
 A thief steals the item on its position plus an item from the player's inventory
-when it is entered by an owned actor. Unfortunatly the thief floor is visually
+when it is entered by an owned actor. Unfortunately the thief floor is visually
 indistinguishable from an @ref{fl_bluegray} and has even the same
 @samp{friction} and @samp{adhesion} values.
 
-The item is not directly stolen at the moment of entering the grid. The enterin
+The item is not directly stolen at the moment of entering the grid. The entering
 itself just causes the thief to emerge from his hiding-place. The thief steals 
 from the actor that did conjur him at the moment of maximum visibility. He takes
 a random item from the owner's inventory. But he just will steal an item if
@@ -6791,31 +7169,34 @@
 * it_banana::          Transformable Banana
 * it_blocker::         Shrinked Blocker Stone
 * it_brake::           Movable Stone Brake
-* it_brush::
+* it_brush::           Brush for Painting and Sweeping
 * it_cherry::          Source of Invisibility
 * it_coin::            Enigma's currency
 * it_cross::           Floor switch for patient Actors
 * it_death::           Unpassable grid blocker
-* it_extralife::
-* it_floppy::
+* it_extralife::       
+* it_floppy::          Lock opening uncoded Floppy
 * it_glasses::         Glasses to spot certain objects
-* it_hammer::
-* it_key::
-* it_landmine::
+* it_hammer::          Stone breaking Hammer
+* it_key::             Lock opening coded Key
+* it_landmine::        
 * it_magicwand::       Wizards Tools
-* it_magnet::
-* it_meditation::
+* it_magnet::          Actor attracting Magnet
+* it_meditation::      
 * it_pin::             Friction increasing crampon
-* it_pipe::
-* it_rubberband::
+* it_pipe::            
+* it_puller::          Stone pulling item
+* it_rubberband::      Unconnected Rubberband
 * it_seed::            Seeds for Wood, Volcano Stones
 * it_sensor::          Floor Switch for passing Actors
 * it_shogun::          Dot for Shogun Stones
+* it_spring::          Portable Spring
+* it_springboard::     Static Spring
 * it_squashed::        Remnant of squashed Fruits
 * it_strip::           Narrow Bridge
 * it_surprise::        Random Transforming item
-* it_sword::
-* it_trap::
+* it_sword::           Knight defeating Sword
+* it_trap::            
 * it_trigger::         Floor Switch for Actors and Stones
 * it_umbrella::        Death Protection Item
 * it_vortex::          Teleport of Marbels
@@ -7032,10 +7413,28 @@
 @subsection it_brush
 @obindex it_brush
 
-TBD
+A brush that is useful to paint some stones and sweep away some otherwise
+static items.
 
- at ref{it_squashed}
+Stones must be hit with the brush revealed as the first item in the inventory.
+To sweep away nasty items the actor must activate the brush while being on the
+grid, or while jumping or flying over it:
 
+ at itemize @bullet
+ at item @ref{st_actorimpulse}, invisible - makes invisible variant visible
+ at item @ref{st_blur}, magic -  transforms to @ref{st_passage}
+ at item @ref{st_flat}, burnable - transforms to @ref{st_flat}
+ at item @ref{st_flat}, moveburnable - transforms to @ref{st_flat}_movable
+ at item @ref{st_ghost}, purplemarble - transforms to @ref{st_purplemarble}
+ at item @ref{st_ghost}, break - transforms to @ref{st_break}_oxydc
+ at item @ref{st_lightpassenger}, off - reactivates to state @samp{ON}
+ at item @ref{it_bottle}, broken - remove from floor
+ at item @ref{it_burnable}, ash - remove from floor
+ at item @ref{it_burnable}, fireproof - remove from floor
+ at item @ref{it_cross} - remove from floor
+ at item @ref{it_squashed} - remove from floor
+ at end itemize
+
 @table @asis
 
 @item @b{Attributes:} none
@@ -7360,18 +7759,16 @@
 wielded item in the player's inventory:
 
 @itemize @bullet
- at item Changes direction of a oneway stone (@ref{st_oneway}).
- at item Changes direction of a boulder stone (@ref{st_boulder}).
- at item Scrambles blue puzzle stones instead of pushing, causes complete
-clusters to explode (@ref{st_puzzle}).
- at item Lets a @samp{st_stoneimpulse_movable} not pulse on pushed
-(@ref{st_stoneimpulse})
- at item Makes @code{st_magic_brick} transparent (@ref{st_magic}).
- at item Makes @code{st_ghost_greenbrown} visible and non-transparent
-(@ref{st_ghost}).
- at item Makes rubberband stones movable (@ref{st_rubberband}).
- at item Changes the color of a chess stone (@ref{st_chess}).
- at item Activates @code{st_blur_magic} (@ref{st_blur}).
+ at item @ref{st_blur}, magic - transforms to @ref{st_passage},
+ at item @ref{st_boulder} - changes direction of a boulder,
+ at item @ref{st_chess} - changes the color of a chess stone,
+ at item @ref{st_ghost}, greenbrown - transforms to @ref{st_greenbrown},
+ at item @ref{st_magic}, brick - transforms to a @ref{st_rawglass},
+ at item @ref{st_oneway} - changes direction of a oneway,
+ at item @ref{st_puzzle} - scrambles blue puzzle stones instead of pushing, causes complete
+clusters to explode,
+ at item @ref{st_rubberband} - makes rubberband stones movable,
+ at item @ref{st_stoneimpulse}, movable - avoid pulsing on pushes.
 @end itemize
 
 @table @asis
@@ -7528,6 +7925,33 @@
 
 @end table
 
+ at c ----------------- Pencil Item --------------------
+ at node it_pencil
+ at subsection it_pencil
+ at obindex it_pencil
+
+An item to mark floors and stones. 
+
+An activated pencil scratches an @ref{it_cross} on most floors. As the pencil
+gets consumed by this operation the cross takes the pencils identity on
+this @ref{Object Transformation}. But on @ref{fl_ice} the pencil makes a small
+ at ref{it_crack} as it is so sharp. On indestructible floors like @ref{fl_abyss},
+ at ref{fl_water} and @ref{fl_swamp} and on @ref{fl_bridge} the pencil can not
+be activated at all. Any existing item on the floor does prevent a pencil
+application, too. The actor can only mark a floor if it is on the floor and not
+flying. During a jump an actor will just drop the pencil as an item.
+
+On actor hits with a revealed pencil on a @ref{flat} the stones gets marked
+burnable. Again the pencil is consumed on this operation. Both the plain and
+the movable variants can be marked.
+
+ at table @asis
+
+ at item @b{Attributes:} none
+ at item @b{Messages:} none
+
+ at end table
+
 @c ----------------- Pin Item --------------------
 @node it_pin
 @subsection it_pin
@@ -7549,6 +7973,7 @@
 @item @b{Messages:} none
 
 @end table
+
 @c ----------------- Pipe Item --------------------
 @node it_pipe
 @subsection it_pipe
@@ -7595,6 +8020,43 @@
 @end table
 @end table
 
+ at c ----------------- Puller Item --------------------
+ at node it_puller
+ at subsection it_puller
+ at obindex it_puller
+
+A puller item looks like a white arrow. It can be picked up. But when being
+dropped it gets activated and whirls around. The actor should leave the grid
+immediately as the puller will finaly dissolve in a leathal explosion.
+
+But the main purpose of the puller is its ability to pull stones. The arrow
+ at samp{orientation} indicates the direction into which a stone will be pulled
+when the item is dropped in front. The pull takes place immediatly at the end
+of the short explosion. It is a full blown stone pull, that will pull others
+stones connected to the directly affected stone via @ref{ot_wire}, too. With
+the explosion the puller item ceases to exist.
+
+ at table @asis
+ at item @b{Attributes:}
+ at table @asis
+ at atindex orientation
+ at item @b{orientation}, @ @ @i{values}: @code{NORTH}, @code{EAST}, @code{SOUTH}, @code{WEST}; @ @ @i{default}: @code{WEST}
+
+ at end table
+
+ at item @b{Messages:} none
+ at item @b{Action:} none
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{it_puller} orientation = @code{WEST}
+ at item @b{it_puller_w} orientation = @code{WEST}
+ at item @b{it_puller_s} orientation = @code{SOUTH}
+ at item @b{it_puller_e} orientation = @code{EAST}
+ at item @b{it_puller_n} orientation = @code{NORTH}
+ at end table
+ at end table
+
 @c ----------------- Rubberband Item --------------------
 @node it_rubberband
 @subsection it_rubberband
@@ -7799,6 +8261,48 @@
 
 @end table
 
+ at c ----------------- Spring Item --------------------
+ at node it_spring
+ at subsection it_spring
+ at obindex it_spring
+
+Springs let @ref{Flying Actors} jump on activation.
+
+There are two types of portable springs. A thin one that is kept in the 
+inventory on activation and can thus be used multiple times in sequence. And
+a thick, condensed one that gets dropped on activation. A static jump
+facility that can not be picked up by an actor is the @ref{it_springboard}.
+
+ at table @asis
+ at item @b{Attributes:} none
+ at item @b{Messages:} none
+ at item @b{Variants:}
+ at table @asis
+ at item @b{it_spring}
+ at item @b{it_spring_keep}
+ at item @b{it_spring_drop}
+ at end table
+
+ at end table
+
+ at c ----------------- Springboard Item --------------------
+ at node it_springboard
+ at subsection it_springboard
+ at obindex it_springboard
+
+A static jump facitlity that lets @ref{Flying Actors} jump on passing its center
+square. A springboard can catapult any number of actors anytime with an idle
+reloading time after an activation.
+
+Another catapulting, but portal item is @ref{it_spring}. 
+
+ at table @asis
+
+ at item @b{Attributes:} none
+ at item @b{Messages:} none
+
+ at end table
+
 @c ----------------- Squashed Item --------------------
 @node it_squashed
 @subsection it_squashed
@@ -8312,7 +8816,7 @@
 * Standard Stones::
 * Cluster Stones::
 * Special Stones::
-* Feature Summaries::     Tables of transparent, breakable, ... stones
+* Stone Feature Summaries::     Tables of transparent, breakable, ... stones
 @end menu
 
 
@@ -9086,9 +9590,9 @@
 
 @table @asis
 @item @b{st_blur}: flavor = @code{"straight"}
- at item @b{st_blur_cross}: flavor = @code{"straight"}
+ at item @b{st_blur_straight}: flavor = @code{"straight"}
 @item @b{st_blur_cross}: flavor = @code{"cross"}
- at item @b{st_blur_cross}: flavor = @code{"magic"}
+ at item @b{st_blur_magic}: flavor = @code{"magic"}
 @end table
 
 @end table
@@ -9429,7 +9933,7 @@
 When there is a chess stone of opposite color or an @ref{st_thief} at the target
 position of a knight move, this stone is captured and destroyed.
 
-When hit with a revealed @ref{it_wand}, a chess stone changes color.
+When hit with a revealed @ref{it_magicwand}, a chess stone changes color.
 
 Chess stones fall into @ref{fl_abyss} and sink in @ref{fl_swamp}, but cross
 @ref{fl_water} undamaged.
@@ -11053,7 +11557,7 @@
 laser light, neighboring ignitions like those caused by an exploding 
 @ref{it_dynamite} on a direct neighboring position or an exploding black
 @ref{it_bomb} on a diagonal neighboring position. It breaks on actor hits with
-a revealed @ref{it_magicwand}, too. But unlike @ref{st_break} it offers a
+a revealed @ref{it_hammer}, too. But unlike @ref{st_break} it offers a
 variant that is breakable and movable at the same time. Of course a possible
 break superceeds a possible push condition.
 
@@ -12447,9 +12951,9 @@
 @end table
 
 
- at c ----------------- Feature Summaries --------------------
- at node Feature Summaries
- at section Feature Summaries
+ at c ----------------- Stone Feature Summaries --------------------
+ at node Stone Feature Summaries
+ at section Stone Feature Summaries
 
 @menu
 * Transparent Stones::
@@ -12509,6 +13013,7 @@
 @menu
 * Actor Attributes::    Common attributes
 * Actors::              All actors
+* Actor Features::      Common noteworthy features
 @end menu
 
 
@@ -13003,6 +13508,36 @@
 
 @end table
 
+ at c ----------------- Actor Features --------------------
+ at node Actor Features
+ at section Actor Features
+
+ at menu
+* Flying Actors::        Flying Actors
+ at end menu
+
+ at c ----------------- Flying Actors --------------------
+ at node Flying Actors
+ at subsection Flying Actors
+
+Ball like actors, namely @ref{ac_marble} and @ref{ac_pearl} are able to fly for
+short period of time if they get catapulted by some item.
+
+Currently there are portable @ref{it_spring} that let actors jump on activation,
+static @ref{it_springboard} that catapult crossing actors and @ref{it_vortex}
+that catapult warping actors.
+
+A flying actor can pass leathal grids with @ref{fl_water}, @ref{fl_abyss}, 
+ at ref{it_trap} and even laser beams. But most stones will block flying actors, 
+even some hollow ones like @ref{st_grate} or @ref{st_oneway}. But some others as 
+ at ref{st_door} or hollow @ref{Standard Stones} let flying actos pass.
+
+While flying an actor can not pick any items. But the actor can still drop
+items. Activation of a spring while sinking in @ref{fl_water} or @ref{fl_swamp}
+lets the actor jump immediatly out of them and starts the sinking process from
+scratch anew when landing on such a floor.
+
+
 @c ===================  Other Objects  =======================
 
 @node Other Objects
@@ -13172,6 +13707,17 @@
 @node Libraries
 @chapter Libraries
 
+Libraries do contain extensions that are not necessary for every level. By
+outsourcing them into separate files they do not get loaded if not used. This
+improves the level load time and runtime resource consumption. But as a level
+author you have to declare the usage of a library by an XML metadata 
+ at samp{dependency} element within the @ref{<compatibility>} element. The
+necessary line of code is listed within every library description.
+
+Some libraries contain collections of useful functions and methods. They are
+described in this chapter. Other libraries do contain @ref{Resolvers} and are
+described just there.
+
 @menu
 * liblua::       General methods for tables.
 * libmath::      Mathematical algorithms, like random permutations.
@@ -13183,6 +13729,16 @@
 @node liblua
 @section liblua
 
+This library of basic extensions to the Lua language is described as of release
+1. 
+
+You can load it by adding an @samp{dependency} element to the 
+ at ref{<compatibility>} XML Metadata element as follows:
+
+ at example
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/liblua}" @i{el}:@b{id}="@var{lib/liblua}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
+ at end example
+
 @menu
 * lib.lua.combine_tables::  Collect entries of anonymous Lua-tables into a common table.
 * lib.lua.cond::            A wrapper for if.
@@ -13466,10 +14022,21 @@
 @end example
 @end table
 
-
+ at c ----------------- libmath --------------------
 @node libmath
 @section libmath
 
+This library of basic mathematical extensions is described as of release 1. 
+
+You can load it by adding an @samp{dependency} element to the 
+ at ref{<compatibility>} XML Metadata element as follows:
+
+ at example
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libmath}" @i{el}:@b{id}="@var{lib/libmath}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
+ at end example
+
+It preloads automatically the library @ref{liblua}.
+
 @menu
 * lib.math.combinations::       Calculates all possible combinations of a set.
 * lib.math.cubic_polynomial::   Calculates the result of a cubic polynomial.
@@ -13820,11 +14387,22 @@
 @node libmap
 @section libmap
 
- at samp{libmap} gives the author more possibilities to work with API 2-maps. Up
-to now, a map just is a table of strings, as described in @ref{World Creation
+The @samp{libmap} gives the author more possibilities to work with API 2-maps. 
+Up to now, a map just is a table of strings, as described in @ref{World Creation
 and Resolver Chaining}. With @samp{libmap}, you can utilize maps in a more
 advanced way.
 
+This library is described as of release 1. 
+
+You can load it by adding an @samp{dependency} element to the 
+ at ref{<compatibility>} XML Metadata element as follows:
+
+ at example
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libmap}" @i{el}:@b{id}="@var{lib/libmap}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
+ at end example
+
+It preloads automatically the library @ref{liblua}.
+
 @menu
 * Creating Maps::
 * Drawing Maps::
@@ -14216,6 +14794,7 @@
 be strings to be put between the left coordinate axis and the map, and behind
 the map (to analyse space characters).
 
+ at c ----------------- libimport --------------------
 @node libimport
 @section libimport
 
@@ -14231,6 +14810,18 @@
 and @samp{lib.import.string_remove_multiples}, which removes multiple
 occurences of a string in another string.
 
+This library is described as of release 1. 
+
+You can load it by adding an @samp{dependency} element to the 
+ at ref{<compatibility>} XML Metadata element as follows:
+
+ at example
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libimport}" @i{el}:@b{id}="@var{lib/libimport}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
+ at end example
+
+It preloads automatically the libraries @ref{libmap} and @ref{liblua}.
+
+
 @menu
 * lib.import.unpack_multilevel::        Extract a level from a multilevel.
 * lib.import.uncompress_rle::           Decode run-length encoding.
@@ -14409,7 +15000,6 @@
 @samp{-} or @samp{- } in beforehand to yield a good result.
 
 @c ----------------- map_wanderer --------------------
-
 @node lib.import.map_wanderer
 @subsection lib.import.map_wanderer
 
@@ -14452,10 +15042,23 @@
 Note that Enigma does not yet support the game elements of Wanderer, hence this
 function currently is only of use to developers.
 
-
+ at c ----------------- libsoko --------------------
 @node libsoko
 @section libsoko
 
+This library is described as of release 1. 
+
+You can load it by adding an @samp{dependency} element to the 
+ at ref{<compatibility>} XML Metadata element as follows:
+
+ at example
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libsoko}" @i{el}:@b{id}="@var{lib/libsoko}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
+ at end example
+
+It preloads automatically the libraries @ref{libimport}, @ref{libmap} and
+ at ref{liblua}.
+
+
 @menu
 * lib.soko.create::
 * lib.soko.recreate::
@@ -15204,7 +15807,7 @@
 use it by adding the following dependency to your level @ref{<compatibility>}
 declaration:
 @example
-<el:dependency el:path="lib/libpuzzle" el:id="lib/libpuzzle" el:release="3" el:preload="true"/>
+  <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libpuzzle}" @i{el}:@b{id}="@var{lib/libpuzzle}" @i{el}:@b{release}="@var{3}" @i{el}:@b{preload}="@var{true}"/>
 @end example
 
 @item @b{Syntax:}



From andreasl at mail.berlios.de  Mon Mar 16 01:55:38 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Mon, 16 Mar 2009 01:55:38 +0100
Subject: [Enigma-game-svn] r1591 - in trunk: data/levels/lib doc/reference
Message-ID: <200903160055.n2G0tckx006368@sheep.berlios.de>

Author: andreasl
Date: 2009-03-16 01:55:33 +0100 (Mon, 16 Mar 2009)
New Revision: 1591

Added:
   trunk/data/levels/lib/libsoko_designlist.xml
Removed:
   trunk/data/levels/lib/libsoko-designlist.xml
   trunk/data/levels/lib/libsoko-endphase.xml
Modified:
   trunk/data/levels/lib/liblua.xml
   trunk/data/levels/lib/libmath.xml
   trunk/data/levels/lib/libsoko.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - Nearly complete rewrite of libsoko:
    - United libsoko and libsoko-endphase, using new API
      and position lists.
    - Renamed libsoko-designlist to libsoko_designlist,
      reformatted designs and finetuned them.
 - New function lib.math.steps:
    - Takes a number and a table of numbers and determines
      the index of the interval in which the number appears.
      Outsourced from libsoko.
 - New function lib.lua.to_string:
    - Takes anything and tries to return a sensible string
      describing the argument. Can be used with print() for
      debugging purposes.
 - Fix missing "@end table" in refman from rev. 1588.
Thanks:
 - Many thanks to Harry and Clifford for the most valuable
   feedback to the first version of libsoko (yes, that was
   a year ago)!
Todo:
 - Test levels.
 - Beautify lib.lua.to_string (nested tables are still ugly,
   combine with print_table somehow).


Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/liblua.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -140,6 +140,8 @@
       print((prefix or "") .. "|" .. key_s .. " = " .. value)
     elseif type(value) == "string" then
       print((prefix or "") .. "|" .. key_s .. " = \"" .. value .. "\"")
+    elseif type(value) == "boolean" then
+      print((prefix or "") .. "|" .. key_s .. " = " .. lib.lua.cond(value, "true", "false"))
     elseif type(value) == "table" then
       if (depth or 0) < 5 then
         print((prefix or "") .. "|" .. key_s .. " = |")
@@ -166,6 +168,62 @@
   end
 end
 
+function lib.lua.to_string(thing)
+  local t = type(thing)
+  if t == "userdata" then
+    t = usertype(thing)
+  end
+  local result = "unknown type"
+      if (t == "nil") then
+    result = "nil"
+  elseif (t == "string") then
+    if string.find(thing, "\n", 1, true) then
+      result = "string of several lines: \n" .. thing
+    end
+    result = "string: \"" .. thing .. "\""
+  elseif (t == "number") then
+    result = "number: " .. thing
+  elseif (t == "boolean") then
+    result = "boolean: " .. lib.lua.cond(thing, "true", "false")
+  elseif (t == "table") then
+    result = "table"
+    if thing.type then
+      result = result .. "/" .. thing.type
+    end
+    result = result .. ":\n"
+    local found = false
+    for key, value in pairs(thing) do
+      found = true
+      result = result .. "  " .. lib.lua.to_string(key) .. " -> " .. lib.lua.to_string(value) .. "\n"
+    end
+    if not found then
+      result = "empty table"
+      if thing.type then
+        result = result .. "/" .. thing.type
+      end
+    end
+  elseif (t == "position") then
+    result = "position: " .. thing.x .. "/" .. thing.y
+  elseif (t == "object") then
+    result = "object with name '" .. thing.name .. "' at " .. lib.lua.to_string(po(thing))
+  elseif (t == "tile") then
+    result = "tile"
+  elseif (t == "tiles") then
+    result = "tiles"
+  elseif (t == "group") then
+    result = "object group with " .. #thing .. " objects:\n"
+    for obj in thing do
+      result = result .. "  " .. lib.lua.to_string(obj) .. "\n"
+    end
+  elseif (t == "polist") then
+    result = "position list with " .. #thing .. " positions:\n"
+    for j = 1, #thing do
+      result = result .. "  " .. j .. ": " .. thing[j].x .. "/" .. thing[j].y .. "\n"
+    end
+  end
+  return result
+end
+
 ---------------------------------------------------------------------
 --  MATHEMATICAL  FUNCTIONS
 ---------------------------------------------------------------------

Modified: trunk/data/levels/lib/libmath.xml
===================================================================
--- trunk/data/levels/lib/libmath.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/libmath.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -188,6 +188,38 @@
          + (a[4] or 0)*x*x + (a[3] or 0)*y + (a[2] or 0)*x + (a[1] or 0)
 end
 
+-- steps takes DISCRIMINATOR and returns a value dependend on where
+-- in the table STEPS of integers the discriminator is located.
+-- Example: lib.math.steps(x, {4, 8, 13}) returns:
+--     0: If        x < 4
+--     1: If   4 <= x < 8
+--     2: If   8 <= x < 13
+--     3: If  13 <= x
+-- Negative and non-integer values are allowed.
+function lib.math.steps(discriminator, steps)
+  if type(discriminator) ~= "number" then
+    error("lib.math.steps: First argument is " .. type(discriminator)
+        .. "/" .. usertype(discriminator) .. ", should be number.", 2)
+  end
+  if type(steps) ~= "table" then
+    error("lib.math.steps: Second argument is " .. type(discriminator)
+        .. "/" .. usertype(discriminator) .. ", should be table.", 2)
+  end
+  local result = 0
+  for _, height in ipairs(steps) do
+    if type(height) ~= "number" then
+      error("lib.math.steps: " .. type(discriminator) .. "/" .. usertype(discriminator)
+          .. " in table of second argument, should be number.", 2)
+    end
+    if discriminator < height then
+      return result
+    else
+      result = result + 1
+    end
+  end
+  return result
+end
+
 ---------------------------------------------------------------------
 --  PERMUTATIONS  AND  RANDOM  NUMBERS
 ---------------------------------------------------------------------

Deleted: trunk/data/levels/lib/libsoko-designlist.xml
===================================================================
--- trunk/data/levels/lib/libsoko-designlist.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/libsoko-designlist.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -1,731 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="library">
-      <el:identity el:title="" el:id="lib/libsoko-designlist"/>
-      <el:version el:score="1" el:release="1" el:revision="3" el:status="experimental"/>
-      <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.10">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="false" el:network="false"/>
-      <el:comments>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-
--- This "library" is merely a collection of designs, outsourced from
--- libsoko.xml. Don't include this library with your levels (it won't
--- have any effect), but libsoko.xml.
-
-------------------------------------------------------------------------
--- Designs
-------------------------------------------------------------------------
-
--- This section holds a table with all default designs. Each design
--- is again a table consisting of the following entries:
---    wall, inf, outf, box, goal, oxyd, endp
--- Each of these entries is either a string representing the objects to
--- be used, or a table if several objects shall be used. Such a
--- combination of objects will be called "element".
---
--- If object types (like floors) repeat in the table, they are used in
--- a checkerboard pattern. You can change this pattern by adding an
--- element of the form "al:ALGORITHM", where ALGORITHM is one of the
--- algorithms listed below. Same for "fr:1.23" and "ad:4.5" for friction
--- and mouseforce. From all these attributes, only the last one will
--- be used, all others ignored. This contrasts with the situation of
--- the gaming objects ("fl_", "st_", "it_"), whose order doesn't matter.
---
--- "oxyd" only holds the oxyd's flavor, "endp" the way of resolving the
--- level from Sokoban to opening oxyds. Use "st_nil" and "it_nil" to
--- place spaces between stones/items.
---
--- The table might hold additional flags. Currently, only "white"
--- is implemented, which turns the marble and chess-knights white.
--- If an entry is missing, the corresponding entry from default_design
--- will be used.
---
--- Example:
---
---   [5] = { outf = "fl-leaves", inf = "fl-leavesb", box = "st-wood"
---           wall = {"st-glass", "fl-wood", "fl-leaves", "al:random"},
---           oxyd = "a", white = true,
---           endp = {goal = {"fl-abyss", "it_nil"}, give = "it_hammer",
---                   alg = "block:st-break_acwhite"}}
---
---   will define design 5. The walls will alternate between
---   st-glass/fl-wood and st-glass/fl-leaves. The goal will be
---   it_trigger by default. The actor will be ac-whiteball.
---   The boxes will be "st-wood". There will be oxyds visible
---   from the beginning, but they are blocked by st-break_acwhite.
---   When all goals are filled, the st-wood are removed by setting
---   fl-abyss (by which they become fl-stwood), the goal-item is
---   removed. The player is finally given an it_hammer.
---
--- Possible flags:
---
---   white  : Use white marble and st-chess_white.
---
--- Design-Algorithms:
---
---   checkerboard : default, up to 3 different floors in checkerboard pattern
---   lines : arbitrary number of floors in diagonal lines
---   waves : works best with 4 different floors
---   random : arbitrary number of floors, randomly chosen
---
--- Endphase-Algorithms and their parameters:
---
---   circle         : arrange eight oxyds in a circle (default)
---   hide           : position oxyds in the outer walls
---     gradients:X  : like hide, create gradients, with force X
---     magnets:X    : like hide, create magnets, with force X
---   fourswitch     : create a fourswitch-puzzle
---   ralf           : arrange oxyds with doors
---     vortex       : like ralf, create vortices between way-clusters
---     allcrack     : like ralf, create cracks everywhere
---     jumpyoxyds   : like ralf, oxyds are movable by knocking on the door (defunc)
---     knock        : like ralf, open doors on knocking on other doors
---   block:X        : create oxyds with blocking object X
---   outside:X      : create X oxyd-pairs in the outside and outer walls
-
-lib.soko.default_design = {
-  wall = { "st-rock3", "fl-leaves" },
-   inf = { "fl-wood" },
-  outf = { "fl-water" },
-   box = { "st-brownie" },
-  goal = { "it_trigger" },
-  oxyd = "a",
-  endp = { alg = "circle" },
-  outf_default_stone = "st-invisible"
-}
-
--- outf_default_stone has the following meaning: When outf is drawn
--- by set_element, but no stone is set, outf_default_stone is used
--- instead. You can suppress this behaviour by explicitly setting
--- outf = { "fl-myfloor", "st_nil" }.
--- This is done to avoid a chess-stone from jumping into the void,
--- as a present to the gamer.
-
-lib.soko.design_list = {
-
--- endp-algs: circle, ralf, hide, outside, allcrack, block, fourswitch
---            vortex, gradients, magnets
-
--- Ralf's designs
-[1]={box="st-brownie", wall="st-bluegray", inf="fl-bluegray",
-     outf="fl-space", door="st_door_a", oxyd="a",
-     endp={goal="st_nil", alg="circle"}},
-[2]={box="st-glass_move", wall="st-bluegray", inf="fl-bluegray",
-     outf="fl-water", door="st_door_b", oxyd="a",
-     endp={goal="st-glass1_hole", alg="ralf"}},
-[3]={box="st-wood-growing", wall="st-bluegray", inf="fl-bluegray",
-     outf="fl-abyss", door="st_door_c", oxyd="a",
-     endp={goal={"st_nil", "fl-stwood", "it_nil"}, wall="st-thief", give="it_hammer",
-           alg="block:st-plain_cracked"}},
-[4]={box="st-brownie", wall="st-bluegray", inf="fl-white",
-     outf="fl-sahara", door="st_door_a", oxyd="c",
-     endp={goal="st_nil", wall={"st_nil", "fl-bluegray"}, alg="outside"}},
-[5]={box="st-wood", wall="st-bluegray", inf="fl-white",
-     outf="fl-space", door="st_door_c", oxyd="c",
-     endp={goal={"st_nil", "fl-stwood", "it_nil"}, wall={"st-bluegray_hole"}, alg="outside:3"}},
-[6]={box="st-greenbrown_move", wall="st-bluegray", inf="fl-white",
-     outf="fl-space", door="st_door_b", oxyd="c",
-     endp={goal="st-greenbrown_hole", wall="st-thief", give="it_sword",
-           alg="block:st_knight"}},
-[7]={box="st-wood", wall="st-bluegray", inf="fl-white",
-     outf="fl-space", door="st_door_c", oxyd="c",
-     endp={goal={"st_nil", "fl-stwood", "it_nil"}, alg="fourswitch"}},
-
-[8]={box="st-rock3_move", wall="st_bluesand", inf="fl-light",
-     outf="fl-rough-blue", door="st_door_b", oxyd="d",
-     endp={goal="st-rock3_break", give="it_hammer", alg="ralf"}},
-[9]={box="st-block", wall="st_bluesand", inf="fl-light",
-     outf="fl-rough-blue", door="st_blocker", oxyd="d",
-     endp={goal="st_nil", alg="circle"}},
-[10]={box="st_shogun", wall="st_bluesand", inf="fl-rough",
-      outf="fl-space", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={goal="st_nil", alg="magnets"}},
-[11]={box="st-marble_move", wall="st_bluesand", inf="fl-rough",
-      outf="fl-abyss", door="st_door_b", oxyd="b",
-      endp={goal="st-marble", alg="vortex"}},
-[12]={box="st_shogun", wall="st_bluesand", inf="fl-rough",
-      outf="fl-space", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={goal="st_nil", give="it_hammer", alg="block:st-stone_break"}},
-[13]={box="st-block", wall="st_bluesand", inf="fl-rough",
-      outf="fl-leaves", door="st_blocker", oxyd="b",
-      endp={goal={"fl-swamp", "it_nil"}, alg="ralf"}},
-
-[14]={box="st-brownie", wall={"st-glass", "fl-himalaya", "fl-water"},
-      inf="fl-himalaya", outf="fl-water", door="st_door_a", oxyd="a",
-      endp={goal="st_pull", alg="magnets"}},
-[15]={box="st-brownie", wall={"st-glass", "fl-himalaya", "fl-water"},
-      inf="fl-himalaya", outf="fl-water", door="st_door_a", oxyd="a",
-      endp={goal="st_nil", alg="fourswitch"}},
-[16]={box="st_shogun", wall={"st-glass", "fl-rough-red", "fl-abyss"},
-      inf="fl-rough-red", outf="fl-abyss", door="st_door_b", oxyd="c",
-      goal="it_shogun_s",
-      endp={alg="circle"}},
-[17]={box="st-brownie", wall={"st-glass", "fl-rough-red", "fl-sahara"},
-      inf="fl-rough-red", outf="fl-sahara", door="st_door_a", oxyd="c",
-      endp={goal="st-grate2", wall="st-grate2", alg="outside"}},
-[18]={box="st-greenbrown_move", wall={"st-glass", "fl-wood", "fl-water"},
-      inf="fl-wood", outf="fl-water", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown_hole", alg="ralf"}},
-[19]={box="st-block", wall={"st-glass", "fl-wood", "fl-abyss"},
-      inf="fl-wood", outf="fl-abyss", door="st_blocker", oxyd="d",
-      endp={goal={"fl-abyss", "it_nil"}, alg="vortex"}},
-[20]={box="st-wood-growing", wall={"st-glass", "fl-wood", "fl-abyss"},
-      inf="fl-wood", outf="fl-abyss", door="st_door_c", oxyd="a",
-      endp={goal={"fl-swamp", "it_nil"}, alg="magnets"}},
-[21]={box="st-wood", wall={"st-glass", "fl-wood", "fl-sahara"},
-      inf="fl-wood", outf="fl-sahara", door="st_door_c", oxyd="c",
-      endp={goal={"fl-swamp", "it_nil"}, give="ac-bug", alg="block:st-bug"}},
-[22]={box="st_shogun", wall={"st-glass", "fl-wood", "fl-leaves"}, inf="fl-wood",
-      outf="fl-leaves", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={goal="st_nil", give="it_sword", alg="block:st_knight"}},
-[23]={box="st-block", wall={"st-glass", "fl-wood", "fl-abyss"},
-      inf="fl-wood", outf="fl-abyss", door="st_blocker", oxyd="d",
-      endp={goal={"st_nil", "it_nil"}, alg="allcrack:1"}},
-[24]={box="st-brownie", wall={"st-glass", "fl-wood", "fl-sahara"},
-      inf="fl-wood", outf="fl-sahara", door="st_door_a", oxyd="c",
-      endp={goal="st_nil", give="ac-bug", alg="block:st-bug"}},
-[25]={box="st-brownie", wall={"st-glass", "fl-wood", "fl-leaves", "it-cherry"},
-      inf="fl-wood", outf="fl-leaves", door="st_door_a", oxyd="a",
-      endp={goal={"st-glass", "fl-wood", "fl-leaves", "it-cherry"},
-            give="it-cherry", alg="outside"}},
-
-[26]={box="st-brownie", wall="st-likeoxydc-open", inf="fl-acblack",
-      outf="fl-water", door="st_door_a", oxyd="c",
-      endp={goal="st-grate1", alg="ralf"}},
-[27]={box="st-greenbrown_move", wall="st-likeoxydc-open", inf="fl-acblack",
-      outf="fl-water", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown_hole", alg="hide"}},
-[28]={box="st-wood-growing", wall="st-likeoxydc-open", inf="fl-tigris",
-      outf="fl-sahara", door="st_door_c", oxyd="a",
-      endp={goal={"fl-swamp", "it_nil"}, alg="fourswitch"}},
-[29]={box="st-brownie", wall="st-likeoxydc-open", inf="fl-tigris",
-      outf="fl-leaves", door="st_door_a", oxyd="a",
-      endp={goal="st_pull", give="it_sword", alg="block:st_knight"}},
-[30]={box="st-wood-growing", wall="st-likeoxydc-open", inf="fl-tigris",
-      outf="fl-sahara", door="st_door_c", oxyd="a",
-      endp={goal={"st_nil", "fl-stwood", "it_nil"}, give="it_hammer", alg="block:st-stone_break"}},
-[31]={box="st-glass_move", wall="st-likeoxydc-open", inf="fl-tigris",
-      outf="fl-space", door="st_door_b", oxyd="a",
-      endp={wall="st-grate1", give="it-cherry", alg="outside:3"}},
-
-[32]={box="st-block", wall="st-metal", inf="fl-bluegray",
-      outf="fl-space", door="st_blocker", oxyd="d",
-      endp={goal={"fl-abyss", "it_nil"}, alg="vortex"}},
-[33]={box="st_shogun", wall="st-metal", inf="fl-bluegray",
-      outf="fl-rough-blue", door="st_door_a", oxyd="d", goal="it_shogun_s",
-      endp={goal="st-metal_hole", alg="magnets"}},
-[34]={box="st_shogun", wall="st-metal", inf="fl-white",
-      outf="fl-abyss", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={goal="st_nil", alg="gradients"}},
-[35]={box="st-block", wall="st-metal", inf="fl-white",
-      outf="fl-abyss", door="st_blocker", oxyd="b",
-      endp={box="fl-swamp", alg="ralf"}},
-[36]={box="st_shogun", wall="st-metal", inf="fl-white",
-      outf="fl-abyss", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={alg="circle"}},
-
-[37]={box="st-wood-growing", wall="st-rock1", inf="fl-light",
-      outf="fl-leaves", door="st_door_c", oxyd="a",
-      endp={goal={"fl-swamp", "it_nil"}, wall="st-grate2", alg="outside"}},
-[38]={box="st-glass_move", wall="st-rock1", inf="fl-light",
-      outf="fl-abyss", door="st_door_b", oxyd="a",
-      endp={give="it-cherry", alg="ralf"}},
-[39]={box="st-brownie", wall="st-rock1", inf="fl-light",
-      outf="fl-abyss", door="st_door_a", oxyd="a",
-      endp={goal="st-grate2", alg="fourswitch"}},
-[40]={box="st-glass_move", wall="st-rock1", inf="fl-light",
-      outf="fl-abyss", door="st_door_b", oxyd="a",
-      endp={goal="st-glass1_hole", give="it_sword", alg="block:st_knight"}},
-[41]={box="st-brownie", wall="st-rock1", inf="fl-rough",
-      outf="fl-space", door="st_door_a", oxyd="c",
-      endp={goal={"st_nil", "it_nil", "fl-hay"}, wall="st-rock1_hole",
-            alg="outside:3"}},
-[42]={box="st-greenbrown_move", wall="st-rock1", inf="fl-rough",
-      outf="fl-sahara", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown", alg="vortex"}},
-
-[43]={box="st-brownie", wall="st-rock3", inf="fl-leaves",
-      outf="fl-space", door="st_door_a", oxyd="a",
-      endp={goal="st-rock3_hole", wall="st-rock3_hole", alg="outside:3"}},
-[44]={box="st-marble_move", wall="st-rock3", inf="fl-leaves",
-      outf="fl-rough-blue", door="st_door_b", oxyd="b",
-      endp={"st-marble_hole", alg="ralf"}},
-[45]={box="st-wood-growing", wall="st-rock3", inf="fl-leaves",
-      outf="fl-leaves", door="st_door_c", oxyd="a",
-      endp={goal={"fl-swamp", "it_nil"}, give="ac-bug", alg="block:st-bug"}},
-[46]={box="st_shogun", wall="st-rock3", inf="fl-leaves",
-      outf="fl-abyss", door="st_door_a", oxyd="d", goal="it_shogun_s",
-      endp={goal="st_nil", give="it_hammer", alg="block:st-plain_cracked"}},
-[47]={box="st-greenbrown_move", wall="st-rock3", inf="fl-leaves",
-      outf="fl-sahara", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown_hole", give="ac-bug", alg="block:st-bug"}},
-[48]={box="st-glass_move", wall="st-rock3", inf="fl-leaves",
-      outf="fl-leaves", door="st_door_b", oxyd="a",
-      endp={give="it-cherry", alg="ralf"}},
-[49]={box="st-marble_move", wall="st-rock3", inf="fl-leaves",
-      outf="fl-rough-blue", door="st_door_b", oxyd="b",
-      endp={goal="st-marble_hole", give="it_hammer", alg="block:st-plain_cracked"}},
-[50]={box="st_shogun", wall="st-rock3", inf="fl-leaves",
-      outf="fl-leaves", door="st_door_c", oxyd="a", goal="it_shogun_s",
-      endp={alg="circle"}},
-[51]={box="st-wood-growing", wall="st-rock3", inf="fl-leaves",
-      outf="fl-leaves", door="st_door_c", oxyd="a",
-      endp={goal={"fl-swamp", "it_nil"},
-            wall={"st-plain_breaking", "fl-sahara"}, alg="outside"}},
-[52]={box="st-wood", wall="st-rock3", inf="fl-leaves",
-      outf="fl-water", door="st_door_c", oxyd="c",
-      endp={goal={"st-grate1", "it_nil"}, alg="ralf"}},
-[53]={box="st_shogun", wall="st-rock3", inf="fl-leaves",
-      outf="fl-space", door="st_door_b", oxyd="d", goal="it_shogun_s",
-      endp={goal={"st_nil", "fl-swamp"}, alg="fourswitch"}},
-
-[54]={box="st_shogun", wall="st-rock4", inf="fl-himalaya",
-      outf="fl-water", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={alg="vortex"}},
-[55]={box="st-marble_move", wall="st-rock4", inf="fl-himalaya",
-      outf="fl-abyss", door="st_door_b", oxyd="b",
-      endp={goal="st-marble_hole", alg="ralf"}},
-[56]={box="st_shogun", wall="st-rock4", inf="fl-himalaya",
-      outf="fl-abyss", door="st_door_b", oxyd="b", goal="it_shogun_s",
-      endp={alg="circle"}},
-[57]={box="st-block", wall="st-rock4", inf="fl-rough-red",
-      outf="fl-rough-blue", door="st_blocker", oxyd="d",
-      endp={goal="st-explosion", wall="st-explosion", alg="outside"}},
-[58]={box="st-rock3_move", wall="st-rock4", inf="fl-rough-red",
-      outf="fl-space", door="st_door_b", oxyd="d",
-      endp={goal="st-plain_cracked", give="it_hammer", alg="block:st-plain_cracked"}},
-[59]={box="st_shogun", wall="st-rock4", inf="fl-rough-red",
-      outf="fl-space", door="st_door_a", oxyd="d", goal="it_shogun_s",
-      endp={goal="st_nil", alg="ralf"}},
-[60]={box="st-rock3_move", wall="st-rock4", inf="fl-rough-red",
-      outf="fl-space", door="st_door_b", oxyd="d",
-      endp={goal="st-bug", give="ac-bug", alg="block:st-bug"}},
-
-[61]={box="st-greenbrown_move", wall="st-rock5", inf="fl-samba",
-      outf="fl-leaves", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown_hole", alg="fourswitch"}},
-[62]={box="st-block", wall="st-rock5", inf="fl-samba",
-      outf="fl-water", door="st_blocker", oxyd="b",
-      endp={goal={"fl-water", "it_nil"}, alg="vortex"}},
-[63]={box="st-rock3_move", wall="st-rock5", inf="fl-samba",
-      outf="fl-leaves", door="st_door_b", oxyd="d",
-      endp={goal="st-plain_cracked", give="it_hammer",
-            alg="block:st-plain_cracked"}},
-[64]={box="st-marble_move", wall="st-rock5", inf="fl-samba",
-      outf="fl-water", door="st_door_b", oxyd="b",
-      endp={goal="st-marble_hole", alg="gradients"}},
-[65]={box="st-wood-growing", wall="st-rock5", inf="fl-samba",
-      outf="fl-space", door="st_door_c", oxyd="a",
-      endp={goal={"st_nil", "fl-stwood", "it_nil"}, alg="ralf"}},
-[66]={box="st-greenbrown_move", wall="st-rock5", inf="fl-samba",
-      outf="fl-leaves", door="st_door_b", oxyd="c",
-      endp={goal="st-greenbrown", alg="vortex"}},
-[67]={box="st-block", wall="st-rock5", inf="fl-samba",
-      outf="fl-water", door="st_blocker", oxyd="b",
-      endp={alg="circle"}},
-[68]={box="st-brownie", wall="st-rock5", inf="fl-samba",
-      outf="fl-space", door="st_door_a", oxyd="a",
-      endp={goal="st_nil", alg="allcrack:1"}},
-[69]={box="st-block", wall="st-rock5", inf="fl-samba",
-      outf="fl-space", door="st_blocker", oxyd="d",
-      endp={goal={"fl-swamp", "it_nil"}, alg="ralf"}},
-
-[70]={box="st-rock3_move", wall="st-rock6", inf="fl-acblack",
-      outf="fl-space", door="st_door_b", oxyd="d",
-      endp={goal="st-plain_breaking", alg="ralf"}},
-[71]={box="st_shogun", wall="st-rock6", inf="fl-acblack",
-      outf="fl-leaves", door="st_door_a", oxyd="d", goal="it_shogun_s",
-      endp={goal="st-explosion", wall="st-explosion", alg="outside"}},
-[72]={box="st-block", wall="st-rock6", inf="fl-acblack",
-      outf="fl-leaves", door="st_blocker", oxyd="d",
-      endp={goal={"fl-swamp", "it_nil"}, alg="magnets"}},
-[73]={box="st_shogun", wall="st-rock6", inf="fl-acblack",
-      outf="fl-leaves", door="st_door_a", oxyd="d", goal="it_shogun_s",
-      endp={goal="st_knight", give="it_sword", alg="block:st_knight"}},
-[74]={box="st_shogun", wall="st-rock6", inf="fl-tigris",
-      outf="fl-rough-blue", door="st_blocker", oxyd="b", goal="it_shogun_s",
-      endp={goal="st_nil", alg="fourswitch"}},
-[75]={box="st_shogun", wall="st-rock6", inf="fl-tigris",
-      outf="fl-water", door="st_door_a", oxyd="b", goal="it_shogun_s",
-      endp={goal="st-explosion", alg="gradients"}},
-
--- New designs
-[76]={box="st-glass1_move", wall="st-glass2", inf="fl-lightgray",
-      outf="fl-abyss", door="st_door_a", oxyd="b",
-      endp={goal="st_pull", alg="hide"}},
-[77]={box="st-rock3_move", wall="st_brick", inf="fl-darkgray",
-      outf="fl-leavesb", door="st_door_d", oxyd="a",
-      endp={goal="st-plain_cracked", give="it_hammer", alg="knock"}},
-[78]={box="st-rock3_move", wall="st-bumps", inf="fl-dunes",
-      outf="fl-sand", door="st_door_a", oxyd="a",
-      endp={goal="st-plain_break", give="it_hammer", alg="block:st-plain_cracked"}},
-[79]={box="st-flrock", wall="st-camouflage", inf="fl-gravel",
-      outf={"fl-gravel", "st_disco_medium"}, door="st-camouflage", oxyd="b",
-      endp={goal="st-camouflage", open_door={"st_nil", "fl-leavesb"}, alg="vortex"}},
-[80]={box="st-flhay", wall="st-camouflage", inf="fl-leaves",
-      outf={"fl-water:5", "fl-swamp", "al:random"}, door="st_door_a", oxyd="d",
-      endp={goal={"fl-swamp", "it_nil"},
-            wall={"st-camouflage_hole", "st_nil:2", "fl-swamp", "al:random"},
-            give="it_umbrella", alg="outside:1"}},
-[81]={box="st-glass2_move", wall={"st-glass1", "fl-lightgray"}, inf="fl-black",
-      outf="fl-white", door="st-black4", oxyd="c", white=true,
-      endp={goal="st-yinyang2", open_door="st-white4", alg="ralf"}},
-[82]={box="st-wood", wall={"st-glass1", "fl-water"}, inf="fl-sand",
-      outf="fl-water", door="st_door_a", oxyd="c",
-      endp={goal={"st_nil", "fl-stwood", "it_nil"}, alg="fourswitch"}},
-[83]={box="st-camouflage_move", wall="st-glass2", inf="fl-lightgray",
-      outf={"fl-leavesb", "st_disco_medium"}, door="st-glass2", oxyd="b",
-      endp={goal="st-camouflage_hole", open_door="st-glass1_hole",
-            outf="st_nil", alg="ralf"}},
-[84]={box="st-flrock", wall="st-glass2", inf="fl-sand",
-      outf={"fl-water", "st_disco_medium"}, door="st_door_d", oxyd="b",
-      endp={goal={"fl-swamp", "it_nil"}, alg="knock"}},
-[85]={box="st-flrock", wall="st_brick", inf="fl-sand",
-      outf={"fl-water", "st_disco_medium"}, door="st_door_d", oxyd="a",
-      endp={goal="st-black4", alg="ralf"}},
-[86]={box="st-glass1_move", wall={"st-glass3", "fl-abyss_fake"}, inf="fl-red",
-      outf="fl-space", door={"st_nil", "fire"}, oxyd="a",
-      endp={goal="st-explosion", open_door="nofire", alg="ralf"}},
-[87]={box="st-rock3_move", wall={"st-glass3", "fl-rough-blue"}, inf="fl-plank",
-      outf="fl-water", door="st-glass3", oxyd="a",
-      endp={goal="st-rock7", open_door="st-glass1_hole", alg="vortex"}},
-[88]={box="st-glass1_move", wall="st-likeoxyda", inf="fl-black",
-      outf="fl-abyss", door="st_door_a", oxyd="a",
-      endp={goal="st-glass1_hole", alg="hide"}},
-[89]={box="st-greenbrown_move", wall="st-likeoxyda-open", inf="fl-brick",
-      outf={"fl-mortar", "st_disco_medium"}, door="st_door_d", oxyd="a",
-      endp={goal="st-grate2", alg="knock"}},
-[90]={box="st-rock3_move", wall="st-likeoxydb", inf="fl-rough-red",
-      outf="fl-space", door="st_door_a", oxyd="b",
-      endp={goal="st-plain_breaking", alg="hide"}},
-[91]={box="st-flhay", wall="st-likeoxydb-open", inf="fl-rough-blue",
-      outf={"fl-swamp", "st_disco_light"}, door="st_door_a", oxyd="b",
-      endp={goal="st-break_gray", give="it_hammer", alg="block:st-break_gray"}},
-[92]={box="st-glass2_move", wall="st-likeoxydc", inf="fl-sahara",
-      outf={"fl-water", "st_disco_light"}, door="st_door_a", oxyd="c",
-      endp={goal="st-glass1_hole", alg="hide"}},
-[93]={box="st-glass_move", wall="st-likeoxydc-open", inf="fl-red",
-      outf={"st-blackballs", "st-whiteballs", "fl-abyss", "al:random"},
-      door="st_door_a", oxyd="c",
-      endp={goal="st-black4", alg="fourswitch"}},
-[94]={box="st-glass2_move", wall="st-likeoxydd", inf="fl-concrete",
-      outf="fl-sand", door="st_door_a", oxyd="d",
-      endp={goal="st-glass1_hole", alg="hide"}},
-[95]={box="st-flrock", wall="st-likeoxydd-open", inf="fl-marble",
-      outf="fl-water", door="st_door_a", oxyd="b",
-      endp={goal={"fl-swamp", "it_nil"}, outf="fl-swamp",
-            give="it_hammer", wall="st-break_gray", alg="outside"}},
-[96]={box="st-flrock", wall="st-marble", inf="fl-marble",
-      outf={"fl-leavesc3", "fl-leavesd3"}, door="st_door_d", oxyd="a",
-      endp={goal={"st-grate2", "it_nil"}, alg="knock"}},
-[97]={box="st-camouflage_move", wall="st-marble", inf="fl-leaves",
-      outf={"fl-leaves", "st-marble"}, door="st_door_a", oxyd="a",
-      endp={goal="st-camouflage_hole", wall="st-marble_hole",
-            outf="st-marble_hole", alg="outside"}},
-[98]={box="st-rock1_move", wall="st-redrock", inf="fl-acblack",
-      outf={"fl-acblack", "st-redrock"}, door="st-rock6", oxyd="b",
-      endp={goal="st-rock6", open_door="st_nil", alg="vortex"}},
-[99]={box="st-glass1_move", wall="st-redrock", inf="fl-mortar",
-      outf="fl-brick", door="st_door_a", oxyd="b",
-      endp={goal="st-glass1_hole", wall={"st-glass1_hole", "fl-tigris"}, alg="outside"}},
-[100]={box="st-block", wall="st-redrock", inf="fl-mortar",
-       outf="fl-water", door="st_door_d", oxyd="b",
-       endp={goal={"fl-swamp", "it_nil"}, alg="ralf"}},
-[101]={box="st-glass2_move", wall="st-redrock", inf="fl-leavesb",
-       outf={"fl-leavesc3", "fl-leavesd4"}, door="st_door_a", oxyd="a",
-       endp={goal="st-glass1_hole", alg="hide"}},
-[102]={box="st-camouflage_move", wall="st-rock2", inf="fl-rock",
-       outf={"fl-rock", "st_disco_medium"}, door="st_door_a", oxyd="b",
-       endp={goal={"it_nil", "st_disco_light", "fl-leavesb"},
-             wall={"st_disco_light", "fl-gray"}, alg="outside:3"}},
-[103]={box="st-glass2_move", wall="st-rock2", inf="fl-stone",
-       outf={"fl-water", "st_disco_medium"}, door="st_door_a", oxyd="b",
-       endp={goal={"st_pull", "it_nil", "fl-black"}, alg="fourswitch"}},
-[104]={box="st-wood", wall="st-rock2", inf="fl-lightgray",
-       outf="fl-space", door="st_door_d", oxyd="b",
-       endp={goal={"st_nil", "fl-marble", "it_nil"}, alg="knock"}},
-[105]={box="st-camouflage_move", wall="st-rock7", inf="fl-woven",
-       outf="fl-gravel", door="st_door_a", oxyd="a",
-       endp={goal={"fl-bluegreenx", "it_nil", "st_nil"}, alg="magnets"}},
-[106]={box="st-brownie", wall="st-rock7", inf="fl-black",
-       outf="fl-abyss", door="st_door_a", oxyd="b",
-       endp={goal="st-bug", give={"ac-bug", "it_hammer"}, alg="block:st-plain_cracked"}},
-[107]={box="st-glass_move", wall="st-rock8", inf="fl-plank",
-       outf={"fl-plank", "st-rock8"}, door="st_door_d", oxyd="d",
-       endp={goal="st-explosion", alg="knock"}},
-[108]={box="st-glass2_move", wall={"st-rock8", "fl-water"}, inf="fl-leaves",
-       outf="fl-water", door="st_door_a", oxyd="c",
-       endp={goal="st_pull", give="it_hammer", alg="block:st-break_gray"}},
-[109]={box="st-marble_move", wall={"st-rock8", "fl-abyss_fake"}, inf="fl-stone",
-       outf="fl-space", door="st_door_a", oxyd="c",
-       endp={goal={"st_nil", "it_nil", "fl-hay"}, wall={"st_nil", "fl-darkgray"},
-             alg="outside:3"}},
-[110]={box="st-greenbrown_move", wall="st-rock9", inf="fl-rock",
-       outf={"fl-rock", "st-rock9"}, door="st-rock9", oxyd="b",
-       endp={goal="st-rock9", open_door="st_nil", alg="vortex"}},
-[111]={box="st-glass_move", wall="st-rock9", inf="fl-sand",
-       outf="fl-water", door="st_door_c", oxyd="c",
-       endp={goal="st-grate2", alg="ralf"}},
-[112]={box="st-camouflage_move", wall="st-rock9", inf="fl-stone",
-       outf="fl-swamp", door="st_door_d", oxyd="a",
-       endp={goal="st-camouflage_hole", alg="knock"}},
-[113]={box="st-block", wall="st-rock10", inf="fl-bluegreen",
-       outf="fl-abyss", door="st_door_a", oxyd="a",
-       endp={goal={"st-explosion", "it_nil", "fl-bluegreenx"},
-             wall={"st-explosion", "fl-marble"}, give="it_umbrella", alg="outside:1"}},
-[114]={box="st-wood", wall="st-rock10", inf="fl-sand",
-       outf={"fl-sand", "st-rock10"}, door="st_door_a", oxyd="b",
-       endp={goal={"fl-swamp", "it_nil"}, give="it_sword", alg="block:st_knight"}},
-[115]={box="st-glass2_move", wall="st-stone1", inf={"fl-lightgray", "fl-white"},
-       outf={"fl-space", "fl-abyss"}, door="st_door_a", oxyd="a",
-       endp={goal="st-glass1_hole", wall="st-grate1", give="it_umbrella",
-             open_door="st-grate1", alg="block:st-stone1"}},
-[116]={box="st-rock1_move", wall="st-stone1", inf="fl-stwood",
-       outf="fl-water", door="st-stone1", oxyd="b",
-       endp={goal="st-rock1_hole", open_door="st-grate1", alg="ralf"}},
-[117]={box="st-glass_move", wall="st-stone1", inf="fl-black",
-       outf="st-stone1", door="st_door_a", oxyd="d",
-       endp={outf="st-likeoxydd", wall="st-likeoxydd", inf="fl-ice",
-             goal={"st_nil", "it_nil", "fl-ice"}, alg="hide:1"}},
-[118]={box="st-glass_move", wall="st-stone2", inf="fl-black",
-       outf="fl-gravel", door="st_door_a", oxyd="b",
-       endp={goal="st-glass", alg="vortex"}},
-[119]={box="st-block", wall="st-stone2", inf="fl-rough-red",
-       outf={"fl-rough-blue", "st_disco_light"}, door="st_door_a", oxyd="d",
-       endp={goal="st_nil", alg="allcrack:1"}},
-[120]={box="st-rock3_move", wall={"st-marble", "st-stone2"}, inf="fl-black",
-       outf={"st-marble", "st-stone2"}, oxyd="b",
-       endp={goal="st-plain_cracked", give="it_hammer", open_door="st_nil",
-             alg="ralf"}},
-[121]={box="st-wood", wall="st-panel", inf="fl-wood",
-       outf={"fl-leavesd3", "fl-leavesd2"}, door="st_door_a", oxyd="a",
-       endp={goal={"it_nil", "fl-swamp"}, open_door="fl-swamp", alg="block:st-wood"}},
-[122]={box="st-block", wall="st-panel", inf="fl-leaves",
-       outf="fl-leavesb", door="st_door_a", oxyd="a",
-       endp={goal={"it_nil", "fl-swamp"}, alg="fourswitch"}},
-[123]={box="st-glass1_move", wall="st-woven", inf="fl-dunes",
-       outf="fl-bluegreen", door="st-glass1", oxyd="a",
-       endp={goal="st_pull", open_door="st_pull", alg="ralf"}},
-[124]={box="st-marble_move", wall="st-woven", inf="fl-hay",
-       outf="fl-water", door="st_door_a", oxyd="a",
-       endp={goal="st-marble_hole", wall={"st_nil", "fl-woven"},
-       give="it_umbrella", alg="outside:1"}},
-[125]={box="st-rock3_move", wall="st-yellow", inf="fl-leavesb",
-       outf="fl-leaves", door="st_door_c", oxyd="a",
-       endp={goal="st-grate2", alg="ralf"}},
-[126]={box="st-glass_move", wall="st-yellow", inf="fl-rough-blue",
-       outf="fl-abyss", door="st_door_a", oxyd="d",
-       endp={goal={"st_nil", "it_nil", "fl-ice"}, give="ac-bug", alg="block:st-bug"}},
-[127]={box="st-block", wall="st-yellow", inf="fl-lightgray",
-       outf="fl-space", door="st_door_a", oxyd="d",
-       endp={goal={"fl-abyss", "it_nil"}, alg="vortex"}},
-[128]={box="st-glass1_move", wall="st-rock7", inf="fl-himalaya",
-       outf={"fl-himalaya", "st-rock8", "st-rock7"}, door="st_door_a", oxyd="d",
-       endp={goal="st-explosion", alg="magnets"}},
-[129]={box="st-camouflage_move", wall={"st-rock9", "fl-leavesb"}, inf="fl-dunes",
-       outf={"fl-leavese1", "fl-leavese2", "fl-leavese3", "fl-leavese4", "al:waves"},
-       door={"fl_bridge_bw", "fl_bridge_bn", "al:random", "st_nil"}, oxyd="d",
-       endp={goal="st-camouflage_hole", alg="ralf"}},
-[130]={box="st-glass1_move", wall="st-redrock", inf="fl-darkgray",
-       outf={"fl-black", "st-redrock", "st-invisible:3", "al:waves"},
-       door="st_door_a", oxyd="a",
-       endp={goal="st_nil", alg="gradients"}},
-[131]={box="st-glass1_move", wall={"st-yellow", "st-yellow", "st-redrock", "st-redrock", "al:waves"},
-       inf="fl-wood",
-       outf={"fl-wood", "st-yellow", "st-yellow", "st-redrock", "st-redrock", "al:waves"},
-       door="st_door_a", oxyd="d",
-       endp={goal={"st-glass1_hole"}, give="it_hammer", alg="block:st-plain_break"}},
-[132]={box="st-wood", wall="st-camouflage", inf="fl-leavesb", oxyd="d",
-       outf={"fl-water:3", "fl-swamp","al:random"}, door={"fl-water", "st-glass1_hole"},
-       endp={goal={"fl-swamp", "it_nil"}, inf={"fl-leavesb", "fl-swamp", "al:random"},
-             open_door="fl-swamp", alg="ralf"}},
-[133]={box="st-glass2_move", wall="st-metal", inf="fl-metal",
-       outf={"fl-space", "fl-abyss:3", "al:random"}, door="st_door_a", oxyd="d",
-       endp={goal="st-glass1_hole", give="it_sword", alg="block:st_knight"}},
-[134]={box="st-marble_move", wall="st-metal", inf="fl-white",
-       outf={"fl-abyss", "st-grate1", "st-invisible:3", "al:waves"},
-       door="st_door_a", oxyd="d",
-       endp={goal="st-marble_hole", alg="fourswitch"}},
-[135]={box="st-glass_move", wall="st-likeoxydc", inf="fl-white",
-       outf={"fl-white", "st-rock1", "st-invisible:3", "al:random"},
-       door="st_door_a", oxyd="c",
-       endp={goal={"st-glass1_hole", "it_nil"}, alg="hide"}},
-[136]={box="st-block", wall={"st_oneway_white_n", "st_oneway_white_s", "st_oneway_white_e", "st_oneway_white_w", "al:random"},
-       inf="fl-rough", oxyd="b",
-       outf={"st_oneway_white_n", "st_oneway_white_s", "st_oneway_white_e", "st_oneway_white_w", "al:random"},
-       endp={alg="circle"}},
-[137]={box={"st_mirror_slab_nm", "st_mirror_slab_em", "st_mirror_slab_sm", "st_mirror_slab_wm", "al:random"},
-       wall={"st-glass3", "fl-abyss"}, inf="fl-metal", oxyd="b",
-       outf={"st_mirror_slab_n", "st_mirror_slab_e", "st_mirror_slab_s", "st_mirror_slab_w", "al:random"},
-       door="st-glass3",
-       endp={goal={"st_nil", "it_nil", "fl-darkgray"},
-             open_door="st-glass1_hole", alg="ralf"}},
-[138]={box="st_shogun_s", wall="st-panel", inf="fl-stwood", goal="it_shogun_s",
-       outf="fl-water", oxyd="a",
-       endp={goal="st_nil", alg="ralf", open_door="st_nil"}},
-[139]={box="st_shogun_s", wall="st_blocker", inf="fl-black",
-       outf={"st-white1", "st-black1", "fl-springboard", "fl-abyss_fake"},
-       door="st_blocker", oxyd="b",
-       endp={goal={"st_nil", "it_nil"}, inf={"fl-springboard", "fl-abyss_fake"},
-             alg="ralf"}},
-[140]={box="st-brownie", wall={"st-stone1", "fl-leavesb"}, inf={"fl-floor_001", "fr:3.0"},
-       outf={"fl-leavese4", "fl-leavese2", "fl-leavese1", "fl-leavese3", "al:waves"},
-       door="st_door_a", oxyd="d",
-       endp={goal={"st-grate1", "it_nil"}, alg="fourswitch"}},
-[141]={box="st-brownie", wall={"st-rock4", "fl-leavesb"}, inf={"fl-bluegreenx", "ad:1.0", "fr:3.0"},
-       outf={"fl-water", "st-rock10", "st-invisible:3", "al:waves"},
-       door="st_door_a", oxyd="d",
-       endp={goal="st_nil", give="it_sword", alg="block:st_knight"}},
-[142]={box="st-glass2_move", wall={"st-glass1", "fl-leavesb"}, inf="fl-leavesb",
-       outf={"fl-leavesc4", "fl-leavesd2", "fl-leavesc2", "fl-leavese3", "al:waves"},
-       door="st_door_a", oxyd="d",
-       endp={goal="st-glass1_hole", alg="hide"}},
-[143]={box="st-block", wall={"st-rock5", "fl-stwood"}, inf="fl-wood",
-       outf={"st_disco_light", "fl-wood1:3", "fl-wood2", "al:waves"},
-       door="st_door_a", oxyd="a",
-       endp={goal={"fl-abyss", "it_nil"}, alg="vortex"}},
-[144]={box="st-wood", wall="st-rock6", inf="fl-bluegreen",
-       outf={"fl-space", "it-squashed", "it_nil:3", "al:random"},
-       door="st_door_a", oxyd="d",
-       endp={goal="st-glass2_hole", wall="st-glass1_hole", alg="outside:3"}},
-[145]={box="st-glass1_move", wall={"st-greenbrown", "fl-sand"}, inf="fl-dunes",
-       outf={"fl-sand", "it_landmine:3", "it-booze-broken", "it_nil:15", "al:random"},
-       door="st_door_a", oxyd="a",
-       endp={goal="st-glass1_hole", alg="allcrack:1"}},
-[146]={box="st-wood", wall="st-rock1", inf="fl-black",
-       outf={"fl-abyss", "st-grate1", "st_nil:10", "al:random"},
-       door="st_door_a", oxyd="b", white = true,
-       endp={goal={"st-grate1", "it_nil"}, alg="magnets"}},
-[147]={box="st-wood", wall="st-whiteballs", inf="fl-gray", white = true,
-       outf={"fl-gradient5", "fl-gradient6", "fl-gradient7", "fl-gradient8", "al:waves"},
-       door="st_door_a", oxyd="a",
-       endp={goal={"st_nil", "it_nil"}, alg="gradients"}},
-[148]={box="st_shogun_s", wall="st-metal", inf="fl-rough-blue", white = true,
-       outf={"fl-rough-red", "fl-rough-blue", "st_disco_light"},
-       door="st_door_a", oxyd="a",
-       endp={goal="st-break_acblack", give="it_hammer", alg="block:st-break_acblack"}},
-[149]={box="st_shogun_s", wall="st-yellow", inf="fl-samba",
-       outf="fl-swamp", door="st_door_a",
-       oxyd="c", goal="it_shogun_s", white = true,
-       endp={goal="st-explosion", wall={"st-explosion", "fl-tigris"}, alg="outside"}},
-
-[150]={box="st-flrock", wall="st-redrock", inf="fl-brick",
-       outf="fl-space", door="st_blocker", oxyd="a", white=true,
-       endp={goal={"st_nil", "fl-rock", "it_nil"}, alg="ralf"}},
-}
-
--- endp-algs: circle, ralf, hide, outside, allcrack, block, fourswitch
---            vortex, gradients, magnets
-
-
--- The 75 first designs use the following boxes:
---  st-block  ->  st-black, st_blocker, st-brake, st-laser, fl-swamp
---  st-brownie  ->  st-coinslot, st_pull
---  st-glass_move  ->  cherry
---  st-greenbrown_move  ->  hole
---  st-marble_move  ->  hole
---  st-rock3_move  ->  *
---  st_shogun  ->  st_shogun-m (not completely!)
---  st-wood[-growing]  ->  fl-swamp
-
--- Next follows a table to convert the codes Ralf used in his levels
--- and ralf_sokoban to libsoko-designs. Note that there is a shift
--- by -1 of the ralfcode in his library, except for design 0.
--- Hence, when you start an old sokoban level with
---   play_sokoban(level,715)
--- then ralf_sokoban.init is called with argument 714, which corresponds
--- to libsoko-design 4. Use
---   create_sokoban(..., ..., ralfcode_conversion_table[715])
--- to activate it.
---
-lib.soko.ralfcode_conversion_table = {
-     [0]   = 1,
-   [714+1] = 4,
-   [715+1] = 70,
-   [716+1] = 37,
-   [718+1] = 18,
-   [719+1] = 57,
-   [720+1] = 43,
-   [764+1] = 28,
-   [765+1] = 10,
-   [766+1] = 61,
-   [767+1] = 19,
-   [768+1] = 14,
-   [769+1] = 44,
-   [770+1] = 5,
-   [771+1] = 71,
-   [772+1] = 38,
-   [773+1] = 62,
-   [775+1] = 58,
-   [776+1] = 45,
-   [777+1] = 34,
-   [867+1] = 46,
-   [868+1] = 2,
-   [869+1] = 74,
-   [870+1] = 41,
-   [871+1] = 63,
-   [872+1] = 20,
-   [873+1] = 54,
-   [874+1] = 47,
-   [875+1] = 32,
-   [876+1] = 29,
-   [877+1] = 11,
-   [910+1] = 6,
-   [911+1] = 72,
-   [912+1] = 39,
-   [913+1] = 64,
-   [914+1] = 21,
-   [915+1] = 59,
-   [916+1] = 48,
-   [917+1] = 35,
-   [918+1] = 26,
-   [919+1] = 8,
-   [920+1] = 65,
-   [921+1] = 22,
-   [922+1] = 16,
-  [1184+1] = 30,
-  [1185+1] = 12,
-  [1186+1] = 66,
-  [1187+1] = 23,
-  [1188+1] = 15,
-  [1189+1] = 49,
-  [1190+1] = 7,
-  [1191+1] = 73,
-  [1192+1] = 40,
-  [1193+1] = 67,
-  [1194+1] = 24,
-  [1195+1] = 60,
-  [1196+1] = 50,
-  [1196+1] = 51,
-  [1197+1] = 36,
-  [1198+1] = 27,
-  [1199+1] = 9,
-  [1200+1] = 68,
-  [1232+1] = 3,
-  [1233+1] = 75,
-  [1234+1] = 42,
-  [1235+1] = 69,
-  [1236+1] = 25,
-  [1237+1] = 55,
-  [1237+1] = 56,
-  [1238+1] = 52,
-  [1239+1] = 33,
-  [1240+1] = 31,
-  [1241+1] = 13,
-  [1314+1] = 17,
-  [1315+1] = 53
-}
-
-    ]]></el:luamain>
-    <el:i18n>
-    </el:i18n>
-  </el:protected>
-</el:level>

Deleted: trunk/data/levels/lib/libsoko-endphase.xml
===================================================================
--- trunk/data/levels/lib/libsoko-endphase.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/libsoko-endphase.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -1,825 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
-<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
-  <el:protected>
-    <el:info el:type="library">
-      <el:identity el:title="" el:id="lib/libsoko-endphase"/>
-      <el:version el:score="1" el:release="1" el:revision="5" el:status="experimental"/>
-      <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
-      <el:license el:type="GPL v2.0 or above" el:open="true"/>
-      <el:compatibility el:enigma="1.10">
-      </el:compatibility>
-      <el:modes el:easy="false" el:single="false" el:network="false"/>
-      <el:comments>
-      </el:comments>
-      <el:score el:easy="-" el:difficult="-"/>
-    </el:info>
-    <el:luamain><![CDATA[
-
--- This "library" holds those functions and algorithms needed by libsoko.xml
--- that are used for triggering goals and preparing and executing the sokoball-
--- endphases. Don't include this library with your levels (it won't
--- have any effect), but libsoko.xml.
-
-lib.soko.GOAL_HOOK_RALF = 1
-lib.soko.ENDPHASE_HOOK_DEFAULT = 1
-
-------------------------------------------------------------------------
--- Goal Trigger and Endphase Main Functions
-------------------------------------------------------------------------
-
-function lib_soko_goal_trigger(onoff, sender)
-  local nr = sender._sokoarea
-  local more_boxes = false  -- memorizes whether a box was added or removed
-  if lib.soko.sokoarea[nr].endphase_started then
-    return
-  end
-
-  -- A new stone? Or has a stone been removed?
-  if(sender._box == 0) then
-    if -wo:st(sender) then
-      sender._box = 1
-      lib.soko.sokoarea[nr].goals_filled = lib.soko.sokoarea[nr].goals_filled + 1
-      more_boxes = true
-    else
-      -- blind alarm, probably a marble
-      return
-    end
-  else
-    sender._box = 0
-    lib.soko.sokoarea[nr].goals_filled = lib.soko.sokoarea[nr].goals_filled - 1
-  end
-
-  -- Call goal_hook, e.g. for algorithms "ralf" and "allcrack".
-  if type(lib.soko.sokoarea[nr].goal_hook) == "number" then
-    if lib.soko.sokoarea[nr].goal_hook == lib.soko.GOAL_HOOK_RALF then
-      lib.soko.endphase_goal_hook_ralf(nr, sender, more_boxes,
-          lib.soko.sokoarea[nr].goals_filled, lib.soko.sokoarea[nr].number_goals)
-    else
-      lib.soko.error("libsoko: Unknown goal hook.")
-    end
-  end
-  
-  -- Start endphase?
-  if lib.soko.sokoarea[nr].goals_filled == lib.soko.sokoarea[nr].number_goals then
-    lib.soko.sokoarea[nr].endphase_started = true
-    if type(lib.soko.sokoarea[nr].endphase_hook) == "number" then
-      if lib.soko.sokoarea[nr].endphase_hook == lib.soko.ENDPHASE_HOOK_DEFAULT then
-        lib.soko.endphase(nr)
-      else
-        lib.soko.error("libsoko: Unknown endphase hook number " .. 
-          lib.soko.sokoarea[nr].endphase_hook .. ".")
-      end
-    else
-      lib.soko.error("libsoko: Unknown endphase hook of type "
-        .. type(lib.soko.sokoarea[nr].endphase_hook) .. ".")
-    end
-  end
-end
-
-function lib.soko.prepare_endphase(sokoarea_number)
-  local nr = sokoarea_number
-  -- ensure existence of goals
-  if lib.soko.sokoarea[nr].number_goals < 1 then
-    lib.soko.error("No goals defined!\n")
-  end
-  -- ensure a correctly set endphase-attribute
-  local endp = lib.soko.sokoarea[nr].design.endp
-  if not endp then
-    lib.soko.sokoarea[nr].design.endp = lib.lua.deep_copy(lib.soko.default_design.endp)
-    endp = lib.soko.sokoarea[nr].design.endp
-  end
-  if type(endp) ~= "table" then
-    lib.soko.error("This design's endphase is given as "..type(endp)
-            ..", should be table.")
-  end
-  local alg = endp.alg
-  if alg == nil then
-    lib.soko.sokoarea[nr].design.endp.alg = lib.lua.deep_copy(lib.soko.default_design.endp.alg)
-    alg = endp.alg
-  end
-  if type(alg) ~= "string" then
-    lib.soko.error("This design's endphase algorithm is given as "..type(alg)
-            ..", should be string.")
-  end
-
-  -- decompose alg into algorithm name and additional parameter
-  local param = ""
-  local sep = string.find(alg, ":")
-  if sep then
-    alg = string.sub(endp.alg, 1, sep - 1)
-    param = string.sub(endp.alg, sep + 1)
-  end
-  
-  -- prepare oxyds
-  if     (alg == "circle")
-      or (alg == "hide")
-      or (alg == "fourswitch")
-      or (alg == "gradients")
-      or (alg == "magnets") then
-    -- nothing to prepare
-  elseif (alg == "ralf")
-      or (alg == "allcrack")
-      or (alg == "vortex") then
-    lib.soko.endphase_set_block_oxyds(nr, (lib.soko.sokoarea[nr].design.door or
-        lib.soko.sokoarea[nr].design.wall or "st_nil"), param)
-    lib.soko.sokoarea[nr].goal_hook = lib.soko.GOAL_HOOK_RALF
-  elseif (alg == "block") then
-    lib.soko.endphase_set_block_oxyds(nr, param)
-  elseif (alg == "outside") then
-    lib.soko.endphase_set_outside_oxyds(nr, param)
-  elseif (alg == "knock") then
-    lib.soko.endphase_set_block_oxyds(nr, lib.soko.sokoarea[nr].design.door, 3)
-    lib.soko.endphase_set_knocking(nr, param)
-  -- "Jumpyoxyds" deactivated for once
-  --elseif (alg == "jumpyoxyds") then
-  --  endphase_set_block_oxyds(nr, "jumpy")
-  --  goal_hook = lib.soko.GOAL_HOOK_RALF
-  else
-    lib.soko.warning("Endphase algorithm "..alg.." unknown! Will use 'circle' instead.")
-  end
-end
-
-function lib.soko.endphase(sokoarea_number)
-  -- Correct structure of endp-attribute has been checked
-  -- by prepare_endphase, we trust it blindly.
-  local endp = lib.lua.deep_copy(lib.soko.sokoarea[sokoarea_number].design.endp)
-  local alg = endp.alg
-  local param = ""
-  local marble = po(no["marble_"..sokoarea_number.."_1"])
-
-  -- decompose alg into algorithm name and additional parameter
-  local sep = string.find(alg, ":")
-  if sep then
-    alg = string.sub(endp.alg, 1, sep - 1)
-    param = string.sub(endp.alg, sep + 1)
-  end
-  if param == "" then
-    lib.soko.debug("Endphase starts of type "..alg..", no parameter.")
-  else
-    lib.soko.debug("Endphase starts of type "..alg..", parameter "..param..".")
-  end
-
-  -- redraw level and give items
-  lib.soko.endphase_redraw_level_array(sokoarea_number)
-  local give = lib.lua.deep_copy(endp.give)
-  if type(give) == "string" then
-    give = {give}
-  end
-  if type(give) == "table" then
-    for k, v in pairs(give) do
-      if is_item(v) or is_stone(v) or is_floor(v) then
-        lib.soko.set_element(marble, sokoarea_number, "", v)
-      elseif is_actor(v) then
-        wo[marble] = {v, 0.5, 0.5}
-      elseif v == "rubberball" then
-        local old_actor = no["marble_"..sokoarea_number.."_1"]
-        local actor_kind = "ac-whiteball"
-        if lib.soko.sokoarea[sokoarea_number].design.white then
-          actor_kind = "ac-blackball"
-        end
-        wo[marble] = {actor_kind, "rubberball_sokoarea_"..sokoarea_number,
-                        0.5, 0.5, controllers = 0}
-        wo:add({"ot_rubberband", anchor1 = no["marble_"..sokoarea_number],
-            anchor2 = no["rubberball_sokoarea_"..sokoarea_number], strength = 50})
-      else
-        lib.soko.error("Can't give "..v..".")
-      end
-    end
-  elseif type(give) ~= "nil" then
-    lib.soko.error("Can't give something of type "..type(v)..".")
-  end
-
-  if alg == "circle" then
-    lib.soko.endphase_circle(sokoarea_number)
-  elseif alg == "hide" then
-    lib.soko.endphase_set_hide_oxyds(sokoarea_number, param)
-  elseif    (alg == "ralf")
-         or (alg == "outside")
-         --or (alg == "jumpyoxyds")
-         or (alg == "block") then
-    lib.soko.endphase_ralf_open_doors(sokoarea_number)
-  elseif alg == "allcrack" then
-    lib.soko.endphase_ralf_open_doors(sokoarea_number)
-    lib.soko.endphase_allcrack(sokoarea_number)
-  elseif alg == "fourswitch" then
-    lib.soko.endphase_fourswitch(sokoarea_number)
-  elseif alg == "vortex" then
-    lib.soko.endphase_ralf_open_doors(sokoarea_number)
-    lib.soko.endphase_vortex(sokoarea_number)
-  elseif alg == "gradients" then
-    lib.soko.endphase_set_hide_oxyds(sokoarea_number)
-    lib.soko.endphase_gradients(sokoarea_number, param)
-  elseif alg == "magnets" then
-    lib.soko.endphase_set_hide_oxyds(sokoarea_number)
-    lib.soko.endphase_magnets(sokoarea_number, param)
-  elseif alg == "knock" then
-    -- don't do anything; endphase_call_knocking
-    -- queries endphase_started.
-  else
-    -- use default: "circle"
-    lib.soko.endphase_circle(sokoarea_number)
-  end
-end
-
-function lib.soko.endphase_redraw_level_array(sokoarea_number)
-  local nr = sokoarea_number or 1
-  local endp = lib.lua.deep_copy(lib.soko.sokoarea[nr].design.endp)
-  local offset = lib.soko.sokoarea[nr].offset
-  
-  -- small routine to check the walls and outside
-  local function is_oxyd_or_blocker(x,y)
-    if lib.soko.sokoarea[nr].list_oxyd[x.."/"..y] then
-      return true
-    elseif lib.soko.sokoarea[nr].list_blocker[x.."/"..y] then
-      return true
-    end
-    return false
-  end
-  
-  -- redraw outside
-  for p, v in pairs(lib.soko.sokoarea[nr].list_outside) do
-    if not is_oxyd_or_blocker(v.abs.x, v.abs.y) then
-      lib.soko.set_element(v.abs, nr, k, endp.outf)
-    end
-  end
-  
-  -- redraw the rest inside level_array:
-  for y = 0, lib.soko.sokoarea[nr].array_height - 1 do
-    for x = 0, lib.soko.sokoarea[nr].array_width - 1 do
-      if not is_oxyd_or_blocker(x + offset.x, y + offset.y) then
-        local ch = lib.soko.sokoarea[nr].level_array[y+1][x+1]
-        for k, v in pairs(endp) do
-          if    ((k == "inf")  and char_is_inf(ch))
-             or ((k == "wall") and char_is_wall(ch))
-             or ((k == "goal") and char_is_goal(ch)) then
-            lib.soko.set_element(offset + {x,y}, nr, k, v)
-          end
-        end
-      end
-    end
-  end
-  
-  -- if existent, redraw blocker floors
-  if (lib.soko.sokoarea[nr].list_blocker) and (endp.inf) then
-    for p, v in pairs(lib.soko.sokoarea[nr].list_blocker) do
-      lib.soko.set_element(v.abs, nr, "inf", endp.inf)
-    end
-  end 
-end
-
-------------------------------------------------------------------------
--- Endphase Games and Algorithms
-------------------------------------------------------------------------
-
-function lib.soko.endphase_circle(sokoarea_number)
-  local flavor = lib.soko.sokoarea[sokoarea_number].design.oxyd or "b"
-  local actor = no["marble_"..sokoarea_number.."_1"]
-  if not -actor then
-    actor = no["marble"]
-    if not -actor then
-      lib.soko.error("No marble found. Please name it 'marble'.")  
-    end
-  end
-  local abs = po(actor)
-  if abs.x > 10 then
-    abs = abs + {-2,0}
-  end
-  if abs.y > 6 then
-    abs = abs + {0,-2}
-  end
-  for j = 0, 2 do
-    lib.soko.set_oxyd(sokoarea_number, {abs = abs + {j,-1}}, flavor, 2*j)
-    lib.soko.set_oxyd(sokoarea_number, {abs = abs + {-1,j}}, flavor, 2*j)
-    lib.soko.set_oxyd(sokoarea_number, {abs = abs + {j,3}},  flavor, 2*j+1)
-    lib.soko.set_oxyd(sokoarea_number, {abs = abs + {3,j}},  flavor, 2*j+1)
-    for k = 0, 2 do
-      wo:st(abs + {j,k}):kill()
-      wo:it(abs + {j,k}):kill()
-      lib.soko.set_element(abs + {j,k}, sokoarea_number, "inf")
-    end
-  end
-  wo[abs + {1,1}] = {"st_fart", _sokoarea = sokoarea_number}
-  wo:shuffleOxyd()
-end
-
--- endphase_set_outside_oxyds distributes oxyds over the outside and
--- wall_two-area of the level. There will be 2 to 5 pairs of oxyds
--- depending on the amount of space. PARAM may define a maximal
--- number of oxyd pairs (good for outf = "fl-space").
-function lib.soko.endphase_set_outside_oxyds(sokoarea_number, param)
-  local places = {}
-  local nr = sokoarea_number or 1
-  local offset = lib.soko.sokoarea[nr].offset
-  local mx = lib.soko.sokoarea[nr].array_width
-  local my = lib.soko.sokoarea[nr].array_height
-  local flavor = lib.soko.sokoarea[nr].design.oxyd or "b"
-
-  -- Select all places outside or in the walls, unreachable
-  -- for the marble.
-  for p, v in pairs(lib.lua.combine_tables(lib.soko.sokoarea[nr].list_outside,
-                lib.soko.sokoarea[nr].list_wall_two)) do
-    if (v.abs.x % 2 == 0) and (v.abs.y % 2 == 0) then
-      table.insert(places, v)
-    end
-  end
-
-  -- Choose some appropriate subset
-  local max = table.getn(places)
-  local number_pairs = 2
-  if max < 2 then
-    -- Not enough places? Then choose corners of level_array.
-    -- They should always be at least wall_two and far enough
-    -- away from each other.
-    places = { {abs = offset},
-               {abs = offset + {mx - 1, 0}},
-               {abs = offset + {0, my - 1}},
-               {abs = offset + {mx - 1, my - 1}}}
-  elseif max <  20 then  number_pairs = 2
-  elseif max <  50 then  number_pairs = 3
-  elseif max < 100 then  number_pairs = 4
-  else                   number_pairs = 5
-  end
-  if (type(param) ~= "nil") and (param ~= "") then
-    local max_pairs = tonumber(param)
-    if max_pairs then
-      number_pairs = math.min(max_pairs, number_pairs)
-    end    
-  end
-
-  places = lib.lua.shuffle(places)
-
-  for j = 1, number_pairs do
-    lib.soko.set_oxyd(sokoarea_number, places[2*j-1], flavor, j - 1)
-    lib.soko.set_oxyd(sokoarea_number, places[2*j], flavor, j - 1)
-  end
-  wo:shuffleOxyd()
-end
-
-function lib.soko.endphase_set_block_oxyds(sokoarea_number, blocker, max_pairs)
-  local oxyds = {}
-  local nr = sokoarea_number or 1
-  local flavor = lib.soko.sokoarea[nr].design.oxyd or "b"
-
-  -- Add all wall_one-elements with exactly one way near as blocker,
-  -- and the opposite position as oxyd, if it is of type wall_two.
-  -- Make sure that each possible oxyd position is assigned at most once,
-  -- and that no other oxyds or blockers are near.
-  local function opposite_as_oxyd(xy, dxy)
-    if     lib.soko.sokoarea[nr].list_way[(xy.x+dxy.x).."/"..(xy.y+dxy.y)]
-       and lib.soko.sokoarea[nr].list_wall_two[(xy.x-dxy.x).."/"..(xy.y-dxy.y)] then
-      -- Check that no oxyd has been set on this position before
-      -- and no other oxyd or blocker is near the new oxyd or its
-      -- blocker.
-      for j, w in pairs(oxyds) do
-        if    (lib.math.manhattan_distance(w.blocker.abs, xy) <= 1)
-           or (lib.math.manhattan_distance(w.abs, xy) <= 1)
-           or (lib.math.manhattan_distance(w.blocker.abs, xy - dxy) <= 1)
-           or (lib.math.manhattan_distance(w.abs, xy - dxy) <= 1) then
-          return
-        end
-      end
-      table.insert(oxyds, {abs = xy - dxy,
-          blocker = {abs = xy, oxyd = {abs = xy - dxy}}, way = {abs = xy + dxy}})
-      return
-    end
-    return
-  end
-  local directions = {po({-1,0}), po({1,0}), po({0,-1}), po({0,1})}
-  for p, v in pairs(lib.soko.sokoarea[nr].list_wall_one) do
-    if v.count == 1 then
-      for _, dir in ipairs(directions) do
-        opposite_as_oxyd(v.abs, dir)
-      end
-    end
-  end
-
-  -- Choose some appropriate subset
-  local max = table.getn(oxyds)
-  local number_pairs = 2
-  if max < 4 then
-    -- Not enough places? Choose "circle"-algorithm instead.
-    lib.soko.sokoarea[nr].design.endp.alg = "circle"
-    return
-  elseif max <  8 then  number_pairs = 2
-  elseif max < 16 then  number_pairs = 3
-  elseif max < 28 then  number_pairs = 4
-  else                  number_pairs = 5
-  end
-  if (type(max_pairs) ~= "nil") and (max_pairs ~= "") then
-    if tonumber(max_pairs) >= 1 then
-      number_pairs = math.min(tonumber(max_pairs), number_pairs)
-    end    
-  end
-
-  oxyds = lib.lua.shuffle(oxyds)
-
-  -- set oxyds and blockers
-  local function set_block(w)
-    local myblocker = lib.lua.deep_copy(blocker)
-    -- If there's an entry "st_door_d", choose the faces.
-    if type(myblocker) == "string" then
-      myblocker = {myblocker}
-    end
-    for j, v in pairs(myblocker) do
-      if v == "st_door_d" then
-        if w.abs.x == w.oxyd.abs.x then
-          myblocker[j] = "st_door_d"
-        else
-          myblocker[j] = "st_door_d_ew"
-        end        
-      end
-    end
-    -- now set in-floor and blocker, and add to list_blocker.
-    lib.soko.set_element(w.abs, nr, "inf")
-    lib.soko.set_element(w.abs, nr, "", myblocker)
-    lib.soko.sokoarea[nr].list_blocker[(w.abs.x).."/"..(w.abs.y)] = lib.lua.deep_copy(w)
-  end
-  for j = 1, number_pairs do   -- Testlevel: 14
-    lib.soko.set_oxyd(nr, oxyds[2*j-1], flavor, j - 1)
-    lib.soko.set_oxyd(nr, oxyds[2*j], flavor, j - 1)
-    set_block(oxyds[2*j-1].blocker)
-    set_block(oxyds[2*j].blocker)
-  end
-  wo:shuffleOxyd()
-
-  -- assign goals to blockers
-  -- Note: There might be more goals as blockers, and, vice versa,
-  --       there might be more blockers as goals.
-  local goal_table = {}
-  for p, v in pairs(lib.soko.sokoarea[nr].list_goal) do
-    table.insert(goal_table, v)
-  end
-  goal_table = lib.lua.shuffle(goal_table)
-  for j = 2, math.min(table.getn(goal_table), table.getn(oxyds)) do
-    lib.soko.sokoarea[nr].goal_to_blocker[goal_table[j].goal_number] = oxyds[j].blocker
-  end
-end
-
--- endphase_set_hide_oxyds distributes oxyds over the wall_one-walls.
--- PARAM is a maximal number of oxyd pairs.
-function lib.soko.endphase_set_hide_oxyds(sokoarea_number, param)
-  local flavor = lib.soko.sokoarea[sokoarea_number].design.oxyd or "b"
-  local places = {}
-  
-  -- add all wall_one-elements
-  for p, v in pairs(lib.soko.sokoarea[sokoarea_number].list_wall_one) do
-    table.insert(places, v)
-  end
-
-  places = lib.lua.shuffle(places)
-  
-  -- choose number of oxyds
-  local max = table.getn(places)
-  local number_pairs = 1
-  if max < 2 then
-    -- use circle instead
-    lib.soko.endphase_circle(sokoarea)
-    return
-  elseif max <  6  then  number_pairs = 2
-  elseif max < 10  then  number_pairs = 3
-  elseif max < 30  then  number_pairs = 4
-  else                   number_pairs = 5 end
-  if (type(param) ~= "nil") and (param ~= "") then
-    local max_pairs = tonumber(param)
-    if max_pairs then
-      number_pairs = math.min(max_pairs, number_pairs)
-    end    
-  end
-  
-  -- set oxyds
-  for j = 1, number_pairs do
-    lib.soko.set_oxyd(sokoarea_number, places[2*j-1], flavor, j - 1)
-    lib.soko.set_oxyd(sokoarea_number, places[2*j], flavor, j - 1)
-  end
-  wo:shuffleOxyd()
-end
-
-function lib.soko.endphase_gradients(sokoarea_number, param)
-  local force = tonumber(param) or 25.0
-  for p, v in pairs(lib.soko.sokoarea[sokoarea_number].list_way) do
-    local grad_type = random(1,12)
-    wo[v.abs] = {"fl-gradient", type = grad_type, force = force}
-  end
-end
-
-function lib.soko.endphase_magnets(sokoarea_number, param)
-  local force = tonumber(param) or 30.0
-  local places = {}
-  local nr = sokoarea_number or 1
-  local flavor = lib.soko.sokoarea[nr].design.oxyd or "b"
-
-  -- add all way-elements which are not goals
-  for p, v in pairs(lib.soko.sokoarea[nr].list_way) do
-    if not char_is_goal(lib.soko.sokoarea[nr].level_array[v.rel.y][v.rel.x]) then
-      table.insert(places, v)
-    end
-  end
-
-  places = lib.lua.shuffle(places)
-
-  -- choose number of magnets
-  local number_magnets = math.floor(table.getn(places)/6)
-
-  -- set magnets
-  for j = 1, number_magnets do
-    wo[places[j].abs] = {"it_magnet_on", range = 5, strength = force}
-  end
-end
-
-function lib.soko.endphase_fourswitch(sokoarea_number)
-  local flavor = lib.soko.sokoarea[sokoarea_number].design.oxyd or "b"
-  local places = {}
-
-  -- add all wall_one-elements
-  for p, v in pairs(lib.soko.sokoarea[sokoarea_number].list_wall_one) do
-    table.insert(places, v)
-  end
-
-  places = lib.lua.shuffle(places)
-
-  -- choose number of fourswitchs/oxyds
-  local max = table.getn(places)
-  local number_pairs = 1
-  if max < 2 then
-    -- use circle instead
-    lib.soko.endphase_circle(sokoarea_number)
-    return
-  elseif max <  6  then  number_pairs = 2
-  elseif max < 10  then  number_pairs = 3
-  else                   number_pairs = 4 end
-  
-  -- set fourswitchs
-  for j = 1, 2*number_pairs do
-    wo[places[j].abs] =
-        {"st_fourswitch", target = "lib_soko_endphase_call_fourswitch", _number = j,
-         _sokoarea = sokoarea_number}
-    places[j].current = 4
-    places[j].solve = random(1,4)
-    places[j].correct = false
-  end
-  places.number_pairs = number_pairs
-  lib.soko.sokoarea[sokoarea_number].places = lib.lua.deep_copy(places)
-end
-
-function lib_soko_endphase_call_fourswitch(onoff, sender)
-  local j = sender._number
-  local nr = sender._sokoarea
-  local places = lib.soko.sokoarea[nr].places
-
-  -- When fourswitch is knocked, count it.
-  places[j].current = places[j].current + 1
-  if places[j].current == 5 then
-    places[j].current = 1
-  end
-  
-  -- When count is correct, make it "st-likeoxyda-open".
-  if places[j].current == places[j].solve then
-    places[j].correct = true
-    wo[places[j].abs] = {"st-likeoxyda-open", _number = 0, _sokoarea = sokoarea_number}
-  end
-
-  -- Now the difficult part: If it's the first fourswitch (the one
-  -- fourswitch that doesn't change any other), check all fourswitchs
-  -- and replace them by oxyds if all are correct. Else, recreate the
-  -- next fourswitch in hierarchy, set it to the old number, then
-  -- set the callback function and call it once by triggering another
-  -- time (making it show the new number). This means: Recursion!
-  if j ~= 1 then
-    -- Trigger all lower fourswitchs
-    local xy = places[j-1].abs
-    if places[j-1].correct then
-      -- reset the fourswitch
-      wo[xy] = {"st_fourswitch", _number = j - 1, _sokoarea = sokoarea_number}
-      mystone = wo:st(xy)
-      for k = 1, places[j-1].current do
-        mystone:toggle()
-      end
-      mystone.target = "lib_soko_endphase_call_fourswitch"
-      places[j-1].correct = false
-    end
-    wo:st(xy):toggle()
-  else
-    -- Check all fourswitchs
-    local correct = true
-    for k = 1, 2*places.number_pairs do
-      correct = correct and places[k].correct
-    end
-    if correct then
-      -- replace fourswitchs by oxyds
-      for k = 1, places.number_pairs do
-        lib.soko.set_oxyd(sokoarea_number, places[2*k-1], flavor, k - 1)
-        lib.soko.set_oxyd(sokoarea_number, places[2*k], flavor, k - 1)
-      end
-      wo:shuffleOxyd()
-    end
-  end  
-end
-
-
-function lib.soko.endphase_allcrack(sokoarea_number)
-  for p, v in pairs(lib.soko.sokoarea[sokoarea_number].list_way) do
-    if not -wo:it(v.abs) then
-      wo[v.abs] = {"it-crack3"}
-    end
-  end  
-end
-
-function lib.soko.endphase_goal_hook_ralf(sokoarea_number, sender, more_boxes,
-    goals_filled, number_goals)
-  local nr = sokoarea_number or 1
-  -- verify correct sokoarea-number and existence of "goal_to_blocker"
-  if nr ~= sender._sokoarea then
-    lib.soko.error("libsoko: Inconsistent sokoarea numbers in goal hook!")
-  end
-  if type(lib.soko.sokoarea[nr].goal_to_blocker) ~= "table" then
-    lib.soko.error("libsoko: Blocker list is missing during goal hook!")
-  end
-  -- identify the corresponding door and open it
-  local blocker = lib.soko.sokoarea[nr].goal_to_blocker[sender._goal_number]
-  if blocker then
-    lib.soko.endphase_ralf_open_door(nr, more_boxes, blocker.abs)
-  end
-end
-
-function lib.soko.endphase_ralf_open_doors(sokoarea_number)
-  for p, v in pairs(lib.soko.sokoarea[sokoarea_number].list_blocker) do
-    lib.soko.endphase_ralf_open_door(sokoarea_number, true, v.abs)
-  end
-end
-
--- endphase_ralf_open_door opens or closes a door at position
--- (X,Y), dependend on the boolean OPEN.
-function lib.soko.endphase_ralf_open_door(sokoarea_number, open, xy)
-  local door_kind = lib.soko.sokoarea[sokoarea_number].design.endp.open_door
-  if door_kind then
-    if not open then
-      door_kind =    lib.soko.sokoarea[sokoarea_number].design.door
-                  or lib.soko.sokoarea[sokoarea_number].design.wall or "st_nil"
-    end
-    lib.soko.set_element(xy, sokoarea_number, "", door_kind)
-  else
-    -- use default "open"/"close"-messages instead
-    local st = wo:st(xy)
-    local it = wo:it(xy)
-    local fl = wo:fl(xy)
-    if -st and st._sokoarea then
-      st:message(lib.lua.cond(open, "open", "close"))
-    end
-    if -it and it._sokoarea then
-      it:message(lib.lua.cond(open, "open", "close"))
-    end
-    if -fl then
-      fl:message(lib.lua.cond(open, "close", "open"))
-    end
-  end  
-end
-
-function lib.soko.endphase_vortex(sokoarea_number)
-  local nr = sokoarea_number or 1
-  local list_way = 
-    lib.lua.combine_tables(lib.soko.sokoarea[nr].list_way, lib.soko.sokoarea[nr].list_blocker)
-  local components = 0
-  local component = {}
-
-  -- Remove old component-entries, in case there are still some left.
-  for p, v in pairs(list_way) do
-    list_way[p].component = nil
-  end
-
-  -- Analyse connected components of list_way, separated by goals.
-  local function mark_component(xy)
-    if     (list_way[xy.x.."/"..xy.y])
-       and (not list_way[xy.x.."/"..xy.y].component)
-       and (not lib.soko.sokoarea[nr].list_goal[xy.x.."/"..xy.y]) then
-      list_way[xy.x.."/"..xy.y].component = components
-      --set_floor(({"fl-leaves", "fl-ice", "fl-red", "fl-black", "fl-white",
-      --    "fl-sahara", "fl-light", "fl-gray", "fl-lightgray", "fl-rough",
-      --    "fl-marble", "fl-tigris"})[components] or "fl-sand", lx, ly)
-      table.insert(component[components], {abs = xy})
-      mark_component(xy + {1,0})
-      mark_component(xy + {-1,0})
-      mark_component(xy + {0,1})
-      mark_component(xy + {0,-1})
-    end
-  end
-  for p, v in pairs(list_way) do
-    if (not list_way[p].component) and (not lib.soko.sokoarea[nr].list_goal[p]) then
-      components = components + 1
-      component[components] = {oxyds = 0}
-      mark_component(v.abs)
-    end    
-  end
-
-  -- If only one component, exit, player will find his or her way alone.
-  if components < 2 then
-    return
-  end
-
-  -- Analyse oxyds and to which components they belong to.
-  for p, v in pairs(lib.soko.sokoarea[nr].list_oxyd) do
-    local component_number = list_way[v.blocker.abs.x.."/"..v.blocker.abs.y].component or -1
-    if component_number == -1 then
-      lib.soko.error("Error in component calculation.")
-    else
-      component[component_number].oxyds = component[component_number].oxyds + 1
-    end
-  end  
-
-  -- Let there be at most max(5, number-of-oxyd-components)
-  -- components, plus the one the marble actually occupies.
-  local t = {}  -- helper table: components with oxyds or marble
-  local u = {}  -- helper table: all components except t
-  local mx, my = po(no["marble_"..nr.."_1"]):xy()
-  local marble_component = (list_way[mx.."/"..my] or {}).component
-  for j = 1, components do
-    if (component[j].oxyds > 0) or (j == marble_component) then
-      table.insert(t, component[j])
-    else
-      table.insert(u, component[j])
-    end
-  end
-  u = lib.lua.shuffle(u)
-  while (table.getn(t) < 5) and (table.getn(u) > 0) do
-    table.insert(t, u[table.getn(u)])
-    table.remove(u)
-  end
-  component = t
-  components = table.getn(component)
-
-  -- From each component, choose one tile and save the position
-  local vortex = {}
-  for j = 1, components do
-    table.insert(vortex, component[j][random(1, table.getn(component[j]))])
-  end
-  
-  -- Find a cyclic permutation (i.e. with only one cycle) to connect the
-  -- vortices (each vortex shall be reached by starting from any other).
-  local connect = lib.math.cyclic_permutation(components)
-
-  -- Now set and connect the vortices
-  for j, v in ipairs(vortex) do
-    local w = vortex[connect[j]]
-    -- Remember: We also allow (we need!) vortices at old blocker-positions.
-    -- There could still be a stone over this. This stone might be st-blocker,
-    -- which turns to it-blocker and has therefore to be removed. Better
-    -- we remove all stones:
-    wo:st(v.abs):kill()
-    wo[v.abs] = {"it_vortex_open", destination = w.abs}
-  end  
-end
-
-function lib.soko.endphase_set_knocking(sokoarea_number, param)
-  local nr = sokoarea_number
-  local flavor = lib.soko.sokoarea[nr].design.oxyd or "b"
-  local places = {}
-
-  -- add all blockers
-  for p, v in pairs(lib.soko.sokoarea[nr].list_blocker) do
-    table.insert(places, v)
-  end
-
-  places = lib.lua.shuffle(places)
-
-  -- set attributes of door
-  for j, v in ipairs(places) do
-    local st = wo:st(v.abs)
-    if -st then
-      st.action = "callback"
-      st.target = "lib_soko_endphase_call_knocking"
-      st._close = places[lib.lua.mod(j, table.getn(places)) + 1].abs
-      st._open = places[lib.lua.mod(j+1, table.getn(places)) + 1].abs
-      st._number = j
-    end
-  end
-end
-
-function lib_soko_endphase_call_knocking(onoff, sender)
-  local j = sender._number
-  local nr = sender._sokoarea
-  if (not nr) or (not j) then
-    lib.soko.error("libsoko: Knocking's source has no number or no sokoarea.")
-  end
-  lib.soko.debug("Knocked on "..j.."/"..lib.soko.sokoarea[nr].number_oxyds)
-  -- Deactivate the first door until endphase has started.
-  if (j == 1) and (not lib.soko.sokoarea[nr].endphase_started) then
-    lib.soko.debug("Door deactivated until endphase.")
-    return
-  end
-  -- Open or close the neccessary doors given as attributes.
-  if sender._sokoarea == nr then
-    if wo:st(sender._close):is("st_door") then
-      wo:st(sender._close):close()
-    end
-    if wo:st(sender._open):is("st_door") then
-      wo:st(sender._open):open()
-    end
-  end
-end
-
-    ]]></el:luamain>
-    <el:i18n>
-    </el:i18n>
-  </el:protected>
-</el:level>
-

Modified: trunk/data/levels/lib/libsoko.xml
===================================================================
--- trunk/data/levels/lib/libsoko.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/libsoko.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -3,15 +3,15 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libsoko"/>
-      <el:version el:score="1" el:release="1" el:revision="4" el:status="experimental"/>
+      <el:version el:score="1" el:release="1" el:revision="5" el:status="released"/>
       <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
-      <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
+      <el:copyright>Copyright ? 2007, 2008, 2009 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
         <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
         <el:dependency el:path="lib/libmath" el:id="lib/libmath" el:release="1" el:preload="true"/>
-        <el:dependency el:path="lib/libsoko-designlist" el:id="lib/libsoko-designlist" el:release="1" el:preload="false"/>
-        <el:dependency el:path="lib/libsoko-endphase" el:id="lib/libsoko-endphase" el:release="1" el:preload="false"/>
+        <el:dependency el:path="lib/libimport" el:id="lib/libimport" el:release="1" el:preload="true"/>
+        <el:dependency el:path="lib/libsoko_designlist" el:id="lib/libsoko_designlist" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="false" el:single="false" el:network="false"/>
       <el:comments>
@@ -24,644 +24,59 @@
     </el:info>
     <el:luamain><![CDATA[
 
--- libsoko.xml uses data from libsoko-designlist.xml and functions from
--- libsoko-endphase.xml. Please read the comments in libsoko-designlist.xml
--- to understand design tables, and libsoko-endphase.xml for goal-triggering
--- and endphases.
-
 lib.soko = {}
 setmetatable(lib.soko, getmetatable(lib))
+lib.soko.keys_to_field_names = {["  "] = "inf", ["- "] = "outf", ["$ "] = "box",
+    ["# "] = "wall", [" ."] = "goal", ["D "] = "door", ["d "] = "open_door"}
+    
+-- The following constants are defined in libsoko_designlist:
+-- RESOLVE_ALL = 0
+-- RESOLVE_RANDOM = 1
+-- RESOLVE_CHECKERBOARD = 2
+-- RESOLVE_LINES = 3
+-- RESOLVE_WAVES = 4
+-- RESOLVE_ORIENTED = 5
+GOAL_HOOK_DEFAULT = 0
+GOAL_HOOK_RALF = 1
 
-enigma.LoadLib("lib/libsoko-designlist")
-enigma.LoadLib("lib/libsoko-endphase")
+lib.soko.resolver_info = {}
+lib.soko.area = {}
+lib.soko.endphase_started = false
+lib.soko.initially_completed_goals = 0
+lib.soko.goal_hook = GOAL_HOOK_DEFAULT
 
 ------------------------------------------------------------------------
--- Global variables
+-- lib.soko.area
 ------------------------------------------------------------------------
 
--- The global table "sokoarea" holds all sokoban parts a level
--- creates. I.e., lib.soko.sokoarea[1] holds information about the first
--- part, lib.soko.sokoarea[2] about the second etc. In most cases, only
--- lib.soko.sokoarea[1] will be used.
--- Each lib.soko.sokoarea[j] is again a table with the following entries:
---
---        level_array - a 2D-array of characters defining the sokoban part
---        array_width - width of level_array
---       array_height - height of level_array
---             design - the used design table
---       number_goals - number of goals this part controls
---       goals_filled - number of filled goals
---        actor_count - number of actors in this sokoban part
---   endphase_started - a flag to mark completed sokobans
---             offset - position of the level_array within the whole level
---         uses_chess - flag to note that st-chess was used (no shogun-triggers)
---        level_width - width of whole level (create_sokoban only)
---       level_height - height of whole level (create_sokoban only)
---          goal_hook - describes the function to call when a goal is activated/deactivated
---      endphase_hook - describes the function to call when all triggers are filled
---
--- However, you can call endphase(sokoarea_number) yourself if neccessary.
---
---       list_outside - list of positions of outf-tiles
---          list_wall - list of all walls
---           list_way - list of all inside positions that the marble
---                      can reach on level-end (incl. goals)
---      list_wall_one - list of outer walls near ways
---      list_wall_two - list of outer walls or outf one tile away from
---                      ways, together with a list of neighboring wall_ones.
---          list_goal - list of all goals
---
--- Each list entry is a table: Entries lx and ly are absolute positions
--- ("level"), ax and ay are positions in the level_array, if existent
--- (nil else). Some endphases also use list_oxyd, list_blocker,
--- goal_to_blocker and/or number_oxyds as additional data structures.
-
-lib.soko.sokoarea = {}
-
-------------------------------------------------------------------------
--- Tools
-------------------------------------------------------------------------
-
-function lib.soko.debug(st)
-  print(st)
-end
-function lib.soko.warning(st)
-  print(st)
-end
-function lib.soko.error(st)
-  error(st, 2)
-end
-
-function is_floor(s)        return string.sub(s, 1, 2) == "fl"  end
-function is_stone(s)        return string.sub(s, 1, 2) == "st"  end
-function is_item(s)         return string.sub(s, 1, 2) == "it"  end
-function is_actor(s)        return string.sub(s, 1, 2) == "ac"  end
-function char_is_outf(ch)   return string.find(ch, "[ ]")       == 1  end
-function char_is_inf(ch)    return not char_is_outf(ch)               end
-function char_is_wall(ch)   return string.find(ch, "[#]")       == 1  end
-function char_is_goal(ch)   return string.find(ch, "[\.\*\+N]") == 1  end
-function char_is_box(ch)    return string.find(ch, "[$\*]")     == 1  end
-function char_is_chess(ch)  return string.find(ch, "[nN]")      == 1  end
-function char_is_player(ch) return string.find(ch, "[@\+]")     == 1  end
-
--- choose_among_multiples selects a number between 1 and COUNT
--- based on the coordinates X and Y and the algorithm's name ALG.
-function lib.soko.choose_among_multiples(abs, count, alg)
-  if alg == "checkerboard" then
-    return (((abs.x%2) + (abs.y%2)) % count) + 1
-  elseif alg == "lines" then
-    return ((abs.x + abs.y) % count) + 1
-  elseif alg == "waves" then
-    local x, y = abs:xy()
-    return ((x + y * y + x*y*x + 3*y*x*y*x) % count) + 1
-  elseif alg == "random" then
-    return math.random(count)
-  end
-end
-
--- check_chess returns a boolean whether a chess stone is used
--- in the sokoarea SOKOAREA_NUMBER.
-function lib.soko.check_chess(sokoarea_number)
-  for y = 1, lib.soko.sokoarea[sokoarea_number].array_height do
-    for x = 1, lib.soko.sokoarea[sokoarea_number].array_width do
-      local ch = lib.soko.sokoarea[sokoarea_number].level_array[y][x]
-      if char_is_chess(ch) then
-        return true
-      end
-    end
-  end
-  return false
-end
-
--- set_oxyd sets an oxyd with given flavor and color and adds
--- the neccessary entry to list_oxyd.
-function lib.soko.set_oxyd(sokoarea_number, list_entry, flavor, color)
-  local entry = lib.lua.deep_copy(list_entry)
-  entry.flavor = flavor
-  entry.color = color
-  wo[entry.abs] = {"st_oxyd", flavor = flavor, oxydcolor = color}
-  lib.soko.sokoarea[sokoarea_number].list_oxyd[entry.abs.x.."/"..entry.abs.y] = entry
-  lib.soko.sokoarea[sokoarea_number].number_oxyds =
-      lib.soko.sokoarea[sokoarea_number].number_oxyds + 1
-end
-
--- create_lists creates the special lists list_outside, list_wall,
--- list_way, list_wall_one and list_wall_two for SOKOAREA_NUMBER.
-function lib.soko.create_lists(sokoarea_number)
-  local nr = sokoarea_number or 1
-  local offset = lib.soko.sokoarea[nr].offset
-  local mx = lib.soko.sokoarea[nr].array_width
-  local my = lib.soko.sokoarea[nr].array_height
-  lib.soko.sokoarea[nr].list_outside = {}
-  lib.soko.sokoarea[nr].list_way = {}
-  lib.soko.sokoarea[nr].list_wall_one = {}
-  lib.soko.sokoarea[nr].list_wall_two = {}
-  -- list_way, list_wall and list_outside (inside level_array)
-  for x = 0, mx - 1 do
-    for y = 0, my - 1 do
-      local ch = lib.soko.sokoarea[nr].level_array[y+1][x+1]
-      local entry = {abs = offset + {x,y}, rel = po({x+1, y+1})}
-      local sig = entry.abs.x.."/"..entry.abs.y
-      if char_is_outf(ch) then
-        lib.soko.sokoarea[nr].list_outside[sig] = entry
-      elseif char_is_wall(ch) then
-        lib.soko.sokoarea[nr].list_wall[sig] = entry
-      else
-        lib.soko.sokoarea[nr].list_way[sig] = entry
-      end
-    end
-  end
-  -- list_outside (outside level_array)
-  if lib.soko.sokoarea[nr].level_width and lib.soko.sokoarea[nr].level_height then
-    for x = 0, lib.soko.sokoarea[nr].level_width - 1 do
-      for y = 0, lib.soko.sokoarea[nr].level_height - 1 do
-        if    (x < offset.x) or (x > mx + offset.x - 1)
-           or (y < offset.y) or (y > my + offset.y - 1) then
-          lib.soko.sokoarea[nr].list_outside[x.."/"..y] = {abs = po({x,y})}
+-- lib.soko.area provides a way to save information about specific
+-- positions of the current level (see it as "attributes for positions").
+function lib.soko.area_get(self, index)
+    if usertype(index) == "position" then
+        local signature = index.x .. "/" .. index.y
+        if not rawget(self, signature) then
+            rawset(self, signature, {})
         end
-      end
-    end
-  end
-  -- list_wall_one
-  -- There are three conditions for an element of list_wall_one:
-  -- (i) it's a wall, (ii) it's near or diagonal to outside,
-  -- (iii) it's near a way.
-  -- In addition, it counts the number of near ways.
-  for p, v in pairs(lib.soko.sokoarea[nr].list_wall) do
-    local x = v.abs.x
-    local y = v.abs.y
-    if    lib.soko.sokoarea[nr].list_outside[(x-1).."/"..(y)]
-       or lib.soko.sokoarea[nr].list_outside[(x+1).."/"..(y)]
-       or lib.soko.sokoarea[nr].list_outside[(x).."/"..(y-1)]
-       or lib.soko.sokoarea[nr].list_outside[(x).."/"..(y+1)]
-       or lib.soko.sokoarea[nr].list_outside[(x+1).."/"..(y+1)]
-       or lib.soko.sokoarea[nr].list_outside[(x+1).."/"..(y-1)]
-       or lib.soko.sokoarea[nr].list_outside[(x-1).."/"..(y+1)]
-       or lib.soko.sokoarea[nr].list_outside[(x-1).."/"..(y-1)] then
-      local count = 0
-      if lib.soko.sokoarea[nr].list_way[(x-1).."/"..(y)] then  count = count + 1  end
-      if lib.soko.sokoarea[nr].list_way[(x+1).."/"..(y)] then  count = count + 1  end
-      if lib.soko.sokoarea[nr].list_way[(x).."/"..(y-1)] then  count = count + 1  end
-      if lib.soko.sokoarea[nr].list_way[(x).."/"..(y+1)] then  count = count + 1  end
-      if count > 0 then
-        lib.soko.sokoarea[nr].list_wall_one[x.."/"..y] =
-            {abs = v.abs, rel = v.rel, count = count}
-      end
-    end
-  end
-  -- list_wall_two
-  -- There are three conditions for an element of list_wall_two:
-  -- (i) it's near a wall_one, (ii) it's not a wall_one,
-  -- (iii) it's wall or outside. Next function lib.soko.checks (ii) and (iii)
-  -- and adds the checked element to the list. In addition, the
-  -- neighboring wall_one are added into the list.
-  local function check_ii_and_iii(x, y, one_x, one_y)
-    if lib.soko.sokoarea[nr].list_wall_one[x.."/"..y] then
-      return
-    end
-    if lib.soko.sokoarea[nr].list_way[x.."/"..y] then
-      return
-    end
-    if not lib.soko.sokoarea[nr].list_wall_two[x.."/"..y] then
-      -- create new entry
-      lib.soko.sokoarea[nr].list_wall_two[x.."/"..y] =
-          {abs = po({x,y}), rel = nil, wall_one = {}}
-    end
-    -- add the corresponding wall_one
-    local w = table.getn(lib.soko.sokoarea[nr].list_wall_two[x.."/"..y].wall_one) + 1
-    lib.soko.sokoarea[nr].list_wall_two[x.."/"..y].wall_one[w] =
-        lib.soko.sokoarea[nr].list_wall_one[one_x.."/"..one_y]
-  end
-  for p, v in pairs(lib.soko.sokoarea[nr].list_wall_one) do
-    check_ii_and_iii(v.abs.x+1, v.abs.y, v.abs.x, v.abs.y)
-    check_ii_and_iii(v.abs.x-1, v.abs.y, v.abs.x, v.abs.y)
-    check_ii_and_iii(v.abs.x, v.abs.y+1, v.abs.x, v.abs.y)
-    check_ii_and_iii(v.abs.x, v.abs.y-1, v.abs.x, v.abs.y)
-  end  
-end
-
--- new_sokoarea initialises a new entry in the global
--- sokoarea table and returns its number.
-function lib.soko.new_sokoarea()
-  sokoarea_number = table.getn(lib.soko.sokoarea) + 1
-  lib.soko.sokoarea[sokoarea_number] = {
-    level_array = {},
-    design = lib.soko.default_design,
-    algorithms = {},
-    number_goals = 0,
-    goals_filled = 0,
-    actor_count = 0,
-    endphase_started = false,
-    offset = po({0, 0}),
-    level_width = nil,
-    level_height = nil,
-    uses_chess = false,
-    goal_hook = nil,
-    endphase_hook = lib.soko.ENDPHASE_HOOK_DEFAULT,
-    list_outside = {},
-    list_wall = {},
-    list_way = {},
-    list_wall_one = {},
-    list_wall_two = {},
-    list_goal = {},
-    list_oxyd = {},
-    list_blocker = {},
-    goal_to_blocker = {},
-    number_oxyds = 0
-  }
-  return sokoarea_number
-end
-
-------------------------------------------------------------------------
--- Drawing Functions and Level Interpretation
-------------------------------------------------------------------------
-
--- lib.soko.set_element sets element name EL_STR of area SOKOAREA_NUMBER at x, y.
--- EL_DESIGN is optional and overrides the design of the given sokoarea.
-function lib.soko.set_element(abs, sokoarea_number, el_str, el_design)
-  if type(lib.soko.sokoarea[sokoarea_number]) ~= "table" then
-    lib.soko.error("Sokoarea table number "..sokoarea_number.." broken or not existing.")
-  end
-  local el = el_design or lib.soko.sokoarea[sokoarea_number].design[el_str]
-  local in_endphase = lib.soko.sokoarea[sokoarea_number].endphase_started
-
-  if (usertype(abs) ~= "position") then
-    lib.soko.error("libsoko.lib.soko.set_element: Coordinate is not a position!")
-    return
-  end
-
-  if type(el) == "string" then
-    el = {el}
-  end
-
-  local fl = {}
-  local st = {}
-  local it = {}
-  local multiple_alg = "checkerboard"
-  local friction = nil
-  local adhesion = nil
-  local fire = nil
-
-  -- Now analyse EL: Decompose its entries into fl,st,it.
-  -- Each entry might in turn hold a ":NUMBER", which multiplicates it.
-  for j, v in pairs(el or {}) do
-    if type(v) == "string" then
-      -- Separate the multiplicator or argument (separated by ":")
-      local s = v
-      local nr = 1
-      local sep = string.find(v, ":")
-      local arg = nil
-      if sep then
-        s = string.sub(v, 1, sep - 1)
-        arg = string.sub(v, sep + 1)
-      end
-
-      -- Now sort the entry into tables
-      for j = 1, tonumber(arg) or 1 do
-            if is_floor(s)    then  table.insert(fl, s)
-        elseif is_stone(s)    then  table.insert(st, s)
-        elseif is_item(s)     then  table.insert(it, s)
-        elseif s == "al"      then  multiple_alg = arg
-        elseif s == "fr"      then  friction = tonumber(arg) or 1
-        elseif s == "ad"      then  adhesion = tonumber(arg) or 1
-        elseif s == "fire"    then  fire = true
-        elseif s == "nofire"  then  fire = false
-        else
-          lib.soko.warning("Unknown entry "..j.."="..s.." in design element.")
-        end
-      end
+        return rawget(self, signature)
+    elseif (type(index) == "string") and (index == "type") then
+        return "lib.soko.area"
     else
-      lib.soko.warning("In design element, entry "..j.." is of type "
-                ..type(v)..", not string.")      
+        error("lib.soko: Internal error: Read access to area_get with wrong "
+            .. "type (" .. type(index) .. "/" .. usertype(index) .. ").", 2)
     end
-  end
-
-  local created_objects = {}
-
-  ----------- floor --------------
-  if table.getn(fl) > 0 then
-    local flkind = fl[lib.soko.choose_among_multiples(abs, table.getn(fl), multiple_alg)]
-    if flkind == "fl-bridge_x" then
-      wo[abs] = {"fl-bridge", type = "x", burnable = false, eternal = true}
-    elseif flkind == "fl-bridge_y" then
-      wo[abs] = {"fl-bridge", type = "y", burnable = false, eternal = true}
-    else
-      wo[abs] = {flkind, burnable = false, eternal = true}
-    end
-    created_objects.fl = wo:fl(abs)
-    if type(friction) == "number" then
-      created_objects.fl.friction = friction
-    end
-    if type(adhesion) == "number" then
-      created_objects.fl.adhesion = adhesion
-    end
-  end
-
-  ----------- stone ---------------
-  if table.getn(st) > 0 then
-    local stkind = st[lib.soko.choose_among_multiples(abs, table.getn(st), multiple_alg)]
-    if (not -wo:st(abs)) or (not wo:st(abs):is("st_oxyd")) then
-      wo[abs] = {stkind, _sokoarea = sokoarea_number}
-      created_objects.st = wo:st(abs)
-    end
-  end
-
-  ----------- item ----------------
-  if table.getn(it) > 0 then
-    local itkind = it[lib.soko.choose_among_multiples(abs, table.getn(it), multiple_alg)]
-    if lib.soko.sokoarea[sokoarea_number].uses_chess and not in_endphase then
-      itkind = "it_trigger"
-    end
-    wo[abs] = {itkind}
-    created_objects.it = wo:it(abs)
-    if (el_str == "goal") and not in_endphase then
-      local gn = lib.soko.sokoarea[sokoarea_number].number_goals + 1
-      lib.soko.sokoarea[sokoarea_number].number_goals = gn
-      lib.soko.sokoarea[sokoarea_number].list_goal[abs.x.."/"..abs.y] =
-          {abs = abs, goal_number = gn}
-      if created_objects.it and not in_endphase then
-        created_objects.it.action = "callback"
-        created_objects.it.target = "lib_soko_goal_trigger"
-        created_objects.it._box = 0
-        created_objects.it._sokoarea = sokoarea_number
-        created_objects.it._goal_number = gn
-      end
-    end
-  end
-
-  ----------- fire ----------------
-  if fire ~= nil then
-    local myfloor = wo:fl(abs)
-    if myfloor then
-      if fire then
-        myfloor.burnable = true
-        myfloor.eternal = true
-        myfloor:message("forcefire")
-      else
-        myfloor:message("stopfire")
-        myfloor.burnable = false
-        myfloor.eternal = true
-      end
-    end
-  end
-
-  return created_objects
 end
 
--- draw_level_array draws the sokoarea SOKOAREA_NUMBER at offset DX, DY.
--- If OUTSIDE is true, the outside will be drawn as well.
--- DRAW_ACTOR determines whether the actor should be placed.
--- draw_level_array will NOT
---  - create the world
---  - set global variables
---  - prepare oxyds
---  - solve the level
--- This function lib.soko.is not intended to be used in level programming
--- directly, use "draw_sokoball" instead.
-function lib.soko.draw_level_array(sokoarea_number, outside, draw_actor)
-  local nr = sokoarea_number or 1
-  local design = lib.soko.sokoarea[nr].design
-  local offset = lib.soko.sokoarea[nr].offset
-  lib.soko.sokoarea[nr].list_goal = {}
-
-  -- create level
-  for y = 0, lib.soko.sokoarea[nr].array_height - 1 do
-    for x = 0, lib.soko.sokoarea[nr].array_width - 1 do
-      local ch = lib.soko.sokoarea[nr].level_array[y+1][x+1]
-      local obj = {}
-      local abs = offset + {x,y}
-      
-      -- set floor outside or floor inside
-      if (ch == " ") then -- note: space stands for outside, "-" for inside!
-        if outside then
-          wo:st(abs):kill()
-          wo:it(abs):kill()
-          lib.soko.set_element(abs, nr, "outf")
-        end
-      else
-        wo:st(abs):kill()
-        wo:it(abs):kill()
-        obj = lib.soko.set_element(abs, nr, "inf")
-        obj.fl.freeze_check = true
-      end
-      
-      -- Walls
-      if char_is_wall(ch) then
-        obj = lib.soko.set_element(abs, nr, "wall")
-      end
-      
-      -- Goals
-      if char_is_goal(ch) then
-        obj = lib.soko.set_element(abs, nr, "goal")
-        wo:fl(abs).freeze_check = false
-      end
-      
-      -- Boxes
-      if char_is_box(ch) then
-        obj = lib.soko.set_element(abs, nr, "box")
-        obj.st.freeze_check = true
-      end
-      
-      -- Chess-Stones
-      if char_is_chess(ch) then
-        if design["white"] then
-          wo[abs] = {"st-chess_white"}
-        else
-          wo[abs] = {"st-chess_black"}
-        end
-      end
-      
-      -- Actors
-      if char_is_player(ch) and draw_actor then
-        lib.soko.sokoarea[nr].actor_count = lib.soko.sokoarea[nr].actor_count + 1
-        local acname = "marble_"..nr.."_"..lib.soko.sokoarea[nr].actor_count
-        if design["white"] then
-          wo[abs] = {"#ac-whiteball", acname, controllers = 1, player = 0}
-        else
-          wo[abs] = {"#ac-blackball", acname}
-        end
-      end
-    end
-  end  
+function lib.soko.area_set(self, newindex, value)
+    error("lib.soko: Internal error: area_set used inappropriately.", 2)
 end
 
--- Sokoban level strings are typically a string with the following characters:
---        # = Wall
---        @ = Player
---        + = Player on goal square
---        $ = Box
---        * = Box on goal square
---        . = Goal square
---  - _ spc = Floor
---     \n | = next line
---   number = runlength encoding
---
--- Enigma additionally uses the following:
---        n = st-chess_black/white
---        N = st-chess_black/white on goal square
---
--- This format has to be transcoded to an array, which is done by unpack_level.
--- Furthermore the string LEVEL can hold several levels (it's a multilevel),
--- in which case SUBLEVEL determines the number of the level to unpack.
--- Default of SUBLEVEL is 1.
---
-function lib.soko.unpack_level(multilevel, sublevel_number)
-  if type(multilevel) ~= "string" then
-    lib.soko.error("Can't make sense of level type "..type(level)..".")
-  end
-  local current_level = 0
-  local level = ""
+lib.soko.area_metatable = {
+  __index = lib.soko.area_get,
+  __newindex = lib.soko.area_set
+}
 
-  -- search the correct sublevel by pattern matching, line for line
-  local level_line_match = 
-      "[ \-\#\_\$\.@\*0-9Nn\+]*"  -- all allowed characters except line ending
-    .."[\#\$\.@\*Nn\+]+"          -- at least one non-space character
-    .."[ \-\#\_\$\.@\*0-9Nn\+]*"  -- again all allowed characters except line ending
-  local in_level = false
-  for line in string.gfind(multilevel, "([^\n\|]*)[\n\|]") do
-    local start_match, end_match = string.find(line, level_line_match)
-    if (start_match == 1) and (end_match == string.len(line)) then
-      if in_level then
-        if current_level == (sublevel_number or 1) then
-          level = level..line.."\n"
-        end
-      else
-        -- we just entered a new level
-        in_level = true
-        current_level = current_level + 1
-        if current_level == (sublevel_number or 1) then
-          level = line.."\n"
-        end
-      end
-      lib.soko.debug("Level "..current_level.." : |"..line.."|")
-    else
-      in_level = false
-    end
-  end
-  
-  lib.soko.debug(level)
-  
-  if level == "" then
-    lib.soko.error("libsoko.unpack_level: Multilevel holds less than "
-            ..sublevel_number.." levels!")
-  end
+setmetatable(lib.soko.area, lib.soko.area_metatable)
 
-  -- parse the string LEVEL
-  local level_array = {}
-  local line = 1
-  level_array[line] = {}
-  local count = 0   -- (a simple counter for runlength encoding)
-  for j = 1, string.len(level) do
-    local ch = string.sub(level, j, j)
-    if tonumber(ch) then
-      -- add number for runlength encoding
-      count = 10*count + tonumber(ch)
-    elseif (ch == "\n") or (ch == "|") then
-      -- discard multiple newlines, e.g. from "|\n"
-      if table.getn(level_array[line]) ~= 0 then
-        line = line + 1
-        level_array[line] = {}
-        count = 0  -- discard empty counters
-      end
-    else
-      -- unify format: "_" and space become "-"
-      if (ch == "_") or (ch == " ") then
-        ch = "-"
-      end
-      if count < 1 then
-        count = 1
-      end
-      for j = 1, count do
-        table.insert(level_array[line], ch)
-      end
-      count = 0
-    end    
-  end
-  
-  -- normalize level width
-  local maxwidth = 0
-  local maxheight = table.getn(level_array)
-  for j = 1, maxheight do
-    maxwidth = math.max(maxwidth, table.getn(level_array[j]))
-  end
-  for j = 1, maxheight do
-    while table.getn(level_array[j]) < maxwidth do
-      table.insert(level_array[j], "-")
-    end
-  end  
-
-  -- mark outside floor fields from the border
-  local function check_for_outside(x, y)
-    if level_array[y][x] == "-" then
-      level_array[y][x] = " "
-      if y > 1         then  check_for_outside(x, y - 1)  end
-      if y < maxheight then  check_for_outside(x, y + 1)  end
-      if x > 1         then  check_for_outside(x - 1, y)  end
-      if x < maxwidth  then  check_for_outside(x + 1, y)  end
-    end
-  end
-  for y = 1, maxheight do
-    check_for_outside(1, y)
-    check_for_outside(maxwidth, y)
-  end
-  for x = 1, maxwidth do
-    check_for_outside(x, 1)
-    check_for_outside(x, maxheight)
-  end
-
-  -- replace redundant walls by outside
-  for x = 1, maxwidth do
-    for y = 1, maxheight do
-      if char_is_wall(level_array[y][x]) then
-        local redundant = true
-        for dx = -1, 1 do
-          for dy = -1, 1 do
-            local ch = (level_array[y+dy] or {})[x+dx] or " "
-            redundant = redundant
-                          and (char_is_wall(ch) or (ch == " "))
-          end
-        end
-        if redundant then
-          level_array[y][x] = " "
-        end
-      end
-    end
-  end
-
-  -- trim level
-  local border_n = maxheight
-  local border_s = 1
-  local border_w = maxwidth
-  local border_e = 1
-  for x = 1, maxwidth do
-    for y = 1, maxheight do
-      if not char_is_outf(level_array[y][x]) then
-        border_n = math.min(border_n, y)
-        border_s = math.max(border_s, y)
-        border_w = math.min(border_w, x)
-        border_e = math.max(border_e, x)        
-      end
-    end
-  end
-  if (border_n >= border_s) or (border_w >= border_e) then
-    lib.soko.error("libsoko: Level is empty or trimming code is corrupt.")
-  end
-  lib.soko.debug("N: "..border_n..", S: "..border_s
-      ..", W: "..border_w..", E: "..border_e)
-  local trimmed_array = {}
-  for y = border_n, border_s do
-    trimmed_array[y - border_n + 1] = {}
-    line = ""
-    for x = border_w, border_e do
-      trimmed_array[y - border_n + 1][x - border_w + 1] = level_array[y][x]
-      line = line .. level_array[y][x]
-    end
-    lib.soko.debug("|"..line.."|")
-  end
-  lib.soko.debug(table.getn(trimmed_array).." : "..table.getn(trimmed_array[1]))
-  return trimmed_array
-end
-
 ------------------------------------------------------------------------
 -- Choosing the Designnumber, Random numbers
 ------------------------------------------------------------------------
@@ -672,9 +87,9 @@
 -- chaotic. To illustrate, why we don't use a simpler calculation
 -- using random seeds pseudo-random number generators, we expose on
 -- this nice mathematical problem a bit deeper. And although the
--- algorithm we use to determine design numbers is as well be used
--- in other situations in this library, we stick to the design number
--- as concrete example.
+-- algorithm we use to determine design numbers can as well be used
+-- in other situations, we stick to the design number as concrete
+-- example.
 --
 -- Main Problem:
 --
@@ -767,282 +182,814 @@
 -- See also: Landau function lib.soko.g(n) for determining the maximal
 --           order of an element in the symmetric group S(n).
 --
-function lib.soko.number_from_level(level_array, list_length)
-  local j = list_length + 1
-  lib.soko.debug("Calculating number from level_array, modulus "..list_length.." ...")
-  local l = 2
-  repeat
-    j = j - 1
-    b = 0
-    for y = 1, table.getn(level_array) do
-      for x = 1, table.getn(level_array[1]) do
-        if char_is_wall(level_array[y][x]) then
-          if 2*b + 1 < j then
-            b = 2*b + 1
-          else
-            b = 2*(j-1-b)
-          end
+function lib.soko.number_from_level(map, list_length)
+    local j = list_length + 1
+    local l = 2
+    local b
+    repeat
+        j = j - 1
+        b = 0
+        for y = 1, map.height do
+            local line = map[y]
+            for x = 1, map.width do
+                -- works only for keylength = 2
+                if string.sub(line, 2*x - 1, 2*x - 1) == "#" then
+                    if 2*b + 1 < j then
+                        b = 2*b + 1
+                    else
+                        b = 2 * (j - 1 - b)
+                    end
+                end
+                b = (b + 1) % j
+            end
         end
-        if b == j - 1 then
-          b = 0
+    until (b == 0) or (j == 1)
+    return j
+end
+
+function lib.soko.design_from_description(map, design_description, maxdesignnumber)
+    -- choose design
+    local design = {}
+    if type(design_description) == "number" then
+        design = lib.lua.deep_copy(lib.soko_designlist.list[design_description])
+    elseif type(design_description) == "table" then
+        design = lib.lua.deep_copy(design_description)
+    elseif (type(design_description) == "nil") and (type(map) == "table") then
+        design = lib.lua.deep_copy(lib.soko_designlist.list[lib.soko.number_from_level(
+                     map, maxdesignnumber or #lib.soko_designlist.list)])
+    else
+        error("lib.soko: Can't make sense of design type "..type(design)..".", 2)
+    end
+    return design
+end
+
+------------------------------------------------------------------------
+-- Level Drawing
+------------------------------------------------------------------------
+
+function lib.soko.define_tiles(design)
+    local function field_to_tiles(field, key)
+        if type(field) == "string" then
+            if (field == "st_door") or (field == "st_door_d") then
+                lib.soko.resolver_info[key] = {RESOLVE_ORIENTED}
+                ti[key .. ":" .. NORTH] = {"st_door", faces = "sn"}
+                ti[key .. ":" .. SOUTH] = {"st_door", faces = "sn"}
+                ti[key .. ":" .. EAST] = {"st_door", faces = "ew"}
+                ti[key .. ":" .. WEST] = {"st_door", faces = "ew"}
+            else
+                ti[key] = {field}
+            end
+        elseif usertype(field) == "tile" then
+            ti[key] = field
+        elseif type(field) == "nil" then
+            ti[key] = {}
+        elseif type(field) == "table" then
+            for j, subfield in pairs(field) do
+                if j ~= "res" then
+                    field_to_tiles(subfield, key .. ":" .. j)
+                end
+            end
+            -- We collect all neccessary information for the resolver.
+            if type(field.res) == "nil" then
+                lib.soko.resolver_info[key] = {RESOLVE_ALL}
+            elseif type(field.res) == "number" then
+                lib.soko.resolver_info[key] = {field.res}
+            elseif type(field.res) == "table" then
+                lib.soko.resolver_info[key] = field.res
+            else
+                error("lib.soko.define_tiles: Can't understand type " .. type(field.res)
+                    .. " in resolver info for key '" .. key .. "'.", 2)
+            end
+            lib.soko.resolver_info[key]._count = #field
+            -- For RESOLVE_RANDOM, we calculate the total frequency,
+            -- so we don't have to do it during resolution, and fill
+            -- in missing values.
+            if lib.soko.resolver_info[key][1] == RESOLVE_RANDOM then
+                local frequency_sum = 0
+                for j = 1, lib.soko.resolver_info[key]._count do
+                    local freq = lib.soko.resolver_info[key][j + 1]
+                    if not freq then
+                        lib.soko.resolver_info[key][j + 1] = 1
+                        freq = 1
+                    elseif (type(freq) ~= "number") or (freq < 0) then
+                        error("lib.soko.define_tiles: Frequency values must be "
+                            .. "non-negative (key '" .. key .. "').", 2)
+                    end
+                    frequency_sum = frequency_sum + freq
+                end
+                lib.soko.resolver_info[key]._sum = frequency_sum
+            end
         else
-          b = b + 1
+            error("lib.soko.define_tiles: Can't understand type " .. type(field)
+                .. " in design description for key '" .. key .. "'.", 2)
         end
-      end
+    end 
+
+    for key, field_name in pairs(lib.soko.keys_to_field_names) do
+        field_to_tiles(lib.soko_designlist.default[field_name], key .. ":1")
+        field_to_tiles(design[field_name], key .. ":2")
+        lib.soko.resolver_info[key] = {RESOLVE_ALL, _count = 2}
+        field_to_tiles(design.endp[field_name], key .. ":endp")
     end
-  until (b == 0) or (j == 1)
-  lib.soko.debug("Calculation ended. Result: "..j)
-  return j
+
+    ti["O "] = {"st_oxyd", "oxyd#", flavor = design.oxyd or lib.soko_designlist.default.oxyd}
+    if design.white then
+        ti["@ "] = {"#ac_marble_white", "marble#", owner = YIN, controllers = CTRL_YIN}
+        ti["n "] = {"st_chess_white"}
+    else
+        ti["@ "] = {"#ac_marble", "marble#"}
+        ti["n "] = {"st_chess"}
+    end    
 end
 
-function lib.soko.design_from_level(level_array, list_length)
-  return lib.soko.design_list[lib.soko.number_from_level(level_array,
-            list_length or table.getn(design_list))]
+function lib.soko.resolver(key, x, y)
+    local method = (lib.soko.resolver_info[key] or {})[1]
+    local count = (lib.soko.resolver_info[key] or {})._count
+    local resolve_to = nil
+    if not method then
+        return ti[key]
+    elseif method == RESOLVE_ALL then
+        local tile = ti{}
+        for j = 1, count do
+            tile = tile .. lib.soko.resolver(key .. ":" .. j, x, y)
+        end
+        return tile
+    elseif method == RESOLVE_RANDOM then
+        resolve_to = 1
+        local r = math.random(lib.soko.resolver_info[key]._sum)
+        local s = lib.soko.resolver_info[key][resolve_to + 1]
+        while (s < r) and (resolve_to < count) do
+            resolve_to = resolve_to + 1
+            s = s + lib.soko.resolver_info[key][resolve_to + 1]
+        end
+    elseif method == RESOLVE_CHECKERBOARD then
+        resolve_to = (((x%2) + (y%2)) % count) + 1
+    elseif method == RESOLVE_LINES then
+        resolve_to = ((x + y) % count) + 1
+    elseif method == RESOLVE_WAVES then
+        resolve_to = ((x + y * y + x*y*x + 3*y*x*y*x) % count) + 1
+    elseif method == RESOLVE_ORIENTED then
+        resolve_to = lib.soko.area[po(x,y)].orientation
+    -- Unknown method, throw error.
+    elseif type(method) == "number" then
+        error("lib.soko.resolver: Unknown resolver method number "
+            .. method .. ".", 2)
+    else
+        error("lib.soko.resolver: Unknown resolver method of "
+            .. " type '" .. type(method) .. "', usertype '"
+            .. usertype(method) .. "').", 2)
+    end
+    if resolve_to then
+        return lib.soko.resolver(key .. ":" .. resolve_to, x ,y)
+    else
+        return ti{}
+    end
 end
 
--- design_from_description takes a description of the design as argument
--- and returns the corresponding table. A description can be:
---  - a table specifying the design by itself
---  - a number specifying the number of the design in the design list
---  - "nil" plus a level_array from which a design from the design
---    list will be chosen.
-function lib.soko.design_from_description(design_description, level_array, maxdesignnumber)
-  -- choose design
-  local design = {}
-  if type(design_description) == "number" then
-    design = lib.lua.deep_copy(lib.soko.design_list[design_description])
-  elseif type(design_description) == "table" then
-    design = lib.lua.deep_copy(design_description)
-  elseif (type(design_description) == "nil") and (type(level_array) == "table") then
-    design = lib.lua.deep_copy(lib.soko.design_from_level(level_array, maxdesignnumber))
-  else
-    lib.soko.error("Can't make sense of design type "..type(design)..".")
-  end
-  -- fill chosen design with default values where neccessary
-  design = lib.lua.combine_tables({design, lib.soko.default_design})
-  -- No stone set for outf, not even "st_nil"?
-  -- Use the default outf-stone instead, and remove it on endphase.
-  if type(design.outf) ~= "table" then
-    design.outf = {design.outf}
-  end
-  for j, v in pairs(design.outf) do
-    if is_stone(v) then
-      return design
+function lib.soko.resolver_endphase(key, x, y)
+    local key1 = string.sub(key, 1, 1) .. " " .. ":endp"
+    local key2 = " " .. string.sub(key, 2, 2) .. ":endp"
+    return    (lib.soko.resolver(key1, x, y) or ti{})
+           .. (lib.soko.resolver(key2, x, y) or ti{})
+end
+
+------------------------------------------------------------------------
+-- Attributes and Endphase Preparation
+------------------------------------------------------------------------
+
+function lib.soko.setup_attributes_and_polists(map)
+    lib.soko.polist = {}
+    for _, field in pairs({"way", "wall", "outf", "goal", "wall_one", "wall_two"}) do
+        lib.soko.polist[field] = po(grp({}))
     end
-  end
-  table.insert(design.outf, lib.soko.default_design.outf_default_stone)
-  if type(design.endp.outf) ~= "table" then
-    design.endp.outf = {design.endp.outf}
-  end
-  for j, v in pairs(design.endp.outf) do
-    if is_stone(v) then
-      return design
+    local function mark_as(pos, field)
+        lib.soko.polist[field] = lib.soko.polist[field] .. pos
+        lib.soko.area[pos]["is_"..field] = true
     end
-  end
-  table.insert(design.endp.outf, "st_nil")  
-  return design
+    for x = 0, map.width do
+        for y = 0, map.height do
+            local key = map[{x,y}]
+            local key1 = string.sub(key, 1, 1)
+            local key2 = string.sub(key, 2, 2)
+                if key1 == " " then  mark_as(po(x,y), "way")
+            elseif key1 == "-" then  mark_as(po(x,y), "outf")
+            elseif key1 == "$" then  mark_as(po(x,y), "way")
+                                     st(x,y):set({name = "box#"})
+            elseif key1 == "#" then  mark_as(po(x,y), "wall")
+            elseif key1 == "@" then  mark_as(po(x,y), "way")
+            elseif key1 == "n" then  mark_as(po(x,y), "way")
+                                     st(x,y):set({name = "chess#"})
+            end
+            if key2 == "." then
+                mark_as(po(x,y), "goal")
+                it(x,y):set({name = "goal#", safeaction = true, target = "lib_soko_goal_trigger"})
+                if (key1 == "$") or (key1 == "n") then
+                    it(x,y)._completed = true
+                    lib.soko.initially_completed_goals = lib.soko.initially_completed_goals + 1
+                else
+                    it(x,y)._completed = false
+                end
+            end
+        end
+    end
+    
+    lib.soko.polist.inf = lib.soko.polist.way .. lib.soko.polist.wall
+
+    -- polist.wall_one
+    -- There are three conditions for an element of polist.wall_one:
+    -- (i) it's a wall, (ii) it's near or diagonal to outside,
+    -- (iii) it's near a way.
+    -- In addition, it counts the number of near ways.
+    for i = 1, #lib.soko.polist.wall do
+        local pos = lib.soko.polist.wall[i]
+        local outside = false
+        for j = 1, #NEIGHBORS_8 do
+            local delta = NEIGHBORS_8[j]
+            outside = outside or lib.soko.area[pos + delta].is_outf
+        end
+        if outside then
+            local count = 0
+            local last_orientation
+            for _, dir in ipairs({{N, NORTH}, {S, SOUTH}, {E, EAST}, {W, WEST}}) do
+                if lib.soko.area[pos + dir[1]].is_way then
+                    count = count + 1
+                    last_orientation = dir[2]
+                end
+            end
+            if count > 0 then
+                mark_as(pos, "wall_one")
+                lib.soko.area[pos].ways = count
+                if count == 1 then
+                    lib.soko.area[pos].orientation = last_orientation
+                end
+            end
+        end
+    end
+    -- polist.wall_two
+    -- There are three conditions for an element of polist.wall_two:
+    -- (i) it's near a wall_one, (ii) it's not a wall_one,
+    -- (iii) it's wall or outside. In addition, the neighboring
+    -- wall_one are added into the list.
+    for i = 1, #lib.soko.polist.wall_one do
+        local wall_one = lib.soko.polist.wall_one[i]
+        for j = 1, #NEIGHBORS_4 do
+            local delta = NEIGHBORS_4[j]
+            local check = wall_one + delta
+            if not (lib.soko.area[check].is_way or lib.soko.area[check].is_wall_one) then
+                mark_as(check, "wall_two")
+                lib.soko.area[check].wall_one =
+                    (lib.soko.area[check].wall_one or po(grp({}))) .. wall_one
+            end
+        end
+    end
 end
 
+function lib.soko.prepare_endphase(map, design)
+    -- ensure existence of goals
+    if #lib.soko.polist.goal < 1 then
+        error("libsoko: No goals defined.", 2)
+    end
+    -- ensure a correctly set endphase-attribute
+    if not design.endp then
+        design.endp = lib.lua.deep_copy(lib.soko_designlist.default.endp)
+    end
+    if type(design.endp) ~= "table" then
+        error("lib.soko.prepare_endphase: This design's endphase is given as "
+            .. type(design.endp) .. ", but should be table.")
+    end
+    if design.endp.alg == nil then
+        design.endp.alg = lib.lua.deep_copy(lib.soko_designlist.default.endp.alg)
+    end
+    if type(design.endp.alg) ~= "string" then
+        error("lib.soko.prepare_endphase: This design's endphase algorithm "
+            .. "is given as " .. type(design.endp.alg) ..", but should be string.")
+    end
 
+    -- save map and design for later
+    lib.soko.map = map
+    lib.soko.design = design
+    
+    -- prepare oxyds and blockers (a "blocker" is a generalized door)
+    local alg = design.endp.alg
+    if       (alg == "circle")
+          or (alg == "hide")
+          or (alg == "fourswitch")
+          or (alg == "gradients")
+          or (alg == "magnets") then
+        -- nothing to prepare
+    elseif   (alg == "ralf")
+          or (alg == "allcrack")
+          or (alg == "vortex") then
+        -- design.door or design.wall or "st_nil"
+        lib.soko.goal_hook = GOAL_HOOK_RALF
+        lib.soko.endphase_set_block_oxyds(design.endp.max_pairs)
+    elseif   (alg == "block") then
+        lib.soko.endphase_set_block_oxyds(design.endp.max_pairs)
+    elseif   (alg == "outside") then
+        lib.soko.endphase_set_outside_oxyds(design.endp.max_pairs)
+    elseif   (alg == "knock") then
+        lib.soko.endphase_set_block_oxyds(tonumber(design.endp.max_pairs) or 3)
+        lib.soko.endphase_set_knocking()
+    else
+        error("lib.soko.prepare_endphase: Endphase algorithm " .. alg .. " unknown.", 2)
+    end
+end
+
 ------------------------------------------------------------------------
--- Interface functions
+-- Goal Trigger and Endphase Main Functions
 ------------------------------------------------------------------------
 
--- create_sokoball creates a sokoball-level from the string LEVEL.
--- This string can be a multilevel, in which case SUBLEVEL determines
--- the number of the level, starting with 1. Default is 1.
--- The design can be chosen by the DESIGN variable. This is either
--- a number (see section "Designs") or a table with the corresponding
--- design entries. A missing entry will be interpreted as the entry
--- from default_design. If the DESIGN variable is omitted, a check-
--- number is created from LEVEL which uniquely* determines a design
--- from the design list, with MAXDESIGNNUMBER as highest possible
--- design number. *Uniquely means: The design might change when the
--- design list is enlarged.
--- Returns width and height of new level.
---
-function lib.soko.create_sokoball(level, sublevel, design, maxdesignnumber)
-  -- check that this is the first sokoarea, and initialise it.
-  if type(lib.soko.sokoarea) ~= "table" then
-    lib.soko.error("No sense in sokoarea of type "..type(sokoarea)..".")
-  end
-  if table.getn(lib.soko.sokoarea) ~= 0 then
-    lib.soko.error("Tried to use create_sokoball twice. Use draw_sokoball instead.")
-  end
-  lib.soko.new_sokoarea()
+function lib_soko_goal_trigger(is_on, sender)
+    if lib.soko.endphase_started then
+        return
+    end
+    if (-wo:st(sender)) ~= sender._completed then
+        sender._completed = -wo:st(sender)
+        if lib.soko.goal_hook == GOAL_HOOK_RALF then
+            lib.soko.endphase_goal_hook_ralf(sender)
+        end
+        no["goal_counter"]:signal(sender._completed)
+    end
+end
 
-  -- unpack level
-  lib.soko.sokoarea[1].level_array = lib.soko.unpack_level(level, sublevel)
+function lib_soko_endphase()
+    -- Correct structure of endp-attribute has been checked
+    -- by prepare_endphase, we trust it blindly.
+    lib.soko.endphase_started = true
+    local endp = lib.lua.deep_copy(lib.soko.design.endp)
+    local alg = endp.alg
+    local marbles = no["marble#*"]
+    -- redraw level and give items
+    wo:drawMap(lib.soko.resolver_endphase, po(0,0), lib.soko.map)
+    local give = lib.lua.deep_copy(endp.give)
+    if type(give) == "string" then
+        give = {{give}}
+    elseif usertype(give) == "tile" then
+        give = {give}
+    end
+    if type(give) == "table" then
+        for _, v in pairs(give) do
+            if (type(v) == "string") and string.find(v, "ac_") then
+                wo[marbles] = {v}
+            elseif (type(v) == "table") and string.find(v[1], "ac_") then
+                wo[marbles] = v
+            elseif v == "rubberball" then
+                local kind = lib.lua.cond(design.white, "#ac_marble", "#ac_marble_white")
+                for j = 1, #marbles do
+                    wo[marbles[j]] = {kind, "rubberball_" .. j, controllers = CTRL_NONE}
+                    wo:add({"ot_rubberband", anchor1 = "rubberball_" .. j,
+                        anchor2 = marbles[j], strength = 50})
+                end
+            elseif type(v) == "string" then
+                wo:add(YIN, {v})
+            else
+                wo:add(YIN, v)
+            end
+        end
+    elseif type(give) ~= "nil" then
+        error("libsoko: Error in design: Can't give something of type "..type(v)..".", 2)
+    end
 
-  -- calculate screen position
-  -- Important Note: level_array is reversely indexed, i.e.
-  --                 level_array[y-coordinate][x-coordinate]
-  lib.soko.sokoarea[1].array_width = table.getn(lib.soko.sokoarea[1].level_array[1])
-  lib.soko.sokoarea[1].array_height = table.getn(lib.soko.sokoarea[1].level_array)
-  lib.soko.sokoarea[1].uses_chess = lib.soko.check_chess(1)
-  local levelw = math.max(lib.soko.sokoarea[1].array_width, 20)
-  local levelh = math.max(lib.soko.sokoarea[1].array_height, 13)
-  lib.soko.sokoarea[1].level_width = levelw
-  lib.soko.sokoarea[1].level_height = levelh
-  ti[" "] = {"fl-abyss"}
-  wo(ti, " ", levelw, levelh)
-  
-  -- calculate padding
-  local dx = 0
-  local dy = 0
-  if levelw > lib.soko.sokoarea[1].array_width then
-    dx = math.floor((levelw - lib.soko.sokoarea[1].array_width) / 2)
-  end
-  if levelh > lib.soko.sokoarea[1].array_height then
-    dy = math.floor((levelh - lib.soko.sokoarea[1].array_height) / 2)
-  end
-  lib.soko.sokoarea[1].offset = po({dx, dy})
+    if alg == "circle" then
+        lib.soko.endphase_circle()
+    elseif alg == "outside" then
+        -- Don't do anything; redrawing the level was enough.
+    elseif alg == "hide" then
+        lib.soko.endphase_set_hide_oxyds(endp.max_pairs)
+    elseif    (alg == "ralf")
+           or (alg == "outside")
+           or (alg == "block") then
+        lib.soko.endphase_ralf_open_doors()
+    elseif alg == "allcrack" then
+        lib.soko.endphase_ralf_open_doors()
+        lib.soko.endphase_allcrack()
+    elseif alg == "fourswitch" then
+        lib.soko.endphase_fourswitch()
+    elseif alg == "vortex" then
+        lib.soko.endphase_ralf_open_doors()
+        lib.soko.endphase_vortex()
+    elseif alg == "gradients" then
+        lib.soko.endphase_set_hide_oxyds(endp.max_pairs)
+        lib.soko.endphase_gradients(endp.strength)
+    elseif alg == "magnets" then
+        lib.soko.endphase_set_hide_oxyds(endp.max_pairs)
+        lib.soko.endphase_magnets(endp.strength)
+    elseif alg == "knock" then
+        -- Don't do anything; endphase_call_knocking queries endphase_started.
+    else
+        -- Use default: "circle"
+        lib.soko.endphase_circle()
+    end
+end
 
-  -- calculate design
-  lib.soko.sokoarea[1].design =
-    lib.soko.design_from_description(design, lib.soko.sokoarea[1].level_array, maxdesignnumber)
+------------------------------------------------------------------------
+-- Endphase and Endphase Preparation Smaller Functions
+------------------------------------------------------------------------
 
-  -- create special position lists
-  lib.soko.create_lists(nr)
-  
-  -- draw level
-  for x = 0, levelw - 1 do
-    for y = 0, levelh - 1 do
-      lib.soko.set_element(po({x,y}), 1, "outf")
+function lib.soko.endphase_circle()
+    if (not no["marble#*"]) or (#no["marble#*"] == 0) then
+       error("lib.soko.endphase_circle: Internal error: Marble not found.", 2)
     end
-  end
-  lib.soko.draw_level_array(1, true, true)
-  
-  -- prepare oxyds for end phase
-  lib.soko.prepare_endphase(1)
+    local pos = po(no["marble#*"][1])
+    if pos.x > 10 then  pos = pos + {-2,0}  end
+    if pos.y >  6 then  pos = pos + {0,-2}  end
+    st(NEIGHBORS_8 + (pos + po(1, 1))):kill()
+    it(NEIGHBORS_8 + (pos + po(1, 1))):kill()
+    ti["Q "] = {"st_quake"}
+    wo:drawMap(lib.soko.resolver, pos + po(-1, -1), "i ", {
+        "i O O O i ",
+        "O       O ",
+        "O   Q   O ",
+        "O       O ",
+        "i O O O i "})
+    wo:shuffleOxyd()
+    if #no["marble#*"] > 1 then
+        wo:add(YIN, {"it_hammer"})
+    end
+end
 
-  -- Enigma's global variables
-  wo["ConserveLevel"] = false
-  wo["ShowMoves"] = true
-  wo["FollowGrid"] = false
-  wo["FollowMethod"] = FOLLOW_SCROLL
+function lib.soko.endphase_set_hide_oxyds(max_pairs)
+    local places = fl(lib.soko.polist.wall_one)
+    -- choose number of oxyds
+    local number_pairs = lib.math.steps(#places, {2, 6, 10, 30}) + 1
+    if number_pairs < 2 then
+        -- use circle instead
+        lib.soko.endphase_circle()
+        return
+    end
+    if max_pairs and tonumber(max_pairs) then
+        number_pairs = math.min(tonumber(max_pairs), number_pairs)
+    end
+    places = (places:shuffle()):sub(2 * number_pairs)
+    -- Draw the oxyds and save positions in map and polists.
+    wo[places] = ti["O "]
+    wo:shuffleOxyd()
+    lib.soko.map[po(places)] = "O "
+    lib.soko.polist.oxyd = po(places)
+    for _, field in pairs({"outf", "wall", "wall_one", "wall_two"}) do
+        lib.soko.polist[field] = po(fl(lib.soko.polist[field]) - places)
+    end
+end
 
-  -- return level width and height
-  return levelw, levelh
+function lib.soko.endphase_set_block_oxyds(max_pairs)
+    local oxyds = po(grp({}))
+    local blockers = po(grp({}))    
+    -- Add all wall_one-elements with exactly one way near as blocker,
+    -- and the opposite position as oxyd, if it is of type wall_two.
+    -- Make sure that each possible oxyd position is assigned at most once,
+    -- and that no other oxyds or blockers are near.
+    for j = 1, #lib.soko.polist.wall_one do
+        local blocker = lib.soko.polist.wall_one[j]
+        if lib.soko.area[blocker].ways == 1 then
+            for k = 1, #NEIGHBORS_4 do
+                local dir = NEIGHBORS_4[k]
+                if     lib.soko.area[blocker + dir].is_way
+                   and lib.soko.area[blocker - dir].is_wall_two then
+                    -- Check that no oxyd has been set on this position before and
+                    -- no other oxyd or blocker is near the new oxyd or its blocker.
+                    local occupied = false
+                    for l = 1, #oxyds do
+                        occupied = occupied
+                            or (lib.math.manhattan_distance(blockers[l], blocker) <= 1)
+                            or (lib.math.manhattan_distance(oxyds[l],    blocker) <= 1)
+                            or (lib.math.manhattan_distance(blockers[l], blocker - dir) <= 1)
+                            or (lib.math.manhattan_distance(oxyds[l],    blocker - dir) <= 1)
+                    end
+                    if not occupied then
+                        lib.soko.area[blocker].oxyd = blocker - dir
+                        lib.soko.area[blocker - dir].blocker = blocker
+                        lib.soko.area[blocker].way = blocker + dir
+                        blockers = blockers .. blocker
+                        oxyds = oxyds .. (blocker - dir)
+                    end
+                end
+            end
+        end
+    end
+    -- Choose some appropriate subset
+    local number_pairs = lib.math.steps(#oxyds, {4, 8, 16, 28}) + 1
+    if number_pairs < 2 then
+        -- Not enough places? Choose "circle"-algorithm instead.
+        lib.soko.design.endp.alg = "circle"
+        return
+    end
+    if max_pairs and tonumber(max_pairs) and (tonumber(max_pairs) >= 1) then
+        number_pairs = math.min(tonumber(max_pairs), number_pairs)
+    end
+    oxyds = (fl(oxyds):shuffle()):sub(2 * number_pairs)
+    -- Draw the oxyds and save positions in map and polists.
+    wo[oxyds] = ti["O "]
+    wo:shuffleOxyd()
+    lib.soko.map[oxyds] = "O "
+    lib.soko.polist.oxyd = po(oxyds)
+    lib.soko.polist.blocker = po(grp({}))
+    for ox in oxyds do
+        local blocker = lib.soko.area[po(ox)].blocker
+        lib.soko.polist.blocker = lib.soko.polist.blocker .. blocker
+        wo[blocker] =    lib.soko.resolver("# ", blocker.x, blocker.y)
+                      .. lib.soko.resolver("D ", blocker.x, blocker.y)
+    end
+    blockers = fl(lib.soko.polist.blocker)
+    lib.soko.map[blockers] = "D "
+    for _, field in pairs({"outf", "wall", "wall_one", "wall_two"}) do
+        lib.soko.polist[field] = po((fl(lib.soko.polist[field]) - oxyds) - blockers)
+    end
+    -- Assign goals to blockers.
+    -- Note: There might be more goals as blockers, and, vice versa,
+    --       there might be more blockers as goals.
+    local goals = fl(lib.soko.polist.goal):shuffle()
+    for j = 2, math.min(#goals, #blockers) do
+        lib.soko.area[po(goals[j])].open = po(blockers[j])
+        if lib.soko.goal_hook == GOAL_HOOK_RALF then
+            lib.soko.endphase_ralf_open_door(it(goals[j])._completed, po(blockers[j]))
+        end
+    end
 end
 
--- recreate_sokoball is used for design development only.
--- It redraws the sokoarea with number sokoarea_number (or 1)
--- from scratch, but not the world and doesn't add another
--- actor.
---
-function lib.soko.recreate_sokoball(design, maxdesignnumber, sokoarea_number)
-  local nr = sokoarea_number or 1
+function lib.soko.endphase_set_outside_oxyds(max_pairs)
+    local places = grp({})  -- a group of floors
+    -- Select all places outside or in the walls, unreachable
+    -- for the marble.
+    local common_list = lib.soko.polist.outf .. lib.soko.polist.wall_two
+    for j = 1, #common_list do
+        if (common_list[j].x % 2 == 0) and (common_list[j].y % 2 == 0) then
+            places = places + fl(common_list[j])
+        end
+    end
+    -- Choose some appropriate subset
+    local number_pairs = lib.math.steps(#places, {2, 20, 50, 100}) + 1
+    if number_pairs < 2 then
+        -- Not enough places? Then choose the four corners. They should always
+        -- be at least wall_two and far enough away from each other.
+        places = grp(fl(lib.soko.map.width - 1, 0), fl(0, lib.soko.map.height - 1),
+            fl(0,0), fl(lib.soko.map.width - 1, lib.soko.map.height - 1))
+        number_pairs = 2
+    end
+    if max_pairs and tonumber(max_pairs) then
+        number_pairs = math.min(tonumber(max_pairs), number_pairs)
+    end
+    places = (places:shuffle()):sub(2 * number_pairs)
+    -- Draw the oxyds and save positions in map and polists.
+    wo[places] = ti["O "]
+    wo:shuffleOxyd()
+    lib.soko.map[po(places)] = "O "
+    lib.soko.polist.oxyd = po(places)
+    for _, field in pairs({"outf", "wall", "wall_one", "wall_two"}) do
+        lib.soko.polist[field] = po(fl(lib.soko.polist[field]) - places)
+    end
+end
 
-  lib.soko.sokoarea[nr].design =
-      lib.soko.design_from_description(design, lib.soko.sokoarea[nr].level_array, maxdesignnumber)
+function lib.soko.endphase_set_knocking()
+    local blockers = po(fl(lib.soko.polist.blocker):shuffle())
+    -- set attributes of doors
+    for j = 1, #blockers do
+        if -st(blockers[j]) then
+            st(blockers[j]):set({action = "callback", target = "lib_soko_endphase_call_knocking",
+                _close = blockers[(j % #blockers) + 1], _number = j,
+                _open = blockers[((j + 1) % #blockers) + 1]})
+        end
+    end
+end
 
-  if lib.soko.sokoarea[nr].level_width and lib.soko.sokoarea[nr].level_height then
-    for x = 0, lib.soko.sokoarea[nr].level_width - 1 do
-      for y = 0, lib.soko.sokoarea[nr].level_height - 1 do
-        wo:st(x, y):kill()
-        wo:it(x, y):kill()
-        lib.soko.set_element(po({x,y}), nr, "outf")
-      end
+function lib_soko_endphase_call_knocking(is_on, sender)
+    -- Deactivate the first door until endphase has started.
+    if (tonumber(sender._number) ~= 1) or lib.soko.endphase_started then
+        -- Open or close the neccessary doors given as attributes.
+        st(sender._close):close()
+        st(sender._open ):open()
     end
-  else
-    for x = 0, lib.soko.sokoarea[nr].array_width - 1 do
-      for y = 0, lib.soko.sokoarea[nr].array_height - 1 do
-        local abs = lib.soko.sokoarea[nr].offset + {x,y}
-        wo:st(abs):kill()
-        wo:it(abs):kill()
-        lib.soko.set_element(abs, nr, "outf")
-      end
+end
+
+function lib.soko.endphase_fourswitch()
+    local places = fl(lib.soko.polist.wall_one):shuffle()
+    -- choose number of fourswitchs/oxyds
+    local number_pairs = lib.math.steps(#places, {2, 6, 10}) + 1
+    if number_pairs < 2 then
+        -- use circle instead
+        lib.soko.endphase_circle()
+        return
     end
-  end
+    places = po(places:sub(2 * number_pairs))
+    -- set fourswitchs
+    for j = 1, #places do
+        wo[places[j]] = {"st_fourswitch", _number = j, _correct = false,
+            target = "lib_soko_endphase_call_fourswitch", safeaction = true}
+        lib.soko.area[places[j]].current = NORTH
+        lib.soko.area[places[j]].solve = ({NORTH, SOUTH, EAST, WEST})[random(1,4)]
+    end
+    lib.soko.fourswitchs = places
+end
 
-  lib.soko.sokoarea[nr].number_goals = 0
-  lib.soko.sokoarea[nr].goals_filled = 0
-  lib.soko.sokoarea[nr].endphase_started = false
-  lib.soko.sokoarea[nr].goal_to_blocker = {}
-  lib.soko.sokoarea[nr].list_goal = {}
-  lib.soko.sokoarea[nr].list_oxyd = {}
-  lib.soko.sokoarea[nr].list_blocker = {}
-  lib.soko.sokoarea[nr].number_oxyds = 0
-  lib.soko.sokoarea[nr].goal_to_blocker = {}
-  lib.soko.sokoarea[nr].goal_hook = nil
-  lib.soko.sokoarea[nr].endphase_hook = lib.soko.ENDPHASE_HOOK_DEFAULT
+function lib_soko_endphase_call_fourswitch(is_on, sender)
+    local j = sender._number
+    lib.soko.area[po(sender)].current = sender.state
+    -- When count is correct, make it "st_fake_oxyda".
+    if sender.state == lib.soko.area[po(sender)].solve then
+        wo[sender] = {"st_fake_oxyda", state = OPEN, _correct = true}
+    end
+    -- If it's the first fourswitch (the one fourswitch that doesn't change
+    -- any other), check all fourswitchs and replace them by oxyds if all
+    -- are correct. Else, recreate the next fourswitch in hierarchy. Call
+    -- it once by toggling. This means: Recursion!
+    if j == 1 then
+        -- Check all fourswitchs, replace by oxyds if all are correct.
+        for k = 1, #lib.soko.fourswitchs do
+            if not st(lib.soko.fourswitchs[k])._correct then
+                return
+            end
+        end
+        wo[lib.soko.fourswitchs] = ti["O "]
+        wo:shuffleOxyd()
+    else
+        -- Trigger all lower fourswitchs and recreate if neccessary.
+        if st(lib.soko.fourswitchs[j - 1])._correct then
+            wo[lib.soko.fourswitchs[j - 1]] = {"st_fourswitch", _number = j - 1,
+                target = "lib_soko_endphase_call_fourswitch", safeaction = true,
+                state = lib.soko.area[lib.soko.fourswitchs[j - 1]].current, _correct = false}
+        end
+        st(lib.soko.fourswitchs[j - 1]):toggle()
+    end  
+end
 
-  --lib.soko.sokoarea[nr].list_outside = {}
-  --lib.soko.sokoarea[nr].list_wall = {}
-  --lib.soko.sokoarea[nr].list_way = {}
-  --lib.soko.sokoarea[nr].list_wall_one = {}
-  --lib.soko.sokoarea[nr].list_wall_two = {}
+function lib.soko.endphase_vortex()
+    local list_way = (fl(lib.soko.polist.way) + fl(lib.soko.polist.blocker))
+                                              - fl(lib.soko.polist.goal)
+    local component = {}
+    list_way._component = nil
+    -- Analyse connected components of list_way
+    local function mark_component(floor, current)
+        if not floor._component then
+            floor._component = current
+            component[current].floors = component[current].floors + floor
+            for next_floor in fl(NEIGHBORS_4 + po(floor)) * list_way do
+                mark_component(next_floor, current)
+            end
+        end
+    end
+    for floor in list_way do
+        if not floor._component then
+            component[1 + #component] = {has_oxyds = false, floors = grp({})}
+            mark_component(floor, #component)
+        end    
+    end
+    -- If only one component, exit, player will find his or her way alone.
+    if #component < 2 then
+        return
+    end
+    -- Analyse oxyds and to which components they belong to.
+    for floor in fl(lib.soko.polist.blocker) do
+        if floor._component then
+            component[floor._component].has_oxyds = true
+        else
+            error("lib.soko.endphase_vortes: Error in component calculation.", 2)
+        end
+    end  
+    -- Let there be at most max(5, number-of-oxyd-components)
+    -- components, plus the one the marble actually occupies.
+    local t = {}  -- helper table: components with oxyds or marble
+    local u = {}  -- helper table: all components except t
+    local marble_component = fl(no["marble#*"][1])._component
+    for j = 1, #component do
+        if component[j].has_oxyds or (j == marble_component) then
+            table.insert(t, component[j])
+        else
+            table.insert(u, component[j])
+        end
+    end
+    u = lib.lua.shuffle(u)
+    while (#t < 5) and (#u > 0) do
+        table.insert(t, table.remove(u))
+    end
+    component = t
+    -- Find a cyclic permutation (i.e. with only one cycle) to connect the
+    -- vortices (each vortex shall be reached by starting from any other).
+    local connect = lib.math.cyclic_permutation(#component)
+    -- Shuffle floors of each component.
+    for j = 1, #component do
+        component[j].floors = (component[j].floors):shuffle()
+    end    
+    -- Now set and connect the vortices
+    for j = 1, #component do
+        local dest = po(component[connect[j]].floors[1])
+        -- Remember: We also allow (we need!) vortices at old blocker-positions.
+        -- There could still be a stone over this. This stone might be st_blocker,
+        -- which turns to it_blocker and has therefore to be removed.
+        st(component[j].floors[1]):kill()
+        wo[component[j].floors[1]] = {"it_vortex_open", destination = dest}
+    end
+end
 
-  lib.soko.draw_level_array(nr, true, false)
+function lib.soko.endphase_allcrack()
+    for j = 1, #lib.soko.polist.way do
+        if not -it(lib.soko.polist.way[j]) then
+            wo[lib.soko.polist.way[j]] = {"it_crack_m"}
+        end
+    end  
+end
 
-  -- prepare oxyds for end phase
-  lib.soko.prepare_endphase(nr)
-  lib.soko.debug("Prepared for endphase "..lib.soko.sokoarea[nr].design.endp.alg..".")
+function lib.soko.endphase_gradients(strength)
+    for j = 1, #lib.soko.polist.way do
+        local kind = "fl_slope_" .. ({"pw", "ps", "pe", "pn", "inw", "isw",
+            "ise", "ine", "onw", "osw", "ose", "one"})[random(1,12)]
+        wo[lib.soko.polist.way[j]] = {kind, strength = tonumber(strength) or 25.0}
+    end
 end
 
--- draw_sokoball draws a sokoball level from argument LEVEL, sublevel
--- number SUBLEVEL with design DESIGN (see create_sokoball) at offset
--- OFFSET. It's arguments are identical to those of create_sokoball.
--- Whereas create_sokoball should be used for sokoball-only levels,
--- draw_sokoball can be used to add a sokoban type area to a larger
--- level. The difference is as follows:
--- draw_sokoball will NOT:
---  - create the world before drawing to it
---  - draw the outside, such that it doesn't overwrite the rest of your
---    level
---  - draw any oxyds
---  - solve the level when all triggers are activated.
--- DRAW_ACTOR determines if an actor should be placed.
--- ENDPHASE_HOOK describes the function to be called when all goals are filled.
--- GOAL_HOOK describes the function to be called when a single goal is
--- triggered (see libsoko-endphase). If it's nil, the standard
--- function from this library will be called. This might be
--- broken as no oxyds have been prepared.
--- Note: Overwriting one sokoarea with another creates problems
---       with the triggers.
---
-function lib.soko.draw_sokoball(offset, level, sublevel, design, draw_actor,
-                       endphase_hook, goal_hook)
-  local nr = lib.soko.new_sokoarea()
-  -- unpack level
-  lib.soko.sokoarea[nr].level_array = lib.soko.unpack_level(level, sublevel)
-  lib.soko.sokoarea[nr].array_width = table.getn(lib.soko.sokoarea[nr].level_array[1])
-  lib.soko.sokoarea[nr].array_height = table.getn(lib.soko.sokoarea[nr].level_array)
-  lib.soko.sokoarea[nr].uses_chess = lib.soko.check_chess(nr)
-  lib.soko.sokoarea[nr].offset = offset
-  lib.soko.sokoarea[nr].design = 
-    lib.soko.design_from_description(design, lib.soko.sokoarea[nr].level_array)
-  if hook ~= nil then
-    lib.soko.sokoarea[nr].endphase_hook = lib.soko.ENDPHASE_HOOK_DEFAULT
-  end
-  lib.soko.sokoarea[nr].goal_hook = goal_hook
-  lib.soko.create_lists(nr)
-  lib.soko.draw_level_array(nr, false, draw_actor)
+function lib.soko.endphase_magnets(strength)
+  local places = fl(lib.soko.polist.way) - fl(lib.soko.polist.goal)
+  places = (places:shuffle()):sub(math.floor(#places/6))
+  wo[places] = {"it_magnet_on", range = 5, strength = tonumber(strength) or 30.0}
 end
 
--- design_statistics uses lib.soko.warning to output statistics of
--- the used algorithms
-function lib.soko.design_statistics()
-  alglist = {}
-  for k, v in pairs(design_list) do
-    if v.endp then
-      alg = v.endp.alg
-      if alg then
-        alglist[alg] = (alglist[alg] or 0) + 1
-      end
+function lib.soko.endphase_goal_hook_ralf(sender)
+    -- identify the corresponding blocker (door) and open it
+    if lib.soko.area[po(sender)].open then
+        lib.soko.endphase_ralf_open_door(sender._completed, lib.soko.area[po(sender)].open)
+    end
+end
+
+function lib.soko.endphase_ralf_open_doors()
+    for j = 1, #lib.soko.polist.blocker do
+        lib.soko.endphase_ralf_open_door(true, lib.soko.polist.blocker[j])
+    end
+end
+
+-- endphase_ralf_open_door opens or closes a door at position
+-- POS, dependend on the boolean OPEN.
+function lib.soko.endphase_ralf_open_door(open, pos)
+    if lib.soko.design.open_door then
+        wo[pos] =    lib.soko.resolver(lib.lua.cond(open, "  ", "# "), pos.x, pos.y)
+                  .. lib.soko.resolver(lib.lua.cond(open, "d ", "D "), pos.x, pos.y)
     else
-      alglist["default"] = (alglist["default"] or 0) + 1
+        -- use default "open"/"close"-messages instead
+        if -st(pos) then  st(pos):message(lib.lua.cond(open, "open", "close"))  end
+        if -it(pos) then  it(pos):message(lib.lua.cond(open, "open", "close"))  end
+        if -fl(pos) then  fl(pos):message(lib.lua.cond(open, "close", "open"))  end
     end
-  end
-  for k, v in pairs(alglist) do
-    lib.soko.warning(k..": "..v)
-  end
 end
 
+------------------------------------------------------------------------
+-- Interface functions
+------------------------------------------------------------------------
+
+-- create_sokoball creates a sokoball-level from the string MULTILEVEL.
+-- This string can be a multilevel, in which case SUBLEVEL_NUMBER
+-- determines the number of the level, starting with 1. Default is 1.
+-- The design can be chosen by the DESIGNARG variable. This is either
+-- a number (see section "Designs") or a table with the corresponding
+-- design entries. A missing entry will be interpreted as the entry
+-- from lib.soko_designlist.default. If the DESIGN variable is omitted,
+-- a check-number is created from the level which uniquely* determines
+-- a design from the design list, with MAXDESIGNNUMBER as highest
+-- possible design number. *Uniquely means: The design might change
+-- when the design list is enlarged.
+-- Returns width and height of new level.
+--
+function lib.soko.create_sokoball(multilevel, sublevel_number, designarg, maxdesignnumber)
+    local small_map = lib.import.map_sokoban(multilevel, sublevel_number)
+    local design = lib.soko.design_from_description(small_map, designarg, maxdesignnumber)
+
+    -- Extend map to 20x13 if possible
+    local final_width = math.max(20, small_map.width)
+    local final_height = math.max(13, small_map.height)
+    local map = wo:newMap("- ", final_width, final_height)
+    local dx = math.floor((final_width - small_map.width) / 2)
+    local dy = math.floor((final_height - small_map.height) / 2)
+    small_map.defaultkey = "- "
+    map:paste(small_map, po(dx, dy))
+    map.defaultkey = "  "
+
+    wo["ConserveLevel"] = false
+    wo["ShowMoves"] = true
+    wo["FollowGrid"] = false
+    wo["FollowMethod"] = FOLLOW_SCROLL
+    wo["AllowSingleOxyds"] = true
+    wo["Fragility"] = 1.0
+    wo["CrackSpreading"] = 0.0
+    
+    lib.soko.define_tiles(design)
+    
+    wo(res.composer(lib.soko.resolver), "  ", map)
+    lib.soko.setup_attributes_and_polists(map)
+    lib.soko.prepare_endphase(map, design)
+    
+    -- If we have a chessoban, make sure all goals are it_trigger.
+    -- (Remember that st_shogun can press it_trigger as well.)
+    if #no["chess#*"] ~= 0 then
+        wo[lib.soko.polist.goal] = {"it_trigger", "trigger#",
+             target = "lib_soko_goal_trigger", safeaction = true}
+    end
+    
+    wo:add({"ot_counter", "goal_counter", safeaction = true,
+            state = lib.soko.initially_completed_goals,
+            ["action_" .. (#lib.soko.polist.goal)] = "callback",
+            ["target_" .. (#lib.soko.polist.goal)] = "lib_soko_endphase"})
+    
+    return map.width, map.height
+end
+
     ]]></el:luamain>
     <el:i18n>
     </el:i18n>
   </el:protected>
 </el:level>
-

Added: trunk/data/levels/lib/libsoko_designlist.xml
===================================================================
--- trunk/data/levels/lib/libsoko_designlist.xml	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/data/levels/lib/libsoko_designlist.xml	2009-03-16 00:55:33 UTC (rev 1591)
@@ -0,0 +1,1549 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="library">
+      <el:identity el:title="" el:id="lib/libsoko_designlist"/>
+      <el:version el:score="1" el:release="1" el:revision="4" el:status="released"/>
+      <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2007, 2008, 2009 Enigma Team</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="false" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+-- This "library" is merely a collection of designs, outsourced from
+-- libsoko.xml.
+
+------------------------------------------------------------------------
+-- Designs
+------------------------------------------------------------------------
+
+-- This section holds a table with all predefined designs. Each design
+-- is again a table consisting of the following entries, called "fields":
+--   inf, outf, box, wall, goal, door, open_door, oxyd, white, endp
+-- Each of these entries is either a string or tile representing the
+-- objects to be used, or a table if several objects shall be used.
+-- Such a declaration of one or more objects will be called "element".
+--
+-- An element consists of a sequence of other elements, plus a single
+-- entry called "res", holding the information how to resolve the
+-- subelements. If no "res" is given, all subelements will be resolved.
+-- An example:
+--   wall = {"st_rawglass", {"fl_wood", "fl_sahara", res = RESOLVE_CHECKERBOARD}}
+-- This means, that whenever a wall should be drawn, it will consist
+-- of an "st_rawglass", plus one of the floors "fl_wood" or "fl_sahara",
+-- which will be used in a checkerboard manner.
+--
+-- The fields oxyd, white and endp are special. "oxyd" only holds
+-- the oxyd's flavor, "white" can be a boolean to define the main actor
+-- to be the white marble. "endp" defines what happens after the Sokoban
+-- part of the level has been completed, i.e. how to redraw the level
+-- and how to open the oxyds.
+--
+-- Example:
+--
+--  [129] = {inf = ti{"fl_dunes", friction = 3.0, adhesion = 1.0},
+--           outf = {"fl_lawn_e1", "fl_lawn_e2", "fl_lawn_e3", "fl_lawn_e4", res = RESOLVE_WAVES},
+--           wall = {"st_ancient", "fl_lawn_b"},
+--           box = "st_camouflage_movable",
+--           door = {{"fl_bridge_bw", "fl_bridge_bn", res = RESOLVE_RANDOM}, "st_nil"},
+--           oxyd = "d",
+--         endp = {goal = "st_camouflage_hollow",
+--                 alg = "ralf"}},
+--
+--   will define design 129. The walls will be "st_ancient" on "fl_lawn_b",
+--   the inner floor is "fl_dunes" with higher friction values. The outer
+--   floor will be in a special lawn-pattern due to RESOLVE_WAVES.
+--   The boxes are movable camouflage stones, which become hollow after
+--   all boxes are on triggers. The end phase algorithm to be used is
+--   "ralf", i.e. all but one oxyd can be reached during the Sokoban
+--   part, the corresponding doors are randomly oriented bridges.
+--
+-- Design-Algorithms:
+--
+--   RESOLVE_ALL = 0          : default, used for elements which can be rendered simultaneously
+--   RESOLVE_RANDOM = 1       : choose randomly among the elements
+--   RESOLVE_CHECKERBOARD = 2 : up to 3 different elements in checkerboard pattern
+--   RESOLVE_LINES = 3        : arbitrary number of elements in diagonal lines
+--   RESOLVE_WAVES = 4        : works best with 4 different elements
+--   RESOLVE_ORIENTED = 5     : special version for st_door, used internally
+--
+--   RESOLVE_RANDOM may take additional attributes to define the
+--   percentages of the subelements. Example:
+--     outf = {"fl_water", "fl_swamp", res = {RESOLVE_RANDOM, 5, 1}}
+--   The outer floor will be 5 parts water to 1 part swamp.
+--
+-- Endphase-Algorithms:
+--
+--   circle         : arrange eight oxyds in a circle (default)
+--   hide           : position oxyds in the outer walls
+--     gradients    : like hide, create gradients
+--     magnets      : like hide, create magnets
+--   fourswitch     : create a fourswitch puzzle
+--   block          : arrange oxyds with doors
+--   ralf           : arrange oxyds with doors, which open by triggers
+--     vortex       : like ralf, create vortices between clusters
+--     allcrack     : like ralf, create cracks everywhere
+--     knock        : like ralf, open doors on knocking on other doors
+--   outside        : create oxyds in the outside and outer walls
+--
+--   You can use "max_pairs" to determine the maximal number of
+--   oxyd pairs in "block", "ralf", "vortex", "allcrack", "knock",
+--   and "outside"; and "strength" to determine the strength of
+--   the gradients and magnets in "gradients" and "magnets".
+--
+
+lib.soko_designlist = {}
+setmetatable(lib.soko_designlist, getmetatable(lib))
+
+RESOLVE_ALL = 0
+RESOLVE_RANDOM = 1
+RESOLVE_CHECKERBOARD = 2
+RESOLVE_LINES = 3
+RESOLVE_WAVES = 4
+RESOLVE_ORIENTED = 5
+
+-- The default design must not be nested!
+lib.soko_designlist.default = {
+    wall = "st_plaster",
+     inf = "fl_wood",
+    outf = "st_invisible_hollow",
+     box = "st_brownie",
+    goal = "it_trigger",
+    oxyd = "b",
+    endp = {alg = "circle"},
+}
+
+-- outf_default_stone has the following meaning: When outf is drawn
+-- by set_element, but no stone is set, outf_default_stone is used
+-- instead. You can suppress this behaviour by explicitly setting
+-- outf = { "fl_myfloor", "st_nil" }.
+-- This is done to avoid a chess-stone from jumping into the void,
+-- as a present to the gamer.
+
+lib.soko_designlist.list = {
+
+-- endp-algs: circle, ralf, hide, outside, allcrack, block, fourswitch
+--            vortex, gradients, magnets
+
+
+  [1] = {inf = "fl_bluegray",
+         outf = "fl_space",
+         wall = "st_bluegray",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_nil",
+                 alg = "circle"}},
+  [2] = {inf = "fl_bluegray",
+         outf = "fl_water",
+         wall = "st_bluegray",
+         box = "st_rawglass_movable",
+         door = "st_door_b",
+         oxyd = "a",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "ralf"}},
+  [3] = {inf = "fl_bluegray",
+         outf = "fl_abyss",
+         wall = "st_bluegray",
+         box = "st_box_wood_growing",
+         door = "st_flat_cracked",
+         oxyd = "a",
+         endp = {goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 give = "it_hammer",
+                 alg = "block"}},
+  [4] = {inf = "fl_bright",
+         outf = "fl_sahara",
+         wall = "st_bluegray",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {wall = {"st_nil", "fl_bluegray"},
+                 goal = "st_nil",
+                 alg = "outside"}},
+  [5] = {inf = "fl_bright",
+         outf = "fl_space",
+         wall = "st_bluegray",
+         box = "st_box_wood",
+         door = "st_door_c",
+         oxyd = "c",
+         endp = {wall = "st_bluegray_hollow",
+                 goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 alg = "outside", max_pairs = 3}},
+  [6] = {inf = "fl_bright",
+         outf = "fl_space",
+         wall = "st_bluegray",
+         box = "st_greenbrown_movable",
+         door = "st_knight",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown_hollow",
+                 give = "it_sword",
+                 alg = "block"}},
+  [7] = {inf = "fl_bright",
+         outf = "fl_space",
+         wall = "st_bluegray",
+         box = "st_box_wood",
+         door = "st_door_c",
+         oxyd = "c",
+         endp = {goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 alg = "fourswitch"}},
+  [8] = {inf = "fl_ivory",
+         outf = "fl_blueslab",
+         wall = "st_bluesand",
+         box = "st_plaster_movable",
+         door = "st_door_b",
+         oxyd = "d",
+         endp = {goal = "st_plaster_breakable",
+                 give = "it_hammer",
+                 alg = "ralf"}},
+  [9] = {inf = "fl_ivory",
+         outf = "fl_blueslab",
+         wall = "st_bluesand",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "d",
+         endp = {goal = "st_nil",
+                 alg = "circle"}},
+ [10] = {inf = "fl_rough",
+         outf = "fl_space",
+         wall = "st_bluesand",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_nil",
+                 alg = "magnets"}},
+ [11] = {inf = "fl_rough",
+         outf = "fl_abyss",
+         wall = "st_bluesand",
+         box = "st_redbrown_movable",
+         door = "st_door_b",
+         oxyd = "b",
+         endp = {goal = "st_redbrown",
+                 alg = "vortex"}},
+ [12] = {inf = "fl_rough",
+         outf = "fl_space",
+         wall = "st_bluesand",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_break_oxydc",
+         oxyd = "b",
+         endp = {goal = "st_nil",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [13] = {inf = "fl_rough",
+         outf = "fl_lawn_a",
+         wall = "st_bluesand",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "ralf"}},
+ [14] = {inf = "fl_himalaya",
+         outf = "fl_water",
+         wall = {"st_rawglass", {"fl_himalaya", "fl_water", res = RESOLVE_CHECKERBOARD}},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_pull",
+                 alg = "magnets"}},
+ [15] = {inf = "fl_himalaya",
+         outf = "fl_water",
+         wall = {"st_rawglass", {"fl_himalaya", "fl_water", res = RESOLVE_CHECKERBOARD}},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_nil",
+                 alg = "fourswitch"}},
+ [16] = {inf = "fl_redslab",
+         outf = "fl_abyss",
+         wall = {"st_rawglass", {"fl_redslab", "fl_abyss", res = RESOLVE_CHECKERBOARD}},
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_b",
+         oxyd = "c",
+         endp = {alg = "circle"}},
+ [17] = {inf = "fl_redslab",
+         outf = "fl_sahara",
+         wall = {"st_rawglass", {"fl_redslab", "fl_sahara", res = RESOLVE_CHECKERBOARD}},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {wall = "st_grate_framed",
+                 goal = "st_grate_framed",
+                 alg = "outside"}},
+ [18] = {inf = "fl_wood",
+         outf = "fl_water",
+         wall = {"st_rawglass", {"fl_wood", "fl_water", res = RESOLVE_CHECKERBOARD}},
+         box = "st_greenbrown_movable",
+         door = {"st_door_b", "fl_wood"},
+         oxyd = "c",
+         endp = {goal = "st_greenbrown_hollow",
+                 alg = "ralf"}},
+ [19] = {inf = "fl_wood",
+         outf = "fl_abyss",
+         wall = {"st_rawglass", {"fl_wood", "fl_abyss", res = RESOLVE_CHECKERBOARD}},
+         box = "st_plop",
+         door = {"st_blocker", "fl_wood"},
+         oxyd = "d",
+         endp = {goal = "st_granite",
+                 alg = "vortex"}},
+ [20] = {inf = "fl_wood",
+         outf = "fl_abyss",
+         wall = {"st_rawglass", {"fl_wood", "fl_abyss", res = RESOLVE_CHECKERBOARD}},
+         box = "st_box_wood_growing",
+         door = {"st_door_c", "fl_wood"},
+         oxyd = "a",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "magnets"}},
+ [21] = {inf = "fl_wood",
+         outf = "fl_sahara",
+         wall = {"st_rawglass", {"fl_wood", "fl_sahara", res = RESOLVE_CHECKERBOARD}},
+         box = "st_box_wood",
+         door = "st_break_bug",
+         oxyd = "c",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 give = "#ac_bug",
+                 alg = "block"}},
+ [22] = {inf = "fl_wood",
+         outf = "fl_lawn_a",
+         wall = {"st_rawglass", {"fl_wood", "fl_lawn_a", res = RESOLVE_CHECKERBOARD}},
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_knight",
+         oxyd = "b",
+         endp = {goal = "st_nil",
+                 give = "it_sword",
+                 alg = "block"}},
+ [23] = {inf = "fl_wood",
+         outf = "fl_abyss",
+         wall = {"st_rawglass", {"fl_wood", "fl_abyss", res = RESOLVE_CHECKERBOARD}},
+         box = "st_plop",
+         door = {"st_blocker", "fl_wood"},
+         oxyd = "d",
+         endp = {goal = {"st_nil", "it_nil"},
+                 alg = "allcrack", max_pairs = 1}},
+ [24] = {inf = "fl_wood",
+         outf = "fl_sahara",
+         wall = {"st_rawglass", {"fl_wood", "fl_sahara", res = RESOLVE_CHECKERBOARD}},
+         box = "st_brownie",
+         door = "st_break_bug",
+         oxyd = "c",
+         endp = {goal = "st_nil",
+                 give = "#ac_bug",
+                 alg = "block"}},
+ [25] = {inf = "fl_wood",
+         outf = "fl_lawn_a",
+         wall = {"st_rawglass", "it_cherry", {"fl_wood", "fl_lawn_a", res = RESOLVE_CHECKERBOARD}},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = {"st_rawglass", "it_cherry", {"fl_wood", "fl_lawn_a", res = RESOLVE_CHECKERBOARD}},
+                 give = "it_cherry",
+                 alg = "outside"}},
+ [26] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_water",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {goal = "st_grate_cross",
+                 alg = "ralf"}},
+ [27] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_water",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_greenbrown_movable",
+         door = "st_door_b",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown_hollow",
+                 alg = "hide"}},
+ [28] = {inf = "fl_tigris",
+         outf = "fl_sahara",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_box_wood_growing",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "fourswitch"}},
+ [29] = {inf = "fl_tigris",
+         outf = "fl_lawn_a",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_brownie",
+         door = "st_knight",
+         oxyd = "a",
+         endp = {goal = "st_pull",
+                 give = "it_sword",
+                 alg = "block"}},
+ [30] = {inf = "fl_tigris",
+         outf = "fl_sahara",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_box_wood_growing",
+         door = "st_break_oxydc",
+         oxyd = "a",
+         endp = {goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 give = "it_hammer",
+                 alg = "block"}},
+ [31] = {inf = "fl_tigris",
+         outf = "fl_space",
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_rawglass_movable",
+         door = "st_door_b",
+         oxyd = "a",
+         endp = {goal = "st_rawglass_movable",  -- could be chess stones!
+                 wall = "st_grate_cross",
+                 give = "it_cherry",
+                 alg = "outside", max_pairs = 3}},
+ [32] = {inf = "fl_bluegray",
+         outf = "fl_space",
+         wall = "st_metal",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "d",
+         endp = {goal = "st_granite",
+                 alg = "vortex"}},
+ [33] = {inf = "fl_bluegray",
+         outf = "fl_blueslab",
+         wall = "st_metal",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_metal_hollow",
+                 alg = "magnets"}},
+ [34] = {inf = "fl_bright",
+         outf = "fl_abyss",
+         wall = "st_metal",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_nil",
+                 alg = "gradients"}},
+ [35] = {inf = "fl_bright",
+         outf = "fl_abyss",
+         wall = "st_metal",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {goal = "fl_swamp",
+                 alg = "ralf"}},
+ [36] = {inf = "fl_bright",
+         outf = "fl_abyss",
+         wall = "st_metal",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {alg = "circle"}},
+ [37] = {inf = "fl_ivory",
+         outf = "fl_lawn_a",
+         wall = "st_granite",
+         box = "st_box_wood_growing",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {wall = "st_grate_framed",
+                 goal = {"fl_swamp", "it_nil"},
+                 alg = "outside"}},
+ [38] = {inf = "fl_ivory",
+         outf = "fl_abyss",
+         wall = "st_granite",
+         box = "st_rawglass_movable",
+         door = "st_door_b",
+         oxyd = "a",
+         endp = {goal = "st_rawglass_movable",  -- could be chess stones!
+                 give = {"it_cherry", "it_cherry", "it_cherry", "it_cherry", "it_cherry", "it_cherry", "it_cherry"},
+                 alg = "ralf", max_pairs = 1}},
+ [39] = {inf = "fl_ivory",
+         outf = "fl_abyss",
+         wall = "st_granite",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_grate_framed",
+                 alg = "fourswitch"}},
+ [40] = {inf = "fl_ivory",
+         outf = "fl_abyss",
+         wall = "st_granite",
+         box = "st_rawglass_movable",
+         door = "st_knight",
+         oxyd = "a",
+         endp = {goal = "st_lightglass_hollow",
+                 give = "it_sword",
+                 alg = "block"}},
+ [41] = {inf = "fl_rough",
+         outf = "fl_space",
+         wall = "st_granite",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {wall = "st_granite_hollow",
+                 goal = {"st_nil", "it_nil", "fl_hay"},
+                 alg = "outside", max_pairs = 3}},
+ [42] = {inf = "fl_rough",
+         outf = "fl_sahara",
+         wall = "st_granite",
+         box = "st_greenbrown_movable",
+         door = "st_door_b",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown",
+                 alg = "vortex"}},
+ [43] = {inf = "fl_lawn_a",
+         outf = "fl_space",
+         wall = "st_plaster",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {wall = "st_plaster_hollow",
+                 goal = "st_plaster_hollow",
+                 alg = "outside", max_pairs = 3}},
+ [44] = {inf = "fl_lawn_a",
+         outf = "fl_blueslab",
+         wall = "st_plaster",
+         box = "st_redbrown_movable",
+         door = "st_door_b",
+         oxyd = "b",
+         endp = {goal = "st_redbrown_hollow",
+                 alg = "ralf"}},
+ [45] = {inf = "fl_lawn_a",
+         outf = "fl_lawn_a",
+         wall = "st_plaster",
+         box = "st_box_wood_growing",
+         door = "st_break_bug",
+         oxyd = "a",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 give = "#ac_bug",
+                 alg = "block"}},
+ [46] = {inf = "fl_lawn_a",
+         outf = "fl_abyss",
+         wall = "st_plaster",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_flat_cracked",
+         oxyd = "d",
+         endp = {goal = "st_nil",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [47] = {inf = "fl_lawn_a",
+         outf = "fl_sahara",
+         wall = "st_plaster",
+         box = "st_greenbrown_movable",
+         door = "st_break_bug",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown_hollow",
+                 give = "#ac_bug",
+                 alg = "block"}},
+ [48] = {inf = "fl_lawn_a",
+         outf = "fl_lawn_a",
+         wall = "st_flat",
+         box = "st_rawglass_movable",
+         door = "st_door_b",
+         oxyd = "a",
+         endp = {goal = "st_rawglass_movable",  -- could be chess stones!
+                 wall = "st_flat_breakable",
+                 give = {"it_cherry", "it_cherry", "it_cherry", "it_hammer"},
+                 alg = "ralf"}},
+ [49] = {inf = "fl_lawn_a",
+         outf = "fl_blueslab",
+         wall = "st_plaster",
+         box = "st_redbrown_movable",
+         door = "st_flat_cracked",
+         oxyd = "b",
+         endp = {goal = "st_redbrown_hollow",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [50] = {inf = "fl_lawn_a",
+         outf = "fl_lawn_a",
+         wall = "st_plaster",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {alg = "circle"}},
+ [51] = {inf = "fl_lawn_a",
+         outf = "fl_lawn_a",
+         wall = "st_plaster",
+         box = "st_box_wood_growing",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {wall = {"st_flat_breaking", "fl_sahara"},
+                 goal = {"fl_swamp", "it_nil"},
+                 alg = "outside"}},
+ [52] = {inf = "fl_lawn_a",
+         outf = "fl_water",
+         wall = "st_plaster",
+         box = "st_box_wood",
+         door = "st_door_c",
+         oxyd = "c",
+         endp = {goal = {"st_grate_cross", "it_nil"},
+                 alg = "ralf"}},
+ [53] = {inf = "fl_lawn_a",
+         outf = "fl_space",
+         wall = "st_plaster",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_b",
+         oxyd = "d",
+         endp = {goal = {"st_nil", "fl_swamp"},
+                 alg = "fourswitch"}},
+ [54] = {inf = "fl_himalaya",
+         outf = "fl_water",
+         wall = "st_purplemarble",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_purplemarble",
+                 alg = "vortex"}},
+ [55] = {inf = "fl_himalaya",
+         outf = "fl_abyss",
+         wall = "st_purplemarble",
+         box = "st_redbrown_movable",
+         door = "st_door_b",
+         oxyd = "b",
+         endp = {goal = "st_redbrown_hollow",
+                 alg = "ralf"}},
+ [56] = {inf = "fl_himalaya",
+         outf = "fl_abyss",
+         wall = "st_purplemarble",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_b",
+         oxyd = "b",
+         endp = {alg = "circle"}},
+ [57] = {inf = "fl_redslab",
+         outf = "fl_blueslab",
+         wall = "st_purplemarble",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "d",
+         endp = {wall = {"st_nil", "it_explosion"},
+                 goal = {"st_nil", "it_explosion"},
+                 alg = "outside"}},
+ [58] = {inf = "fl_redslab",
+         outf = "fl_space",
+         wall = "st_purplemarble",
+         box = "st_plaster_movable",
+         door = "st_flat_cracked",
+         oxyd = "d",
+         endp = {goal = "st_flat_cracked",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [59] = {inf = "fl_redslab",
+         outf = "fl_space",
+         wall = "st_purplemarble",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_nil",
+                 alg = "ralf"}},
+ [60] = {inf = "fl_redslab",
+         outf = "fl_space",
+         wall = "st_purplemarble",
+         box = "st_plaster_movable",
+         door = "st_break_bug",
+         oxyd = "d",
+         endp = {goal = "st_break_bug",
+                 give = "#ac_bug",
+                 alg = "block"}},
+ [61] = {inf = "fl_samba",
+         outf = "fl_lawn_a",
+         wall = "st_tigris",
+         box = "st_greenbrown_movable",
+         door = "st_door_b",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown_hollow",
+                 alg = "fourswitch"}},
+ [62] = {inf = "fl_samba",
+         outf = "fl_water",
+         wall = "st_tigris",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {goal = "st_blocker",
+                 alg = "vortex"}},
+ [63] = {inf = "fl_samba",
+         outf = "fl_lawn_a",
+         wall = "st_tigris",
+         box = "st_plaster_movable",
+         door = "st_flat_cracked",
+         oxyd = "d",
+         endp = {goal = "st_flat_cracked",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [64] = {inf = "fl_samba",
+         outf = "fl_water",
+         wall = "st_tigris",
+         box = "st_redbrown_movable",
+         door = "st_door_b",
+         oxyd = "b",
+         endp = {goal = "st_redbrown_hollow",
+                 alg = "gradients"}},
+ [65] = {inf = "fl_samba",
+         outf = "fl_space",
+         wall = "st_tigris",
+         box = "st_box_wood_growing",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 alg = "ralf"}},
+ [66] = {inf = "fl_samba",
+         outf = "fl_lawn_a",
+         wall = "st_tigris",
+         box = "st_greenbrown_movable",
+         door = "st_door_b",
+         oxyd = "c",
+         endp = {goal = "st_greenbrown",
+                 alg = "vortex"}},
+ [67] = {inf = "fl_samba",
+         outf = "fl_water",
+         wall = "st_tigris",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {alg = "circle"}},
+ [68] = {inf = "fl_samba",
+         outf = "fl_space",
+         wall = "st_tigris",
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_nil",
+                 alg = "allcrack", max_pairs = 1}},
+ [69] = {inf = "fl_samba",
+         outf = "fl_space",
+         wall = "st_tigris",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "d",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "ralf"}},
+ [70] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_space",
+         wall = "st_purplegray",
+         box = "st_plaster_movable",
+         door = "st_door_b",
+         oxyd = "d",
+         endp = {goal = "st_flat_breaking",
+                 alg = "ralf"}},
+ [71] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_lawn_a",
+         wall = "st_purplegray",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {wall = {"st_nil", "it_explosion"},
+                 goal = {"st_nil", "it_explosion"},
+                 alg = "outside"}},
+ [72] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_lawn_a",
+         wall = "st_purplegray",
+         box = "st_plop",
+         door = "st_blocker",
+         oxyd = "d",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "magnets"}},
+ [73] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = "fl_lawn_a",
+         wall = "st_purplegray",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_knight",
+         oxyd = "d",
+         endp = {goal = "st_knight",
+                 give = "it_sword",
+                 alg = "block"}},
+ [74] = {inf = "fl_tigris",
+         outf = "fl_blueslab",
+         wall = "st_purplegray",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {goal = "st_nil",
+                 alg = "fourswitch"}},
+ [75] = {inf = "fl_tigris",
+         outf = "fl_water",
+         wall = "st_purplegray",
+         box = "st_shogun",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = {"st_nil", "it_explosion"},
+                 alg = "gradients"}},
+ [76] = {inf = "fl_platinum",
+         outf = "fl_abyss",
+         wall = "st_darkglass",
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_pull",
+                 alg = "hide"}},
+ [77] = {inf = "fl_darkgray",
+         outf = "fl_lawn_b",
+         wall = "st_brick",
+         box = "st_flat_movable",
+         door = "st_door_d",
+         oxyd = "a",
+         endp = {goal = "st_flat_cracked",
+                 give = "it_hammer",
+                 alg = "knock"}},
+ [78] = {inf = ti{"fl_dunes", friction = 3.0, adhesion = 1.0},
+         outf = "fl_sand",
+         wall = "st_pinkbumps",
+         box = "st_plaster_movable",
+         door = "st_flat_cracked",
+         oxyd = "a",
+         endp = {goal = "st_flat_breakable",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [79] = {inf = "fl_gravel",
+         outf = {"fl_gravel", "st_disco_medium"},
+         wall = "st_camouflage",
+         box = "st_box_rock",
+         door = "st_camouflage",
+         open_door = {"st_nil", "fl_lawn_b"},
+         oxyd = "b",
+         endp = {goal = "st_camouflage",
+                 alg = "vortex"}},
+ [80] = {inf = "fl_lawn_a",
+         outf = {"fl_water", "fl_swamp", res = {RESOLVE_RANDOM, 5, 1}},
+         wall = "st_camouflage",
+         box = "st_box_hay",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {wall = {"fl_swamp", {"st_camouflage_hollow", "st_nil", res = {RESOLVE_RANDOM, 1, 2}}},
+                 goal = {"fl_swamp", "it_nil"},
+                 give = "it_umbrella",
+                 alg = "outside", max_pairs = 1}},
+ [81] = {inf = "fl_dark",
+         outf = "fl_bright",
+         wall = {"st_lightglass", "fl_platinum"},
+         box = "st_darkglass_movable",
+         door = "st_passage_black_frame",
+         open_door = "st_passage_white_frame",
+         oxyd = "c",
+         white = true,
+         endp = {goal = "st_blur_straight",
+                 alg = "ralf"}},
+ [82] = {inf = "fl_sand",
+         outf = "fl_water",
+         wall = {"st_lightglass", "fl_water"},
+         box = "st_box_wood",
+         door = {"st_door_a", "fl_sand"},
+         oxyd = "c",
+         endp = {goal = {"st_nil", "fl_wood_framed", "it_nil"},
+                 alg = "fourswitch"}},
+ [83] = {inf = "fl_platinum",
+         outf = {"fl_lawn_b", "st_disco_medium"},
+         wall = "st_darkglass",
+         box = "st_camouflage_movable",
+         door = "st_darkglass",
+         open_door = "st_lightglass_hollow",
+         oxyd = "b",
+         endp = {outf = "st_nil",
+                 goal = "st_camouflage_hollow",
+                 alg = "ralf"}},
+ [84] = {inf = "fl_sand",
+         outf = {"fl_water", "st_disco_medium"},
+         wall = "st_darkglass",
+         box = "st_box_rock",
+         door = "st_door_d",
+         oxyd = "b",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "knock"}},
+ [85] = {inf = "fl_sand",
+         outf = {"fl_water", "st_disco_medium"},
+         wall = "st_brick",
+         box = "st_box_rock",
+         door = "st_door_d",
+         oxyd = "a",
+         endp = {goal = "st_passage_black_frame",
+                 alg = "ralf"}},
+ [86] = {inf = ti{"fl_red", burnable = false, friction = 3.0},
+         outf = "fl_space",
+         wall = {"st_redfiber", "fl_fake_abyss"},
+         box = "st_lightglass_movable",
+         door = {"st_nil", ti{"fl_red", burnable = true, eternal = true, friction = 3.0}, "it_burnable_ignited"},
+         open_door = {"it_nil", ti{"fl_red", burnable = false, friction = 3.0}},
+         oxyd = "a",
+         endp = {goal = {"st_nil", "it_explosion"},
+                 alg = "ralf"}},
+ [87] = {inf = "fl_plank",
+         outf = "fl_water",
+         wall = {"st_redfiber", "fl_blueslab"},
+         box = "st_flat_movable",
+         door = "st_redfiber",
+         open_door = "st_lightglass_hollow",
+         oxyd = "a",
+         endp = {goal = "st_greengray",
+                 alg = "vortex"}},
+ [88] = {inf = "fl_dark",
+         outf = "fl_abyss",
+         wall = "st_fake_oxyda",
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "hide"}},
+ [89] = {inf = "fl_brick",
+         outf = {"fl_mortar", "st_disco_medium"},
+         wall = ti{"st_fake_oxyda", state = OPEN},
+         box = "st_greenbrown_movable",
+         door = "st_door_d",
+         oxyd = "a",
+         endp = {goal = "st_grate_framed",
+                 alg = "knock"}},
+ [90] = {inf = "fl_redslab",
+         outf = "fl_space",
+         wall = "st_fake_oxydb",
+         box = "st_plaster_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_flat_breaking",
+                 alg = "hide"}},
+ [91] = {inf = "fl_blueslab",
+         outf = {"fl_swamp", "st_disco_light"},
+         wall = ti{"st_fake_oxydb", state = OPEN},
+         box = "st_box_hay",
+         door = "st_break_plain",
+         oxyd = "b",
+         endp = {goal = "st_break_plain",
+                 give = "it_hammer",
+                 alg = "block"}},
+ [92] = {inf = "fl_sahara",
+         outf = {"fl_water", "st_disco_light"},
+         wall = "st_fake_oxydc",
+         box = "st_darkglass_movable",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "hide"}},
+ [93] = {inf = ti{"fl_red", friction = 3.0},
+         outf = {"fl_abyss", {"st_jamb_black", "st_jamb_white", res = RESOLVE_RANDOM}},
+         wall = ti{"st_fake_oxydc", state = OPEN},
+         box = "st_rawglass_movable",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {goal = "st_passage_black_frame",
+                 alg = "fourswitch"}},
+ [94] = {inf = "fl_concrete",
+         outf = "fl_sand",
+         wall = "st_fake_oxydd",
+         box = "st_darkglass_movable",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "hide"}},
+ [95] = {inf = "fl_marble",
+         outf = "fl_water",
+         wall = ti{"st_fake_oxydd", state = OPEN},
+         box = "st_box_rock",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {outf = "fl_swamp",
+                 wall = "st_break_plain",
+                 goal = {"fl_swamp", "it_nil"},
+                 give = "it_hammer",
+                 alg = "outside"}},
+ [96] = {inf = "fl_marble",
+         outf = {"fl_lawn_c3", "fl_lawn_d3", res = RESOLVE_CHECKERBOARD},
+         wall = "st_redbrown",
+         box = "st_box_rock",
+         door = "st_door_d",
+         oxyd = "a",
+         endp = {goal = {"st_grate_framed", "it_nil"},
+                 alg = "knock"}},
+ [97] = {inf = "fl_lawn_a",
+         outf = {"fl_lawn_a", "st_redbrown"},
+         wall = "st_redbrown",
+         box = "st_camouflage_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {outf = "st_redbrown_hollow",
+                 wall = "st_redbrown_hollow",
+                 goal = "st_camouflage_hollow",
+                 alg = "outside"}},
+ [98] = {inf = ti{"fl_yinyang_yin", invisible = true},
+         outf = {ti{"fl_yinyang_yin", invisible = true}, "st_redrock"},
+         wall = "st_redrock",
+         box = "st_granite_movable",
+         door = "st_purplegray",
+         open_door = "st_nil",
+         oxyd = "b",
+         endp = {goal = "st_purplegray",
+                 alg = "vortex"}},
+ [99] = {inf = "fl_mortar",
+         outf = "fl_brick",
+         wall = "st_redrock",
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {wall = {"st_lightglass_hollow", "fl_tigris"},
+                 goal = "st_lightglass_hollow",
+                 alg = "outside"}},
+[100] = {inf = "fl_mortar",
+         outf = "fl_water",
+         wall = "st_redrock",
+         box = "st_plop",
+         door = "st_door_d",
+         oxyd = "b",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 alg = "ralf"}},
+[101] = {inf = "fl_lawn_b",
+         outf = {"fl_lawn_c3", "fl_lawn_d4", res = RESOLVE_CHECKERBOARD},
+         wall = "st_redrock",
+         box = "st_darkglass_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "hide"}},
+[102] = {inf = "fl_rock",
+         outf = {"fl_rock", "st_disco_medium"},
+         wall = "st_darkgray",
+         box = "st_camouflage_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {wall = {"st_disco_light", "fl_gray"},
+                 goal = {"it_nil", "st_disco_light", "fl_lawn_b"},
+                 alg = "outside", max_pairs = 3}},
+[103] = {inf = ti{"fl_stone", friction = 3.0, adhesion = 1.0},
+         outf = {"fl_water", "st_disco_medium"},
+         wall = "st_darkgray",
+         box = "st_darkglass_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = {"st_pull", "it_nil", "fl_dark"},
+                 alg = "fourswitch"}},
+[104] = {inf = "fl_platinum",
+         outf = "fl_space",
+         wall = "st_darkgray",
+         box = "st_box_wood",
+         door = "st_door_d",
+         oxyd = "b",
+         endp = {goal = {"st_nil", "fl_marble", "it_nil"},
+                 alg = "knock"}},
+[105] = {inf = "fl_woven",
+         outf = "fl_gravel",
+         wall = "st_greengray",
+         box = "st_camouflage_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = {"fl_aquamarine", "it_nil", "st_nil"},
+                 alg = "magnets"}},
+[106] = {inf = "fl_dark",
+         outf = "fl_abyss",
+         wall = "st_greengray",
+         box = "st_brownie",
+         door = "st_flat_cracked",
+         oxyd = "b",
+         endp = {goal = "st_break_bug",
+                 give = {"#ac_bug", "it_hammer"},
+                 alg = "block"}},
+[107] = {inf = "fl_plank",
+         outf = {"fl_plank", "st_concrete"},
+         wall = "st_concrete",
+         box = "st_rawglass_movable",
+         door = "st_door_d",
+         oxyd = "d",
+         endp = {goal = {"st_nil", "it_explosion"},
+                 alg = "knock"}},
+[108] = {inf = "fl_lawn_a",
+         outf = "fl_water",
+         wall = {"st_concrete", "fl_water"},
+         box = "st_darkglass_movable",
+         door = {"st_break_plain", "fl_lawn_a"},
+         oxyd = "c",
+         endp = {goal = "st_pull",
+                 give = "it_hammer",
+                 alg = "block"}},
+[109] = {inf = ti{"fl_stone", friction = 3.0, adhesion = 1.0},
+         outf = "fl_space",
+         wall = {"st_concrete", "fl_fake_abyss"},
+         box = "st_redbrown_movable",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {wall = {"st_nil", "fl_darkgray"},
+                 goal = {"st_nil", "it_nil", "fl_hay"},
+                 alg = "outside", max_pairs = 3}},
+[110] = {inf = "fl_rock",
+         outf = {"fl_rock", "st_ancient"},
+         wall = "st_ancient",
+         box = "st_greenbrown_movable",
+         door = "st_ancient",
+         open_door = "st_nil",
+         oxyd = "b",
+         endp = {goal = "st_ancient",
+                 alg = "vortex"}},
+[111] = {inf = "fl_sand",
+         outf = "fl_water",
+         wall = "st_ancient",
+         box = "st_rawglass_movable",
+         door = "st_door_c",
+         oxyd = "c",
+         endp = {goal = "st_grate_framed",
+                 alg = "ralf"}},
+[112] = {inf = ti{"fl_stone", friction = 3.0, adhesion = 1.0},
+         outf = "fl_swamp",
+         wall = "st_ancient",
+         box = "st_camouflage_movable",
+         door = "st_door_d",
+         oxyd = "a",
+         endp = {goal = "st_camouflage_hollow",
+                 alg = "knock"}},
+[113] = {inf = "fl_bluegreen",
+         outf = "fl_abyss",
+         wall = "st_brownmarble",
+         box = "st_plop",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {wall = {{"st_nil", "it_explosion"}, "fl_marble"},
+                 goal = {{"st_nil", "it_explosion"}, "it_nil", "fl_aquamarine"},
+                 give = "it_umbrella",
+                 alg = "outside", max_pairs = 1}},
+[114] = {inf = "fl_sand",
+         outf = {"fl_sand", "st_brownmarble"},
+         wall = "st_brownmarble",
+         box = "st_box_wood",
+         door = "st_knight",
+         oxyd = "b",
+         endp = {goal = {"fl_swamp", "it_nil"},
+                 give = "it_sword",
+                 alg = "block"}},
+[115] = {inf = {"fl_platinum", "fl_bright", res = RESOLVE_CHECKERBOARD},
+         outf = {"fl_space", "fl_abyss", res = RESOLVE_CHECKERBOARD},
+         wall = "st_brownpyramide",
+         box = "st_darkglass_movable",
+         door = "st_brownpyramide",
+         open_door = "st_grate_cross",
+         oxyd = "a",
+         endp = {wall = "st_grate_cross",
+                 goal = "st_lightglass_hollow",
+                 give = "it_umbrella",
+                 alg = "block"}},
+[116] = {inf = "fl_wood_framed",
+         outf = "fl_water",
+         wall = "st_brownpyramide",
+         box = "st_granite_movable",
+         door = "st_brownpyramide",
+         open_door = "st_grate_cross",
+         oxyd = "b",
+         endp = {goal = "st_granite_hollow",
+                 alg = "ralf"}},
+[117] = {inf = "fl_dark",
+         outf = "st_brownpyramide",
+         wall = "st_brownpyramide",
+         box = "st_rawglass_movable",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {inf = "fl_ice",
+                 outf = "st_fake_oxydd",
+                 wall = "st_fake_oxydd",
+                 goal = {"st_nil", "it_nil", "fl_ice"},
+                 alg = "hide", max_pairs = 1}},
+[118] = {inf = "fl_dark",
+         outf = "fl_gravel",
+         wall = "st_redmarble",
+         box = "st_rawglass_movable",
+         door = "st_door_a",
+         oxyd = "b",
+         endp = {goal = "st_rawglass",
+                 alg = "vortex"}},
+[119] = {inf = "fl_redslab",
+         outf = {"fl_blueslab", "st_disco_light"},
+         wall = "st_redmarble",
+         box = "st_plop",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_nil",
+                 alg = "allcrack", max_pairs = 1}},
+[120] = {inf = "fl_dark",
+         outf = {"st_redbrown", "st_redmarble", res = RESOLVE_CHECKERBOARD},
+         wall = {"st_redbrown", "st_redmarble", res = RESOLVE_CHECKERBOARD},
+         box = "st_plaster_movable",
+         open_door = "st_nil",
+         oxyd = "b",
+         endp = {goal = "st_flat_cracked",
+                 give = "it_hammer",
+                 alg = "ralf"}},
+[121] = {inf = "fl_wood",
+         outf = {"fl_lawn_d3", "fl_lawn_d2", res = RESOLVE_CHECKERBOARD},
+         wall = "st_panel",
+         box = "st_box_wood",
+         door = "st_box_wood",
+         open_door = "fl_swamp",
+         oxyd = "a",
+         endp = {goal = {"it_nil", "fl_swamp"},
+                 alg = "block"}},
+[122] = {inf = "fl_lawn_a",
+         outf = "fl_lawn_b",
+         wall = "st_panel",
+         box = "st_plop",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = {"it_nil", "fl_swamp"},
+                 alg = "fourswitch"}},
+[123] = {inf = ti{"fl_dunes", friction = 3.0, adhesion = 1.0},
+         outf = "fl_bluegreen",
+         wall = "st_woven",
+         box = "st_lightglass_movable",
+         door = "st_lightglass",
+         open_door = "st_pull",
+         oxyd = "a",
+         endp = {goal = "st_pull",
+                 alg = "ralf"}},
+[124] = {inf = "fl_hay",
+         outf = "fl_water",
+         wall = "st_woven",
+         box = "st_redbrown_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {wall = {"st_nil", "fl_woven"},
+                 goal = "st_redbrown_hollow",
+                 give = "it_umbrella",
+                 alg = "outside", max_pairs = 1}},
+[125] = {inf = "fl_lawn_b",
+         outf = "fl_lawn_a",
+         wall = "st_yellow",
+         box = "st_plaster_movable",
+         door = "st_door_c",
+         oxyd = "a",
+         endp = {goal = "st_grate_framed",
+                 alg = "ralf"}},
+[126] = {inf = "fl_blueslab",
+         outf = "fl_abyss",
+         wall = "st_yellow",
+         box = "st_rawglass_movable",
+         door = "st_break_bug",
+         oxyd = "d",
+         endp = {goal = {"st_nil", "it_nil", "fl_ice"},
+                 give = "#ac_bug",
+                 alg = "block"}},
+[127] = {inf = "fl_platinum",
+         outf = "fl_space",
+         wall = "st_yellow",
+         box = "st_plop",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_brownmarble",
+                 alg = "vortex"}},
+[128] = {inf = "fl_himalaya",
+         outf = {"fl_himalaya", {"st_concrete", "st_greengray", res = RESOLVE_CHECKERBOARD}},
+         wall = "st_greengray",
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = {"st_nil", "it_explosion"},
+                 alg = "magnets"}},
+[129] = {inf = ti{"fl_dunes", friction = 3.0, adhesion = 1.0},
+         outf = {"fl_lawn_e1", "fl_lawn_e2", "fl_lawn_e3", "fl_lawn_e4", res = RESOLVE_WAVES},
+         wall = {"st_ancient", "fl_lawn_b"},
+         box = "st_camouflage_movable",
+         door = {{"fl_bridge_bw", "fl_bridge_bn", res = RESOLVE_RANDOM}, "st_nil"},
+         oxyd = "d",
+         endp = {goal = "st_camouflage_hollow",
+                 alg = "ralf"}},
+[130] = {inf = "fl_darkgray",
+         outf = {"fl_dark", {"st_redrock", "st_invisible", "st_invisible", "st_invisible", res = RESOLVE_WAVES}},
+         wall = "st_redrock",
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_nil",
+                 alg = "gradients"}},
+[131] = {inf = "fl_wood",
+         outf = {"fl_wood", {"st_yellow", "st_yellow", "st_redrock", "st_redrock", res = RESOLVE_WAVES}},
+         wall = {"st_yellow", "st_yellow", "st_redrock", "st_redrock", res = RESOLVE_WAVES},
+         box = "st_lightglass_movable",
+         door = "st_flat_breakable",
+         oxyd = "d",
+         endp = {goal = "st_lightglass_hollow",
+                 give = "it_hammer",
+                 alg = "block"}},
+[132] = {inf = "fl_lawn_b",
+         outf = {"fl_water", "fl_swamp", res = {RESOLVE_RANDOM, 3, 1}},
+         wall = "st_camouflage",
+         box = "st_box_wood",
+         door = {"fl_water", "st_lightglass_hollow"},
+         open_door = "fl_swamp",
+         oxyd = "d",
+         endp = {inf = {"fl_lawn_b", "fl_swamp", res = RESOLVE_RANDOM},
+                 goal = {"fl_swamp", "it_nil"},
+                 alg = "ralf"}},
+[133] = {inf = "fl_metal",
+         outf = {"fl_space", "fl_abyss", res = {RESOLVE_RANDOM, 1, 3}},
+         wall = "st_metal",
+         box = "st_darkglass_movable",
+         door = "st_knight",
+         oxyd = "d",
+         endp = {goal = "st_lightglass_hollow",
+                 give = "it_sword",
+                 alg = "block"}},
+[134] = {inf = "fl_bright",
+         outf = {"fl_abyss", {"st_grate_cross", "st_invisible", "st_invisible", "st_invisible", res = RESOLVE_WAVES}},
+         wall = "st_metal",
+         box = "st_redbrown_movable",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_redbrown_hollow",
+                 alg = "fourswitch"}},
+[135] = {inf = "fl_bright",
+         outf = {"fl_bright", {"st_granite", "st_invisible", res = {RESOLVE_RANDOM, 1, 3}}},
+         wall = "st_fake_oxydc",
+         box = "st_rawglass_movable",
+         door = "st_door_a",
+         oxyd = "c",
+         endp = {goal = {"st_lightglass_hollow", "it_nil"},
+                 alg = "hide"}},
+[136] = {inf = "fl_rough",
+         outf = {"st_oneway_white_n", "st_oneway_white_s", "st_oneway_white_e", "st_oneway_white_w", res = RESOLVE_RANDOM},
+         wall = {"st_oneway_white_n", "st_oneway_white_s", "st_oneway_white_e", "st_oneway_white_w", res = RESOLVE_RANDOM},
+         box = "st_plop",
+         oxyd = "b",
+         endp = {alg = "circle"}},
+[137] = {inf = "fl_metal",
+         outf = {"st_mirror_slab_n", "st_mirror_slab_e", "st_mirror_slab_s", "st_mirror_slab_w", res = RESOLVE_RANDOM},
+         wall = {"st_redfiber", "fl_abyss"},
+         box = {"st_mirror_slab_nm", "st_mirror_slab_em", "st_mirror_slab_sm", "st_mirror_slab_wm", res = RESOLVE_RANDOM},
+         door = "st_redfiber",
+         open_door = "st_lightglass_hollow",
+         oxyd = "b",
+         endp = {goal = {"st_nil", "it_nil", "fl_darkgray"},
+                 alg = "ralf"}},
+[138] = {inf = "fl_wood_framed",
+         outf = "fl_water",
+         wall = {ti{"st_panel", cluster = 1}, ti{"st_panel", cluster = 2}, res = RESOLVE_RANDOM},
+         box = "st_shogun_s",
+         goal = "it_shogun_s",
+         open_door = "st_nil",
+         oxyd = "a",
+         endp = {goal = "st_nil",
+                 alg = "ralf"}},
+[139] = {inf = "fl_dark",
+         outf = {{"st_passage_white_square", "fl_white"}, {"st_passage_black_square", "fl_fake_abyss"}, res = RESOLVE_CHECKERBOARD},
+         wall = "st_blocker",
+         box = "st_shogun_s",
+         door = "st_blocker",
+         oxyd = "b",
+         endp = {inf = {"fl_white", "fl_fake_abyss", res = RESOLVE_CHECKERBOARD},
+                 goal = {"st_nil", "it_nil"},
+                 alg = "ralf"}},
+[140] = {inf = ti{"fl_bast", friction = 3.0},
+         outf = {"fl_lawn_e4", "fl_lawn_e2", "fl_lawn_e1", "fl_lawn_e3", res = RESOLVE_WAVES},
+         wall = {"st_brownpyramide", "fl_lawn_b"},
+         box = "st_brownie",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = {"st_grate_cross", "it_nil"},
+                 alg = "fourswitch"}},
+[141] = {inf = ti{"fl_aquamarine", adhesion = 1.0, friction = 3.0},
+         outf = {"fl_water", {"st_brownmarble", "st_invisible", "st_invisible", "st_invisible", res = RESOLVE_WAVES}},
+         wall = {"st_purplemarble", "fl_lawn_b"},
+         box = "st_brownie",
+         door = "st_knight",
+         oxyd = "d",
+         endp = {goal = "st_nil",
+                 give = "it_sword",
+                 alg = "block"}},
+[142] = {inf = "fl_lawn_b",
+         outf = {"fl_lawn_c4", "fl_lawn_d2", "fl_lawn_c2", "fl_lawn_e3", res = RESOLVE_WAVES},
+         wall = {"st_lightglass", "fl_lawn_b"},
+         box = "st_darkglass_movable",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "hide"}},
+[143] = {inf = "fl_wood",
+         outf = {"st_disco_light", {"fl_wood_h", "fl_wood_h", "fl_wood_h", "fl_wood_v", res = RESOLVE_WAVES}},
+         wall = {"st_tigris", "fl_wood_framed"},
+         box = "st_plop",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_purplemarble",
+                 alg = "vortex"}},
+[144] = {inf = "fl_bluegreen",
+         outf = {"fl_space", {"it_squashed", "it_nil", res = {RESOLVE_RANDOM, 1, 3}}},
+         wall = "st_purplegray",
+         box = "st_box_wood",
+         door = "st_door_a",
+         oxyd = "d",
+         endp = {wall = "st_lightglass_hollow",
+                 goal = "st_darkglass_hollow",
+                 alg = "outside", max_pairs = 3}},
+[145] = {inf = ti{"fl_dunes", friction = 3.0, adhesion = 1.0},
+         outf = {"fl_sand", {"it_landmine", "it_bottle_broken", "it_nil", res = {RESOLVE_RANDOM, 3, 1, 15}}},
+         wall = {"st_greenbrown", "fl_sand"},
+         box = "st_lightglass_movable",
+         door = "st_door_a",
+         oxyd = "a",
+         endp = {goal = "st_lightglass_hollow",
+                 alg = "allcrack", max_pairs = 1}},
+[146] = {inf = "fl_dark",
+         outf = {"fl_abyss", {"st_grate_cross", "st_nil", res = {RESOLVE_RANDOM, 1, 10}}},
+         wall = "st_granite",
+         box = "st_box_wood",
+         door = "st_door_a",
+         oxyd = "b",
+         white = true,
+         endp = {goal = {"st_grate_cross", "it_nil"},
+                 alg = "magnets"}},
+[147] = {inf = "fl_gray",
+         outf = {"fl_slope_ose", "fl_slope_osw", "fl_slope_one", "fl_slope_onw", res = RESOLVE_WAVES},
+         wall = "st_jamb_white",
+         box = "st_box_wood",
+         door = "st_door_a",
+         oxyd = "a",
+         white = true,
+         endp = {goal = {"st_nil", "it_nil"},
+                 alg = "gradients"}},
+[148] = {inf = "fl_blueslab",
+         outf = {{"fl_redslab", "fl_blueslab", res = RESOLVE_CHECKERBOARD}, "st_disco_light"},
+         wall = "st_metal",
+         box = "st_shogun_s",
+         door = "st_break_white",
+         oxyd = "a",
+         white = true,
+         endp = {goal = "st_break_white",
+                 give = "it_hammer",
+                 alg = "block"}},
+[149] = {inf = "fl_samba",
+         outf = "fl_swamp",
+         wall = "st_yellow",
+         box = "st_shogun_s",
+         goal = "it_shogun_s",
+         door = "st_door_a",
+         oxyd = "c",
+         white = true,
+         endp = {wall = {{"st_nil", "it_explosion"}, "fl_tigris"},
+                 goal = {"st_nil", "it_explosion"},
+                 alg = "outside"}},
+[150] = {inf = "fl_brick",
+         outf = "fl_space",
+         wall = "st_redrock",
+         box = "st_box_rock",
+         door = "st_blocker",
+         oxyd = "a",
+         white = true,
+         endp = {goal = {"st_nil", "fl_rock", "it_nil"},
+                 alg = "ralf"}},
+}
+
+-- Next follows a table to convert the codes Ralf used in his levels
+-- and ralf_sokoban to libsoko-designs. Note that there is a shift
+-- by -1 of the ralfcode in his library, except for design 0.
+-- Hence, when you start an old sokoban level with
+--   play_sokoban(level,715)
+-- then ralf_sokoban.init is called with argument 714, which corresponds
+-- to libsoko-design 4. Use
+--   lib.soko.create_sokoball(..., ...,
+--        lib.soko_designlist.ralfcode_conversion_table[715])
+-- to activate it manually.
+--
+lib.soko_designlist.ralfcode_conversion_table = {
+     [0]   = 1,
+   [714+1] = 4,
+   [715+1] = 70,
+   [716+1] = 37,
+   [718+1] = 18,
+   [719+1] = 57,
+   [720+1] = 43,
+   [764+1] = 28,
+   [765+1] = 10,
+   [766+1] = 61,
+   [767+1] = 19,
+   [768+1] = 14,
+   [769+1] = 44,
+   [770+1] = 5,
+   [771+1] = 71,
+   [772+1] = 38,
+   [773+1] = 62,
+   [775+1] = 58,
+   [776+1] = 45,
+   [777+1] = 34,
+   [867+1] = 46,
+   [868+1] = 2,
+   [869+1] = 74,
+   [870+1] = 41,
+   [871+1] = 63,
+   [872+1] = 20,
+   [873+1] = 54,
+   [874+1] = 47,
+   [875+1] = 32,
+   [876+1] = 29,
+   [877+1] = 11,
+   [910+1] = 6,
+   [911+1] = 72,
+   [912+1] = 39,
+   [913+1] = 64,
+   [914+1] = 21,
+   [915+1] = 59,
+   [916+1] = 48,
+   [917+1] = 35,
+   [918+1] = 26,
+   [919+1] = 8,
+   [920+1] = 65,
+   [921+1] = 22,
+   [922+1] = 16,
+  [1184+1] = 30,
+  [1185+1] = 12,
+  [1186+1] = 66,
+  [1187+1] = 23,
+  [1188+1] = 15,
+  [1189+1] = 49,
+  [1190+1] = 7,
+  [1191+1] = 73,
+  [1192+1] = 40,
+  [1193+1] = 67,
+  [1194+1] = 24,
+  [1195+1] = 60,
+  [1196+1] = 50,
+  [1196+1] = 51,
+  [1197+1] = 36,
+  [1198+1] = 27,
+  [1199+1] = 9,
+  [1200+1] = 68,
+  [1232+1] = 3,
+  [1233+1] = 75,
+  [1234+1] = 42,
+  [1235+1] = 69,
+  [1236+1] = 25,
+  [1237+1] = 55,
+  [1237+1] = 56,
+  [1238+1] = 52,
+  [1239+1] = 33,
+  [1240+1] = 31,
+  [1241+1] = 13,
+  [1314+1] = 17,
+  [1315+1] = 53
+}
+
+-- statistics uses print to output statistics
+-- of the used endphase algorithms.
+function lib.soko_designlist.statistics()
+    alglist = {}
+    for k, v in pairs(lib.soko.design_list) do
+        if v.endp then
+            alg = v.endp.alg
+            if alg then
+                alglist[alg] = (alglist[alg] or 0) + 1
+            end
+        else
+            alglist["default"] = (alglist["default"] or 0) + 1
+        end
+    end
+    for k, v in pairs(alglist) do
+        print(k..": "..v)
+    end
+end
+
+    ]]></el:luamain>
+    <el:i18n>
+    </el:i18n>
+  </el:protected>
+</el:level>

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-14 23:58:47 UTC (rev 1590)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-16 00:55:33 UTC (rev 1591)
@@ -13746,6 +13746,7 @@
 * lib.lua.mod::             A modulo operation.
 * lib.lua.print_table::     Print tables for debug reasons.
 * lib.lua.shuffle::         Shuffle arbitrary anonymous Lua-tables.
+* lib.lua.to_string::       Takes anything as argument and tries to return a sensible description.
 @end menu
 
 @c ----------------- combine_tables --------------------
@@ -14022,6 +14023,46 @@
 @end example
 @end table
 
+ at c ----------------- to_string --------------------
+
+ at node lib.lua.to_string
+ at subsection lib.lua.to_string
+
+ at samp{to_string} is a debug function. It may take anything as argument, and
+tries to return a sensible string describing the type and, if possible, the
+content of the argument.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.lua.to_string}(@i{arg})
+
+ at table @asis
+ at item @i{arg}
+The argument to be described.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+print(lib.lua.to_string(strange_variable))
+ at end example
+
+ at item @b{Details:}
+ at samp{to_string} is meant for debugging Lua code. Sometimes it happens that a
+variable is not what the author expected to be, and selecting the correct
+output method becomes try-and-error. @samp{to_string} is a fast shortcut to
+this. It returns the content of strings, numbers, booleans, tables, positions,
+and groups. It distinguishes ordinary tables from @ref{libmap}-maps. For
+objects, it returns their name and position, for position lists, it returns the
+total number of positions. It further recognizes nil, tile and tiles.
+
+Use @samp{to_string} only for debugging and testing, it
+is not meant as an element of gameplay.
+
+ at item @b{Full Example:}
+ at example
+ at end example
+ at end table
+
 @c ----------------- libmath --------------------
 @node libmath
 @section libmath
@@ -14045,6 +14086,7 @@
 * lib.math.manhattan_distance:: Calculates the Manhattan distance of positions.
 * lib.math.permutation::        Random permutation.
 * lib.math.random_vector::      A table with random entries.
+* lib.math.steps::              A function to classify a number in intervals.
 @end menu
 
 @c ----------------- combinations --------------------
@@ -14383,7 +14425,54 @@
 @end example
 @end table
 
+ at c ----------------- steps --------------------
 
+ at node lib.math.steps
+ at subsection lib.math.steps
+
+ at samp{steps} takes a number @samp{d} and a table of numbers as arguments and
+returns the index of the first number larger or equal @samp{d}, minus one.
+I.e. it classifies @samp{d} into the intervals given by the table, starting
+with zero, when @samp{d} is smaller than the first number in the table, one,
+when @samp{d} is larger or equal to the first, but smaller than the second
+number, and so on.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.math.steps}(@i{discriminator}, @i{steps})
+
+ at table @asis
+ at item @i{discriminator}
+A number.
+
+ at item @i{steps}
+A table of numbers.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+number_pairs = lib.math.steps(total_places, {2, 6, 10, 30})
+ at end example
+
+ at item @b{Details:}
+Negative and non-integer values are allowed. However, the numbers in the
+ at samp{steps}-table should be monotonously increasing (not neccessarily strictly
+monotonously), as otherwise the result might be counterintuitive.
+
+ at item @b{Full Example:}
+ at example
+lib.math.steps(x, {4, 8, 13})
+ at end example
+returns:
+ at example
+     0  if        x < 4
+     1  if   4 <= x < 8
+     2  if   8 <= x < 13
+     3  if  13 <= x
+ at end example
+ at end table
+
+
 @node libmap
 @section libmap
 
@@ -14840,7 +14929,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{lib.import.unpack_multilevel}(multilevel, sublevel_number, format)
+ at b{lib.import.unpack_multilevel}(@i{multilevel}, @i{sublevel_number}, @i{format})
 @table @asis
 @item @i{multilevel}
 A multilevel string.
@@ -14866,6 +14955,7 @@
 be determined by line endings, which can be quite different. In contrast to
 this, an Enigma map is a table of strings, with each line in a separate entry
 of the table. Hence, at least the line endings have to be dealt with.
+ at end table
 
 @c ----------------- uncompress_rle --------------------
 
@@ -14877,7 +14967,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{lib.import.uncompress_rle}(level, attribs)
+ at b{lib.import.uncompress_rle}(@i{level}, @i{attribs})
 @table @asis
 @item @i{level}
 A level string.
@@ -14905,6 +14995,7 @@
 you can hand a string to the attribute @samp{error_on_multiple}. Any character
 in this string is then forbidden to be repeated. Remember that the @samp{new
 line}-character is represented by @samp{\n} in Lua.
+ at end table
 
 @c ----------------- level_to_map --------------------
 
@@ -14916,7 +15007,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{lib.import.level_to_map}(level, line_ending, default_key)
+ at b{lib.import.level_to_map}(@i{level}, @i{line_ending}, @i{default_key})
 @table @asis
 @item @i{level}
 A level string.
@@ -14939,6 +15030,7 @@
 
 Make sure that the last line of the level ends in a proper line ending, and only
 one line ending. Otherwise, the returned map will be too short or too long.
+ at end table
 
 @c ----------------- map_sokoban --------------------
 
@@ -14950,7 +15042,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{lib.import.map_sokoban}(multilevel, sublevel_number, keylength_one)
+ at b{lib.import.map_sokoban}(@i{multilevel}, @i{sublevel_number}, @i{keylength_one})
 @table @asis
 @item @i{multilevel}
 A multilevel string.
@@ -14998,6 +15090,7 @@
 default key. Hence, if you want to paste the map into another one
 (@ref{Connecting Two Maps}), you will have to switch the default key to
 @samp{-} or @samp{- } in beforehand to yield a good result.
+ at end table
 
 @c ----------------- map_wanderer --------------------
 @node lib.import.map_wanderer
@@ -15009,7 +15102,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{lib.import.map_wanderer}(monolevel)
+ at b{lib.import.map_wanderer}(@i{monolevel})
 @table @asis
 @item @i{monolevel}
 A monolevel string.
@@ -15041,6 +15134,7 @@
 
 Note that Enigma does not yet support the game elements of Wanderer, hence this
 function currently is only of use to developers.
+ at end table
 
 @c ----------------- libsoko --------------------
 @node libsoko
@@ -15055,16 +15149,58 @@
   <@i{el}:@b{dependency} @i{el}:@b{path}="@var{lib/libsoko}" @i{el}:@b{id}="@var{lib/libsoko}" @i{el}:@b{release}="@var{1}" @i{el}:@b{preload}="@var{true}"/>
 @end example
 
-It preloads automatically the libraries @ref{libimport}, @ref{libmap} and
- at ref{liblua}.
+It preloads automatically the libraries @ref{libimport}, @ref{libmap},
+ at ref{libmath}, and @ref{liblua}.
 
+The only function which is meant to be used in levels is
+ at samp{lib.soko.create_sokoball}.
 
- at menu
-* lib.soko.create::
-* lib.soko.recreate::
-* lib.soko.draw::
- at end menu
+ at table @asis
+ at item @b{Syntax:}
+ at b{lib.soko.create_sokoball}(@i{multilevel}, @i{sublevel_number}, @i{design}, @i{maxdesignnumber})
+ at table @asis
+ at item @i{multilevel}
+A multilevel string in the sense of @ref{libimport}.
 
+ at item @i{sublevel_number}
+A number determining the number of the level in @code{multilevel}. Default is
+ at samp{1}.
+
+ at item @i{design}
+Optionally a number or a design table, see below.
+
+ at item @i{maxdesignnumber}
+Optionally, see below.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+lib.soko.create_sokoball(many_levels, 13, 48)
+ at end example
+
+ at item @b{Details:}
+ at samp{create_sokoball} creates a sokoball-level from the string
+ at code{multilevel}. This string can be a multilevel, in which case
+ at samp{sublevel_number} determines the number of the level, starting with 1
+(default is 1).
+
+The design can be chosen by @samp{design}. This is either a number, which refers
+to the list of predefined designs in @code{libsoko_designlist.xml}, or a table
+with the corresponding design entries. A missing entry will be interpreted as
+the entry from lib.soko_designlist.default. If the @samp{design} variable is
+omitted, a check-number is created from the level which uniquely* determines
+a design from the design list, with @code{maxdesignnumber} as highest possible
+design number.
+
+*Uniquely means: The design might change when the design list is enlarged.
+
+To define own designs, please consult
+ at samp{data/levels/lib/libsoko_designlist.xml}.
+
+Returns width and height of new Enigma level.
+ at end table
+
+
 @c ===================  Advanced Features  =======================
 
 @node Advanced Features



From ral at mail.berlios.de  Mon Mar 16 23:44:56 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Mon, 16 Mar 2009 23:44:56 +0100
Subject: [Enigma-game-svn] r1592 - in trunk: doc src src/items
Message-ID: <200903162244.n2GMiurT021048@sheep.berlios.de>

Author: ral
Date: 2009-03-16 23:44:55 +0100 (Mon, 16 Mar 2009)
New Revision: 1592

Modified:
   trunk/doc/README.macosx
   trunk/src/items/SimpleItems.cc
   trunk/src/items/SimpleItems.hh
   trunk/src/lua.cc
Log:
Trunk 1.1: new API
- Mac OS X readme update by Sidney Markowitz
- resolver support: report error messages thrown in finalizer
- position list: add linear multiplication operator '*'
- group:sort() add linear sorting support:
  - sort("linear"): take first two objects to define a direction vector
  - sort("linear", po): use given po as direction vector
  - return group with objects sorted in given direction 
- explosion, flag, spring: fix class identification - did cause wrong
    bomb explosion patterns


Modified: trunk/doc/README.macosx
===================================================================
--- trunk/doc/README.macosx	2009-03-16 00:55:33 UTC (rev 1591)
+++ trunk/doc/README.macosx	2009-03-16 22:44:55 UTC (rev 1592)
@@ -3,14 +3,14 @@
 Overview:
 ---------
 
-Due to which machines are available to Enigma developers, The latest version
-of Enigma has only been built under MacOS X 10.5. The instructions for
-building under older versions of MacOS X are retained below, but have
-not been tested to verify that they continue to work. Note that the
-Enigma Mac developers all have Apple's free Xcode development environment
-installed on their machines. Even though the build process is not run
-under Xcode, there may be some things that would not work if Xcode had
-never been installed.
+Due to which machines are available to Enigma developers, the latest
+version of Enigma has only been built under MacOS X 10.5. The
+instructions for building under older versions of MacOS X have been
+removed from this README as there can be no assurance that they would
+continue to work. Note that the Enigma Mac developers all have Apple's
+free Xcode development environment installed on their machines. Even
+though the build process is not run under Xcode, there may be some
+things that would not work if Xcode had never been installed.
 
 Enigma is built from the command line using make. There is a make
 target that will create a Mac OS application bundle in a compressed

Modified: trunk/src/items/SimpleItems.cc
===================================================================
--- trunk/src/items/SimpleItems.cc	2009-03-16 00:55:33 UTC (rev 1591)
+++ trunk/src/items/SimpleItems.cc	2009-03-16 22:44:55 UTC (rev 1592)
@@ -129,6 +129,10 @@
         state = strength;
     }
     
+    std::string Explosion::getClass() const {
+        return "it_explosion";
+    }
+
     Value Explosion::message(const Message &m) {
         if (m.message == "_cannonball") {
             state = 3;
@@ -176,6 +180,10 @@
         Item::setAttr("color", type);
     }
     
+    std::string FlagItem::getClass() const {
+        return "it_flag";
+    }
+
     void FlagItem::on_drop(Actor *a) {
         player::SetRespawnPositions(get_pos(), getAttr("color"));
     }
@@ -296,6 +304,9 @@
         state = type;
     }
     
+    std::string Spring::getClass() const {
+        return "it_spring";
+    }
     void Spring::setState(int extState) {
         // block all write attempts
     }

Modified: trunk/src/items/SimpleItems.hh
===================================================================
--- trunk/src/items/SimpleItems.hh	2009-03-16 00:55:33 UTC (rev 1591)
+++ trunk/src/items/SimpleItems.hh	2009-03-16 22:44:55 UTC (rev 1592)
@@ -123,6 +123,7 @@
         Explosion(int strength);
         
         // Object interface
+        virtual std::string getClass() const;
         virtual Value message(const Message &m);
         
         // StateObject interface
@@ -147,6 +148,9 @@
     public:
         FlagItem(int type);
         
+        // Object interface
+        virtual std::string getClass() const;
+        
         // Item interface
         virtual void on_drop(Actor *a);
         virtual void on_pickup(Actor *a);
@@ -254,6 +258,9 @@
     public:
         Spring(int type);
         
+        // Object interface
+        virtual std::string getClass() const;
+
         // StateObject interface
         virtual void setState(int extState);
 

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2009-03-16 00:55:33 UTC (rev 1591)
+++ trunk/src/lua.cc	2009-03-16 22:44:55 UTC (rev 1592)
@@ -1024,7 +1024,7 @@
     return pushNewPosition(L);
 }
 
-static int addPositionsBase(lua_State *L, int factorArg2) {
+static int addPositionsBase(lua_State *L, double factorArg2, bool scalarMultiplication =false) {
     // (pos|obj|table|polist) +|- (pos|obj|table|polist)
     if (!(is_polist(L, 1) || is_polist(L, 2) )) {
         // add two positions resulting a new position
@@ -1062,21 +1062,23 @@
         // add a position to a list of postions resulting a list of positions
         PositionList pl;
         PositionList newpl;
+        ecl::V2 offset;
         bool found = false;
         if (is_polist(L, 1)) {
             pl = toPositionList(L, 1);
             found = true;
-        } else {
+        } else if (!scalarMultiplication) {
             newPosition(L, 1);
+            offset = toPosition(L, -1);
         }
         if (is_polist(L, 2)) {
             if (found)
                 throwLuaError(L, "Addition of two position lists not supported");                
             pl = toPositionList(L, 2);
-        } else {
+        } else if (!scalarMultiplication) {
             newPosition(L, 2);
+            offset = toPosition(L, -1);
         }
-        ecl::V2 offset = toPosition(L, -1);
         lua_pop(L, 1);
         for (PositionList::iterator itr = pl.begin(); itr != pl.end(); ++itr) {
              ecl::V2 newpos = offset + factorArg2 * (ecl::V2)(*itr);
@@ -1124,6 +1126,19 @@
     return addPositionsBase(L, -1);
 }
 
+static int scalarMultPositions(lua_State *L) {
+    // (num|polist) * (num|polist)
+    double factor = 0;
+    if (lua_isnumber(L, 1)) {
+        factor = lua_tonumber(L, 1);
+    } else if (lua_isnumber(L, 2)) {
+        factor = lua_tonumber(L, 2);
+    } else {
+        throwLuaError(L, "Position List - scalar multiplications with invalid value type.");
+    }
+    return addPositionsBase(L, factor, true);
+}
+
 static int centerPosition(lua_State *L) {
     // #(pos|obj)
     if (is_position(L, 1)) {  // position
@@ -2498,7 +2513,6 @@
         }
     }
     
-    // TODO finalization of resolvers
     lua_getfield(L, LUA_REGISTRYINDEX, LUA_ID_RESOLVER);
     while (is_table(L, -1)) {
         lua_rawgeti(L, -1, 2);      // get resolver finalization at index 2
@@ -2506,7 +2520,8 @@
             lua_pushvalue(L, -2);       // duplicate table as resolver context
             int retval=lua_pcall(L, 1, 0, 0);     // resolver(context,evaluator,key,x,y) ->  tile
             if (retval!=0) {
-                throwLuaError(L, "Error within tile key resolver finalization");
+                throwLuaError(L, ecl::strf("Error within tile key resolver finalization:\n %s", 
+                        lua_tostring(L, -1)).c_str());
                 return 0;
             }
         } else {
@@ -3135,7 +3150,7 @@
         return 0;        
     }
     std::string command;
-    if (lua_gettop(L) == 2 && lua_isstring(L, 2)) {
+    if (lua_gettop(L) >= 2 && lua_isstring(L, 2)) {
         command = lua_tostring(L, 2);
     }
     ObjectList oldSort = toObjectList(L, 1);
@@ -3169,6 +3184,27 @@
                 newSort.push_back(itr->second);
             }
         }
+    } else if (command == "linear") {
+        ecl::V2 dir;
+        std::multimap<double, Object *> sortMap;
+        if (lua_gettop(L) == 2 && oldSort.size() >= 2) {
+            Object *front = oldSort.front();
+            oldSort.pop_front();
+            dir = (ecl::V2)(Value(oldSort.front())) - (ecl::V2)(Value(front));
+            oldSort.push_front(front);
+        } else if (lua_gettop(L) == 3 && is_position(L, 3)) {
+            dir = toPosition(L, 3);
+        } else {
+            return pushNewGroup(L, oldSort);
+        }
+        dir.normalize();
+        for (ObjectList::iterator itr = oldSort.begin(); itr != oldSort.end(); ++itr) {
+            double d = dir * (ecl::V2)(Value(*itr));
+            sortMap.insert(std::make_pair(d, *itr));
+        }
+        for (std::multimap<double, Object *>::iterator itr = sortMap.begin(); itr != sortMap.end(); ++itr)
+            newSort.push_back(itr->second);
+        
     } else {
         // default sort lexical by name
         std::map<std::string, Object *> sortMap;
@@ -3488,6 +3524,7 @@
     {addPositions,                  "__add"},      //  obj + obj
     {subPositions,                  "__sub"},      //  obj - obj
     {joinPolist,                    "__concat"},   //  obj .. obj
+    {scalarMultPositions,           "__mul"},      //  obj * obj
     {0,0}
 };
 



From raoul at mail.berlios.de  Fri Mar 20 21:31:29 2009
From: raoul at mail.berlios.de (raoul at BerliOS)
Date: Fri, 20 Mar 2009 21:31:29 +0100
Subject: [Enigma-game-svn] r1593 - trunk/data/levels/enigma_experimental
Message-ID: <200903202031.n2KKVTug030104@sheep.berlios.de>

Author: raoul
Date: 2009-03-20 21:31:28 +0100 (Fri, 20 Mar 2009)
New Revision: 1593

Modified:
   trunk/data/levels/enigma_experimental/floors_1.xml
   trunk/data/levels/enigma_experimental/items_1.xml
Log:
-> Updates for all object levels



Modified: trunk/data/levels/enigma_experimental/floors_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-16 22:44:55 UTC (rev 1592)
+++ trunk/data/levels/enigma_experimental/floors_1.xml	2009-03-20 20:31:28 UTC (rev 1593)
@@ -13,6 +13,8 @@
     </el:info>
     <el:luamain><![CDATA[
 local floors = {
+
+{"fl_adhesionless", _text="fl_adhesionless"},
 {"fl_aquamarine", _text="fl_aquamarine"},
 {"fl_aquamarine_framed", _text="fl_aquamarine_framed"},
 {"fl_bast", _text="fl_bast"},
@@ -21,10 +23,18 @@
 {"fl_bluegray_framed", _text="fl_bluegray_framed"},
 {"fl_bluegreen", _text="fl_bluegreen"},
 {"fl_bluegreen_framed", _text="fl_bluegreen_framed"},
+{"fl_blueslab", _text="fl_blueslab"},
+{"fl_blueslab_framed", _text="fl_blueslab_framed"},
 {"fl_brick", _text="fl_brick"},
 {"fl_brick_framed", _text="fl_brick_framed"},
+{"fl_bright", _text="fl_bright"},
+{"fl_bright_framed", _text="fl_bright_framed"},
 {"fl_concrete", _text="fl_concrete"},
 {"fl_concrete_framed", _text="fl_concrete_framed"},
+{"fl_dark", _text="fl_dark"},
+{"fl_dark_framed", _text="fl_dark_framed"},
+{"fl_darkgray", _text="fl_darkgray"},
+{"fl_darkgray_framed", _text="fl_darkgray_framed"},
 {"fl_dunes", _text="fl_dunes"},
 {"fl_dunes_framed", _text="fl_dunes_framed"},
 {"fl_gravel", _text="fl_gravel"},
@@ -33,12 +43,36 @@
 {"fl_gray_framed", _text="fl_gray_framed"},
 {"fl_himalaya", _text="fl_himalaya"},
 {"fl_himalaya_framed", _text="fl_himalaya_framed"},
+{"fl_ivory", _text="fl_ivory"},
+{"fl_ivory_framed", _text="fl_ivory_framed"},
+{"fl_marble", _text="fl_marble"},
+{"fl_marble_framed", _text="fl_marble_framed"},
+{"fl_mortar", _text="fl_mortar"},
+{"fl_mortar_framed", _text="fl_mortar_framed"},
 {"fl_pinkbumps", _text="fl_pinkbumps"},
 {"fl_pinkbumps_framed", _text="fl_pinkbumps_framed"},
+{"fl_plank", _text="fl_plank"},
+{"fl_plank_framed", _text="fl_plank_framed"},
+{"fl_platinum", _text="fl_platinum"},
+{"fl_platinum_framed", _text="fl_platinum_framed"},
+{"fl_red", _text="fl_red"},
+{"fl_red_framed", _text="fl_red_framed"},
+{"fl_redslab", _text="fl_redslab"},
+{"fl_redslab_framed", _text="fl_redslab_framed"},
+{"fl_rough", _text="fl_rough"},
+{"fl_rough_framed", _text="fl_rough_framed"},
 {"fl_sahara", _text="fl_sahara"},
 {"fl_sahara_framed", _text="fl_sahara_framed"},
 {"fl_sand", _text="fl_sand"},
 {"fl_sand_framed", _text="fl_sand_framed"},
+{"fl_stone", _text="fl_stone"},
+{"fl_stone_framed", _text="fl_stone_framed"},
+{"fl_tigris", _text="fl_tigris"},
+{"fl_tigris_framed", _text="fl_tigris_framed"},
+{"fl_white", _text="fl_white"},
+{"fl_white_framed", _text="fl_white_framed"},
+{"fl_woven", _text="fl_woven"},
+{"fl_woven_framed", _text="fl_woven_framed"},
 
 {"fl_bridge", _text="fl_bridge, default"},
 {"fl_bridge", state=OPEN, _text="fl_bridge, state=OPEN"},

Modified: trunk/data/levels/enigma_experimental/items_1.xml
===================================================================
--- trunk/data/levels/enigma_experimental/items_1.xml	2009-03-16 22:44:55 UTC (rev 1592)
+++ trunk/data/levels/enigma_experimental/items_1.xml	2009-03-20 20:31:28 UTC (rev 1593)
@@ -64,6 +64,8 @@
 {"it_meditation", state=MEDITATION_HILL, _text="it_meditation, state=MEDITATION_HILL"},
 {"it_meditation", state=MEDITATION_VOLCANO, _text="it_meditation, state=MEDITATION_VOLCANO"},
 
+{"it_pencil", _text="it_pencil"},
+
 {"it_pin", _text="it_pin"},
 
 {"it_pipe", _text="it_pipe, default"},
@@ -78,6 +80,12 @@
 {"it_pipe", connections="ns", _text="it_pipe, connections=\"ns\""},
 {"it_pipe", connections="ne", _text="it_pipe, connections=\"ne\""},
 
+{"it_puller", _text="it_puller, default"},
+{"it_puller_w",_text="it_puller_w"},
+{"it_puller_s", _text="it_puller_s"},
+{"it_puller_e",_text="it_puller_e"},
+{"it_puller_n", _text="it_puller_n"},
+
 {"it_rubberband", _text="it_rubberband"},
 
 {"it_seed", _text="it_seed, default"},
@@ -96,6 +104,12 @@
 {"it_shogun", flavor="m", _text="it_shogun, flavor=\"m\""},
 {"it_shogun", flavor="l", _text="it_shogun, flavor=\"l\""},
 
+{"it_spring", _text="it_spring"},
+{"it_spring_keep", _text="it_spring_keep"},
+{"it_spring_drop", _text="it_spring_drop"},
+
+{"it_springboard", _text="it_springboard"},
+
 {"it_squashed", _text="it_squashed"},
 
 {"it_strip", _text="it_strip, default"},



From ral at mail.berlios.de  Sat Mar 21 23:25:48 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 21 Mar 2009 23:25:48 +0100
Subject: [Enigma-game-svn] r1594 - in trunk/src: . actors floors
Message-ID: <200903212225.n2LMPmrc025955@sheep.berlios.de>

Author: ral
Date: 2009-03-21 23:25:46 +0100 (Sat, 21 Mar 2009)
New Revision: 1594

Modified:
   trunk/src/actors.cc
   trunk/src/actors.hh
   trunk/src/actors/Balls.cc
   trunk/src/actors/KillerActor.cc
   trunk/src/actors/KillerActor.hh
   trunk/src/actors/Rotors.cc
   trunk/src/actors/Rotors.hh
   trunk/src/floors/FloodStream.cc
   trunk/src/lua.cc
   trunk/src/world.cc
Log:
Trunk 1.1: new API
- grp() without args - create empty group
- fix god mode on actor attribute player type mismatch (string vs. number)
- adjust inconsistent collision behaviour of jumping marbles, pearls with
    rotors, tops, and killers: 
    - let balls jumps unharmed over rotors, killers
    - let ball shatter or collide, if shielded, on jumps over tops
- fl_water on flood behaviour: make a flood visible when it crosses an
    existing idle water lake


Modified: trunk/src/actors/Balls.cc
===================================================================
--- trunk/src/actors/Balls.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors/Balls.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -119,7 +119,7 @@
         // Shield, booze and invisibility can be activated in all states except DEAD
     
         if (state != DEAD) {
-            if (m.message == "_shield" && getAttr("owner") ==  m.value) {
+            if (m.message == "_shield" && getAttr("owner") ==  (int)m.value) {
                 m_shield_rest_time += SHIELD_TIME;
                 update_halo();
                 return true;

Modified: trunk/src/actors/KillerActor.cc
===================================================================
--- trunk/src/actors/KillerActor.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors/KillerActor.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -49,8 +49,10 @@
         return false;
     }
 
-    void Killer::on_collision(Actor *a) {
-        SendMessage(a, "_shatter");
+    bool Killer::on_collision(Actor *a) {
+        if (a->is_on_floor())
+            SendMessage(a, "_shatter");
+        return false;
     }
     
     ActorTraits Killer::traits = {"ac_killer", ac_killer, 1<<ac_killer, 13.0/64, 0.7};

Modified: trunk/src/actors/KillerActor.hh
===================================================================
--- trunk/src/actors/KillerActor.hh	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors/KillerActor.hh	2009-03-21 22:25:46 UTC (rev 1594)
@@ -42,7 +42,7 @@
         // Actor interface
         virtual bool is_dead() const;
         virtual bool has_shield() const;
-        virtual void on_collision(Actor *a);
+        virtual bool on_collision(Actor *a);
     };
 
 } // namespace enigma

Modified: trunk/src/actors/Rotors.cc
===================================================================
--- trunk/src/actors/Rotors.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors/Rotors.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -100,10 +100,6 @@
         Actor::think(dtime);
     }
     
-    void RotorBase::on_collision (Actor *a) {
-        SendMessage(a, "_shatter");
-    }
-
 /* -------------------- Rotor  -------------------- */
     Rotor::Rotor() : RotorBase(traits) {
     }
@@ -116,6 +112,12 @@
         return "ac_rotor";
     }
 
+    bool Rotor::on_collision (Actor *a) {
+        if (a->is_on_floor())
+            SendMessage(a, "_shatter");
+        return false;
+    }
+
     ActorTraits Rotor::traits = {"ac_rotor", ac_rotor, 1<<ac_rotor, 22.0/64, 0.8};
 
 /* -------------------- Top  -------------------- */
@@ -130,6 +132,12 @@
         return "ac_top";
     }
 
+    bool Top::on_collision (Actor *a) {
+        // tops shatter and collide independent on flying status of oponent 
+        SendMessage(a, "_shatter");
+        return true;
+    }
+    
     ActorTraits Top::traits = {"ac_top", ac_top, 1<<ac_top, 16.0/64, 0.8};
     
     BOOT_REGISTER_START
@@ -139,3 +147,4 @@
 
 } // namespace enigma
 
+

Modified: trunk/src/actors/Rotors.hh
===================================================================
--- trunk/src/actors/Rotors.hh	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors/Rotors.hh	2009-03-21 22:25:46 UTC (rev 1594)
@@ -39,7 +39,6 @@
         // Actor interface
         virtual bool is_dead() const;
         virtual void think (double dtime);
-        virtual void on_collision(Actor *a);
 
     private:
         // Variables
@@ -63,6 +62,9 @@
         // Object interface.
         virtual std::string getClass() const;
         virtual const char *get_kind() const;
+
+        // Actor interface
+        virtual bool on_collision(Actor *a);
     };
     
 /* -------------------- Top  -------------------- */
@@ -76,6 +78,9 @@
         // Object interface.
         virtual std::string getClass() const;
         virtual const char *get_kind() const;
+
+        // Actor interface
+        virtual bool on_collision(Actor *a);
     };
     
 

Modified: trunk/src/actors.cc
===================================================================
--- trunk/src/actors.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -148,8 +148,8 @@
         return StateObject::message(m);
     }
 
-void Actor::on_collision (Actor *) 
-{
+bool Actor::on_collision(Actor *a) {
+    return false;
 }
 
 ActorInfo *Actor::get_actorinfo() { 

Modified: trunk/src/actors.hh
===================================================================
--- trunk/src/actors.hh	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/actors.hh	2009-03-21 22:25:46 UTC (rev 1594)
@@ -127,7 +127,7 @@
 
         virtual void think (double dtime);
 
-        virtual void on_collision(Actor *a);
+        virtual bool on_collision(Actor *a);
         virtual void on_creation(const ecl::V2 &pos);
         virtual void on_respawn (const ecl::V2 &pos);
 

Modified: trunk/src/floors/FloodStream.cc
===================================================================
--- trunk/src/floors/FloodStream.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/floors/FloodStream.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -131,6 +131,8 @@
                     Floor *f = GetFloor(p);
                     if (f != NULL && f->isKind("fl_floodstream") && 
                             (f->getAttr("faces").to_string() == "nesw" || f->isKind("fl_water"))) {
+                        if (f->isKind("fl_water") && f->getAttr("state") == IDLE)
+                            init_model();  // make flood visible
                         f->setAttr("interval", getAttr("interval"));
                         f->setAttr("state", FLOODING);
                     } else if (f != NULL && f->getAttr("floodable").to_bool()) {

Modified: trunk/src/lua.cc
===================================================================
--- trunk/src/lua.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/lua.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -1642,7 +1642,7 @@
         for (int i = 1; i <= lua_gettop(L); i++) {
             objects.push_back(to_object(L, i));
         }
-    } else {
+    } else if (lua_gettop(L) > 0) { 
         throwLuaError(L, "New Group - argument is no object");
         return 0;
     }

Modified: trunk/src/world.cc
===================================================================
--- trunk/src/world.cc	2009-03-20 20:31:28 UTC (rev 1593)
+++ trunk/src/world.cc	2009-03-21 22:25:46 UTC (rev 1594)
@@ -1269,11 +1269,11 @@
         if (relspeed < 0)   // not moving towards each other
             return;
 
-        actor1->on_collision (actor2);
-        actor2->on_collision (actor1);
+        bool enforceCollision = actor1->on_collision(actor2);
+        enforceCollision = enforceCollision || actor2->on_collision(actor1);
 
         bool reboundp = (actor1->is_movable() && actor2->is_movable() &&
-                         (actor1->is_on_floor() == actor2->is_on_floor()));
+                (enforceCollision || (actor1->is_on_floor() == actor2->is_on_floor())));
 
         if (reboundp) {
             Contact contact (a2.pos + n*a2.radius, -n);



From ral at mail.berlios.de  Sun Mar 22 21:32:43 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 22 Mar 2009 21:32:43 +0100
Subject: [Enigma-game-svn] r1595 - team_levelpacks/team_test_new_api
Message-ID: <200903222032.n2MKWhw9000635@sheep.berlios.de>

Author: ral
Date: 2009-03-22 21:32:23 +0100 (Sun, 22 Mar 2009)
New Revision: 1595

Added:
   team_levelpacks/team_test_new_api/ralT083_1.xml
Modified:
   team_levelpacks/team_test_new_api/ralT067_1.xml
   team_levelpacks/team_test_new_api/ralT072_1.xml
Log:
Test Level new API:
- updates for Position List test level for new features
- updates of Flood test level for new features
- add group linear sort test level

Modified: team_levelpacks/team_test_new_api/ralT067_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT067_1.xml	2009-03-21 22:25:46 UTC (rev 1594)
+++ team_levelpacks/team_test_new_api/ralT067_1.xml	2009-03-22 20:32:23 UTC (rev 1595)
@@ -69,8 +69,8 @@
 end
 
 function ploffset()
---    newpl =  {1,4} + po["other#*"] + no["water"]
-    newpl =  {1,4} - po["other#*"] + no["water"]
+    newpl =  {1,4} + 2 * po["other#*"] + no["water"]
+--    newpl =  {1,4} -  po["other#*"] + no["water"]
     wo[newpl] = {"it_squashed"}
 end
 

Modified: team_levelpacks/team_test_new_api/ralT072_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT072_1.xml	2009-03-21 22:25:46 UTC (rev 1594)
+++ team_levelpacks/team_test_new_api/ralT072_1.xml	2009-03-22 20:32:23 UTC (rev 1595)
@@ -19,7 +19,7 @@
 
 ti[" "] = {"fl_hay"}
 ti["~"] = {"fl_water"}
-ti["*"] = {"fl_water_source"}
+ti["*"] = {"fl_water_source", "tsunami"}
 ti["."] = {"fl_sand", floodable=true}
 ti["-"] = {"fl_hay_framed"}
 ti["o"] = {"st_box_hay"}
@@ -63,8 +63,8 @@
 "                  . ",
 "            ....x.. ",
 "            ...     ",
-"                    ",
-"                    "
+"        ~~~~~~~     ",
+"  ......~~~~~~~     "
 })
 
 

Added: team_levelpacks/team_test_new_api/ralT083_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT083_1.xml	2009-03-21 22:25:46 UTC (rev 1594)
+++ team_levelpacks/team_test_new_api/ralT083_1.xml	2009-03-22 20:32:23 UTC (rev 1595)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="level">
+      <el:identity el:title="Test Linear Group" el:subtitle="" el:id="20090316ral637"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="true" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl_sahara"}
+ti["#"] = {"st_granite"}
+ti["."] = {"it_coffee", "coffee#"}
+ti["+"] = {"st_brake", "coffee#"}
+
+ti["O"] = {"st_oxyd", name="o#"}
+ti["@"] = {"#ac_marble"}
+
+ti["S"] = {"st_switch", target="sortnat"}
+ti["s"] = {"st_switch", target="sortvec"}
+ti["t"] = {"st_switch", target="shownext"}
+
+w, h = wo(ti, " ", {
+"                    ",
+"                    ",
+"  . . . . . . . .   ",
+"                    ",
+"                    ",
+"S        +          ",
+"                    ",
+"s     @             ",
+"                    ",
+"                    ",
+"                    ",
+"                    ",
+"t                   "
+})
+
+group = grp()
+i = 1
+function sortnat()
+    group = no["coffee#*"]:sort("linear")
+    i = 1
+end
+
+function sortvec()
+    group = no["coffee#*"]:sort("linear", po(-1, -1))
+    i = 1
+end
+
+function shownext()
+    wo[group[i]] = {"fl_tigris"}
+    i = i + 1
+end
+
+  ]]></el:luamain>
+    <el:i18n>
+	 <el:string el:key="title">
+	   <el:english el:translate="false"/>
+	 </el:string>
+   </el:i18n>
+  </el:protected>
+</el:level>
+


Property changes on: team_levelpacks/team_test_new_api/ralT083_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From raoulb at bluewin.ch  Mon Mar 23 16:08:12 2009
From: raoulb at bluewin.ch (Raoul)
Date: Mon, 23 Mar 2009 16:08:12 +0100
Subject: [Enigma-game-svn] Rev 1596
Message-ID: <20090323160812.55f839d5@amarok.loinet.zh>

-> New levels ("Panelled Puzzle *", "The Gordian Knot")
-> Many level rewrtings
-> Shortcut fixes (f.e. "Catwalk")
-> Use grp() instead of grp({})
-> Make use of NEIGHBOUR_* and position vectors


From ral at mail.berlios.de  Fri Mar 27 00:50:32 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Fri, 27 Mar 2009 00:50:32 +0100
Subject: [Enigma-game-svn] r1597 - in trunk: data/levels/lib doc/reference
Message-ID: <200903262350.n2QNoWwW014828@sheep.berlios.de>

Author: ral
Date: 2009-03-27 00:50:15 +0100 (Fri, 27 Mar 2009)
New Revision: 1597

Added:
   trunk/data/levels/lib/libmaze_2.xml
Modified:
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk 1.1: new API
- refman: some typo fixes
- new library "libmaze_2.xml":
  - new API resolver for maze and arbitrary directed graphs
  - rectangular and arbitrary shaped areas for mazes
  - cell configurable
  - kruskal maze generator
  - renderers for standard, window stones and it_strip mazes
Note:
- see upcoming testlevels and refman description for maze details.


Added: trunk/data/levels/lib/libmaze_2.xml
===================================================================
--- trunk/data/levels/lib/libmaze_2.xml	2009-03-23 14:47:02 UTC (rev 1596)
+++ trunk/data/levels/lib/libmaze_2.xml	2009-03-26 23:50:15 UTC (rev 1597)
@@ -0,0 +1,579 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="library">
+      <el:identity el:title="" el:id="lib/libmaze"/>
+      <el:version el:score="1" el:release="2" el:revision="5" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libmap" el:id="lib/libmap" el:release="1" el:preload="true"/>      </el:compatibility>
+      <el:modes el:easy="false" el:single="false" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+
+lib.maze = {}
+
+function res.maze(subresolver, ...)
+    -- syntax: ... = <sourcebasename>, <targetbasename>
+    -- context: 
+    local args = {...}
+    local context = {res.maze_implementation, res.maze_finalization, subresolver}
+    
+    -- default settings
+    context.encode = function (maze, i, j)
+            return 2000*j + i + 100
+        end
+    context.decode = function (maze, c)
+            local i = (c - 100) % 2000
+            return i, (c - 100 - i) / 2000
+        end
+    context.dirs = {[WEST] = EAST, [SOUTH] = NORTH, [EAST] = WEST, [NORTH] = SOUTH}
+    context.adjacent = function (maze, c, dir)
+            if c == 99 then return c end   -- invalid code
+            local adj
+            if dir == WEST then adj = c - 1
+            elseif dir == SOUTH then adj = c + 2000
+            elseif dir == EAST then adj = c + 1
+            elseif dir == NORTH then adj = c - 2000
+            else error("Maze - illeagal direction "..dir)
+            end
+            if adj < 100 then
+                return 99
+            else 
+                return adj
+            end
+        end
+    --
+    context.anchor = po(0,0)
+    context.kernel = {1,1}
+    context.spacing = {1,1}
+    context.offset_x = {0, false}
+    context.offset_y = {0, false}
+    context.generator = lib.maze.generator_kruskal
+    context.renderer = lib.maze.renderer_standard
+    context.cells = {}  -- cells by index
+    context.indices = {} -- indices by cell
+    context.newcell = function (maze) 
+            local cell = {}
+            setmetatable(cell, context.cellmeta)
+            return cell
+        end
+    context.render = function (maze, ...)
+            context.renderer_args = {...}
+            if type(context.renderer_args[1]) == "function" then
+                context.renderer = context.renderer_args[1]
+                table.remove(context.renderer_args, 1)
+            end
+            maze:renderer(context.renderer_args)
+        end
+    setmetatable(context,{
+          __index = function (context, key)
+                  if type(key) == "number" and key >= 99 then
+                      return rawget(context, "cells")[key]
+                  elseif type(key) == "table" then
+                      local cellmeta = getmetatable(key)
+                      if cellmeta ~= nil and cellmeta.maze == context then
+                          return rawget(context, "indices")[key]
+                      else
+                          error("Maze access with foreign table as index")
+                      end
+                  else
+                      return rawget(context, key)
+                  end
+              end,
+          __newindex = function (context, key, value)
+                  if type(key) == "number" and key >= 100 then
+                      if type(value) == "table" then
+                          local cellmeta = getmetatable(value)
+                          if cellmeta ~= nil and cellmeta.maze == context then
+                              local cells = rawget(context, "cells")
+                              if cells[key] == nil then
+                                  cells[key] = value
+                                  rawget(context, "indices")[value] = key
+                              else
+                                  error("Maze cell index already occupied")
+                              end
+                          else
+                              error("Maze expected unassigned cell set but got something else")
+                          end
+                      else
+                          error("Maze illegal value set at index "..key)
+                      end
+                  else
+                      return rawset(context, key, value)
+                  end
+              end,
+          __call = function (context, ...) 
+                  local args = {...}
+                  if args[1] == nil then
+                      if args[2] == nil then
+                          local idx, cell = next(context.cells, nil)
+                          if idx == nil then
+                               return nil
+                          else
+                              return cell
+                          end
+                      else
+                          local idx, cell = next(context.cells, context.indices[args[2]])
+                          return cell
+                      end
+                  end
+                  return context[context:encode(...)]
+              end
+        })
+    context.cellmeta = {
+          __index = function (cell, key)
+                  if type(key) == "number" then
+                      return rawget(cell, key)
+                  else
+                      return getmetatable(cell)[key]
+                  end
+              end,
+          maze = context,
+          delete = function (cell)
+                  local maze = cell.maze
+                  local idx = maze[cell]
+                  maze.cells[idx] = nil
+                  maze.indices[cell] = nil
+              end,
+          neighbor = function (cell, dir)
+                  return cell.maze[cell.maze:adjacent(cell.maze[cell], dir)]
+              end,
+          connect = function (cell, dir)
+                  if cell[dir] ~= nil then
+                      cell[dir] = true
+                      (cell:neighbor(dir))[cell.maze.dirs[dir]] = true
+                  end
+              end,
+          pos = function (cell)
+                  local maze = cell.maze
+                  local i,j = maze:decode(maze[cell])
+                  local xo = i * (maze.kernel[1] + maze.spacing[1])
+                  local yo = j * (maze.kernel[2] + maze.spacing[2])
+                  xo = xo + maze.offset_x[1] * lib.lua.cond(maze.offset_x[2], j%2, j)
+                  yo = yo + maze.offset_y[1] * lib.lua.cond(maze.offset_y[2], i%2, i)
+                  return maze.anchor + {xo, yo}
+              end
+        }
+        
+    -- argument evaluation
+    if #args~= 1 or type(args[1]) ~= "table" then
+        error("Libmaze wrong number of arguments - expected subresolver and a table of configuration data", 2)
+    end
+    context.area = args[1].area
+    if type(context.area) ~= "table" then
+        error("Libmaze missing area configuration table", 2)
+    end
+    if type(context.area[2]) == "number" then
+        if type(context.area[3]) ~= "number" then
+            error("Libmaze area configuration requires two numbers for size", 2)
+        end
+        context.rectangular = true
+        -- if type (context.area[1]) ~= "string"
+    else
+        for k, v in pairs(context.area) do
+            if type(v) ~= "string" then
+                error("Libmaze area configuration expected string values", 2)
+            end
+        end
+        context.area_keymatches = {}
+        context.area_keyprefixes = {}
+        context.area_objnames = {}
+        context.area_positioncodes = {}
+    end
+    
+    if args[1].render ~= nil and type(args[1].render) ~= "table" then
+        error("Libmaze false renderer configuration", 2)
+    elseif args[1].render ~= nil then
+        context.renderer_args = args[1].render
+        if type(args[1].render[1]) == "function" then
+            context.renderer = args[1].render[1]
+            table.remove(context.renderer_args, 1)
+        end
+    end
+    
+    if args[1].kernel ~= nil and type(args[1].kernel) ~= "table" then
+        error("Libmaze false kernel configuration", 2)
+    elseif args[1].kernel ~= nil then
+        context.kernel = args[1].kernel
+    end
+    if args[1].spacing ~= nil and type(args[1].spacing) ~= "table" then
+        error("Libmaze false spacing configuration", 2)
+    elseif args[1].spacing ~= nil then
+        context.spacing = args[1].spacing
+    end
+    if args[1].offset_x ~= nil and type(args[1].offset_x) ~= "table" then
+        error("Libmaze false offset_x configuration", 2)
+    elseif args[1].offset_x ~= nil then
+        context.offset_x = args[1].offset_x
+    end
+    if args[1].offset_y ~= nil and type(args[1].offset_y) ~= "table" then
+        error("Libmaze false offset_y configuration", 2)
+    elseif args[1].offset_y ~= nil then
+        context.offset_y = args[1].offset_y
+    end
+    
+    if args[1].generator == false then
+        context.generator = nil
+    elseif type(args[1].generator) == "function" then
+        context.generator = args[1].generator
+    end
+    return context
+end
+
+function res.maze_implementation(context, evaluator, key, x, y)
+    if not context.rectangular then
+        if not context.area_args_separated then 
+            for k,v in pairs(context.area) do
+                if #v == #key then
+                    table.insert(context.area_keymatches, v) 
+                elseif #v < #key then
+                    table.insert(context.area_keyprefixes, v) 
+                else
+                    table.insert(context.area_objnames, v) 
+                end
+            end
+            context.area_args_separated = true
+        end
+        for k, v in pairs(context.area_keymatches) do
+            if key == v then
+                table.insert(context.area_positioncodes, context:encode(x,y))
+            end
+        end
+        for k, v in pairs(context.area_keyprefixes) do
+            if key:find(v, 1, true) == 1 then
+                table.insert(context.area_positioncodes, context:encode(x,y))
+                return evaluator(context[3], string.rep(" ", #v) ..key:sub(#v + 1), x, y)
+            end
+        end
+    end
+    return evaluator(context[3], key, x, y)
+end
+
+function res.maze_finalization(context)
+    local maze = context
+    if maze.rectangular then
+        for i = 0, maze.area[2] - 1 do
+            for j = 0, maze.area[3] - 1 do
+                local cell = maze:newcell()
+                maze[maze:encode(i, j)] = cell
+                for dir, opposite in pairs(maze.dirs) do
+                    local neighbor = cell:neighbor(dir)
+                    if neighbor then
+                        cell[dir] = false
+                        neighbor[opposite] = false
+                    end
+                end
+            end
+        end
+        if (type(maze.area[1]) == "string") then
+            maze.anchor = po[maze.area[1]]
+        else
+            maze.anchor = maze.area[1]
+        end
+        maze.anchor = po(fl(maze.anchor))  -- round down
+    else
+        for k, v in pairs(context.area_objnames) do
+            for obj in no[v] do
+                table.insert(context.area_positioncodes, context:encode(obj:xy()))
+            end
+        end
+        
+        local minx = 100000
+        local miny = 100000
+        -- offsets not yet supported!
+        for k,v in pairs(maze.area_positioncodes) do
+            local x,y = maze:decode(v)
+            minx = lib.lua.cond(x < minx, x, minx)
+            miny = lib.lua.cond(y < miny, y, miny)
+        end
+        maze.anchor = po(minx, miny)
+        local cellx = maze.kernel[1] + maze.spacing[1]
+        local celly = maze.kernel[2] + maze.spacing[2]
+        for k,v in pairs(maze.area_positioncodes) do
+            local x,y = maze:decode(v)
+            x = x - minx
+            y = y - miny
+            local i = math.floor(x / cellx)
+            local j = math.floor(y / celly)
+            local cell = maze(i,j)
+            if cell == nil then
+                cell = maze:newcell()
+                maze[maze:encode(i, j)] = cell
+                cell.grids = {}
+            end
+            cell.grids[maze:encode(x % cellx, y % celly)] = true
+        end
+        maze.area_positioncodes = nil  -- delete
+        local incomplete = {}
+        for cell in maze do
+            for i = 0, maze.kernel[1] - 1 do
+                for j = 0, maze.kernel[2] - 1 do
+                     if not cell.grids[maze:encode(i,j)] then
+                         incomplete[cell] = true
+                     end
+                end
+            end
+        end
+        for cell, t in pairs(incomplete) do
+            cell:delete()
+        end
+        incomplete = {}
+        for cell in maze do
+            local neighbor = cell:neighbor(EAST)
+            if neighbor then
+                local complete = true
+                for i = maze.kernel[1], maze.kernel[1] + maze.spacing[1] - 1 do
+                    for j = 0, maze.kernel[2] - 1 do
+                         if not cell.grids[maze:encode(i,j)] then
+                             complete = false
+                         end
+                    end
+                end
+                if complete then
+                    cell[EAST] = false
+                    neighbor[WEST] = false
+                end
+            end
+            neighbor = cell:neighbor(SOUTH)
+            if neighbor then
+                local complete = true
+                for i = 0, maze.kernel[1] - 1 do
+                    for j = maze.kernel[2], maze.kernel[2]  + maze.spacing[2] - 1 do
+                         if not cell.grids[maze:encode(i,j)] then
+                             complete = false
+                         end
+                    end
+                end
+                if complete then
+                    cell[SOUTH] = false
+                    neighbor[NORTH] = false
+                end
+            end
+            cell.grids = nil
+        end
+    end
+    
+    if maze.generator then
+        maze:generator()
+    end
+
+    if maze.renderer_args then
+        maze:renderer(maze.renderer_args)
+    end
+end
+
+function lib.maze.generator_kruskal(maze)
+    local walls = {}
+    local uplinks = {}   -- neighbor cell that is the up link towards the cell cluster root
+    local count = 0      -- count of unconnected cells
+    for cell in maze do
+        count = count + 1
+        for dir, opposite in pairs(maze.dirs) do
+            if cell[dir] == true then
+                -- the neighbor cell did register already
+                cell[dir] = false     -- unmark the link
+            elseif cell[dir] == false then
+                local neighbor = cell:neighbor(dir)
+                if neighbor then
+                    table.insert(walls, {cell, dir})
+                    neighbor[opposite] = true
+                else
+                    error("kruskal - bad cell link value")
+                end
+            end
+        end
+    end
+    walls = lib.lua.shuffle(walls)
+    
+    local function root(cell)
+                local up = cell
+                local down = cell
+                repeat
+                    down = up
+                    up = uplinks[down]
+                until up == nil
+                return down
+            end
+    
+    local next = 1   -- next wall
+    if #walls == 0 then return end
+    
+    while count > 1 do
+        local wall = walls[next]
+        local cell1 = wall[1]
+        local cell2 = cell1:neighbor(wall[2])
+        local root1 = root(cell1)
+        local root2 = root(cell2)
+        if root1 ~= root2 then
+            uplinks[root2] = root1 
+            count = count -1
+            cell1:connect(wall[2])
+        end
+        next = next + 1
+    end
+end
+
+function lib.maze.renderer_standard(maze, args)
+    -- TODO optimized passage positions on offset usage, especially on alternating offsets
+    local map = nil
+    local map_kernel = nil
+    local map_spacing_y = nil
+    local map_spacing_x = nil
+    local map_spacing_z = nil
+    local passage_open = args[1]
+    local passage_closed = nil
+    if type(args[1]) == "table" then
+        passage_open = args[1][1]
+        passage_closed = args[1][2]
+    end
+    if type(args[2]) ~= "string" then
+        map = args[2]
+        map_kernel = map:sub({0, 0}, maze.kernel[1], maze.kernel[2])
+        map_spacing_y = map:sub({maze.kernel[1], 0}, maze.spacing[1], maze.kernel[2])
+        map_spacing_x = map:sub({0, maze.kernel[2]}, maze.kernel[1], maze.spacing[2])
+        map_spacing_z = map:sub(maze.kernel, maze.spacing[1], maze.spacing[2])
+    end
+    for cell in maze do
+        local anchor = cell:pos()
+        if map then
+            wo:drawMap(ti, anchor, map_kernel)
+            if cell[EAST] ~= nil then
+                wo:drawMap(ti, anchor + {maze.kernel[1], 0}, map_spacing_y)
+            end
+            if cell[SOUTH] ~= nil then
+                wo:drawMap(ti, anchor + {0, maze.kernel[2]}, map_spacing_x)
+                if cell[EAST] ~= nil and (cell:neighbor(EAST))[SOUTH] ~= nil
+                                and (cell:neighbor(SOUTH))[EAST] ~= nil then
+                    wo:drawMap(ti, anchor + {maze.kernel[1], maze.kernel[2]}, map_spacing_z)
+                end
+            end
+        else
+            if args[3] then
+                wo:drawRect(anchor, maze.kernel[1], maze.kernel[2], ti[args[3]])
+            end
+            if args[2] then
+                if cell[EAST] ~= nil then
+                    wo:drawRect(anchor + {maze.kernel[1], 0}, maze.spacing[1], 
+                        maze.kernel[2], ti[args[2]])
+                end
+                if cell[SOUTH] ~= nil then
+                    wo:drawRect(anchor + {0, maze.kernel[2]}, 
+                        maze.kernel[1], maze.spacing[2], ti[args[2]])
+                    if cell[EAST] ~= nil and (cell:neighbor(EAST))[SOUTH] ~= nil
+                            and (cell:neighbor(SOUTH))[EAST] ~= nil then
+                        wo:drawRect(anchor + {maze.kernel[1], maze.kernel[2]}, maze.spacing[1], 
+                            maze.spacing[2], ti[args[2]])
+                    end
+                end
+            end
+        end
+        if cell[EAST] == true then
+            wo:drawRect(anchor + {maze.kernel[1], maze.kernel[2]/2}, 
+                    maze.spacing[1], 1, ti[passage_open])
+        end
+        if cell[SOUTH] == true then
+            wo:drawRect(anchor + {maze.kernel[1]/2, maze.kernel[2]}, 
+                    1, maze.spacing[2], ti[passage_open])
+        end
+        if passage_closed then
+            if cell[EAST] == false then
+                wo:drawRect(anchor + {maze.kernel[1], maze.kernel[2]/2}, 
+                        maze.spacing[1], 1, ti[passage_closed])
+            end
+            if cell[SOUTH] == false then
+                wo:drawRect(anchor + {maze.kernel[1]/2, maze.kernel[2]}, 
+                        1, maze.spacing[2], ti[passage_closed])
+            end
+        end
+    end
+
+end
+
+function lib.maze.renderer_window(maze, args)
+    if maze.spacing[1] ~= 0 or maze.spacing[2] ~= 0 then
+        error("Maze window renderer requires spacing of {0, 0}",2)
+    end
+    local map = nil
+    local map_kernel = nil
+    if type(args[1]) ~= "string" then
+        map = args[1]
+        map_kernel = map:sub({0, 0}, maze.kernel[1], maze.kernel[2])
+    end
+    for cell in maze do
+        local anchor = cell:pos()
+        if map then
+            wo:drawMap(ti, anchor, map_kernel)
+        else
+            if args[1] then
+                wo:drawRect(anchor, maze.kernel[1], maze.kernel[2], ti[args[1]])
+            end
+        end
+        -- TODO extend logic to arbitrary kernel size in the following lines
+        local faces = ""
+        if cell[EAST] == false or (args[2] == true and cell[EAST] == nil) then
+            faces = faces .. "e"
+        end
+        if cell[SOUTH] == false or (args[2] == true and cell[SOUTH] == nil) then
+            faces = faces .. "s"
+        end
+        if args[2] == true and cell[NORTH] == nil then
+            faces = faces .. "n"
+        end
+        if args[2] == true and cell[WEST] == nil then
+            faces = faces .. "w"
+        end
+        wo[anchor] = {"st_window", secure=true, faces=faces}
+    end
+end
+
+function lib.maze.renderer_strip(maze, args)
+    -- TODO extend to arbitrary spacing > {0,0}
+    if maze.kernel[1] ~= 0 or maze.kernel[2] ~= 0 then
+        error("Maze strip renderer requires kernel of {0, 0}",2)
+    end
+    if maze.spacing[1] ~= 1 or maze.spacing[2] ~= 1 then
+        error("Maze strip renderer requires spacing of {1, 1}",2)
+    end
+    local map = nil
+    local map_spacing = nil
+    if type(args[1]) ~= "string" then
+        map = args[1]
+        map_spacing = map:sub({0, 0}, maze.spacing[1], maze.spacing[2])
+    end
+    for cell in maze do
+        local anchor = cell:pos()
+        if map then
+            wo:drawMap(ti, anchor, map_spacing)
+        else
+            if args[1] then
+                wo:drawRect(anchor, maze.spacing[1], maze.spacing[2], ti[args[1]])
+            end
+        end
+        local connections = ""
+        if cell[EAST] == true then
+            connections = connections .. "e"
+        end
+        if cell[SOUTH] == true then
+            connections = connections .. "s"
+        end
+        if cell[NORTH] == true then
+            connections = connections .. "n"
+        end
+        if cell[WEST] == true then
+            connections = connections .. "w"
+        end
+        wo[anchor] = {"it_strip", connections=connections}
+    end
+end
+
+    ]]></el:luamain>
+    <el:i18n>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/lib/libmaze_2.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-23 14:47:02 UTC (rev 1596)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-26 23:50:15 UTC (rev 1597)
@@ -4441,11 +4441,11 @@
 
 @item @b{World Initialization}
 @example
-  @var{width}, @var{height} = @i{wo}(@i{ti}, "@var{__}", { -- second arg: default tile key that
+  @var{width}, @var{height} = @i{wo}(@i{ti}, "@var{__}", @{ -- second arg: default tile key that
   "@var{##__......}",                  --   defines the base, too - this example
   "@var{##..__.w__}",                  --   is 2 chars per tile/grid
   "@var{##.. w__..}"
-  })
+  @})
 @end example
 The world is initialized by the @samp{wo()} call that is explained in details
 at @ref{World Creation and Resolver Chaining}. In the simple form you supply
@@ -5498,7 +5498,7 @@
 little bit difficult to control for the player.
 
 Besides all floors some floor covering items like @ref{it_strip},
- at ref{it_meditation_hollow} may provide adhesion values as well to deviate from
+ at ref{it_meditation} may provide adhesion values as well to deviate from
 the floor adhesion.
 
 @table @asis
@@ -5506,7 +5506,7 @@
 @item @b{Values:} @ @ any floating point number
 @item @b{Default:} @ @ @code{nil}
 @item @b{Access:} @ @ read/write
- at item @b{Support:} @ @ by all floor, and floor covering item objects
+ at item @b{Support:} @ @ by all floors, and floor covering item objects
 @end table
 
 @node checkerboard
@@ -7172,6 +7172,7 @@
 * it_brush::           Brush for Painting and Sweeping
 * it_cherry::          Source of Invisibility
 * it_coin::            Enigma's currency
+* it_crack::           Crack in the Floor
 * it_cross::           Floor switch for patient Actors
 * it_death::           Unpassable grid blocker
 * it_extralife::       
@@ -7512,6 +7513,41 @@
 
 @end table
 
+ at c ----------------- Crack Item --------------------
+ at node it_crack
+ at subsection it_crack
+ at obindex it_crack
+
+
+ at table @asis
+
+ at item @b{Attributes:}
+
+ at table @asis
+ at item @b{state}, @ @ @i{values}: @code{INVISIBLE}, @code{SMALL}, @code{MEDIUM}, @code{LARGE}; @ @ @i{default}: @code{SMALL} @ @ @xref{state}
+
+ at end table
+
+ at item @b{Messages:}
+
+ at table @asis
+ at item @b{crack}
+ at item @b{toggle} @ @ @xref{toggle}
+ at item @b{ignite} @ @ @xref{ignite}
+ at item @b{heat} @ @ @xref{heat}
+ at end table
+
+ at item @b{Variants:}
+ at table @asis
+ at item @b{it_it_crack}: state = @code{SMALL}
+ at item @b{it_it_crack_i}: state = @code{INVISIBLE}
+ at item @b{it_it_crack_s}: state = @code{SMALL}
+ at item @b{it_it_crack_m}: state = @code{MEDIUM}
+ at item @b{it_it_crack_l}: state = @code{LARGE}
+ at end table
+
+ at end table
+
 @c ----------------- Cross Item --------------------
 @node it_cross
 @subsection it_cross
@@ -14451,7 +14487,7 @@
 
 @item @b{Syntax Samples:}
 @example
-number_pairs = lib.math.steps(total_places, {2, 6, 10, 30})
+number_pairs = lib.math.steps(total_places, @{2, 6, 10, 30@})
 @end example
 
 @item @b{Details:}
@@ -14461,7 +14497,7 @@
 
 @item @b{Full Example:}
 @example
-lib.math.steps(x, {4, 8, 13})
+lib.math.steps(x, @{4, 8, 13@})
 @end example
 returns:
 @example
@@ -14664,7 +14700,7 @@
 @end example
 is equivalent to @samp{mymap:replace(oldkey, newkey)} (only slower), and
 @example
-mymap[mymap:match({po(0,0), " "}, {NEIGHBORS_4, ".", ":"})] = "."
+mymap[mymap:match(@{po(0,0), " "@}, @{NEIGHBORS_4, ".", ":"@})] = "."
 @end example
 will find all occurences of @samp{ }, which are completely surrounded by
 @samp{.}, or @samp{:}, or mixtures of these, and replace them by @samp{.}. As
@@ -14858,7 +14894,7 @@
 @example
 map1.defaultkey = "-"
 map1:replace_outside(" ")
-map1[map1:match({{po(0,0), "#"}, {NEIGHBORS_4, "-", "#", "F"}})] = "-"
+map1[map1:match(@{@{po(0,0), "#"@}, @{NEIGHBORS_4, "-", "#", "F"@}@})] = "-"
 map1:trim()
 map1.defaultkey = " "
 @end example



From ral at mail.berlios.de  Fri Mar 27 00:52:09 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Fri, 27 Mar 2009 00:52:09 +0100
Subject: [Enigma-game-svn] r1598 - team_levelpacks/team_test_new_api
Message-ID: <200903262352.n2QNq9Gt015536@sheep.berlios.de>

Author: ral
Date: 2009-03-27 00:51:58 +0100 (Fri, 27 Mar 2009)
New Revision: 1598

Added:
   team_levelpacks/team_test_new_api/ralT084_1.xml
   team_levelpacks/team_test_new_api/ralT085_1.xml
Log:
Test Level new API:
- two maze test levels with 12 sample mazes


Added: team_levelpacks/team_test_new_api/ralT084_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT084_1.xml	2009-03-26 23:50:15 UTC (rev 1597)
+++ team_levelpacks/team_test_new_api/ralT084_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
@@ -0,0 +1,128 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="New Maze" el:subtitle="" el:id="20090321ral560"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libmaze" el:id="lib/libmaze" el:release="2" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti[" "] = {"fl_samba"}
+ti["#"] = {"st_granite"}
+ti["+"] = {"st_lightglass"}
+ti["~"] = {"fl_water"}
+ti["-"] = {"fl_wood"}
+ti["."] = {"fl_hay"}
+ti[","] = {"fl_hay", "amaze#"}
+ti[";"] = {"it_puller"} .. ti[","]
+ti["!"] = {"fl_lawn"}
+
+ti["@"] = {"#ac_marble", "anchor1"}
+ti["A"] = {"fl_samba", "anchor2"}
+ti["c"] = {"it_cherry"}
+
+
+if not wo["IsDifficult"] then
+    mymaze1 = res.maze(ti, {area ={po(4,2), 8, 5}, render = {".", "~", "-"}})
+    mymaze2 = res.maze(mymaze1, {area ={po(2, 12), 5, 10}, render = {"-", "~", "."}, kernel={2,2}, offset_y={1, false}})
+    mymaze3 = res.maze(mymaze2, {area ={po(22, 2), 5, 5}, kernel={2,2}})
+    
+    w,h = wo(mymaze3, " ", 100, 100)
+    --wo:drawBorder(po(0,0), w, h, ti["#"])
+    wo[po(1,1)] = ti["@"]
+    
+    mymaze3:render("!", "~", "-")
+
+    mymaze4 = res.maze(ti, {area ={"."}, kernel={1,1}, render = {"!", "~", "-"}})
+    wo:drawMap(mymaze4, po(22, 18), " ", {
+        "    .....................",
+        "    .....................",
+        "    .......................",
+        "    .......................",
+        "...........................",
+        "...........     ...........",
+        "...........     ...........",
+        "...........     .......",
+        ".......................",
+        ".......................",
+        "......................."
+    })
+    
+
+else
+    mymaze1 = res.maze(ti, {area ={"anchor1", 4, 5}, render = {".", "~", "-"}})
+    mymaze2 = res.maze(mymaze1, {area ={"anchor2", 8, 4}, render = {{".","+"}, "~", "-"}})
+    mymaze3 = res.maze(mymaze2, {area ={po(2, 12), 5, 5}, kernel={3,2}, render = {".", wo:newMap(" ", {"!!!~","--!~","~~~~"})}})
+    mymaze4 = res.maze(mymaze3, {area ={"."}, kernel={1,1}, render = {"!", "~", "-"}})
+    mymaze5 = res.maze(mymaze4, {area ={"amaze#*"}, render = {"!", "~", "!"}})
+    mymaze6 = res.maze(mymaze5, {area ={po(24, 12), 15, 12}, spacing={0,0}})
+    mymaze7 = res.maze(mymaze6, {area ={po(40, 25), 15, 12}, kernel={0,0}})
+    
+    w,h = wo(mymaze7, " ", {
+        "                                                                   ",
+        "                      A                                            ",
+        "            @                          .............+.....         ",
+        "                                       .............+.....         ",
+        "                                       .............+.....         ",
+        "                                       .............+.....         ",
+        "                                       ...................         ",
+        "                                           ...............         ",
+        "                                           ...............         ",
+        "                                           .....  .  .....         ",
+        "                                           .....     .....         ",
+        "                                           ......   ......         ",
+        "                                           .....     .....         ",
+        "        c                                  .....  .  .....         ",
+        "                                           ...............         ",
+        "            c                              ...............         ",
+        "                                           ...............         ",
+        "                                                                   ",
+        "          c                                                        ",
+        "                                                                   ",
+        "               c                                                   ",
+        "                                                                   ",
+        "                                                                   ",
+        "                                                                   ",
+        "                                                                   ",
+        "                                                                   ",
+        "                                                                   ",
+        "       ,,;,,,,,,,,,,,,,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,,,;,,,,                                       ",
+        "       ,,,,,,,,;,,,,,,,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,,,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,;,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,,,,,,,,                                       ",
+        "       ,,,,,,;,,,,,;,,,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,,,,,,,,                                       ",
+        "       ,,,,,,,,,,,,,,,,,,;,,                                       ",
+        "       ,,,,,,,,,,,,,,,,,,,,,                                       ",
+        "       ,,;,,,,,,,,,,,,,,,,,,                                       ",
+        "                                                                   "
+    })
+    
+    mymaze6(0,0)[WEST] = true
+    mymaze6(14,11)[SOUTH] = true
+    mymaze6:render(lib.maze.renderer_window, "!", true)
+    
+    mymaze7(0,0)[WEST] = true
+    mymaze7(14,11)[SOUTH] = true
+    mymaze7:render(lib.maze.renderer_strip, "~")
+end
+
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: team_levelpacks/team_test_new_api/ralT084_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native

Added: team_levelpacks/team_test_new_api/ralT085_1.xml
===================================================================
--- team_levelpacks/team_test_new_api/ralT085_1.xml	2009-03-26 23:50:15 UTC (rev 1597)
+++ team_levelpacks/team_test_new_api/ralT085_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected >
+    <el:info el:type="level">
+      <el:identity el:title="New Maze II" el:subtitle="" el:id="20090326ral424"/>
+      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="ral at users.berlios.de"/>
+      <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libmaze" el:id="lib/libmaze" el:release="2" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="true" el:single="true" el:network="false"/>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+wo["ConserveLevel"] = true
+
+ti["  "] = {"fl_samba"}
+ti[" #"] = {"st_grate"}
+ti[" +"] = {"st_lightglass"}
+ti[" ~"] = {"fl_water"}
+ti[" -"] = {"fl_wood"}
+ti[" ."] = {"fl_hay"}
+ti[" ;"] = {"it_puller"}
+ti[" !"] = {"fl_lawn"}
+
+ti[" @"] = {"#ac_marble"}
+ti[" c"] = {"it_cherry"}
+
+
+mymaze = res.maze(ti, {area ={"."}, render = {" -", " ~", " !"}})
+
+w,h = wo(mymaze, "  ", {
+    "                                                                ",
+    "                                                                ",
+    "   @    ..................          ..................          ",
+    "        ..................          ..................          ",
+    "        ..................................................      ",
+    "        ..................................................      ",
+    "        .....#............................................      ",
+    "        .................................................#      ",
+    "        .............c....................................      ",
+    "                ..........................................      ",
+    "                .........;.......c.......c................      ",
+    "                ..........................................      ",
+    "                ..........................................      ",
+    "                ..........                  ..............      ",
+    "                ..........                  ..............      ",
+    "                ..........                  ..............      ",
+    "                ..........                  ..............      ",
+    "                                                                ",
+    "                                                                ",
+    "                                                                "
+})
+
+
+
+    ]]></el:luamain>
+    <el:i18n>
+      <el:string el:key="title">
+        <el:english el:translate="false"/>
+      </el:string>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: team_levelpacks/team_test_new_api/ralT085_1.xml
___________________________________________________________________
Name: svn:keywords
   + Revision
Name: svn:eol-style
   + native



From andreasl at mail.berlios.de  Fri Mar 27 19:11:16 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Fri, 27 Mar 2009 19:11:16 +0100
Subject: [Enigma-game-svn] r1599 - in trunk: data data/levels/enigma_i
	data/levels/enigma_ii data/levels/enigma_iv
	data/levels/enigma_vi data/levels/enigma_vii
	data/levels/enigma_viii data/levels/lib doc/reference
Message-ID: <200903271811.n2RIBGt2020897@sheep.berlios.de>

Author: andreasl
Date: 2009-03-27 19:10:57 +0100 (Fri, 27 Mar 2009)
New Revision: 1599

Modified:
   trunk/data/api2init.lua
   trunk/data/levels/enigma_i/andreas14_2.xml
   trunk/data/levels/enigma_ii/andreas10_2.xml
   trunk/data/levels/enigma_iv/andreas03_2.xml
   trunk/data/levels/enigma_iv/duffy73_3.xml
   trunk/data/levels/enigma_vi/ral13_2.xml
   trunk/data/levels/enigma_vii/andreas46_3.xml
   trunk/data/levels/enigma_viii/andreas48_2.xml
   trunk/data/levels/enigma_viii/andreas55_2.xml
   trunk/data/levels/enigma_viii/ral21_2.xml
   trunk/data/levels/enigma_viii/ral30_1.xml
   trunk/data/levels/enigma_viii/ral32_1.xml
   trunk/data/levels/enigma_viii/ral33_1.xml
   trunk/data/levels/enigma_viii/ral37_1.xml
   trunk/data/levels/enigma_viii/ral42_1.xml
   trunk/data/levels/lib/liblua.xml
   trunk/data/levels/lib/libmath.xml
   trunk/data/levels/lib/libmaze_2.xml
   trunk/data/levels/lib/libsoko.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - Replace lib.lua.cond by global function cond (in api2init).
 - Add a small section "Basic functions" to chapter "Libraries".
   This section gives a short overview over those Lua functions and
   libraries, which can or can't be used in Enigma, or differ from
   their original versions. "cond" is described in the only
   subsection of the "Basic functions"-section.


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/api2init.lua	2009-03-27 18:10:57 UTC (rev 1599)
@@ -336,6 +336,23 @@
     end
 )
 
+------------------------------
+-- Global utility functions --
+------------------------------
+
+-- A wrapper of "if" to resemble the ternary ?:-function.
+-- Note that this function evaluates both IFTRUE as well as IFFALSE, e.g.
+--     cond(t == 0, 1/t, error("Division by zero"))
+-- will evaluate the error-function and thus halt for any T.
+-- Hence: Make sure there are no sideeffects in IFTRUE and IFFALSE!
+function cond(condition, iftrue, iffalse)
+    if condition then
+        return iftrue
+    else
+        return iffalse
+    end
+end
+
 ---------------
 -- Libraries --
 ---------------

Modified: trunk/data/levels/enigma_i/andreas14_2.xml
===================================================================
--- trunk/data/levels/enigma_i/andreas14_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_i/andreas14_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Laser Arena" el:subtitle="" el:id="andreas14"/>
-      <el:version el:score="1" el:release="2" el:revision="4" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="5" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2006, 2009 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.1">
-       <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -20,7 +19,7 @@
 wo["ConserveLevel"] = false
 wo["AllowSingleOxyds"] = true
 
-number_lasers = lib.lua.cond(wo["IsDifficult"], 5, 3)
+number_lasers = cond(wo["IsDifficult"], 5, 3)
 
 ti[" "] = {"fl_sand"}
 ti["#"] = {"st_fake_oxyda"}
@@ -66,16 +65,16 @@
 wo[border_north:sub(2)] = ti["O"]
 wo[border_south[1]] = ti["O"]
 if border_south[1].x == border_north[1].x then
-  wo[border_south[2]] = ti["O"]
+    wo[border_south[2]] = ti["O"]
 else
-  wo[po(border_north[1].x, border_south[1].y)] = ti["O"]
+    wo[po(border_north[1].x, border_south[1].y)] = ti["O"]
 end
 wo[border_west:sub(2)] = ti["O"]
 wo[border_east[1]] = ti["O"]
 if border_east[1].y == border_west[1].y then
-  wo[border_east[2]] = ti["O"]
+    wo[border_east[2]] = ti["O"]
 else
-  wo[po(border_east[1].x, border_west[1].y)] = ti["O"]
+    wo[po(border_east[1].x, border_west[1].y)] = ti["O"]
 end
 
 wo:shuffleOxyd()
@@ -88,20 +87,20 @@
 laser_pos = free_border - grp(fl(mx, 0), fl(mx, h-1), fl(0, my), fl(w-1, my))
 laser_pos = (laser_pos:shuffle()):sub(number_lasers)
 for i = 1, #laser_pos do
-  wo[laser_pos[i]] = ti[fl(laser_pos[i])._laser]
+    wo[laser_pos[i]] = ti[fl(laser_pos[i])._laser]
 end
 
 -- Move lasers on timer call:
 function timer_callback()
-  wo[laser_pos - oxyds] = ti["#"]
-  local new_pos = grp()
-  for floor in laser_pos do
-    new_pos = new_pos + fl(floor + floor._dir)
-  end
-  laser_pos = new_pos
-  for floor in laser_pos - oxyds do
-    wo[floor] = ti[floor._laser]
-  end
+    wo[laser_pos - oxyds] = ti["#"]
+    local new_pos = grp()
+    for floor in laser_pos do
+        new_pos = new_pos + fl(floor + floor._dir)
+    end
+    laser_pos = new_pos
+    for floor in laser_pos - oxyds do
+        wo[floor] = ti[floor._laser]
+    end
 end
 
     ]]></el:luamain>

Modified: trunk/data/levels/enigma_ii/andreas10_2.xml
===================================================================
--- trunk/data/levels/enigma_ii/andreas10_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_ii/andreas10_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Moure-Switches" el:subtitle="" el:id="andreas10"/>
-      <el:version el:score="1" el:release="2" el:revision="4" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="5" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2005, 2009 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -53,14 +52,14 @@
 mainoxyd = (no["oxyd#*"])[1]
 
 if not wo["IsDifficult"] then
-  wo[{3,6}] = {"it_pin"}
+    wo[{3,6}] = {"it_pin"}
 end
 
 -- First and second hint
 
 wo[{16,6}] = {"it_document", text = "text1"}
 function timer_hint(is_on, sender)
-  wo[{16,6}] = {"it_document", text = "text2"}
+    wo[{16,6}] = {"it_document", text = "text2"}
 end
 
 -- Fourswitch callback
@@ -82,7 +81,7 @@
 -- Switch callback
 
 function switch_callback(is_on, sender)
-    wo[{sender.x, 12 - sender.y}] = ti[lib.lua.cond(sender.y == 5, "H", "G")]
+    wo[{sender.x, 12 - sender.y}] = ti[cond(sender.y == 5, "H", "G")]
     sender:kill()
     mainoxyd:closeall()
     mainoxyd:shuffle()

Modified: trunk/data/levels/enigma_iv/andreas03_2.xml
===================================================================
--- trunk/data/levels/enigma_iv/andreas03_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_iv/andreas03_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="How solid?" el:subtitle="" el:id="andreas03"/>
-      <el:version el:score="1" el:release="2" el:revision="3" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="4" el:status="released"/>
       <el:author  el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2005, 2009 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -38,8 +37,7 @@
 ti["@"] = {"#ac_marble", adhesion = 1}
 ti["O"] = {"st_oxyd", flavor = "a", oxydcolor = OXYD_PURPLE}
 ti["D"] = {"it_document", text = "text2"}
-ti["T"] = {"st_timer", "timer", target = "callback_timer", state = OFF,
-           interval = lib.lua.cond(wo["IsDifficult"], 1.0, 1.2)}
+ti["T"] = {"st_timer", "timer", target = "callback_timer", state = OFF, interval = cond(wo["IsDifficult"], 1.0, 1.2)}
 ti["C"] = {"st_fourswitch", "clock"}
 ti["S"] = {"st_switch", target = "counter", action = "signal"}
 

Modified: trunk/data/levels/enigma_iv/duffy73_3.xml
===================================================================
--- trunk/data/levels/enigma_iv/duffy73_3.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_iv/duffy73_3.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Bizarro World" el:subtitle="" el:id="duffy73"/>
-      <el:version el:score="2" el:release="3" el:revision="21" el:status="released"/>
+      <el:version el:score="2" el:release="3" el:revision="22" el:status="released"/>
       <el:author  el:name="Jacob Scott" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2003 Jacob Scott</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -213,7 +212,7 @@
 
 switch_count= 0
 function whiteswitch(value, sender)
-    switch_count = switch_count + lib.lua.cond(value, 1, -1)
+    switch_count = switch_count + cond(value, 1, -1)
     if switch_count == 4 then
         wo[no["whitegate"]] = {"st_greenbrown_hollow", "whitegate"}
     elseif switch_count == 3 then

Modified: trunk/data/levels/enigma_vi/ral13_2.xml
===================================================================
--- trunk/data/levels/enigma_vi/ral13_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_vi/ral13_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -8,7 +8,6 @@
       <el:copyright>Copyright ? 2006,2009 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -50,8 +49,8 @@
     "####X##########X####"
 })
 
-rb_length = lib.lua.cond(wo["IsDifficult"], 3.5, 3.0)
-rb_max = lib.lua.cond(wo["IsDifficult"], 4.5, 4.0)
+rb_length = cond(wo["IsDifficult"], 3.5, 3.0)
+rb_max = cond(wo["IsDifficult"], 4.5, 4.0)
 for horse in no["horse%*"] do
     wo:add({"ot_rubberband", anchor1="acBlack", anchor2=horse, strength=200, length=rb_length, threshold=1, max=rb_max})
 end

Modified: trunk/data/levels/enigma_vii/andreas46_3.xml
===================================================================
--- trunk/data/levels/enigma_vii/andreas46_3.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_vii/andreas46_3.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,13 +3,12 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Tinker, Tailor" el:subtitle="" el:id="andreas46"/>
-      <el:version el:score="2" el:release="4" el:revision="11" el:status="released"/>
+      <el:version el:score="2" el:release="4" el:revision="12" el:status="released"/>
       <el:author el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
         <el:dependency el:path="lib/libmath" el:id="lib/libmath" el:release="1" el:preload="true"/>
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:score el:easy="2:18" el:difficult="5:10"/>
@@ -74,7 +73,7 @@
 function connect(obj1, obj2, restrict)
   wo:add({"ot_rubberband", anchor1 = obj1, anchor2 = obj2,
           strength = strength or maxstrength,
-          max = lib.lua.cond(restrict and wo["IsDifficult"], 2.5, nil)})
+          max = cond(restrict and wo["IsDifficult"], 2.5, nil)})
   -- Save partner of actor: When call_scissors is called, the
   -- rubberband will've already been removed, so ["fellows"]
   -- doesn't work anymore for the marble.

Modified: trunk/data/levels/enigma_viii/andreas48_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas48_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/andreas48_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Styles Change" el:subtitle="But dynamite is forever" el:id="andreas48"/>
-      <el:version el:score="2" el:release="2" el:revision="18" el:status="released"/>
+      <el:version el:score="2" el:release="2" el:revision="19" el:status="released"/>
       <el:author el:name="Andreas Lochmann" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -210,8 +210,8 @@
   for y = 0, height - 1 do
     for x = 0, width - 1 do
       local pos = 2*po({x, y}) + offset
-      local east = lib.lua.cond(maze:can_go_east(x,y), ".", "*")
-      local south = lib.lua.cond(maze:can_go_south(x,y), ".", "*")
+      local east = cond(maze:can_go_east(x,y), ".", "*")
+      local south = cond(maze:can_go_south(x,y), ".", "*")
       replace_key_in_map(j, " ", east,  pos + {1,0})
       replace_key_in_map(j, " ", south, pos + {0,1})
       replace_key_in_map(j, " ", "#",   pos + {1,1})
@@ -371,8 +371,7 @@
 for y = 1, #maze_maps[6] do
   number_field[y] = ""
   for x = 1, string.len(maze_maps[6][y]) do
-    number_field[y] = number_field[y]
-      .. lib.lua.cond(math.floor(x/5)%2 == math.floor(y/5)%2, final_spot_1, final_spot_2)
+    number_field[y] = number_field[y] .. cond(math.floor(x/5)%2 == math.floor(y/5)%2, final_spot_1, final_spot_2)
   end
 end
 maze_maps[6] = maze_maps[6] * wo:newMap(" ", number_field)
@@ -435,8 +434,8 @@
 
 key_sum = 0
 function key_call(is_on, sender)
-  key_sum = key_sum + lib.lua.cond(is_on == ON, 1, -1)
-  no["keydoor5"]:message(lib.lua.cond(key_sum == 2, "open", "close"))
+  key_sum = key_sum + cond(is_on == ON, 1, -1)
+  no["keydoor5"]:message(cond(key_sum == 2, "open", "close"))
 end
 
  ]]></el:luamain>

Modified: trunk/data/levels/enigma_viii/andreas55_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/andreas55_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/andreas55_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,12 +3,11 @@
   <el:protected>
     <el:info el:type="level">
       <el:identity el:title="Sokopal" el:subtitle="" el:id="andreas55"/>
-      <el:version el:score="2" el:release="2" el:revision="6" el:status="released"/>
+      <el:version el:score="2" el:release="2" el:revision="7" el:status="released"/>
       <el:author el:name="Andreas Lochmann, Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008, 2009 Andreas Lochmann</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:score el:easy="22:50" el:difficult="34:16"/>
@@ -76,7 +75,7 @@
 local spots = no["spot#*"]:shuffle()
 
 -- Number of oxyds depends on difficulty:
-local numoxyds = lib.lua.cond(wo["IsDifficult"], 40, 30)
+local numoxyds = cond(wo["IsDifficult"], 40, 30)
 for j = 1, 5 do
   wo[spots:sub(1 + (j-1) * numoxyds, -numoxyds)] = ti["o"..j]
 end

Modified: trunk/data/levels/enigma_viii/ral21_2.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral21_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral21_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -382,7 +382,7 @@
         if key == "o9" then
             return ti["O"..oxyd_colors[holy_idx]]
         elseif key == "of" then
-            local idx = lib.lua.cond(fake_idx == holy_idx, fake_idx + 1, fake_idx)
+            local idx = cond(fake_idx == holy_idx, fake_idx + 1, fake_idx)
             fake_idx = idx + 1
             return ti["O"..oxyd_colors[idx]]
         elseif key:sub(1,1) == "o" then
@@ -390,7 +390,7 @@
             return ti["O"..oxyd_colors[idx]]
         elseif key:sub(1,1) == "r" then
             local idx = 0 + key:sub(2,2)
-            return lib.lua.cond(idx == holy_idx, ti["R6"], ti["R1"])
+            return cond(idx == holy_idx, ti["R6"], ti["R1"])
         end
     else
         if key == "o9" then
@@ -580,7 +580,7 @@
 
 trigger_count = 0
 function volcano(value, sender)
-    trigger_count = trigger_count + lib.lua.cond(value, 1, -1)
+    trigger_count = trigger_count + cond(value, 1, -1)
     st(sender + {0, -1}):toggle()
     
     if (trigger_count == 6) then
@@ -624,8 +624,8 @@
 
 switch_count= 0
 function illumination(value, sender)
-    switch_count = switch_count + lib.lua.cond(value, 1, -1)
-    no["door5#*"]:message(lib.lua.cond(switch_count == 4, "open", "close"))
+    switch_count = switch_count + cond(value, 1, -1)
+    no["door5#*"]:message(cond(switch_count == 4, "open", "close"))
 end
 
 function open_grave(value, sender)

Modified: trunk/data/levels/enigma_viii/ral30_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral30_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral30_1.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -99,8 +99,8 @@
                 wirename = "wire"..pearls[pearl].."_"..pearls[pearl_right]
                 if pearl_right == pearls[(pearls[pearl] % #pearls) + 1] and not -no[wirename] then
                     wo:add({"ot_wire", wirename, anchor1=pearl, anchor2=pearl_right})
-                    pearl["_wires"] = lib.lua.cond(pearl["_wires"] == 1, 2, 1)
-                    pearl_right["_wires"] = lib.lua.cond(pearl_right["_wires"] == 1, 2, 1)
+                    pearl["_wires"] = cond(pearl["_wires"] == 1, 2, 1)
+                    pearl_right["_wires"] = cond(pearl_right["_wires"] == 1, 2, 1)
                 end
                 wires = pearl["wires"]
                 if pearl["_wires"] == 2 then

Modified: trunk/data/levels/enigma_viii/ral32_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral32_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral32_1.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -65,7 +65,7 @@
     sum = 0
     for i = 2, 15 do
         for j = 1, i do
-            sum = sum + lib.lua.cond(p[j] > p[i], 1, 0)
+            sum = sum + cond(p[j] > p[i], 1, 0)
         end
     end
     return sum % 2

Modified: trunk/data/levels/enigma_viii/ral33_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral33_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral33_1.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -76,7 +76,7 @@
     sum = 0
     for i = 2, 15 do
         for j = 1, i do
-            sum = sum + lib.lua.cond(p[j] > p[i], 1, 0)
+            sum = sum + cond(p[j] > p[i], 1, 0)
         end
     end
     return sum % 2

Modified: trunk/data/levels/enigma_viii/ral37_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral37_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral37_1.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -8,7 +8,6 @@
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:score el:easy="17:51" el:difficult="13:23"/>
@@ -16,7 +15,7 @@
     <el:luamain><![CDATA[
 
 wo["ConserveLevel"] = true
-wo["MaxOxydColor"] = lib.lua.cond(wo["IsDifficult"], OXYD_BROWN, OXYD_ORANGE)
+wo["MaxOxydColor"] = cond(wo["IsDifficult"], OXYD_BROWN, OXYD_ORANGE)
 wo["AllowSingleOxyds"] = true
 
 ti[" "] = {"fl_wood_framed"}

Modified: trunk/data/levels/enigma_viii/ral42_1.xml
===================================================================
--- trunk/data/levels/enigma_viii/ral42_1.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/enigma_viii/ral42_1.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -8,7 +8,6 @@
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/liblua" el:id="lib/liblua" el:release="1" el:preload="true"/>
       </el:compatibility>
       <el:modes el:easy="true" el:single="true" el:network="false"/>
       <el:comments>
@@ -60,7 +59,7 @@
 
 pressed = 0
 function check(value, sender)
-    pressed = pressed + lib.lua.cond(value, 1, -1)
+    pressed = pressed + cond(value, 1, -1)
     if pressed == 12 then
         no["d#*"]:open()
     else

Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/lib/liblua.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/liblua"/>
-      <el:version el:score="1" el:release="1" el:revision="5" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="6" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -17,9 +17,10 @@
     <el:luamain><![CDATA[
 
 ---------------------------------------------------------------------
--- liblib.lua holds some general utilities for working with Lua.
--- It includes functions for deep-copying tables, combining tables,
--- and shuffling tables and a conditional function.
+-- liblua holds some general utilities for working with Lua.
+-- It includes functions for work with tables (deep-copy, combine,
+-- shuffle, print tables), a modulo wrapper and general debugging
+-- functions (currently only to_string).
 ---------------------------------------------------------------------
 --
 -- liblua provides the following functions:
@@ -27,8 +28,8 @@
 --   lib.lua.combine_tables(arg1, ...)
 --   lib.lua.shuffle(t)
 --   lib.lua.print_table(t, prefix, depth)
+--   lib.lua.to_string(thing)
 --   lib.lua.mod(value, modul)
---   lib.lua.cond(condition, iftrue, iffalse)
 --
 
 lib.lua = {}
@@ -141,7 +142,7 @@
     elseif type(value) == "string" then
       print((prefix or "") .. "|" .. key_s .. " = \"" .. value .. "\"")
     elseif type(value) == "boolean" then
-      print((prefix or "") .. "|" .. key_s .. " = " .. lib.lua.cond(value, "true", "false"))
+      print((prefix or "") .. "|" .. key_s .. " = " .. cond(value, "true", "false"))
     elseif type(value) == "table" then
       if (depth or 0) < 5 then
         print((prefix or "") .. "|" .. key_s .. " = |")
@@ -184,7 +185,7 @@
   elseif (t == "number") then
     result = "number: " .. thing
   elseif (t == "boolean") then
-    result = "boolean: " .. lib.lua.cond(thing, "true", "false")
+    result = "boolean: " .. cond(thing, "true", "false")
   elseif (t == "table") then
     result = "table"
     if thing.type then
@@ -251,19 +252,6 @@
   end
 end
 
--- A wrapper of "if" to resemble the ternary ?:-function.
--- Note that this function evaluates both IFTRUE as well as IFFALSE, e.g.
---   lib.lua.cond(t == 0, 1/t, error("Division by zero"))
--- will evaluate the error-function and thus halt for any T.
--- Hence: Make sure there are no sideeffects in IFTRUE and IFFALSE!
-function lib.lua.cond(condition, iftrue, iffalse)
-  if condition then
-    return iftrue
-  else
-    return iffalse
-  end
-end
-
     ]]></el:luamain>
     <el:i18n>
     </el:i18n>

Modified: trunk/data/levels/lib/libmath.xml
===================================================================
--- trunk/data/levels/lib/libmath.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/lib/libmath.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libmath"/>
-      <el:version el:score="1" el:release="1" el:revision="4" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="5" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -30,9 +30,9 @@
 --   lib.math.permutation(n)
 --   lib.math.cyclic_permutation(n)  
 --   lib.math.random_vector(number, ...)
--- Additional mathematically relevant functions are part of liblua:
+-- Additional mathematically relevant functions are part of liblua and api2init:
 --   lib.lua.mod(value, modul)
---   lib.lua.cond(condition, iftrue, iffalse)
+--   cond(condition, iftrue, iffalse)
 --
 -- libmath depends on liblua, as lib.math.combinations makes
 -- use of lib.lua.deep_copy.

Modified: trunk/data/levels/lib/libmaze_2.xml
===================================================================
--- trunk/data/levels/lib/libmaze_2.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/lib/libmaze_2.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libmaze"/>
-      <el:version el:score="1" el:release="2" el:revision="5" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="6" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -155,8 +155,8 @@
                   local i,j = maze:decode(maze[cell])
                   local xo = i * (maze.kernel[1] + maze.spacing[1])
                   local yo = j * (maze.kernel[2] + maze.spacing[2])
-                  xo = xo + maze.offset_x[1] * lib.lua.cond(maze.offset_x[2], j%2, j)
-                  yo = yo + maze.offset_y[1] * lib.lua.cond(maze.offset_y[2], i%2, i)
+                  xo = xo + maze.offset_x[1] * cond(maze.offset_x[2], j%2, j)
+                  yo = yo + maze.offset_y[1] * cond(maze.offset_y[2], i%2, i)
                   return maze.anchor + {xo, yo}
               end
         }
@@ -289,8 +289,8 @@
         -- offsets not yet supported!
         for k,v in pairs(maze.area_positioncodes) do
             local x,y = maze:decode(v)
-            minx = lib.lua.cond(x < minx, x, minx)
-            miny = lib.lua.cond(y < miny, y, miny)
+            minx = cond(x < minx, x, minx)
+            miny = cond(y < miny, y, miny)
         end
         maze.anchor = po(minx, miny)
         local cellx = maze.kernel[1] + maze.spacing[1]

Modified: trunk/data/levels/lib/libsoko.xml
===================================================================
--- trunk/data/levels/lib/libsoko.xml	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/data/levels/lib/libsoko.xml	2009-03-27 18:10:57 UTC (rev 1599)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libsoko"/>
-      <el:version el:score="1" el:release="1" el:revision="6" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="7" el:status="released"/>
       <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008, 2009 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -534,7 +534,7 @@
             elseif (type(v) == "table") and string.find(v[1], "ac_") then
                 wo[marbles] = v
             elseif v == "rubberball" then
-                local kind = lib.lua.cond(design.white, "#ac_marble", "#ac_marble_white")
+                local kind = cond(design.white, "#ac_marble", "#ac_marble_white")
                 for j = 1, #marbles do
                     wo[marbles[j]] = {kind, "rubberball_" .. j, controllers = CTRL_NONE}
                     wo:add({"ot_rubberband", anchor1 = "rubberball_" .. j,
@@ -918,13 +918,13 @@
 -- POS, dependend on the boolean OPEN.
 function lib.soko.endphase_ralf_open_door(open, pos)
     if lib.soko.design.open_door then
-        wo[pos] =    lib.soko.resolver(lib.lua.cond(open, "  ", "# "), pos.x, pos.y)
-                  .. lib.soko.resolver(lib.lua.cond(open, "d ", "D "), pos.x, pos.y)
+        wo[pos] =    lib.soko.resolver(cond(open, "  ", "# "), pos.x, pos.y)
+                  .. lib.soko.resolver(cond(open, "d ", "D "), pos.x, pos.y)
     else
         -- use default "open"/"close"-messages instead
-        if -st(pos) then  st(pos):message(lib.lua.cond(open, "open", "close"))  end
-        if -it(pos) then  it(pos):message(lib.lua.cond(open, "open", "close"))  end
-        if -fl(pos) then  fl(pos):message(lib.lua.cond(open, "close", "open"))  end
+        if -st(pos) then  st(pos):message(cond(open, "open", "close"))  end
+        if -it(pos) then  it(pos):message(cond(open, "open", "close"))  end
+        if -fl(pos) then  fl(pos):message(cond(open, "close", "open"))  end
     end
 end
 

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-26 23:51:58 UTC (rev 1598)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-27 18:10:57 UTC (rev 1599)
@@ -13755,13 +13755,111 @@
 described just there.
 
 @menu
-* liblua::       General methods for tables.
-* libmath::      Mathematical algorithms, like random permutations.
-* libmap::       Methods for API 2-maps.
-* libimport::    Methods for importing external level files.
-* libsoko::      A library to interpret Sokoban level files.
+* Basic Functions::  About basic lua functions and standard lua libraries.
+* liblua::           General methods for tables.
+* libmath::          Mathematical algorithms, like random permutations.
+* libmap::           Methods for API 2-maps.
+* libimport::        Methods for importing external level files.
+* libsoko::          A library to interpret Sokoban level files.
 @end menu
 
+ at node Basic Functions
+ at section Basic Functions
+
+Enigma supports most Lua 5.0 and above statements, i.e. you can freely use
+tables and control structures in your level, as you would expect. However, some
+Lua functions have been deactivated for security reasons or to ensure
+upwards compatibility. These are @samp{dofile}, @samp{module}, @samp{require}
+and most or all functions of the standard libraries @samp{package}, @samp{io}
+and @samp{os}. You should use the @ref{<compatibility>}-tag to include external
+libraries instead of @samp{require}, @samp{dofile} or @samp{package}, and
+ at samp{print} for output to stdout instead of @samp{io}. The @samp{print}
+function is pretty useful for developing and debugging complex levels, but
+should not appear in the level's final version anymore.
+
+Of Lua's built-in mathematical functions you may use any of the following:
+ at samp{math.abs}, @samp{math.acos}, @samp{math.asin}, @samp{math.atan}, @samp{math.atan2},
+ at samp{math.ceil}, @samp{math.cos}, @samp{math.deg}, @samp{math.exp}, @samp{math.floor},
+ at samp{math.frexp}, @samp{math.ldexp}, @samp{math.log}, @samp{math.log10}, @samp{math.max},
+ at samp{math.min}, @samp{math.pow}, @samp{math.rad}, @samp{math.random}, @samp{math.sin},
+ at samp{math.sqrt}, @samp{math.tan}. As of Lua 5.1, the following functions are
+additionally available: @samp{math.cosh}, @samp{math.fmod}, @samp{math.huge},
+ at samp{math.modf}, @samp{math.pi}, @samp{math.sinh}, @samp{math.tanh}.
+
+All trigonometric functions use radians, you can use @samp{math.deg} and
+ at samp{math.rad} to convert between radians and degrees. For the differences
+between @samp{math.mod} and @samp{math.fmod} see @ref{lib.lua.mod}.
+
+While you have access to nearly all mathematical functions Lua defines, Enigma
+uses an own random generator, which you access via @samp{math.random} with the
+same syntax as Lua's random generator. To ensure stability in future versions
+of Enigma, @samp{math.randomseed} is disabled.
+
+Please read the online manuals of
+ at uref{http://www.lua.org/manual/5.0/, Lua 5.0} and 
+ at uref{http://www.lua.org/manual/5.1/, Lua 5.1} for more detailled information.
+
+In addition to the usual Lua functions, Enigma provides the @ref{cond} function,
+which can be used to abbreviate simple if-then-else-constructions.
+
+ at menu
+* cond::            A ternary operator, wrapper for if-then-else.
+ at end menu
+
+ at c ----------------- cond --------------------
+
+ at node cond
+ at subsection cond
+
+ at samp{cond} is a conditional assignment, a ternary operator very
+similar (but not equal to) the @samp{?:}-expression in C-like languages. Note
+however, that there are caveats, see details.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{cond}(@i{condition}, @i{iftrue}, @i{iffalse})
+
+ at table @asis
+ at item @i{condition}
+A boolean expression.
+
+ at item @i{iftrue}
+The expression to be returned if @samp{condition} is true.
+
+ at item @i{iffalse}
+The expression to be returned if @samp{condition} is false.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+cond(wo["IsDifficult"], @{"st_death"@}, ti["#"])
+ at end example
+
+ at item @b{Details:}
+ at samp{cond} evaluates both expressions @samp{iftrue} and
+ at samp{iffalse}, regargless of @samp{condition}. Hence,
+ at example
+cond(t == 0, 1/t, error("Division by zero"))
+ at end example
+will always raise an error: All sideeffects will happen.
+Another example which will not work:
+ at example
+w,h = cond(wo["IsDifficult"], wo(ti, " ", map1), wo(ti, " ", map2))
+ at end example
+Use this instead:
+ at example
+w,h = wo(ti, " ", cond(wo["IsDifficult"], map1, map2))
+ at end example
+However, in most cases @samp{cond} is used with static expressions for
+ at samp{iftrue} and @samp{iffalse} (e.g. strings or variables), when no
+sideeffects are possible.
+
+ at item @b{Full Example:}
+ at example
+ at end example
+ at end table
+
+
 @node liblua
 @section liblua
 
@@ -13777,7 +13875,6 @@
 
 @menu
 * lib.lua.combine_tables::  Collect entries of anonymous Lua-tables into a common table.
-* lib.lua.cond::            A wrapper for if.
 * lib.lua.deep_copy::       Complete copies of Lua-tables.
 * lib.lua.mod::             A modulo operation.
 * lib.lua.print_table::     Print tables for debug reasons.
@@ -13826,59 +13923,6 @@
 @end example
 @end table
 
- at c ----------------- cond --------------------
-
- at node lib.lua.cond
- at subsection lib.lua.cond
-
- at samp{lib.lua.cond} is a conditional assignment, a ternary operator very
-similar (but not equal to) the @samp{?:}-expression in C-like languages. Note
-however, that there are caveats, see details.
-
- at table @asis
- at item @b{Syntax:}
- at b{lib.lua.cond}(@i{condition}, @i{iftrue}, @i{iffalse})
-
- at table @asis
- at item @i{condition}
-A boolean expression.
-
- at item @i{iftrue}
-The expression to be returned if @samp{condition} is true.
-
- at item @i{iffalse}
-The expression to be returned if @samp{condition} is false.
- at end table
-
- at item @b{Syntax Samples:}
- at example
-lib.lua.cond(wo["IsDifficult"], @{"st_death"@}, ti["#"])
- at end example
-
- at item @b{Details:}
- at samp{lib.lua.cond} evaluates both expressions @samp{iftrue} and
- at samp{iffalse}, regargless of @samp{condition}. Hence,
- at example
-lib.lua.cond(t == 0, 1/t, error("Division by zero"))
- at end example
-will always raise an error: All sideeffects will happen.
-Another example which will not work:
- at example
-w,h = lib.lua.cond(wo["IsDifficult"], wo(ti, " ", map1), wo(ti, " ", map2))
- at end example
-Use this instead:
- at example
-w,h = wo(ti, " ", lib.lua.cond(wo["IsDifficult"], map1, map2))
- at end example
-However, in most cases @samp{lib.lua.cond} is used with static expressions for
- at samp{iftrue} and @samp{iffalse} (e.g. strings or variables), when no
-sideeffects are possible.
-
- at item @b{Full Example:}
- at example
- at end example
- at end table
-
 @c ----------------- deep_copy --------------------
 
 @node lib.lua.deep_copy



From ral at mail.berlios.de  Sat Mar 28 00:40:30 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Sat, 28 Mar 2009 00:40:30 +0100
Subject: [Enigma-game-svn] r1600 - in trunk/src: . stones
Message-ID: <200903272340.n2RNeUaf032394@sheep.berlios.de>

Author: ral
Date: 2009-03-28 00:40:17 +0100 (Sat, 28 Mar 2009)
New Revision: 1600

Modified:
   trunk/src/server.cc
   trunk/src/stones/FlatStone.cc
   trunk/src/stones/GlassStones.cc
   trunk/src/stones/GreenBrownStone.cc
   trunk/src/stones/PlasterStone.cc
   trunk/src/stones/StandardStones.cc
Log:
Trunk 1.1:
- fix hollow stone visibility on usage of mutiple it_glasses
- fix meditation-screenshot shortcut

Modified: trunk/src/server.cc
===================================================================
--- trunk/src/server.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/server.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -200,8 +200,6 @@
     const double timestep = 0.01; // 10ms
     int count = 0;
 
-    server::LevelTime += dtime;
-
     time_accu += dtime;
     if (time_accu > 1.0) {
         fprintf (stderr, "Whoa, system overload!\n");
@@ -209,6 +207,7 @@
     }
     player::Tick (time_accu);
     for (;time_accu >= timestep; time_accu -= timestep, count++) {
+        server::LevelTime += timestep;
         WorldTick(timestep);
 //        if (lua::CallFunc (lua::LevelState(), "Tick", timestep, NULL) != 0) {
 //            throw XLevelRuntime (string("Calling 'Tick' failed:\n")

Modified: trunk/src/stones/FlatStone.cc
===================================================================
--- trunk/src/stones/FlatStone.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/stones/FlatStone.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -61,14 +61,10 @@
     
     Value FlatStone::message(const Message &m) {
         if (m.message == "_glasses") {
-            if ((to_int(m.value) & Glasses::HOLLOW) && !(objFlags & OBJBIT_GLASSES)) {  // hollow
-                objFlags |= OBJBIT_GLASSES;
+            if ((bool)((to_int(m.value) & Glasses::HOLLOW)) != (bool)(objFlags & OBJBIT_GLASSES)) {
+                objFlags ^= OBJBIT_GLASSES;
                 if (isDisplayable())
                     init_model();
-            } else if (objFlags & OBJBIT_GLASSES) {
-                objFlags &= ~OBJBIT_GLASSES;
-                if (isDisplayable())
-                    init_model();
             }
             return Value();
         } else if (((objFlags & (OBJBIT_BREAKABLE | OBJBIT_MOVABLE)) || state == CRACKED) && 

Modified: trunk/src/stones/GlassStones.cc
===================================================================
--- trunk/src/stones/GlassStones.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/stones/GlassStones.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -49,14 +49,10 @@
     
     Value GlassStone::message(const Message &m) {
         if ((objFlags & OBJBIT_HOLLOW) && m.message == "_glasses") {
-            if ((to_int(m.value) & Glasses::HOLLOW) && !(objFlags & OBJBIT_GLASSES)) {  // hollow
-                objFlags |= OBJBIT_GLASSES;
+            if ((bool)((to_int(m.value) & Glasses::HOLLOW)) != (bool)(objFlags & OBJBIT_GLASSES)) {
+                objFlags ^= OBJBIT_GLASSES;
                 if (isDisplayable())
                     init_model();
-            } else if (objFlags & OBJBIT_GLASSES) {
-                objFlags &= ~OBJBIT_GLASSES;
-                if (isDisplayable())
-                    init_model();
             }
             return Value();
         } else if (m.message == "signal" && server::GameCompatibility == GAMET_OXYD1) {

Modified: trunk/src/stones/GreenBrownStone.cc
===================================================================
--- trunk/src/stones/GreenBrownStone.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/stones/GreenBrownStone.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -49,14 +49,10 @@
     
     Value GreenBrownStone::message(const Message &m) {
         if ((objFlags & OBJBIT_HOLLOW) && m.message == "_glasses") {
-            if ((to_int(m.value) & Glasses::HOLLOW) && !(objFlags & OBJBIT_GLASSES)) {  // hollow
-                objFlags |= OBJBIT_GLASSES;
+            if ((bool)((to_int(m.value) & Glasses::HOLLOW)) != (bool)(objFlags & OBJBIT_GLASSES)) {
+                objFlags ^= OBJBIT_GLASSES;
                 if (isDisplayable())
                     init_model();
-            } else if (objFlags & OBJBIT_GLASSES) {
-                objFlags &= ~OBJBIT_GLASSES;
-                if (isDisplayable())
-                    init_model();
             }
             return Value();
         }

Modified: trunk/src/stones/PlasterStone.cc
===================================================================
--- trunk/src/stones/PlasterStone.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/stones/PlasterStone.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -51,14 +51,10 @@
     
     Value PlasterStone::message(const Message &m) {
         if ((objFlags & OBJBIT_HOLLOW) && m.message == "_glasses") {
-            if ((to_int(m.value) & Glasses::HOLLOW) && !(objFlags & OBJBIT_GLASSES)) {  // hollow
-                objFlags |= OBJBIT_GLASSES;
+            if ((bool)((to_int(m.value) & Glasses::HOLLOW)) != (bool)(objFlags & OBJBIT_GLASSES)) {
+                objFlags ^= OBJBIT_GLASSES;
                 if (isDisplayable())
                     init_model();
-            } else if (objFlags & OBJBIT_GLASSES) {
-                objFlags &= ~OBJBIT_GLASSES;
-                if (isDisplayable())
-                    init_model();
             }
             return Value();
         } else if ((objFlags & OBJBIT_BREAKABLE) && 

Modified: trunk/src/stones/StandardStones.cc
===================================================================
--- trunk/src/stones/StandardStones.cc	2009-03-27 18:10:57 UTC (rev 1599)
+++ trunk/src/stones/StandardStones.cc	2009-03-27 23:40:17 UTC (rev 1600)
@@ -49,14 +49,10 @@
     
     Value StandardStone::message(const Message &m) {
         if ((objFlags & OBJBIT_HOLLOW) && m.message == "_glasses") {
-            if ((to_int(m.value) & Glasses::HOLLOW) && !(objFlags & OBJBIT_GLASSES)) {  // hollow
-                objFlags |= OBJBIT_GLASSES;
+            if ((bool)((to_int(m.value) & Glasses::HOLLOW)) != (bool)(objFlags & OBJBIT_GLASSES)) {
+                objFlags ^= OBJBIT_GLASSES;
                 if (isDisplayable())
                     init_model();
-            } else if (objFlags & OBJBIT_GLASSES) {
-                objFlags &= ~OBJBIT_GLASSES;
-                if (isDisplayable())
-                    init_model();
             }
             return Value();
         }



From ral at mail.berlios.de  Sun Mar 29 20:53:15 2009
From: ral at mail.berlios.de (ral at mail.berlios.de)
Date: Sun, 29 Mar 2009 20:53:15 +0200
Subject: [Enigma-game-svn] r1601 - trunk/data/levels/lib
Message-ID: <200903291853.n2TIrFiQ025020@sheep.berlios.de>

Author: ral
Date: 2009-03-29 20:53:08 +0200 (Sun, 29 Mar 2009)
New Revision: 1601

Added:
   trunk/data/levels/lib/libpento_1.xml
Modified:
   trunk/data/levels/lib/libpuzzle_3.xml
Log:
Trunk 1.1:
- add new libpento
- mark libpuzzle_3.xml as released 

Added: trunk/data/levels/lib/libpento_1.xml
===================================================================
--- trunk/data/levels/lib/libpento_1.xml	2009-03-27 23:40:17 UTC (rev 1600)
+++ trunk/data/levels/lib/libpento_1.xml	2009-03-29 18:53:08 UTC (rev 1601)
@@ -0,0 +1,136 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
+  <el:protected>
+    <el:info el:type="library">
+      <el:identity el:title="" el:id="lib/libpento"/>
+      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
+      <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
+      <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
+      <el:license el:type="GPL v2.0 or above" el:open="true"/>
+      <el:compatibility el:enigma="1.10">
+        <el:dependency el:path="lib/libmap" el:id="lib/libmap" el:release="1" el:preload="true"/>
+      </el:compatibility>
+      <el:modes el:easy="false" el:single="false" el:network="false"/>
+      <el:comments>
+      </el:comments>
+      <el:score el:easy="-" el:difficult="-"/>
+    </el:info>
+    <el:luamain><![CDATA[
+    
+    
+ti["pentopuzzle"] = {"st_puzzle", "shape%%#", cluster="%%", intensity=0}
+
+function res.pento_finalization(context)
+    context.src_area = no[context.source.."#*"]
+    context.src_anchor = po(0,0)
+    do
+        if #context.src_area ~= 25 then
+            error("Pentomino source area not a 5x5 square", 2)
+        end
+        local x = 100000
+        local y = 100000
+        for s in context.src_area do
+            if s.x < x then x = s.x end
+            if s.y < y then y = s.y end
+        end
+        context.src_anchor = po(x, y)
+        for s in context.src_area do
+            if s.x > x+5 or s.y > y + 5 then
+                error("Pentomino source area not a 5x5 square", 2)
+            end
+        end
+    end
+    context.target_area = no["target#*"]
+    if #context.target_area ~= 60 then
+        error("Pentomino target area not 60 grids", 2)
+    end
+    context.last_shape = 12
+    
+    context.next = function ()
+        local trash = st(context.src_area)
+        for t in trash do
+            if -t then
+                t:get_cluster():kill()
+            end
+        end
+        local count = 0
+        repeat
+            count = count + 1
+            if count == 13 then return end
+            context.last_shape = context.last_shape + 1
+            if context.last_shape == 13 then context.last_shape = 1 end
+        until #no["shape%"..context.last_shape.."#*"] == 0
+        
+        local shape_map = wo:newMap(" ", context.shapes[context.last_shape])
+        local offset = po(3 - shape_map.width/2, 3 - shape_map.height/2)
+        wo:drawMap(context[3], context.src_anchor + offset, " ", shape_map)
+    end
+
+    context.transform = function (transformations)
+        local target = st(context.src_area)
+        local cluster = nil
+        if #target ~= 5 then return end
+        for t in target do
+            if cluster == nil then 
+                cluster = t["cluster"]
+            elseif cluster ~= t["cluster"] then
+                return
+            end
+        end
+        local oldtransform = target[1]["_transform"] or MAP_IDENT
+        local newtransform = transformations[oldtransform + 1]
+        target[1]:get_cluster():kill()
+        local shape = 0 + cluster:sub(2)
+        local shape_map = wo:newMap(" ", context.shapes[shape]) ^ newtransform
+        local offset = po(3 - shape_map.width/2, 3 - shape_map.height/2)
+        wo:drawMap(context[3], context.src_anchor + offset, " ", shape_map)
+        st(context.src_area)["_transform"] = newtransform
+    end
+
+    context.rotate = function()
+        context.transform(context.rotations)
+    end
+    
+    context.mirror = function()
+        context.transform(context.mirrors)
+    end
+    
+    context.check = function()
+        return #st(context.target_area) == 60
+    end
+
+end
+
+function res.pento_implementation(context, evaluator, key, x, y)
+    return evaluator(context[3], key, x, y)
+end
+
+function res.pento(subresolver, ...)
+    -- syntax: ... = <sourcebasename>, <targetbasename>
+    -- context: 
+    local args = {...}
+    if type(args[1]) ~= "string" then
+        error("Resolver pento requires source basename as first argument")
+    elseif type(args[1]) ~= "string" then
+        error("Resolver pento requires target basename as second argument")
+    end
+    local autotile = res.autotile(subresolver, {"O","Z", "pentopuzzle"})
+    local context = {res.pento_implementation, res.pento_finalization, autotile}
+    context.source = args[1]
+    context.target = args[2]
+    context.shapes = {{"OOOOO"}, {"PP","PPP"}, {"QQQQ","Q"},{"R","RRR"," R"},
+        {"  SS","SSS"},{"T","TTT","T"},{"U U","UUU"},{"VVV","V","V"},
+        {"W","WW"," WW"},{" X","XXX"," X"},{"YYYY"," Y"},{"ZZ"," Z"," ZZ"}}
+    context.rotations = {MAP_ROT_CW, MAP_ROT_180, MAP_ROT_CCW, MAP_IDENT, 
+        MAP_MIRROR_VERTICAL, MAP_MIRROR_BACKSLASH, MAP_MIRROR_HORIZONTAL, 
+        MAP_MIRROR_SLASH}
+    context.mirrors = {MAP_MIRROR_HORIZONTAL, MAP_MIRROR_SLASH, MAP_MIRROR_VERTICAL,
+        MAP_MIRROR_BACKSLASH, MAP_ROT_CCW, MAP_IDENT, MAP_ROT_CW, MAP_ROT_180}
+    return context
+end
+
+    ]]></el:luamain>
+    <el:i18n>
+    </el:i18n>
+  </el:protected>
+</el:level>


Property changes on: trunk/data/levels/lib/libpento_1.xml
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/data/levels/lib/libpuzzle_3.xml
===================================================================
--- trunk/data/levels/lib/libpuzzle_3.xml	2009-03-27 23:40:17 UTC (rev 1600)
+++ trunk/data/levels/lib/libpuzzle_3.xml	2009-03-29 18:53:08 UTC (rev 1601)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libpuzzle"/>
-      <el:version el:score="2" el:release="3" el:revision="5" el:status="test"/>
+      <el:version el:score="2" el:release="3" el:revision="5" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>



From andreasl at mail.berlios.de  Mon Mar 30 00:18:48 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Mon, 30 Mar 2009 00:18:48 +0200
Subject: [Enigma-game-svn] r1602 - in trunk: data data/levels/lib
	doc/reference
Message-ID: <200903292218.n2TMImU8029023@sheep.berlios.de>

Author: andreasl
Date: 2009-03-30 00:18:42 +0200 (Mon, 30 Mar 2009)
New Revision: 1602

Modified:
   trunk/data/api2init.lua
   trunk/data/levels/lib/libimport.xml
   trunk/data/levels/lib/liblua.xml
   trunk/data/levels/lib/libmap.xml
   trunk/data/levels/lib/libmath.xml
   trunk/data/levels/lib/libmaze_2.xml
   trunk/data/levels/lib/libpento_1.xml
   trunk/data/levels/lib/libpuzzle_3.xml
   trunk/data/levels/lib/libsoko.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - Add three basic lua functions: etype, assert_type and assert_bool
   (including their refman-entries).
 - Replace most type-checks in libraries by assert_type or assert_bool.
Note:
 - Typos are still possible, and probable, error messages might be
   caused by wrong assertions and hence misleading. Please report on
   any misleading error messages you encounter.


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/api2init.lua	2009-03-29 22:18:42 UTC (rev 1602)
@@ -639,3 +639,78 @@
     return context
 end
 
+--------------------
+-- Error handling --
+--------------------
+
+function etype(object)
+    local t = type(object)
+    if t == "userdata" then
+        return usertype(object)
+    elseif t == "table" then
+        return (getmetatable(object) or {})._type or t
+    end
+    return t
+end
+
+function assert_type(object, objname, level, ...)
+    -- assert_type throws an error if object does not fulfill one of the
+    -- conditions in "...". Possible conditions are the lua- and usertype
+    -- names and "map" (i.e. the results of etype), plus the strings
+    -- "integer", "natural" (i.e. integer >= 0), "positive" (> 0), and
+    -- "non-negative" (>= 0). 
+    local conditions = {...}
+    local fulfilled = false
+    for k = 1, #conditions do
+        local condition = conditions[k]
+        fulfilled = fulfilled
+            or  (condition == etype(object))
+            or ((condition == "integer") and (type(object) == "number") and (math.ceil(object) == object))
+            or ((condition == "positive") and (type(object) == "number") and (object > 0))
+            or ((condition == "non-negative") and (type(object) == "number") and (object >= 0))
+            or ((condition == "natural") and (type(object) == "number") and (math.ceil(object) == object) and (object >= 0))
+            or ((condition == "positive integer") and (type(object) == "number") and (math.ceil(object) == object) and (object > 0))
+            or ((condition == "non-empty string") and (type(object) == "string") and (object ~= ""))
+            or ((condition == "any table") and (type(object) == "table"))
+    end
+    if not fulfilled then
+        for k = 1, #conditions do
+            if type(conditions[k]) ~= "string" then
+                error("Error in type assertion: Wrong argument for assert_type, must be string.", 2)
+            end
+        end
+        if type(objname) ~= "string" then
+            error("Error in type assertion: Object name missing for assert_type.", 2)
+        end
+        local s = ""
+        if objname ~= "" then
+            s = " for " .. objname
+        end
+        if #conditions == 0 then
+            error("Unconditional assertion" .. s .. ".", (level or 1) + 1)
+        end
+        s = "Wrong type" .. s ..", is " .. etype(object) ..", must be "
+        if #conditions == 1 then
+            s = s .. conditions[1] .. "."
+        else
+            s = s .. "one of "
+            for k = 1, #conditions - 1 do
+                s = s .. conditions[k] .. ", "
+            end
+            s = s .. conditions[#conditions] .. "."
+        end
+        error(s, (level or 1) + 1)
+    end
+end
+
+function assert_bool(bool, message, level)
+    -- assert_bool throws an error with message MESSAGE if BOOL is false or nil.
+    if not bool then
+        if message and (type(message) == "string") and (message ~= "") then
+            error(message, (level or 1) + 1)
+        else
+            error("Anonymous assertion failed.", (level or 1) + 1)
+        end
+    end
+end
+

Modified: trunk/data/levels/lib/libimport.xml
===================================================================
--- trunk/data/levels/lib/libimport.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libimport.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libimport"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="experimental"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="experimental"/>
       <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2009 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -37,12 +37,8 @@
 -------------------
 
 function lib.import.unpack_multilevel(multilevel, sublevel_number, format)
-    if type(multilevel) ~= "string" then
-        error("lib.import.unpack_multilevel: Can't make sense of level type "..type(level)..".", 2)
-    end
-    if (type(sublevel_number or 1) ~= "number") then
-        error("lib.import.unpack_multilevel: Sublevel number must be an integer.", 2)
-    end
+    assert_type(multilevel, "lib.import.unpack_multilevel first argument", 2, "string")
+    assert_type(sublevel_number, "lib.import.unpack_multilevel second argument", 2, "nil", "positive integer")
     local current_level_number = 0
     local level = ""
     -- search the correct sublevel by pattern matching, line for line
@@ -61,14 +57,14 @@
         else
             in_level = false
         end
-    end  
-    if level == "" then
-        error("lib.import.unpack_multilevel: Multilevel holds less than "..sublevel_number.." levels!", 2)
     end
+    assert_bool(level ~= "", "lib.import.unpack_multilevel: Multilevel holds less than "..sublevel_number.." levels!", 2)
     return level
 end
 
 function lib.import.uncompress_rle(level, attribs)
+    assert_type(level, "lib.import.uncompress_rle first argument", 2, "string")
+    assert_type(attribs, "lib.import.uncompress_rle second argument", 2, "nil", "table")
     local uncompressed = ""
     local rle_counter = nil
     local error_on_multiple = (attribs or {}).error_on_multiple
@@ -105,24 +101,16 @@
 
 -- When using level_to_map, make sure in advance that the level ends
 -- with a proper line ending, and only one line ending.
-function lib.import.level_to_map(level, _line_ending, _default_key)
-    local line_ending = _line_ending or "\n"
-    local default_key = _default_key or " "
-    if type(level) ~= "string" then
-        error("lib.import.level_to_map: Can't make sense of level type "..type(level)..".", 2)
-    end
-    if type(line_ending) ~= "string" then
-        error("lib.import.level_to_map: Can't make sense of line ending type "..type(level)..".", 2)
-    end
-    if type(default_key) ~= "string" then
-        error("lib.import.level_to_map: Can't make sense of default key type "..type(level)..".", 2)
-    end
+function lib.import.level_to_map(level, line_ending, default_key)
+    assert_type(level, "lib.import.level_to_map first argument", 2, "string")
+    assert_type(line_ending, "lib.import.level_to_map second argument", 2, "nil", "non-empty string")
+    assert_type(default_key, "lib.import.level_to_map third argument", 2, "nil", "non-empty string")
     local premap = {}
-    local reg_exp_line = "(.-)" .. line_ending
+    local reg_exp_line = "(.-)" .. (line_ending or "\n")
     string.gsub(level, reg_exp_line, function (s)
         table.insert(premap, s)
     end)
-    return wo:newMap(default_key, premap)
+    return wo:newMap(default_key or " ", premap)
 end
 
 ----------------------------------------
@@ -156,9 +144,8 @@
    .. "[ \-\#\_\$\.@\*0-9Nn\+]*"  -- again all allowed characters except line ending
 
 function lib.import.map_sokoban(multilevel, sublevel_number, keylength_one)
-    if type(multilevel) ~= "string" then
-        error("lib.import.map_sokoban: Multilevel is not a string.", 2)
-    end
+    assert_type(multilevel, "lib.import.map_sokoban first argument", 2, "non-empty string")
+    assert_type(sublevel_number, "lib.import.map_sokoban second argument", 2, "nil", "positive integer")
     local level
     level = lib.import.unpack_multilevel(multilevel .. "\n", sublevel_number or 1, "sokoban")
     level = lib.import.uncompress_rle(level, {error_on_multiple = "|\n"})
@@ -212,6 +199,7 @@
       "[ \:\_\#\*\-O\<\>\^\!\+B\/\\TAX at MSC\~]+" -- at least one character
 
 function lib.import.map_wanderer(monolevel)
+    assert_type(monolevel, "lib.import.map_wanderer first argument", 2, "non-empty string")
     -- strip level from text lines
     local level = lib.import.unpack_multilevel(monolevel, 1, "wanderer")
     local map = lib.import.level_to_map(level, "\n", " ")

Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/liblua.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/liblua"/>
-      <el:version el:score="1" el:release="1" el:revision="6" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="7" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -170,12 +170,9 @@
 end
 
 function lib.lua.to_string(thing)
-  local t = type(thing)
-  if t == "userdata" then
-    t = usertype(thing)
-  end
-  local result = "unknown type"
-      if (t == "nil") then
+  local t = etype(thing)
+  local result = t
+  if (t == "nil") then
     result = "nil"
   elseif (t == "string") then
     if string.find(thing, "\n", 1, true) then
@@ -187,11 +184,7 @@
   elseif (t == "boolean") then
     result = "boolean: " .. cond(thing, "true", "false")
   elseif (t == "table") then
-    result = "table"
-    if thing.type then
-      result = result .. "/" .. thing.type
-    end
-    result = result .. ":\n"
+    result = "table:\n"
     local found = false
     for key, value in pairs(thing) do
       found = true
@@ -199,9 +192,6 @@
     end
     if not found then
       result = "empty table"
-      if thing.type then
-        result = result .. "/" .. thing.type
-      end
     end
   elseif (t == "position") then
     result = "position: " .. thing.x .. "/" .. thing.y
@@ -221,6 +211,14 @@
     for j = 1, #thing do
       result = result .. "  " .. j .. ": " .. thing[j].x .. "/" .. thing[j].y .. "\n"
     end
+  elseif (t == "map") then
+    result = "map of size " .. thing.width .. " x " .. thing.height .. " with default key '"
+             .. thing.defaultkey .. "':\n"
+    for j = 1, thing.width do
+      result = result .. "  \"" .. thing[j] .. "\"\n"
+    end
+  elseif (t == "unknown") then
+    result = "unknown userdata"
   end
   return result
 end
@@ -235,17 +233,12 @@
 -- values as it should. The following function returns (given
 -- an integer) another integer between 0 and MODUL-1.
 function lib.lua.mod(value, modul)
-  if (type(value) ~= "number") or (type(modul) ~= "number") then
-    error("lib.lua.mod: Arguments are not two numbers.", 2)
-  end
-  if modul <= 0 then
-    error("lib.lua.mod: Second argument (modul) must be positive.", 2)
-  end
+  assert_type(value, "lib.lua.mod first argument", 2, "number")
+  assert_type(modul, "lib.lua.mod second argument", 2, "positive")
   if value < 0 then
-    -- No, the following call to lib.lua.mod is not a real
-    -- recursion, it's only for the case where VALUE is a
-    -- negative multiple of MODUL (otherwise we would get
-    -- MODUL as result, not zero).
+    -- No, the following call to lib.lua.mod is not a real recursion, it's
+    -- only for the case where VALUE is a negative multiple of MODUL
+    -- (otherwise we would get MODUL as result, not zero).
     return lib.lua.mod(modul + (math.fmod or math.mod)(value, modul), modul)
   else
     return (math.fmod or math.mod)(value, modul)

Modified: trunk/data/levels/lib/libmap.xml
===================================================================
--- trunk/data/levels/lib/libmap.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libmap.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libmap"/>
-      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="3" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -53,10 +53,8 @@
 setmetatable(lib.map, getmetatable(lib))
 
 function lib.map.concat_horizontally(map1, map2)
-  if    (type(map1) ~= "table") or (map1.type ~= "map")
-     or (type(map2) ~= "table") or (map2.type ~= "map") then
-    error("lib.map.concat_horizontally: Can only work on maps.", 2)
-  end
+  assert_type(map1, "lib.map.concat_horizontally first argument", 2, "map")
+  assert_type(map2, "lib.map.concat_horizontally second argument", 2, "map")
   if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
     error("lib.map.concat_horizontally: Default keys differ in length.", 2)
   end
@@ -69,10 +67,8 @@
 end
 
 function lib.map.concat_vertically(map1, map2)
-  if    (type(map1) ~= "table") or (map1.type ~= "map")
-     or (type(map2) ~= "table") or (map2.type ~= "map") then
-    error("lib.map.concat_vertically: Can only work on maps.", 2)
-  end
+  assert_type(map1, "lib.map.concat_vertically first argument", 2, "map")
+  assert_type(map2, "lib.map.concat_vertically second argument", 2, "map")
   if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
     error("lib.map.concat_vertically: Default keys differ in length.", 2)
   end
@@ -98,10 +94,8 @@
   if type(arg2) == "string" then
     map2 = wo:newMap(arg2)
   end
-  if    (type(map1) ~= "table") or (map1.type ~= "map")
-     or (type(map2) ~= "table") or (map2.type ~= "map") then
-    error("lib.map.fuse: Can only work on maps.", 2)
-  end
+  assert_type(map1, "lib.map.fuse first argument", 2, "map")
+  assert_type(map2, "lib.map.fuse second argument", 2, "map")
   local result = {}
   for y = 1, math.max(map1.height, map2.height) do
     result[y] = ""
@@ -113,9 +107,7 @@
 end
 
 function lib.map.defuse(map)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.defuse: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.defuse first argument", 2, "map")
   local kl = rawget(map, "__keylength")
   local dk = rawget(map, "__defaultkey")
   local result = {}
@@ -134,10 +126,9 @@
 end
 
 function lib.map.transform(map, op)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.transform: Can only work on maps.", 2)
-  end
-  if (type(op) ~= "number") or (op < 0) or (op > 7) or (op ~= math.floor(op)) then
+  assert_type(map, "lib.map.transform first argument", 2, "map")
+  assert_type(op, "lib.map.transform second argument", 2, "natural")
+  if op > 7 then
     error("lib.map.transform: Unknown transformation request.", 2)
   end
   local w, h = map.width, map.height
@@ -167,19 +158,21 @@
 end
 
 function lib.map.sub(map, origin, arg2, arg3)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.sub: Can only work on maps.", 2)
-  end
+  -- syntax: map, pos1, pos2
+  --         map, pos1, width, height
+  assert_type(map, "lib.map.sub first argument", 2, "map")
+  assert_type(origin, "lib.map.sub second argument", 2, "position", "object", "string", "table")
+  assert_type(arg2, "lib.map.sub third argument", 2, "position", "object", "string", "table", "number")
   local pos1, pos2 = origin, arg2
-  if (type(pos1) == "table") or (usertype(pos1) == "object") then
+  if etype(pos1) ~= "position" then
     pos1 = po(pos1)
   end
-  if (type(pos2) == "table") or (usertype(pos2) == "object") then
-    pos2 = po(pos2)
-  end
-  if type(arg2) == "number" and type(arg3) == "number" then
+  if type(arg2) == "number" then
     -- arg2 and arg3 are width and height
+    assert_type(arg3, "lib.map.sub fourth argument", 2, "number")
     pos2 = po(pos1.x + arg2 - 1, pos1.y + arg3 - 1)
+  elseif etype(arg2) ~= "position" then
+    pos2 = po(arg2)
   end
   pos1 = pos1:grid()
   pos2 = pos2:grid()
@@ -198,48 +191,51 @@
   return wo:newMap(rawget(map, "__defaultkey"), result)  
 end
 
-function lib.map.paste(map1, map2, posarg)
-  if (type(map1) ~= "table") or (map1.type ~= "map") then
-    error("lib.map.paste: Needs two maps.", 2)
-  end
-  if (type(map2) ~= "table") or (map2.type ~= "map") then
-    error("lib.map.paste: Needs two maps.", 2)
-  end
-  if (usertype(posarg) == "object") or (usertype(posarg) == "position") then
-    local kl = rawget(map2, "__keylength")
-    local dk = rawget(map2, "__defaultkey")
-    for y = 1, map2.height do
-      local line = rawget(map2, y)
-      for x = 1, map2.width do
-        tile = string.sub(line, kl * (x - 1) + 1, x * kl)
-        if tile ~= dk then
-          map1[{posarg.x + x - 1, posarg.y + y - 1}] = tile
-        end
+-- TODO: Speed up.
+function lib.map._paste(map1, map2, pos)
+  local kl = rawget(map2, "__keylength")
+  local dk = rawget(map2, "__defaultkey")
+  for y = 1, map2.height do
+    local line = rawget(map2, y)
+    for x = 1, map2.width do
+      tile = string.sub(line, kl * (x - 1) + 1, x * kl)
+      if tile ~= dk then
+        map1[{pos.x + x - 1, pos.y + y - 1}] = tile
       end
     end
-  elseif usertype(posarg) == "group" then
+  end
+end
+
+function lib.map.paste(map1, map2, posarg)
+  assert_type(map1, "lib.map.paste first argument", 2, "map")
+  assert_type(map2, "lib.map.paste second argument", 2, "map")
+  assert_type(posarg, "lib.map.paste third argument", 2, "position", "object", "string", "group", "polist", "table")  
+  if map1.keylength ~= map2.keylength then
+      error("lib.map.paste: Can't work on maps with different keylengths.", 2)
+  end
+  local postype = etype(posarg)
+  if postype == "position" then
+    lib.map._paste(map1, map2, posarg)
+  elseif postype == "group" then
     for obj in posarg do
-      lib.map.paste(map1, map2, obj)
+      lib.map._paste(map1, map2, po(obj))
     end
-  elseif usertype(posarg) == "polist" then
+  elseif postype == "polist" then
     for j = 1, #posarg do
-      lib.map.paste(map1, map2, posarg[j])
+      lib.map._paste(map1, map2, posarg[j])
     end
-  elseif type(posarg) == "table" then
-    lib.map.paste(map1, map2, po(posarg))
   else
-    error("lib.map.paste: Expected position, got "..type(posarg)..".", 2)
+    lib.map._paste(map1, map2, po(posarg))
   end
 end
 
 function lib.map.replace(map, tile1, tile2arg)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.replace: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.replace first argument", 2, "map")
+  assert_type(tile1, "lib.map.replace second argument", 2, "string")
+  assert_type(tile2arg, "lib.map.replace third argument", 2, "nil", "string")
   local kl = rawget(map, "__keylength")
   local tile2 = tile2arg or rawget(map, "__defaultkey")
-  if    (type(tile1) ~= "string") or (type(tile2) ~= "string")
-     or (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
+  if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
     error("lib.map.replace: Tiles do not have the same length as default key.", 2)
   end
   for y = 1, map.height do
@@ -254,13 +250,12 @@
 end
 
 function lib.map.replace_outside(map, tile1, tile2arg)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.replace_outside: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.replace_outside first argument", 2, "map")
+  assert_type(tile1, "lib.map.replace_outside second argument", 2, "string")
+  assert_type(tile2arg, "lib.map.replace_outside third argument", 2, "nil", "string")
   local kl = rawget(map, "__keylength")
   local tile2 = tile2arg or rawget(map, "__defaultkey")
-  if    (type(tile1) ~= "string") or (type(tile2) ~= "string")
-     or (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
+  if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
     error("lib.map.replace_outside: Tiles do not have the same length as default key.", 2)
   end
   if tile1 == tile2 then
@@ -286,10 +281,9 @@
   end
 end
 
+-- TODO: Maybe use assert_type.
 function lib.map.match(map, conditionsarg, ...)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.match: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.match first argument", 2, "map")
   local kl = rawget(map, "__keylength")
   local conditions 
   if #{...} == 0 then
@@ -364,6 +358,7 @@
   end
 end
 
+-- TODO: Add string as posarg, maybe speed up.
 function lib.map.get(map, posarg)
   if type(posarg) == "number" then
     return rawget(map, posarg)
@@ -408,6 +403,7 @@
   end
 end
 
+-- TODO: Add string as posarg, maybe speed up.
 function lib.map.set(map, posarg, value)
   if type(posarg) == "string" then
     if (posarg == "type") then
@@ -468,11 +464,10 @@
 end
 
 function lib.map.extend(map, posarg)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.extend: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.extend first argument", 2, "map")
+  assert_type(posarg, "lib.map.extend second argument", 2, "position", "object", "string", "table")
   local pos = posarg
-  if type(pos) == "table" then
+  if etype(pos) ~= "position" then
     pos = po(pos)
   end
   local w, h = rawget(map, "__width"), rawget(map, "__height")
@@ -499,14 +494,16 @@
 end
 
 function lib.map.trim(map, trimkeyarg)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.trim: Can only work on maps.", 2)
-  end
+  assert_type(map, "lib.map.trim first argument", 2, "map")
+  assert_type(trimkeyarg, "lib.map.trim second argument", 2, "nil", "string")
   local border_n = map.height - 1
   local border_s = 0
   local border_w = map.width - 1
   local border_e = 0
   local trimkey = trimkeyarg or rawget(map, "__defaultkey")
+  if string.len(trimkey) ~= rawget(map, "__keylength") then
+    error("lib.map.trim: Trim key has wrong key length.", 2)
+  end
   for x = 0, map.width - 1 do
     for y = 0, map.height - 1 do
       if map[{x,y}] ~= trimkey then
@@ -524,9 +521,9 @@
 end  
 
 function lib.map.print(map, withXYCounts, left_separator, right_separator)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.print: Can only print maps, sorry.", 2)
-  end
+  assert_type(map, "lib.map.print first argument", 2, "map")
+  assert_type(left_separator, "lib.map.print second argument", 2, "nil", "string")
+  assert_type(right_separator, "lib.map.print third argument", 2, "nil", "string")  
   local w, h = map.width, map.height
   local kl = rawget(map, "__keylength")
   if withXYCounts then
@@ -550,16 +547,8 @@
 end
 
 function lib.map.set_default_key(map, newkey)
-  if (type(map) ~= "table") or (map.type ~= "map") then
-    error("lib.map.set_default_key: Can only set default key of maps, sorry.", 2)
-  end
-  if type(newkey) ~= "string" then
-    error("lib.map.set_default_key: Default key must be string, is "
-          .. type(newkey)..".", 2)
-  end
-  if newkey == "" then
-    error("lib.map.set_default_key: Default key can't be empty.", 2)
-  end
+  assert_type(map, "lib.map.set_default_key first argument", 2, "map")
+  assert_type(newkey, "lib.map.set_default_key second argument", 2, "non-empty string")
   local new_width = map.width * map.keylength / string.len(newkey)
   if new_width ~= math.ceil(new_width) then
     error("lib.map.set_default_key: Map width doesn't fit to new default key.", 2)
@@ -583,13 +572,7 @@
   function(world, defaultKey, arg1, arg2)
     local newmap = {user_attributes = {}}
     -- Check arguments, create map if necessary.
-    if type(defaultKey) ~= "string" then
-      error("newMap: Default key is not of type string, but "
-            .. type(defaultKey) .. ".", 2)
-    end
-    if defaultKey == "" then
-      error("newMap: Default key can't be empty.", 2)
-    end
+    assert_type(defaultKey, "wo:newMap first argument (default key)", 2, "non-empty string")
     local width = 0
     local height = 0
     local kl = string.len(defaultKey)
@@ -599,37 +582,30 @@
         if type(key) == "number" then
           -- This line is going to be a real map entry.
           height = math.max(height, key)
-          if type(entry) ~= "string" then
-            error("newMap: Line " .. key .. " is not a string, but "
-                  .. type(entry) .. ".", 2)
-          end
+          assert_type(entry, "wo:newMap line " .. key, 2, "string")
           local line_width = string.len(entry) / kl
           if line_width ~= math.floor(line_width) then
-            error("newMap: Line " .. key .. " doesn't fit to key length ("
-                  .. kl .. ").", 2)
+            error("newMap: Line " .. key .. " doesn't fit to key length (" .. kl .. ").", 2)
           end
           width = math.max(width, line_width)
           newmap[key] = entry
         elseif type(key) == "string" then
           newmap.user_attributes[key] = entry
         else
-          error("newMap: Strange type for a table key: " .. type(key) .. ".", 2)
+          error("newMap: Strange type for a map table key: " .. etype(key) .. ".", 2)
         end
       end
       -- Now complete the map, make it rectangular.
       for y = 1, height do
         newmap[y] = newmap[y] or ""
-        newmap[y] = newmap[y]
-            .. string.rep(defaultKey, width - string.len(newmap[y]) / kl)
+        newmap[y] = newmap[y] .. string.rep(defaultKey, width - string.len(newmap[y]) / kl)
       end
     elseif type(arg1) == "number" and type(arg2) == "number" then
       -- Create map from scratch.
-      if (arg1 < 1) or (arg2 < 1) or (arg1 ~= math.floor(arg1))
-          or (arg2 ~= math.floor(arg2)) then
-        error("newMap: Width or Height out of range ("..arg1..", "..arg2..").", 2)
-      end
+      assert_type(arg1, "wo:newMap third argument (width)", 2, "positive integer")
+      assert_type(arg2, "wo:newMap fourth argument (height)", 2, "positive integer")
       local line = string.rep(defaultKey, arg1)
-      for y = 1, arg2 do      
+      for y = 1, arg2 do
         newmap[y] = line
       end
       width = arg1
@@ -637,11 +613,8 @@
     elseif type(arg1) == "nil" and type(arg2) == "nil" then
       -- Create 1x1-map from scratch.
       return wo:newMap(defaultKey, 1, 1)
-    --elseif type(arg2) == "nil" then
-    --  -- Interpret arg1 as position.
-    --  return wo:newMap(defaultKey, pos.x + 1, pos.y + 1)
     else
-      error("newMap: Syntax error. Can't understand arguments.", 2)
+      error("wo:newMap: Syntax error. Can't understand arguments.", 2)
     end
     -- Set additional values.
     newmap.__width = width

Modified: trunk/data/levels/lib/libmath.xml
===================================================================
--- trunk/data/levels/lib/libmath.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libmath.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libmath"/>
-      <el:version el:score="1" el:release="1" el:revision="5" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="6" el:status="released"/>
       <el:author  el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -87,27 +87,20 @@
 -- NUMBER is supposed to be a non-negative integer.
 function lib.math.digits(number, base)
   -- Check arguments and calculate fullbase and exponent
-  if type(number) ~= "number" then
-    error("digits: First argument not a number ("..type(number).." instead).", 2)
-  end
-  if (type(base) ~= "number") and (type(base) ~= "table") then
-    error("digits: Second argument not valid type ("..type(base)..").", 2)
-  end
-  if (number < 0) or (number ~= math.ceil(number)) then
-    error("digits: First argument out of range ("..number..").", 2)
-  end
+  assert_type(number, "lib.math.digits first argument", 2, "natural")
+  assert_type(base, "lib.math.digits second argument", 2, "integer", "table")
   local fullbase = {}
   local exponent = 0
   if type(base) == "number" then
-    if (base < 2) or (base ~= math.ceil(base)) then
-      error("digits: Second argument out of range ("..base..").", 2)
+    if base < 2 then
+      error("lib.math.digits: Second argument out of range, is "..base..", must be at least 2.", 2)
     end
     for j = 1, base do
       table.insert(fullbase, j - 1)
     end
   else -- type(base) == "table"
     if table.getn(base) < 2 then
-      error("digits: Second argument has not enough elements.", 2)
+      error("lib.math.digits: Second argument has not enough elements, must be at least 2.", 2)
     end
     fullbase = base
   end
@@ -120,7 +113,7 @@
     table.insert(result, fullbase[d + 1])
     remains = (remains - d) / exponent
     if remains ~= math.ceil(remains) then
-      error("digits: Internal error during calculation (remains = "..remains..").", 2)
+      error("lib.math.digits: Internal error during calculation (remains = "..remains..").")
     end
   end
   return result
@@ -137,21 +130,14 @@
 function lib.math.combinations(depth, digits)
   local all_combinations = {{}}
   local digs = digits
-  if (type(depth) ~= "number") or (depth < 1) or (depth ~= math.floor(depth)) then
-    error("combinations: First argument (depth) not a number or out of range.", 2)
-  end
+  assert_type(depth, "lib.math.combinations first argument (depth)", 2, "positive integer")
+  assert_type(digits, "lib.math.combinations second argument (digits)", 2, "positive integer", "table")
   if type(digits) == "number" then
-    if (digits < 1) or (digits ~= math.floor(digits)) then
-      error("combinations: Second argument (digits) out of range.", 2)
-    end
     digs = {}
     for j = 1, digits do
       digs[j] = j
     end
   end
-  if type(digs) ~= "table" then
-    error("combinations: Second argument (digits) should be number or table.", 2)
-  end
   for _ = 1, depth do
     local next_step = {}
     for _, old_combination in pairs(all_combinations) do
@@ -176,13 +162,9 @@
 -- to your own liking. Entries in A which are not
 -- numbers are considered zero.
 function lib.math.cubic_polynomial(a, x, y)
-  if type(a) ~= "table" then
-    error("cubic_polynomial: First argument not a table (" .. type(a)
-          .. " instead).", 2)
-  end
-  if (type(x) ~= "number") or (type(y) ~= "number") then
-    error("cubic_polynomial: Second or third argument not a number.", 2)
-  end
+  assert_type(a, "lib.math.cubic_polynomial first argument", 2, "table")
+  assert_type(x, "lib.math.cubic_polynomial second argument", 2, "number")
+  assert_type(y, "lib.math.cubic_polynomial third argument", 2, "number")
   return   (a[10] or 0)*y*y*y + (a[9] or 0)*x*y*y + (a[8] or 0)*x*x*y
          + (a[7] or 0)*x*x*x + (a[6] or 0)*y*y + (a[5] or 0)*x*y
          + (a[4] or 0)*x*x + (a[3] or 0)*y + (a[2] or 0)*x + (a[1] or 0)
@@ -197,20 +179,11 @@
 --     3: If  13 <= x
 -- Negative and non-integer values are allowed.
 function lib.math.steps(discriminator, steps)
-  if type(discriminator) ~= "number" then
-    error("lib.math.steps: First argument is " .. type(discriminator)
-        .. "/" .. usertype(discriminator) .. ", should be number.", 2)
-  end
-  if type(steps) ~= "table" then
-    error("lib.math.steps: Second argument is " .. type(discriminator)
-        .. "/" .. usertype(discriminator) .. ", should be table.", 2)
-  end
+  assert_type(discriminator, "lib.math.steps first argument", 2, "number")
+  assert_type(steps, "lib.math.steps second argument", 2, "table")
   local result = 0
   for _, height in ipairs(steps) do
-    if type(height) ~= "number" then
-      error("lib.math.steps: " .. type(discriminator) .. "/" .. usertype(discriminator)
-          .. " in table of second argument, should be number.", 2)
-    end
+    assert_type(height, "lib.math.steps entry in second argument (height)", 2, "number")
     if discriminator < height then
       return result
     else
@@ -228,12 +201,7 @@
 -- This function outputs a table with integer entries between
 -- 1 and n at positions 1 to n.
 function lib.math.permutation(n)
-  if type(n) ~= "number" then
-    error("permutation: Expected number, got "..type(n).."!", 2)
-  end
-  if (n < 1) or (n ~= math.floor(n)) then
-    error("permutation: Argument must be positive integer.", 2)
-  end
+  assert_type(n, "lib.math.permutation first argument", 2, "positive integer")
   if n == 1 then
     return {1}
   end
@@ -249,10 +217,8 @@
 end
 
 -- Return a random cyclic permutation (i.e. with only one cycle) of n elements.
-function lib.math.cyclic_permutation(n)  
-  if type(n) ~= "number" then
-    error("cyclic_permutation: Expected number, got "..type(n).."!", 2)
-  end
+function lib.math.cyclic_permutation(n)
+  assert_type(n, "lib.math.cyclic_permutation first argument", 2, "positive integer")
   local sequence1 = lib.math.permutation(n)
   local sequence2 = {}
   for j = 1, n - 1 do
@@ -265,12 +231,7 @@
 -- Return a table with NUMBER random entries.
 -- Additional arguments like with math.random.
 function lib.math.random_vector(number, ...)
-  if type(number) ~= "number" then
-    error("random_vector: First argument not a number ("..type(number).." instead).", 2)
-  end
-  if (number < 0) or (number ~= math.ceil(number)) then
-    error("random_vector: First argument out of range ("..number..").", 2)
-  end
+  assert_type(number, "lib.math.random_vector first argument", 2, "natural")
   local result = {}
   for j = 1, number do
     result[j] = math.random(...)

Modified: trunk/data/levels/lib/libmaze_2.xml
===================================================================
--- trunk/data/levels/lib/libmaze_2.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libmaze_2.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,12 +3,13 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libmaze"/>
-      <el:version el:score="1" el:release="2" el:revision="6" el:status="released"/>
+      <el:version el:score="1" el:release="2" el:revision="7" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
       <el:compatibility el:enigma="1.10">
-        <el:dependency el:path="lib/libmap" el:id="lib/libmap" el:release="1" el:preload="true"/>      </el:compatibility>
+        <el:dependency el:path="lib/libmap" el:id="lib/libmap" el:release="1" el:preload="true"/>
+      </el:compatibility>
       <el:modes el:easy="false" el:single="false" el:network="false"/>
       <el:comments>
       </el:comments>
@@ -40,7 +41,7 @@
             elseif dir == SOUTH then adj = c + 2000
             elseif dir == EAST then adj = c + 1
             elseif dir == NORTH then adj = c - 2000
-            else error("Maze - illeagal direction "..dir)
+            else error("Maze - illegal direction "..dir)
             end
             if adj < 100 then
                 return 99
@@ -77,33 +78,21 @@
                       return rawget(context, "cells")[key]
                   elseif type(key) == "table" then
                       local cellmeta = getmetatable(key)
-                      if cellmeta ~= nil and cellmeta.maze == context then
-                          return rawget(context, "indices")[key]
-                      else
-                          error("Maze access with foreign table as index")
-                      end
+                      assert_bool(cellmeta ~= nil and cellmeta.maze == context, "Maze access with foreign table as index.")
+                      return rawget(context, "indices")[key]
                   else
                       return rawget(context, key)
                   end
               end,
           __newindex = function (context, key, value)
                   if type(key) == "number" and key >= 100 then
-                      if type(value) == "table" then
-                          local cellmeta = getmetatable(value)
-                          if cellmeta ~= nil and cellmeta.maze == context then
-                              local cells = rawget(context, "cells")
-                              if cells[key] == nil then
-                                  cells[key] = value
-                                  rawget(context, "indices")[value] = key
-                              else
-                                  error("Maze cell index already occupied")
-                              end
-                          else
-                              error("Maze expected unassigned cell set but got something else")
-                          end
-                      else
-                          error("Maze illegal value set at index "..key)
-                      end
+                      assert_type(value, "maze value (illegal set)", 2, "table")
+                      local cellmeta = getmetatable(value)
+                      assert_bool(cellmeta ~= nil and cellmeta.maze == context, "Maze expected unassigned cell set but got something else")
+                      local cells = rawget(context, "cells")
+                      assert_bool(cells[key] == nil, "Maze cell index already occupied.")
+                      cells[key] = value
+                      rawget(context, "indices")[value] = key
                   else
                       return rawset(context, key, value)
                   end
@@ -162,24 +151,17 @@
         }
         
     -- argument evaluation
-    if #args~= 1 or type(args[1]) ~= "table" then
-        error("Libmaze wrong number of arguments - expected subresolver and a table of configuration data", 2)
-    end
+    assert_bool(#args == 1, "Libmaze wrong number of arguments - expected subresolver and a table of configuration data.", 2)
+    assert_type(args[1], "libmaze configuration data", 2, "table")
     context.area = args[1].area
-    if type(context.area) ~= "table" then
-        error("Libmaze missing area configuration table", 2)
-    end
+    assert_type(context.area, "libmaze area configuration table", 2, "table")
     if type(context.area[2]) == "number" then
-        if type(context.area[3]) ~= "number" then
-            error("Libmaze area configuration requires two numbers for size", 2)
-        end
+        assert_type(context.area[3], "libmaze area configuration table second entry", 2, "number")
         context.rectangular = true
         -- if type (context.area[1]) ~= "string"
     else
         for k, v in pairs(context.area) do
-            if type(v) ~= "string" then
-                error("Libmaze area configuration expected string values", 2)
-            end
+            assert_type(v, "libmaze area configuration table entry", 2, "string")
         end
         context.area_keymatches = {}
         context.area_keyprefixes = {}
@@ -187,9 +169,8 @@
         context.area_positioncodes = {}
     end
     
-    if args[1].render ~= nil and type(args[1].render) ~= "table" then
-        error("Libmaze false renderer configuration", 2)
-    elseif args[1].render ~= nil then
+    assert_type(args[1].render, "libmaze renderer configuration", 2, "nil", "table")
+    if args[1].render then
         context.renderer_args = args[1].render
         if type(args[1].render[1]) == "function" then
             context.renderer = args[1].render[1]
@@ -197,27 +178,15 @@
         end
     end
     
-    if args[1].kernel ~= nil and type(args[1].kernel) ~= "table" then
-        error("Libmaze false kernel configuration", 2)
-    elseif args[1].kernel ~= nil then
-        context.kernel = args[1].kernel
-    end
-    if args[1].spacing ~= nil and type(args[1].spacing) ~= "table" then
-        error("Libmaze false spacing configuration", 2)
-    elseif args[1].spacing ~= nil then
-        context.spacing = args[1].spacing
-    end
-    if args[1].offset_x ~= nil and type(args[1].offset_x) ~= "table" then
-        error("Libmaze false offset_x configuration", 2)
-    elseif args[1].offset_x ~= nil then
-        context.offset_x = args[1].offset_x
-    end
-    if args[1].offset_y ~= nil and type(args[1].offset_y) ~= "table" then
-        error("Libmaze false offset_y configuration", 2)
-    elseif args[1].offset_y ~= nil then
-        context.offset_y = args[1].offset_y
-    end
-    
+    assert_type(args[1].kernel, "libmaze kernel configuration", 2, "nil", "table")
+    assert_type(args[1].spacing, "libmaze spacing configuration", 2, "nil", "table")
+    assert_type(args[1].offset_x, "libmaze offset_x configuration", 2, "nil", "table")
+    assert_type(args[1].offset_y, "libmaze offset_y configuration", 2, "nil", "table")
+    context.kernel = args[1].kernel or context.kernel
+    context.spacing = args[1].spacing or context.spacing
+    context.offset_x = args[1].offset_x or context.offset_x
+    context.offset_y = args[1].offset_y or context.offset_y
+
     if args[1].generator == false then
         context.generator = nil
     elseif type(args[1].generator) == "function" then
@@ -380,12 +349,9 @@
                 cell[dir] = false     -- unmark the link
             elseif cell[dir] == false then
                 local neighbor = cell:neighbor(dir)
-                if neighbor then
-                    table.insert(walls, {cell, dir})
-                    neighbor[opposite] = true
-                else
-                    error("kruskal - bad cell link value")
-                end
+                assert_bool(neighbor, "lib.maze.generator_kruskal: Bad cell link value.")
+                table.insert(walls, {cell, dir})
+                neighbor[opposite] = true
             end
         end
     end
@@ -496,9 +462,7 @@
 end
 
 function lib.maze.renderer_window(maze, args)
-    if maze.spacing[1] ~= 0 or maze.spacing[2] ~= 0 then
-        error("Maze window renderer requires spacing of {0, 0}",2)
-    end
+    assert_bool(maze.spacing[1] == 0 and maze.spacing[2] == 0, "Maze window renderer requires spacing of {0, 0}", 2)
     local map = nil
     local map_kernel = nil
     if type(args[1]) ~= "string" then
@@ -534,12 +498,8 @@
 
 function lib.maze.renderer_strip(maze, args)
     -- TODO extend to arbitrary spacing > {0,0}
-    if maze.kernel[1] ~= 0 or maze.kernel[2] ~= 0 then
-        error("Maze strip renderer requires kernel of {0, 0}",2)
-    end
-    if maze.spacing[1] ~= 1 or maze.spacing[2] ~= 1 then
-        error("Maze strip renderer requires spacing of {1, 1}",2)
-    end
+    assert_bool(maze.kernel[1] == 0 and maze.kernel[2] == 0, "Maze strip renderer requires kernel of {0, 0}", 2)
+    assert_bool(maze.spacing[1] == 1 and maze.spacing[2] == 1, "Maze strip renderer requires spacing of {1, 1}", 2)
     local map = nil
     local map_spacing = nil
     if type(args[1]) ~= "string" then

Modified: trunk/data/levels/lib/libpento_1.xml
===================================================================
--- trunk/data/levels/lib/libpento_1.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libpento_1.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libpento"/>
-      <el:version el:score="1" el:release="1" el:revision="1" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="2" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2009 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -24,9 +24,7 @@
     context.src_area = no[context.source.."#*"]
     context.src_anchor = po(0,0)
     do
-        if #context.src_area ~= 25 then
-            error("Pentomino source area not a 5x5 square", 2)
-        end
+        assert_bool(#context.src_area == 25, "Pentomino source area not a 5x5 square.", 2)
         local x = 100000
         local y = 100000
         for s in context.src_area do
@@ -35,15 +33,12 @@
         end
         context.src_anchor = po(x, y)
         for s in context.src_area do
-            if s.x > x+5 or s.y > y + 5 then
-                error("Pentomino source area not a 5x5 square", 2)
-            end
+            assert_bool((s.x <= x + 5) and (s.y <= y + 5), "Pentomino source area not a 5x5 square.", 2)
         end
     end
     context.target_area = no["target#*"]
-    if #context.target_area ~= 60 then
-        error("Pentomino target area not 60 grids", 2)
-    end
+    assert_bool(#context.target_area == 60, "Pentomino target area not 60 grids.", 2)
+
     context.last_shape = 12
     
     context.next = function ()
@@ -109,11 +104,8 @@
     -- syntax: ... = <sourcebasename>, <targetbasename>
     -- context: 
     local args = {...}
-    if type(args[1]) ~= "string" then
-        error("Resolver pento requires source basename as first argument")
-    elseif type(args[1]) ~= "string" then
-        error("Resolver pento requires target basename as second argument")
-    end
+    assert_type(args[1], "res.pento first argument (source basename)", 2, "string")
+    assert_type(args[2], "res.pento second argument (target basename)", 2, "string")
     local autotile = res.autotile(subresolver, {"O","Z", "pentopuzzle"})
     local context = {res.pento_implementation, res.pento_finalization, autotile}
     context.source = args[1]

Modified: trunk/data/levels/lib/libpuzzle_3.xml
===================================================================
--- trunk/data/levels/lib/libpuzzle_3.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libpuzzle_3.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libpuzzle"/>
-      <el:version el:score="2" el:release="3" el:revision="5" el:status="released"/>
+      <el:version el:score="2" el:release="3" el:revision="6" el:status="released"/>
       <el:author  el:name="Ronald Lamprecht" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2008 Ronald Lamprecht</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -166,13 +166,9 @@
             if ti[key] == nil then
                 local template = ti[prefix]
                 local suffix = key:sub(#(prefix) + 1)
-                if template == nil then
-                    error("Resolver puzzle missing template rule '" ..prefix.."'",2 )
-                elseif #suffix ~= 1 then
-                    error("Resolver puzzle key '"..key.."' does not match template rule '" ..prefix.."'",2 )
-                else
-                    res.puzzle_newtile(key, template, suffix)
-                end
+                assert_bool(template, "Resolver puzzle missing template rule '" ..prefix.."'.", 2)
+                assert_bool(#suffix == 1, "Resolver puzzle key '"..key.."' does not match template rule '" ..prefix.."'", 2)
+                res.puzzle_newtile(key, template, suffix)
             end
             table.insert(context[5], po(x,y))
             return ti[key]
@@ -187,14 +183,11 @@
     local args = {...}
     local length = 0
     for i, prefix in ipairs(args) do
-        if type(prefix) ~= "string" then
-            error("Resolver puzzle prefix " .. i.." is not a string", 2)
-        else
-           if length == 0 then
-               length = #prefix
-           elseif length ~= #prefix then
-               error("Resolver puzzle prefix " .. i.." mismatch of length", 2)
-           end
+        assert_type(prefix, "res.puzzle puzzle prefix", 2, "string")
+        if length == 0 then
+            length = #prefix
+        elseif length ~= #prefix then
+            error("Resolver puzzle prefix " .. i.." mismatch of length", 2)
         end
     end
     local context = {res.puzzle_implementation, res.puzzle_finalization, subresolver, args, {}}

Modified: trunk/data/levels/lib/libsoko.xml
===================================================================
--- trunk/data/levels/lib/libsoko.xml	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/data/levels/lib/libsoko.xml	2009-03-29 22:18:42 UTC (rev 1602)
@@ -3,7 +3,7 @@
   <el:protected>
     <el:info el:type="library">
       <el:identity el:title="" el:id="lib/libsoko"/>
-      <el:version el:score="1" el:release="1" el:revision="7" el:status="released"/>
+      <el:version el:score="1" el:release="1" el:revision="8" el:status="released"/>
       <el:author el:name="Enigma Team" el:email="" el:homepage=""/>
       <el:copyright>Copyright ? 2007, 2008, 2009 Enigma Team</el:copyright>
       <el:license el:type="GPL v2.0 or above" el:open="true"/>
@@ -61,8 +61,7 @@
     elseif (type(index) == "string") and (index == "type") then
         return "lib.soko.area"
     else
-        error("lib.soko: Internal error: Read access to area_get with wrong "
-            .. "type (" .. type(index) .. "/" .. usertype(index) .. ").", 2)
+        error("lib.soko: Internal error: Read access to area_get with wrong type " .. etype(index) .. ".", 2)
     end
 end
 
@@ -72,7 +71,8 @@
 
 lib.soko.area_metatable = {
   __index = lib.soko.area_get,
-  __newindex = lib.soko.area_set
+  __newindex = lib.soko.area_set,
+  _type = "lib.soko.area"
 }
 
 setmetatable(lib.soko.area, lib.soko.area_metatable)
@@ -208,17 +208,17 @@
 end
 
 function lib.soko.design_from_description(map, design_description, maxdesignnumber)
+    assert_type(design_description, "lib.soko.design_from_description second argument", 2, "nil", "positive integer", "table")
     -- choose design
     local design = {}
     if type(design_description) == "number" then
         design = lib.lua.deep_copy(lib.soko_designlist.list[design_description])
     elseif type(design_description) == "table" then
         design = lib.lua.deep_copy(design_description)
-    elseif (type(design_description) == "nil") and (type(map) == "table") then
+    else
+        assert_type(map, "lib.soko.design_from_description first argument", 2, "map")
         design = lib.lua.deep_copy(lib.soko_designlist.list[lib.soko.number_from_level(
                      map, maxdesignnumber or #lib.soko_designlist.list)])
-    else
-        error("lib.soko: Can't make sense of design type "..type(design)..".", 2)
     end
     return design
 end
@@ -257,7 +257,7 @@
             elseif type(field.res) == "table" then
                 lib.soko.resolver_info[key] = field.res
             else
-                error("lib.soko.define_tiles: Can't understand type " .. type(field.res)
+                error("lib.soko.define_tiles: Can't understand type " .. etype(field.res)
                     .. " in resolver info for key '" .. key .. "'.", 2)
             end
             lib.soko.resolver_info[key]._count = #field
@@ -280,7 +280,7 @@
                 lib.soko.resolver_info[key]._sum = frequency_sum
             end
         else
-            error("lib.soko.define_tiles: Can't understand type " .. type(field)
+            error("lib.soko.define_tiles: Can't understand type " .. type(efield)
                 .. " in design description for key '" .. key .. "'.", 2)
         end
     end 
@@ -332,12 +332,9 @@
         resolve_to = lib.soko.area[po(x,y)].orientation
     -- Unknown method, throw error.
     elseif type(method) == "number" then
-        error("lib.soko.resolver: Unknown resolver method number "
-            .. method .. ".", 2)
+        error("lib.soko.resolver: Unknown resolver method number " .. method .. ".", 2)
     else
-        error("lib.soko.resolver: Unknown resolver method of "
-            .. " type '" .. type(method) .. "', usertype '"
-            .. usertype(method) .. "').", 2)
+        error("lib.soko.resolver: Unknown resolver method of type " .. etype(method) .. ".", 2)
     end
     if resolve_to then
         return lib.soko.resolver(key .. ":" .. resolve_to, x ,y)
@@ -446,24 +443,13 @@
 
 function lib.soko.prepare_endphase(map, design)
     -- ensure existence of goals
-    if #lib.soko.polist.goal < 1 then
-        error("libsoko: No goals defined.", 2)
-    end
+    assert_bool(#lib.soko.polist.goal > 0, "libsoko: No goals defined.", 2)
+
     -- ensure a correctly set endphase-attribute
-    if not design.endp then
-        design.endp = lib.lua.deep_copy(lib.soko_designlist.default.endp)
-    end
-    if type(design.endp) ~= "table" then
-        error("lib.soko.prepare_endphase: This design's endphase is given as "
-            .. type(design.endp) .. ", but should be table.")
-    end
-    if design.endp.alg == nil then
-        design.endp.alg = lib.lua.deep_copy(lib.soko_designlist.default.endp.alg)
-    end
-    if type(design.endp.alg) ~= "string" then
-        error("lib.soko.prepare_endphase: This design's endphase algorithm "
-            .. "is given as " .. type(design.endp.alg) ..", but should be string.")
-    end
+    assert_type(design.endp, "libsoko design endphase", 2, "nil", "table")
+    design.endp = design.endp or lib.lua.deep_copy(lib.soko_designlist.default.endp)
+    assert_type(design.endp.alg, "libsoko design endphase algorithm", 2, "nil", "string")
+    design.endp.alg = design.endp.alg or lib.lua.deep_copy(lib.soko_designlist.default.endp.alg)
 
     -- save map and design for later
     lib.soko.map = map
@@ -587,9 +573,7 @@
 ------------------------------------------------------------------------
 
 function lib.soko.endphase_circle()
-    if (not no["marble#*"]) or (#no["marble#*"] == 0) then
-       error("lib.soko.endphase_circle: Internal error: Marble not found.", 2)
-    end
+    assert_bool(no["marble#*"] and (#no["marble#*"] > 0), "lib.soko.endphase_circle: No marble found.", 2)
     local pos = po(no["marble#*"][1])
     if pos.x > 10 then  pos = pos + {-2,0}  end
     if pos.y >  6 then  pos = pos + {0,-2}  end
@@ -841,7 +825,7 @@
         if floor._component then
             component[floor._component].has_oxyds = true
         else
-            error("lib.soko.endphase_vortes: Error in component calculation.", 2)
+            error("lib.soko.endphase_vortes: Error in component calculation.")
         end
     end  
     -- Let there be at most max(5, number-of-oxyd-components)

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-29 18:53:08 UTC (rev 1601)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-29 22:18:42 UTC (rev 1602)
@@ -13799,13 +13799,159 @@
 @uref{http://www.lua.org/manual/5.0/, Lua 5.0} and 
 @uref{http://www.lua.org/manual/5.1/, Lua 5.1} for more detailled information.
 
-In addition to the usual Lua functions, Enigma provides the @ref{cond} function,
-which can be used to abbreviate simple if-then-else-constructions.
+In addition to the usual Lua functions, Enigma provides the @ref{cond}-function,
+which can be used to abbreviate simple if-then-else-constructions, and two
+ at samp{assert}-kind functions.
 
 @menu
+* assert_bool::     Throws an error if a condition doesn't hold.
+* assert_type::     Throws an error if a variable is not of a given type.
 * cond::            A ternary operator, wrapper for if-then-else.
+* etype::           An advanced function to return normal and user data types.
 @end menu
 
+ at c ----------------- assert_bool --------------------
+
+ at node assert_bool
+ at subsection assert_bool
+
+ at samp{assert_bool} throws an error if a given condition doesn't hold.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{assert_bool}(@i{condition}, @i{message}, @i{level})
+
+ at table @asis
+ at item @i{condition}
+A boolean expression or anything else. If it is @code{false} or @code{nil}, an
+error will be thrown.
+
+ at item @i{message}
+A string, holding the error message. If @code{message} is nil or empty, an
+"anonymous assertion" will be thrown, but it's always better to provide a
+meaningful error message.
+
+ at item @i{level}
+ at code{level} specifies the error position in the same way as does Lua's
+ at samp{error}-function. Default is 1.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+assert_bool(no["mystone"], "Stone 'mystone' has disappeared.")
+ at end example
+
+ at item @b{Details:}
+Similar to @ref{cond}, all side effects within the evaluation of @samp{message}
+and @samp{level} will appear.
+
+See Lua's manual for more detailed information about the @samp{error}-function.
+
+ at item @b{Full Example:}
+ at example
+ at end example
+ at end table
+
+ at c ----------------- assert_type --------------------
+
+ at node assert_type
+ at subsection assert_type
+
+ at samp{assert_type} throws an error if the first argument is not of one of the
+specified types.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{assert_bool}(@i{var}, @i{vardescription}, @i{level}, @i{type1}, @i{type2}, ...)
+
+ at table @asis
+ at item @i{var}
+Any kind of variable.
+
+ at item @i{vardescription}
+If @samp{var} is not of one of the types @samp{type1}, @samp{type2} ...,
+then an error message will be thrown which includes the actual type of
+ at samp{var} and the desired types. @samp{vardescription} is a string which
+holds additional information for the error message. It should be a lower-case
+not-too-short description of @samp{var} (a name, as it is), additional
+details should be added in brackets.
+
+ at item @i{level}
+ at code{level} specifies the error position in the same way as does Lua's
+ at samp{error}-function. Can't be omitted, use @samp{1} if in doubt.
+
+ at item @i{type1}, @i{type2}, ...
+A sequence of strings. If @samp{var} is none of these types, the error will
+be thrown. See details below for type descriptors.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+assert_type(arg1, "mygreatfunction first argument (level width)", 1, "nil", "positive integer", "position")
+ at end example
+
+ at item @b{Details:}
+Possible types are all Lua types (like @samp{nil}, @samp{number}, @samp{boolean},
+ at samp{string}, @samp{table}, @samp{function}) except @samp{userdata}, all
+Enigma-own user types (@samp{object}, @samp{position}, @samp{tile},
+ at samp{tiles}, @samp{group}, @samp{world}, @samp{polist}, @samp{unknown}), and
+types defined inside metatables (@samp{map} from @ref{libmap}), see
+ at ref{etype}. In addition, the following type descriptors are recognized:
+ at table @asis
+ at item @samp{integer}
+Any integer number (..., -2, -1, 0, 1, 2, ...)
+ at item @samp{positive}
+Any number which is positive and not zero.
+ at item @samp{non-negative}
+Any number which is not negative, i.e. which is positive or zero.
+ at item @samp{natural}
+Any non-negative integer number (0, 1, 2, ...).
+ at item @samp{positive integer}
+Any positive integer number (1, 2, 3, ...).
+ at item @samp{non-empty string}
+Any string other than the empty string @samp{""}.
+ at item @samp{any table}
+If @samp{var} is a table, the @samp{_type}-attribute of its metatable will
+be used as its @ref{etype}. In particular, it won't be accepted as a
+ at samp{table} anymore, if this @samp{_type}-attribute exists. For example,
+ at example
+assert_type(mytable, "large table", 1, "table")
+ at end example
+will throw an assertion when @samp{mytable} is a @samp{map}, although,
+technically, a @samp{map} always is a @samp{table}. You can use @samp{any
+table} as type to allow for any table, regardless of its metatable.
+ at end table
+
+Similar to @ref{cond}, all side effects within the evaluation of
+ at samp{vardescription}, @samp{level} and any type descriptor will apply.
+
+See Lua's manual for more detailed information about the @samp{error}-function.
+
+ at item @b{Full Example:}
+ at example
+function paint_lawn(pos)
+    assert_type(pos, "paint_lawn first argument", 2, "position", "object", "polist", "group", "table")
+    if etype(pos) == "object" then
+        assert_bool(-pos, "paint_lawn: Object not existing.", 2)
+    end
+    wo[pos] = ti["lawn"]
+end
+paint_lawn(no["mystone"])
+paint_lawn("myotherstone")
+ at end example
+If @samp{mystone} doesn't exist, @code{no["mystone"]} will still be of etype
+ at samp{object}, an invalid object. Hence @code{assert_type} will not trigger,
+but @code{assert_bool} will.
+
+If @samp{mystone} exists, the second @samp{paint_lawn} will throw an error via
+ at samp{assert_type}, as @code{pos} now is a @code{string}. The error message
+will be:
+ at example
+Wrong type for paint_lawn first argument, is string, must be one of position,
+object, polist, group, table.
+ at end example
+ at end table
+
 @c ----------------- cond --------------------
 
 @node cond
@@ -13859,7 +14005,55 @@
 @end example
 @end table
 
+ at c ----------------- etype --------------------
 
+ at node etype
+ at subsection etype
+
+ at samp{etype} returns an advanced type of its argument.
+
+ at table @asis
+ at item @b{Syntax:}
+ at b{etype}(@i{var})
+
+ at table @asis
+ at item @i{var}
+Any kind of variable.
+ at end table
+
+ at item @b{Syntax Samples:}
+ at example
+local argtype = etype(firstargument)
+ at end example
+
+ at item @b{Details:}
+Lua types are @samp{nil}, @samp{number}, @samp{boolean}, @samp{string},
+ at samp{table}, @samp{function}, @samp{userdata}, and @samp{thread}. You can use
+Lua's @samp{type}-function to query the type of any variable. However, Enigma
+defines more types through various means, and these types can be queried via
+ at samp{etype}. @samp{etype} will return its argument's Lua type as usual, with
+the following two exceptions:
+ at table @asis
+ at item @i{userdata}
+Instead of @samp{userdata}, Enigma's special types will be returned. These
+special types are @samp{object}, @samp{position}, @samp{tile},
+ at samp{tiles}, @samp{group}, @samp{world}, and @samp{polist}. If an unknown
+userdata is encountered, @samp{unknown} will be returned.
+
+ at item @i{table}
+If @code{var} is a table, it's metatable will be queried. If there is an entry
+ at samp{_type}, this entry will be used as @code{etype}. Most important examples
+of this kind are @ref{libmap}-maps, so @samp{etype} will return @samp{map}. You
+may access the @samp{etype}-system through @samp{_type} whenever you use
+metatables on your own.
+ at end table
+
+ at item @b{Full Example:}
+ at example
+ at end example
+ at end table
+
+
 @node liblua
 @section liblua
 



From andreasl at mail.berlios.de  Tue Mar 31 01:59:18 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Tue, 31 Mar 2009 01:59:18 +0200
Subject: [Enigma-game-svn] r1603 - in homepage/input: . news
Message-ID: <200903302359.n2UNxIUc014804@sheep.berlios.de>

Author: andreasl
Date: 2009-03-31 01:59:14 +0200 (Tue, 31 Mar 2009)
New Revision: 1603

Modified:
   homepage/input/download.html
   homepage/input/download_de.html
   homepage/input/download_ru.html
   homepage/input/news/news_issue25_de.html
   homepage/input/news/news_issue25_en.html
   homepage/input/news/news_issue25_ru.html
   homepage/input/news/news_issue26_de.html
   homepage/input/news/news_issue26_en.html
   homepage/input/news/news_issue26_ru.html
Log:
Homepage:
 - Add missing "</p>" in news issues 25 and 26.
 - Remove "libcurl3-dev" from compilation-dependencies, as it seems
   not to be neccessary? Similarly, libcurl3-openssl-dev can be
   replaced with libcurl4-openssl-dev.
Todo:
 - Put Russian "or" in download_ru.html to replace slash (not urgent).


Modified: homepage/input/download.html
===================================================================
--- homepage/input/download.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/download.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -143,8 +143,8 @@
   <ul>
     <li>libxerces27-dev</li>
     <li>curl</li>
-    <li>libcurl3-dev</li>
-    <li>libcurl3-openssl-dev</li>
+<!--    <li>libcurl3-dev</li> -->
+    <li>libcurl3-openssl-dev or libcurl4-openssl-dev</li>
     <li>libsdl1.2-dev</li>
     <li>libsdl-image1.2-dev</li>
     <li>libsdl-mixer1.2-dev</li>

Modified: homepage/input/download_de.html
===================================================================
--- homepage/input/download_de.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/download_de.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -155,8 +155,8 @@
 
   <ul>
     <li>curl</li>
-    <li>libcurl3-dev</li>
-    <li>libcurl3-openssl-dev</li>
+<!--    <li>libcurl3-dev</li>  -->
+    <li>libcurl3-openssl-dev oder libcurl4-openssl-dev</li>
     <li>libsdl1.2-dev</li>
     <li>libsdl-image1.2-dev</li>
     <li>libsdl-mixer1.2-dev</li>

Modified: homepage/input/download_ru.html
===================================================================
--- homepage/input/download_ru.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/download_ru.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -140,8 +140,8 @@
 
   <ul>
     <li>curl</li>
-    <li>libcurl3-dev</li>
-    <li>libcurl3-openssl-dev</li>
+<!--    <li>libcurl3-dev</li>  -->
+    <li>libcurl3-openssl-dev / libcurl4-openssl-dev</li>
     <li>libsdl1.2-dev</li>
     <li>libsdl-image1.2-dev</li>
     <li>libsdl-mixer1.2-dev</li>

Modified: homepage/input/news/news_issue25_de.html
===================================================================
--- homepage/input/news/news_issue25_de.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue25_de.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -15,3 +15,4 @@
 gewinnen! :-)</p>
 
 <p>Nachtrag: Die Ergebnisse finden Sie jetzt <a href="$$eoya_2007$$">hier</a>.
+</p>

Modified: homepage/input/news/news_issue25_en.html
===================================================================
--- homepage/input/news/news_issue25_en.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue25_en.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -14,3 +14,4 @@
 German (sorry, no Russian version). May the best levels win! :-)</p>
 
 <p>Addendum: You can now find the results <a href="$$eoya_2007$$">here</a>.
+</p>

Modified: homepage/input/news/news_issue25_ru.html
===================================================================
--- homepage/input/news/news_issue25_ru.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue25_ru.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -14,3 +14,4 @@
 ???????? (????????, ??????? ?????? ???). ????? ??????? ??????! :-)</p>
 
 <p>??????????: ? ???????????? ?? ?????? ???????????? <a href="$$eoya_2007$$">?????</a>.
+</p>

Modified: homepage/input/news/news_issue26_de.html
===================================================================
--- homepage/input/news/news_issue26_de.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue26_de.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -1,5 +1,5 @@
 <h3 class="news">
-    <span class="date">Dec 1 2008: </span> Jahresendauszeichnungen 2008 - Die Wahl
+    <span class="date">Dez 1 2008: </span> Jahresendauszeichnungen 2008 - Die Wahl
 </h3>
 
 <p>Wir folgen unserer ber&uuml;hmten Tradition, die wir letztes Jahr begonnen haben,
@@ -19,3 +19,4 @@
 russische. M&ouml;gen die besten Levels gewinnen! :-)</p>
 
 <p>Nachtrag: Die Ergebnisse finden Sie jetzt <a href="$$eoya_2008$$">hier</a>.
+</p>

Modified: homepage/input/news/news_issue26_en.html
===================================================================
--- homepage/input/news/news_issue26_en.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue26_en.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -19,3 +19,4 @@
 Russian version. May the best levels win! :-)</p>
 
 <p>Addendum: You can now find the results <a href="$$eoya_2008$$">here</a>.
+</p>
\ No newline at end of file

Modified: homepage/input/news/news_issue26_ru.html
===================================================================
--- homepage/input/news/news_issue26_ru.html	2009-03-29 22:18:42 UTC (rev 1602)
+++ homepage/input/news/news_issue26_ru.html	2009-03-30 23:59:14 UTC (rev 1603)
@@ -19,3 +19,4 @@
 ??????. ????? ??????? ??????! :-)</p>
 
 <p>??????????: ? ???????????? ?? ?????? ???????????? <a href="$$eoya_2008$$">?????</a>.
+</p>



From andreasl at mail.berlios.de  Tue Mar 31 17:39:54 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Tue, 31 Mar 2009 17:39:54 +0200
Subject: [Enigma-game-svn] r1604 - in trunk: data data/levels/lib
	doc/reference
Message-ID: <200903311539.n2VFdsHX009364@sheep.berlios.de>

Author: andreasl
Date: 2009-03-31 17:39:49 +0200 (Tue, 31 Mar 2009)
New Revision: 1604

Modified:
   trunk/data/api2init.lua
   trunk/data/levels/lib/libmap.xml
   trunk/data/levels/lib/libmaze_2.xml
   trunk/data/levels/lib/libpento_1.xml
   trunk/data/levels/lib/libsoko.xml
   trunk/doc/reference/enigma-ref.texi
Log:
Trunk:
 - Replaced large numbers in libraries by library-own constants (starting with "MAX_").
 - Use numerical instead of string keys for positions in lib.soko.area.
 - assert_type: New type descriptor "valid object" (with refman entry), and
   use "valid object" instead of "object" in some appropriate functions.
 - Extending use of assertions to api2init functions (i.e. arguments are now checked).
 - Adding some forgotten assertions from r1602.
 - Reintegrate lib.map._paste into lib.map.paste (missed in r1602).
 - Typos and quotation marks in refman.


Modified: trunk/data/api2init.lua
===================================================================
--- trunk/data/api2init.lua	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/data/api2init.lua	2009-03-31 15:39:49 UTC (rev 1604)
@@ -213,28 +213,32 @@
 ---------------------
 
 wo:_register("drawMap", 
-    function (world, resolver, anchor, ignorearg, maparg, readarg)
-        -- TODO check validity of arguments
+    function (world, resolver, anchor, arg3, arg4, arg5)
         -- world, resolver, (position|object|table), string, (table|map), [int]
         -- world, resolver, (position|object|table), map, [int]
-        -- Analyse arguments 3 to 6
+        assert_type(world, "wo:drawMap self (world)", 2, "world")
+        assert_type(resolver, "wo:drawMap first argument (resolver)", 2, "tiles", "function", "table")
+        assert_type(anchor, "wo:drawMap second argument (anchor)", 2, "position", "valid object", "table")
+        assert_type(arg3, "wo:drawMap third argument (ignorekey or map)", 2, "string", "map")
         local origin = po(anchor)   -- either convert or make a working position copy
-        local ignore = ignorearg
-        local map = maparg
-        local readdir = readarg or MAP_IDENT
-        if (type(ignore) == "table") and (type(ignore.defaultkey) == "string") then
-            map = ignorearg
+        -- Analyse arguments 4 to 6
+        local ignore, map, readdir
+        if (etype(arg3) == "map") then
+            assert_type(arg4, "wo:drawMap fourth argument (read direction)", 2, "nil", "integer")
+            map = arg3
             ignore = map.defaultkey
-            readdir = maparg or MAP_IDENT
-        elseif (type(map) == "table") and (type(map.defaultkey) == "string")
-               and (string.len(map.defaultkey) ~= string.len(ignore)) then
-            error("drawmap: Ignore key and default key differ in length.", 2)
+            readdir = arg4 or MAP_IDENT
+        else
+            assert_type(arg4, "wo:drawMap fourth argument (map)", 2, "table", "map")
+            assert_type(arg5, "wo:drawMap fifth argument (read direction)", 2, "nil", "integer")
+            ignore = arg3
+            map = arg4
+            readdir = arg5 or MAP_IDENT
+            assert_bool((etype(map) ~= "map") or (string.len(map.defaultkey) == string.len(ignore)),
+                "wo:drawMap: Ignore key and default key differ in length.", 2)
         end
         local len = string.len(ignore)
-        if    (type(readdir) ~= "number") or (readdir % 1 ~= 0)
-           or (readdir < MAP_IDENT) or (readdir > MAP_COUNT) then
-            error("drawmap: Unknown read direction.", 2)
-        end
+        assert_bool((readdir >= MAP_IDENT) and (readdir <= MAP_COUNT), "wo:drawMap: Unknown read direction.", 2)
         -- Prepare read direction rotation
         local w, h = 0, 0
         local function rot(x, y)
@@ -251,34 +255,32 @@
                      [MAP_MIRROR_BACKSLASH]  = {h + 1 - y, w + 1 - x} })[readdir]
         end
         if readdir ~= MAP_IDENT then
-          -- Calculate height and width for rotation if neccessary
-          h = #map
-          for y = 1, h do
-            w = math.max(w, string.len(map[y])/len)
-          end
+            -- Calculate height and width for rotation if neccessary
+            h = #map
+            for y = 1, h do
+                w = math.max(w, string.len(map[y])/len)
+            end
         end
         -- Draw map
         for y=1, #map do
             local linelen = string.len(map[y])
-            if math.fmod(linelen, len) ~= 0 then
-                error("drawmap map line ".. y .. " with odd length", 2)
-            end
+            assert_bool(math.fmod(linelen, len) == 0, "wo:drawMap: Map line ".. y .. " with odd length.", 2)
             for x = 1, linelen/len do
                 local key = string.sub(map[y], len*(x-1)+1, len*x)
                 if key ~= ignore then
                     local p = {origin.x - 1, origin.y - 1}
                     if readdir == MAP_IDENT then
-                      p = {p[1] + x, p[2] + y}
+                        p = {p[1] + x, p[2] + y}
                     else
-                      p = {p[1] + (rot(x,y))[1], p[2] + (rot(x,y))[2]}
+                        p = {p[1] + (rot(x,y))[1], p[2] + (rot(x,y))[2]}
                     end
                     tile = world:_evaluate(resolver, key, p[1], p[2])
                     if tile then
                         world[p] = tile
                     else
-                        error("drawmap: undefined tile '" .. key .. "' at "
+                        error("wo:drawMap: undefined tile '" .. key .. "' at "
                               .. p[1] .. ", " .. p[2] .. "(in submap at "
-                              .. x .. ", ".. y .. ")")
+                              .. x .. ", ".. y .. ").")
                     end
                 end
             end
@@ -288,7 +290,7 @@
         while type(context) == "table" do
             local finalizer = context[2]
             if type(finalizer) == "function" then
-               finalizer(context) 
+                 finalizer(context) 
             end
             context = context[3]
         end
@@ -296,14 +298,24 @@
 )
 
 wo:_register("drawBorder", 
-    function (world, origin, arg2, arg3, arg4)
-        local dest = arg2
-        local tile = arg3
-        if type(arg2) == "number" and type(arg3) == "number" then
+    function (world, arg1, arg2, arg3, arg4)
+        -- world, (position|object|table), width, height, (tile|table)
+        -- world, (position|object|table), (position|object|table), (tile|table)
+        assert_type(world, "wo:drawBorder self (world)", 2, "world")
+        assert_type(arg1, "wo:drawBorder first argument (upperleft edge)", 2, "position", "valid object", "table")
+        assert_type(arg2, "wo:drawBorder second argument (width or lowerright edge)", 2, "position", "valid object", "table", "positive integer")
+        local origin = po(arg1)
+        local dest, tile
+        if etype(arg2) == "number" then
+            assert_type(arg3, "wo:drawBorder third argument (height)", 2, "positive integer")
+            assert_type(arg4, "wo:drawBorder fourth argument (tile)", 2, "tile", "table")
             dest = po(origin.x + arg2 - 1, origin.y + arg3 - 1)
-            tile = arg4
+            tile = arg4            
+        else
+            assert_type(arg3, "wo:drawBorder third argument (tile)", 2, "tile", "table")
+            dest = po(arg2)
+            tile = arg3
         end
-        -- TODO check validity of arguments
         for x = origin.x, dest.x do
             wo[{x, origin.y}] = tile
             if origin.y ~= dest.y then
@@ -320,14 +332,24 @@
 )
 
 wo:_register("drawRect", 
-    function (world, origin, arg2, arg3, arg4)
-        local dest = arg2
-        local tile = arg3
-        if type(arg2) == "number" and type(arg3) == "number" then
+    function (world, arg1, arg2, arg3, arg4)
+        -- world, (position|object|table), width, height, (tile|table)
+        -- world, (position|object|table), (position|object|table), (tile|table)
+        assert_type(world, "wo:drawRect self (world)", 2, "world")
+        assert_type(arg1, "wo:drawRect first argument (upperleft edge)", 2, "position", "valid object", "table")
+        assert_type(arg2, "wo:drawRect second argument (width or lowerright edge)", 2, "position", "valid object", "table", "positive integer")
+        local origin = po(arg1)
+        local dest, tile
+        if etype(arg2) == "number" then
+            assert_type(arg3, "wo:drawRect third argument (height)", 2, "positive integer")
+            assert_type(arg4, "wo:drawRect fourth argument (tile)", 2, "tile", "table")
             dest = po(origin.x + arg2 - 1, origin.y + arg3 - 1)
-            tile = arg4
+            tile = arg4            
+        else
+            assert_type(arg3, "wo:drawRect third argument (tile)", 2, "tile", "table")
+            dest = po(arg2)
+            tile = arg3
         end
-        -- TODO check validity of arguments
         for x = origin.x, dest.x do
             for y = origin.y, dest.y do
                 wo[{x, y}] = tile
@@ -416,47 +438,38 @@
 function res.random(subresolver, hits, replacements)
     -- syntax: hits = key | {key, [key]*, [{key, superkey}]*}
     --         replacements = {key, [key]*, [{key, frequency}]*}
+    assert_type(subresolver, "res.random first argument (subresolver)", 2, "tiles", "function", "table")
+    assert_type(hits, "res.random second argument (hits)", 2, "non-empty string", "table")
+    assert_type(hits, "res.random third argument (replacements)", 2, "string", "table")
     local hit_table = {}
     if type(hits) == "string" then
         hit_table[1] = {hits, nil}
-    elseif type(hits) == "table" then
+    else  -- table
         for i, v in ipairs(hits) do
+            assert_type(v, "res.random seond argument (hits), entry " .. i, 2, "non-empty string", "table")
             if type(v) == "string" then
                 hit_table[i] = {v, nil}
             elseif type(v) == "table" then
-                if     (type(v[1]) ~= "string") or (type(v[2]) ~= "string") then
-                    error("res.random: Unsupported type or syntax error in second argument.", 2)
-                end
+                assert_type(v[1], "res.random second argument (hits), key in entry " .. i, 2, "non-empty string")
+                assert_type(v[2], "res.random second argument (hits), superkey in entry " .. i, 2, "nil", "string")
                 hit_table[i] = v
-            else
-                error("res.random: Unsupported type or syntax error in second argument.", 2)
             end
         end
-    else
-        error("res.random: Unsupported type or syntax error in second argument.", 2)
-    end
-    
+    end    
     local repl_table = {}
     if type(replacements) == "string" then
         repl_table[1] = {replacements, 1}
-    elseif type(replacements) == "table" then
+    else  -- table
         for i, v in ipairs(replacements) do
+            assert_type(v, "res.random third argument (replacements), entry " .. i, 2, "string", "table")
             if type(v) == "string" then
                 repl_table[i] = {v, 1}
-            elseif type(v) == "table" then
-                if (type(v[1]) ~= "string") and (type(v[2]) ~= "number") then
-                    error("res.random: Unsupported type or syntax error in third argument.", 2)
-                end
-                if v[2] < 0 then
-                    error("res.random: Frequency must be a positive number or zero.", 2)
-                end
+            else  -- table of key and frequency
+                assert_type(v[1], "res.random third argument (replacements), key in entry " .. i, 2, "string")
+                assert_type(v[2], "res.random third argument (replacements), frequency in entry " .. i, 2, "non-negative")
                 repl_table[i] = v
-            else
-                error("res.random: Unsupported type or syntax error in third argument.", 2)
             end
         end
-    else
-        error("res.random: Unsupported type or syntax error in third argument.", 2)
     end
     local repl_sum = 0
     for i, v in ipairs(repl_table) do
@@ -545,45 +558,33 @@
 end
 
 function res.autotile(subresolver, ...)
-    -- syntax: ... = <{prefixkey, template} | {fistkey, lastkey, template[, offset]}>
+    -- syntax: ... = <{prefixkey, template} | {firstkey, lastkey, template[, offset]}>
     -- context: [4] = table with unmodified rule tables
+    assert_type(subresolver, "res.autotile first argument (subresolver)", 2, "tiles", "function", "table")
     local args = {...}
     for i, rule in ipairs(args) do
-        if type(rule) ~= "table" then
-            error("Resolver autotile rule " .. i.." is not a table", 2)
-        else
-            if #rule < 2 or #rule > 4 then
-                error("Resolver autotile rule "..i.." wrong number of arguments", 2)
-            end
-            local template_pos = 2
-            local string_pos = {1,2}
-            if #rule >= 3  then
-                template_pos = 3
-                string_pos = {1,2,3}
-            end
-            
-            for j, num in ipairs(string_pos) do
-                if type(rule[string_pos[num]]) ~= "string" then
-                    error("Resolver autotile rule "..i.." has no string at position "..num, 2)
-                end
-            end
-            if #rule == 4 then
-                if type(rule[4]) ~= "number" then
-                    error("Resolver autotile rule "..i.." has no number at position 4", 2)
-                end
-            end
-            if #rule >= 3 then
-                local first = string.byte(rule[1], #rule[1])
-                local last  = string.byte(rule[2], #rule[2])
-                if #rule[2] ~= #rule[1] or string.sub(rule[2], 1, -2) ~= string.sub(rule[1], 1, -2)
-                        or first > last then
-                    error("Resolver autotile rule "..i.." bad range start-end strings", 2)
-                end
-            end
-            if ti[rule[template_pos]] == nil then
-                error("Resolver autotile missing template tile '"..rule[template_pos].."'", 2)
-            end
+        assert_type(rule, "res.autotile argument " .. (i+1) .. " (rule " .. i .. ")", 2, "table")
+        assert_bool((#rule == 2) or (#rule == 3), "res.autotile rule "..i.." has wrong number of arguments (must be 2, 3, or 4).", 2)
+        local template_pos = 2
+        local string_pos = {1,2}
+        if #rule >= 3  then
+            template_pos = 3
+            string_pos = {1,2,3}
         end
+        
+        for j, num in ipairs(string_pos) do
+            assert_type(rule[string_pos[num]], "res.autotile rule " .. i .. ", position " .. num, 2, "string")
+        end
+        if #rule == 4 then
+            assert_type(rule[4], "res.autotile rule " .. i .. ", position 4 (offset)", 2, "integer")
+        end
+        if #rule >= 3 then
+            local first = string.byte(rule[1], #rule[1])
+            local last  = string.byte(rule[2], #rule[2])
+            assert_bool(#rule[1] == #rule[2] and string.sub(rule[2], 1, -2) == string.sub(rule[1], 1, -2) and first <= last, 
+                "res.autotile: Rule " .. i .. " has bad range start-end strings.", 2)
+        end
+        assert_bool(ti[rule[template_pos]], "res.autotile: Missing template tile '" .. rule[template_pos] .. "'", 2)
     end
     local context = {res.autotile_implementation, nil, subresolver, args}
     return context
@@ -625,14 +626,12 @@
 end
 
 function res.composer(subresolver, ...)
+    assert_type(subresolver, "res.composer first argument (subresolver)", 2, "tiles", "function", "table")
     local args = {...}
     local sequence = nil
-    if #args >  1 then
-        error("Resolver composer did not expect more than one argument" ,2)
-    elseif #args == 1 then
-        if type(args[1]) ~= "string" then
-            error("Resolver composer did expect string as first argument" ,2)
-        end
+    assert_bool(#args <= 1, "res.composer: Too many arguments (must be 1 or 2)." ,2)
+    if #args == 1 then
+        assert_type(args[1], "res.composer second argument (sequence)", 2, "non-empty string")
         sequence = args[1]
     end
     local context = {res.composer_implementation, nil, subresolver, sequence}
@@ -672,6 +671,7 @@
             or ((condition == "positive integer") and (type(object) == "number") and (math.ceil(object) == object) and (object > 0))
             or ((condition == "non-empty string") and (type(object) == "string") and (object ~= ""))
             or ((condition == "any table") and (type(object) == "table"))
+            or ((condition == "valid object") and (etype(object) == "object") and (-object))
     end
     if not fulfilled then
         for k = 1, #conditions do

Modified: trunk/data/levels/lib/libmap.xml
===================================================================
--- trunk/data/levels/lib/libmap.xml	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/data/levels/lib/libmap.xml	2009-03-31 15:39:49 UTC (rev 1604)
@@ -161,8 +161,8 @@
   -- syntax: map, pos1, pos2
   --         map, pos1, width, height
   assert_type(map, "lib.map.sub first argument", 2, "map")
-  assert_type(origin, "lib.map.sub second argument", 2, "position", "object", "string", "table")
-  assert_type(arg2, "lib.map.sub third argument", 2, "position", "object", "string", "table", "number")
+  assert_type(origin, "lib.map.sub second argument", 2, "position", "valid object", "string", "table")
+  assert_type(arg2, "lib.map.sub third argument", 2, "position", "valid object", "string", "table", "number")
   local pos1, pos2 = origin, arg2
   if etype(pos1) ~= "position" then
     pos1 = po(pos1)
@@ -192,40 +192,34 @@
 end
 
 -- TODO: Speed up.
-function lib.map._paste(map1, map2, pos)
-  local kl = rawget(map2, "__keylength")
-  local dk = rawget(map2, "__defaultkey")
-  for y = 1, map2.height do
-    local line = rawget(map2, y)
-    for x = 1, map2.width do
-      tile = string.sub(line, kl * (x - 1) + 1, x * kl)
-      if tile ~= dk then
-        map1[{pos.x + x - 1, pos.y + y - 1}] = tile
-      end
-    end
-  end
-end
-
 function lib.map.paste(map1, map2, posarg)
   assert_type(map1, "lib.map.paste first argument", 2, "map")
   assert_type(map2, "lib.map.paste second argument", 2, "map")
-  assert_type(posarg, "lib.map.paste third argument", 2, "position", "object", "string", "group", "polist", "table")  
-  if map1.keylength ~= map2.keylength then
-      error("lib.map.paste: Can't work on maps with different keylengths.", 2)
-  end
+  assert_type(posarg, "lib.map.paste third argument", 2, "position", "valid object", "string", "group", "polist", "table")  
+  assert_bool(map1.keylength == map2.keylength, "lib.map.paste: Can't work on maps with different keylengths.", 2)
   local postype = etype(posarg)
   if postype == "position" then
-    lib.map._paste(map1, map2, posarg)
+    local kl = rawget(map2, "__keylength")
+    local dk = rawget(map2, "__defaultkey")
+    for y = 1, map2.height do
+      local line = rawget(map2, y)
+      for x = 1, map2.width do
+        tile = string.sub(line, kl * (x - 1) + 1, x * kl)
+        if tile ~= dk then
+          map1[{posarg.x + x - 1, posarg.y + y - 1}] = tile
+        end
+      end
+    end
   elseif postype == "group" then
     for obj in posarg do
-      lib.map._paste(map1, map2, po(obj))
+      lib.map.paste(map1, map2, po(obj))
     end
   elseif postype == "polist" then
     for j = 1, #posarg do
-      lib.map._paste(map1, map2, posarg[j])
+      lib.map.paste(map1, map2, posarg[j])
     end
   else
-    lib.map._paste(map1, map2, po(posarg))
+    lib.map.paste(map1, map2, po(posarg))
   end
 end
 
@@ -465,7 +459,7 @@
 
 function lib.map.extend(map, posarg)
   assert_type(map, "lib.map.extend first argument", 2, "map")
-  assert_type(posarg, "lib.map.extend second argument", 2, "position", "object", "string", "table")
+  assert_type(posarg, "lib.map.extend second argument", 2, "position", "valid object", "string", "table")
   local pos = posarg
   if etype(pos) ~= "position" then
     pos = po(pos)

Modified: trunk/data/levels/lib/libmaze_2.xml
===================================================================
--- trunk/data/levels/lib/libmaze_2.xml	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/data/levels/lib/libmaze_2.xml	2009-03-31 15:39:49 UTC (rev 1604)
@@ -18,6 +18,9 @@
     <el:luamain><![CDATA[
 
 lib.maze = {}
+lib.maze.MAX_WIDTH_IN_ENCODE = 2000  -- If you have to change this, change it before any other call to lib.maze.
+lib.maze.MAX_WIDTH = 100000          -- If you have to change this, change it before any other call to lib.maze.
+lib.maze.MAX_HEIGHT = 100000         -- If you have to change this, change it before any other call to lib.maze.
 
 function res.maze(subresolver, ...)
     -- syntax: ... = <sourcebasename>, <targetbasename>
@@ -27,20 +30,20 @@
     
     -- default settings
     context.encode = function (maze, i, j)
-            return 2000*j + i + 100
+            return lib.maze.MAX_WIDTH_IN_ENCODE*j + i + 100
         end
     context.decode = function (maze, c)
-            local i = (c - 100) % 2000
-            return i, (c - 100 - i) / 2000
+            local i = (c - 100) % lib.maze.MAX_WIDTH_IN_ENCODE
+            return i, (c - 100 - i) / lib.maze.MAX_WIDTH_IN_ENCODE
         end
     context.dirs = {[WEST] = EAST, [SOUTH] = NORTH, [EAST] = WEST, [NORTH] = SOUTH}
     context.adjacent = function (maze, c, dir)
             if c == 99 then return c end   -- invalid code
             local adj
             if dir == WEST then adj = c - 1
-            elseif dir == SOUTH then adj = c + 2000
+            elseif dir == SOUTH then adj = c + lib.maze.MAX_WIDTH_IN_ENCODE
             elseif dir == EAST then adj = c + 1
-            elseif dir == NORTH then adj = c - 2000
+            elseif dir == NORTH then adj = c - lib.maze.MAX_WIDTH_IN_ENCODE
             else error("Maze - illegal direction "..dir)
             end
             if adj < 100 then
@@ -151,17 +154,18 @@
         }
         
     -- argument evaluation
-    assert_bool(#args == 1, "Libmaze wrong number of arguments - expected subresolver and a table of configuration data.", 2)
-    assert_type(args[1], "libmaze configuration data", 2, "table")
+    assert_type(subresolver, "res.maze first argument (subresolver)", 2, "tiles", "function", "table")
+    assert_bool(#args == 1, "res.maze: wrong number of arguments - expected subresolver and a table of configuration data.", 2)
+    assert_type(args[1], "res.maze second argument (libmaze configuration data)", 2, "table")
     context.area = args[1].area
-    assert_type(context.area, "libmaze area configuration table", 2, "table")
+    assert_type(context.area, "res.maze area configuration table", 2, "table")
     if type(context.area[2]) == "number" then
-        assert_type(context.area[3], "libmaze area configuration table second entry", 2, "number")
+        assert_type(context.area[3], "res.maze area configuration table second entry", 2, "number")
         context.rectangular = true
         -- if type (context.area[1]) ~= "string"
     else
         for k, v in pairs(context.area) do
-            assert_type(v, "libmaze area configuration table entry", 2, "string")
+            assert_type(v, "res.maze area configuration table entry", 2, "string")
         end
         context.area_keymatches = {}
         context.area_keyprefixes = {}
@@ -169,7 +173,7 @@
         context.area_positioncodes = {}
     end
     
-    assert_type(args[1].render, "libmaze renderer configuration", 2, "nil", "table")
+    assert_type(args[1].render, "res.maze renderer configuration", 2, "nil", "table")
     if args[1].render then
         context.renderer_args = args[1].render
         if type(args[1].render[1]) == "function" then
@@ -178,10 +182,10 @@
         end
     end
     
-    assert_type(args[1].kernel, "libmaze kernel configuration", 2, "nil", "table")
-    assert_type(args[1].spacing, "libmaze spacing configuration", 2, "nil", "table")
-    assert_type(args[1].offset_x, "libmaze offset_x configuration", 2, "nil", "table")
-    assert_type(args[1].offset_y, "libmaze offset_y configuration", 2, "nil", "table")
+    assert_type(args[1].kernel, "res.maze kernel configuration", 2, "nil", "table")
+    assert_type(args[1].spacing, "res.maze spacing configuration", 2, "nil", "table")
+    assert_type(args[1].offset_x, "res.maze offset_x configuration", 2, "nil", "table")
+    assert_type(args[1].offset_y, "res.maze offset_y configuration", 2, "nil", "table")
     context.kernel = args[1].kernel or context.kernel
     context.spacing = args[1].spacing or context.spacing
     context.offset_x = args[1].offset_x or context.offset_x
@@ -253,8 +257,8 @@
             end
         end
         
-        local minx = 100000
-        local miny = 100000
+        local minx = lib.maze.MAX_WIDTH
+        local miny = lib.maze.MAX_HEIGHT
         -- offsets not yet supported!
         for k,v in pairs(maze.area_positioncodes) do
             local x,y = maze:decode(v)

Modified: trunk/data/levels/lib/libpento_1.xml
===================================================================
--- trunk/data/levels/lib/libpento_1.xml	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/data/levels/lib/libpento_1.xml	2009-03-31 15:39:49 UTC (rev 1604)
@@ -16,8 +16,11 @@
       <el:score el:easy="-" el:difficult="-"/>
     </el:info>
     <el:luamain><![CDATA[
-    
-    
+
+lib.pento = {}
+lib.pento.MAX_WIDTH  = 100000  -- If you have to change this, change it before any call to res.pento.
+lib.pento.MAX_HEIGHT = 100000  -- If you have to change this, change it before any call to res.pento.
+
 ti["pentopuzzle"] = {"st_puzzle", "shape%%#", cluster="%%", intensity=0}
 
 function res.pento_finalization(context)
@@ -25,8 +28,8 @@
     context.src_anchor = po(0,0)
     do
         assert_bool(#context.src_area == 25, "Pentomino source area not a 5x5 square.", 2)
-        local x = 100000
-        local y = 100000
+        local x = lib.pento.MAX_WIDTH
+        local y = lib.pento.MAX_HEIGHT
         for s in context.src_area do
             if s.x < x then x = s.x end
             if s.y < y then y = s.y end
@@ -104,8 +107,9 @@
     -- syntax: ... = <sourcebasename>, <targetbasename>
     -- context: 
     local args = {...}
-    assert_type(args[1], "res.pento first argument (source basename)", 2, "string")
-    assert_type(args[2], "res.pento second argument (target basename)", 2, "string")
+    assert_type(subresolver, "res.pento first argument (subresolver)", 2, "tiles", "function", "table")
+    assert_type(args[1], "res.pento second argument (source basename)", 2, "string")
+    assert_type(args[2], "res.pento third argument (target basename)", 2, "string")
     local autotile = res.autotile(subresolver, {"O","Z", "pentopuzzle"})
     local context = {res.pento_implementation, res.pento_finalization, autotile}
     context.source = args[1]

Modified: trunk/data/levels/lib/libsoko.xml
===================================================================
--- trunk/data/levels/lib/libsoko.xml	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/data/levels/lib/libsoko.xml	2009-03-31 15:39:49 UTC (rev 1604)
@@ -38,6 +38,7 @@
 -- RESOLVE_ORIENTED = 5
 GOAL_HOOK_DEFAULT = 0
 GOAL_HOOK_RALF = 1
+lib.soko.MAX_HEIGHT = 10000  -- If you have to change this, change it before any other call to lib.soko.
 
 lib.soko.resolver_info = {}
 lib.soko.area = {}
@@ -53,7 +54,7 @@
 -- positions of the current level (see it as "attributes for positions").
 function lib.soko.area_get(self, index)
     if usertype(index) == "position" then
-        local signature = index.x .. "/" .. index.y
+        local signature = index.x * lib.soko.MAX_HEIGHT + index.y
         if not rawget(self, signature) then
             rawset(self, signature, {})
         end
@@ -66,7 +67,7 @@
 end
 
 function lib.soko.area_set(self, newindex, value)
-    error("lib.soko: Internal error: area_set used inappropriately.", 2)
+    error("lib.soko: Internal error: lib.soko.area used inappropriately.", 1)
 end
 
 lib.soko.area_metatable = {

Modified: trunk/doc/reference/enigma-ref.texi
===================================================================
--- trunk/doc/reference/enigma-ref.texi	2009-03-30 23:59:14 UTC (rev 1603)
+++ trunk/doc/reference/enigma-ref.texi	2009-03-31 15:39:49 UTC (rev 1604)
@@ -13862,7 +13862,7 @@
 
 @table @asis
 @item @b{Syntax:}
- at b{assert_bool}(@i{var}, @i{vardescription}, @i{level}, @i{type1}, @i{type2}, ...)
+ at b{assert_type}(@i{var}, @i{vardescription}, @i{level}, @i{type1}, @i{type2}, ...)
 
 @table @asis
 @item @i{var}
@@ -13891,35 +13891,38 @@
 @end example
 
 @item @b{Details:}
-Possible types are all Lua types (like @samp{nil}, @samp{number}, @samp{boolean},
- at samp{string}, @samp{table}, @samp{function}) except @samp{userdata}, all
-Enigma-own user types (@samp{object}, @samp{position}, @samp{tile},
- at samp{tiles}, @samp{group}, @samp{world}, @samp{polist}, @samp{unknown}), and
-types defined inside metatables (@samp{map} from @ref{libmap}), see
+Possible types are all Lua types (like @code{"nil"}, @code{"number"},
+ at code{"boolean"}, @code{"string"}, @code{"table"}, @code{"function"}) except
+ at code{"userdata"}, all Enigma-own user types (@code{"object"},
+ at code{"position"}, @code{"tile"}, @code{"tiles"}, @code{"group"},
+ at code{"world"}, @code{"polist"}, @code{"unknown"}), and
+types defined inside metatables (@code{"map"} from @ref{libmap}), see
 @ref{etype}. In addition, the following type descriptors are recognized:
 @table @asis
- at item @samp{integer}
+ at item @code{"integer"}
 Any integer number (..., -2, -1, 0, 1, 2, ...)
- at item @samp{positive}
+ at item @code{"positive"}
 Any number which is positive and not zero.
- at item @samp{non-negative}
+ at item @code{"non-negative"}
 Any number which is not negative, i.e. which is positive or zero.
- at item @samp{natural}
+ at item @code{"natural"}
 Any non-negative integer number (0, 1, 2, ...).
- at item @samp{positive integer}
+ at item @code{"positive integer"}
 Any positive integer number (1, 2, 3, ...).
- at item @samp{non-empty string}
-Any string other than the empty string @samp{""}.
- at item @samp{any table}
+ at item @code{"non-empty string"}
+Any string other than the empty string @code{""}.
+ at item @code{"any table"}
 If @samp{var} is a table, the @samp{_type}-attribute of its metatable will
 be used as its @ref{etype}. In particular, it won't be accepted as a
- at samp{table} anymore, if this @samp{_type}-attribute exists. For example,
+ at code{"table"} anymore, if this @samp{_type}-attribute exists. For example,
 @example
 assert_type(mytable, "large table", 1, "table")
 @end example
-will throw an assertion when @samp{mytable} is a @samp{map}, although,
-technically, a @samp{map} always is a @samp{table}. You can use @samp{any
-table} as type to allow for any table, regardless of its metatable.
+will throw an assertion when @samp{mytable} is a @code{"map"}, although,
+technically, a @code{"map"} always is a @code{"table"}. You can use
+ at code{"any table"} as type to allow for any table, regardless of its metatable.
+ at item @code{"valid object"}
+Any valid object.
 @end table
 
 Similar to @ref{cond}, all side effects within the evaluation of
@@ -13940,11 +13943,11 @@
 paint_lawn("myotherstone")
 @end example
 If @samp{mystone} doesn't exist, @code{no["mystone"]} will still be of etype
- at samp{object}, an invalid object. Hence @code{assert_type} will not trigger,
+ at code{"object"}, an invalid object. Hence @code{assert_type} will not trigger,
 but @code{assert_bool} will.
 
 If @samp{mystone} exists, the second @samp{paint_lawn} will throw an error via
- at samp{assert_type}, as @code{pos} now is a @code{string}. The error message
+ at samp{assert_type}, as @code{pos} now is a @code{"string"}. The error message
 will be:
 @example
 Wrong type for paint_lawn first argument, is string, must be one of position,
@@ -14027,24 +14030,24 @@
 @end example
 
 @item @b{Details:}
-Lua types are @samp{nil}, @samp{number}, @samp{boolean}, @samp{string},
- at samp{table}, @samp{function}, @samp{userdata}, and @samp{thread}. You can use
-Lua's @samp{type}-function to query the type of any variable. However, Enigma
-defines more types through various means, and these types can be queried via
- at samp{etype}. @samp{etype} will return its argument's Lua type as usual, with
-the following two exceptions:
+Lua types are @code{"nil"}, @code{"number"}, @code{"boolean"}, @code{"string"},
+ at code{"table"}, @code{"function"}, @code{"userdata"}, and @code{"thread"}. You
+can use Lua's @samp{type}-function to query the type of any variable. However,
+Enigma defines more types through various means, and these types can be queried
+via @samp{etype}. @samp{etype} will return its argument's Lua type as usual,
+with the following two exceptions:
 @table @asis
- at item @i{userdata}
-Instead of @samp{userdata}, Enigma's special types will be returned. These
-special types are @samp{object}, @samp{position}, @samp{tile},
- at samp{tiles}, @samp{group}, @samp{world}, and @samp{polist}. If an unknown
-userdata is encountered, @samp{unknown} will be returned.
+ at item @i{"userdata"}
+Instead of @code{"userdata"}, Enigma's special types will be returned. These
+special types are @code{"object"}, @code{"position"}, @code{"tile"},
+ at code{"tiles"}, @code{"group"}, @code{"world"}, and @code{"polist"}. If an unknown
+userdata is encountered, @code{"unknown"} will be returned.
 
- at item @i{table}
+ at item @i{"table"}
 If @code{var} is a table, it's metatable will be queried. If there is an entry
 @samp{_type}, this entry will be used as @code{etype}. Most important examples
-of this kind are @ref{libmap}-maps, so @samp{etype} will return @samp{map}. You
-may access the @samp{etype}-system through @samp{_type} whenever you use
+of this kind are @ref{libmap}-maps, so @samp{etype} will return @code{"map"}.
+You may access the @code{etype}-system through @samp{_type} whenever you use
 metatables on your own.
 @end table
 



From andreasl at mail.berlios.de  Tue Mar 31 23:37:27 2009
From: andreasl at mail.berlios.de (andreasl at mail.berlios.de)
Date: Tue, 31 Mar 2009 23:37:27 +0200
Subject: [Enigma-game-svn] r1605 - trunk/data/levels/lib
Message-ID: <200903312137.n2VLbRfs026510@sheep.berlios.de>

Author: andreasl
Date: 2009-03-31 23:37:25 +0200 (Tue, 31 Mar 2009)
New Revision: 1605

Modified:
   trunk/data/levels/lib/liblua.xml
   trunk/data/levels/lib/libmap.xml
   trunk/data/levels/lib/libmath.xml
   trunk/data/levels/lib/libsoko.xml
Log:
Trunk:
 - Re-indented libmath, libmap, liblua to 4 spaces instead of 2 spaces.
 - Activated freeze checks in libsoko.


Modified: trunk/data/levels/lib/liblua.xml
===================================================================
--- trunk/data/levels/lib/liblua.xml	2009-03-31 15:39:49 UTC (rev 1604)
+++ trunk/data/levels/lib/liblua.xml	2009-03-31 21:37:25 UTC (rev 1605)
@@ -43,19 +43,19 @@
 -- not copied as memory references, but complete ("deep copy").
 -- Metatables are transfered, but not deep-copied.
 function lib.lua.deep_copy(source)
-  if type(source) ~= "table" then
-    return source
-  end
-  local dest = {}
-  for k, v in pairs(source) do
-    if type(v) == "table" then
-      rawset(dest, k, lib.lua.deep_copy(v))
-    else
-      rawset(dest, k, v)
+    if type(source) ~= "table" then
+        return source
     end
-  end
-  setmetatable(dest, getmetatable(source))
-  return dest
+    local dest = {}
+    for k, v in pairs(source) do
+        if type(v) == "table" then
+            rawset(dest, k, lib.lua.deep_copy(v))
+        else
+            rawset(dest, k, v)
+        end
+    end
+    setmetatable(dest, getmetatable(source))
+    return dest
 end 
 
 -- combine_tables returns a table consisting of all entries of the
@@ -64,23 +64,23 @@
 -- table with all entries of T1, T2, T3 etc., with the first table
 -- having highest priority etc.
 function lib.lua.combine_tables(arg1, ...)
-  local args = {arg1, ...}
-  if table.getn(args) == 1 then
-    args = arg1
-  end
-  if type(args) ~= "table" then
-    error("combine_tables: None or only one argument, and it's not a table!", 2)
-  end
-  local result = {}
-  for j,t in pairs(args) do
-    if type(t) ~= "table" then
-      error("combine_tables: Main table does not consist of tables alone!", 2)
+    local args = {arg1, ...}
+    if table.getn(args) == 1 then
+        args = arg1
     end
-    for k,v in pairs(t) do
-      result[k] = result[k] or lib.lua.deep_copy(v)
+    if type(args) ~= "table" then
+        error("combine_tables: None or only one argument, and it's not a table!", 2)
     end
-  end
-  return result
+    local result = {}
+    for j,t in pairs(args) do
+        if type(t) ~= "table" then
+            error("combine_tables: Main table does not consist of tables alone!", 2)
+        end
+        for k,v in pairs(t) do
+            result[k] = result[k] or lib.lua.deep_copy(v)
+        end
+    end
+    return result
 end
 
 -- shuffle resorts the table T randomly and returns a shallow copy of the
@@ -90,22 +90,22 @@
 -- that of the argument. Metamethods will be used during the copy
 -- (i.e. no rawget or rawset).
 function lib.lua.shuffle(t)
-  if type(t) ~= "table" then
-    error("lib.lua.shuffle: Argument is not a table.", 2)
-  end
-  local result = {}
-  setmetatable(result, getmetatable(t))
-  for key, value in pairs(t) do
-    result[key] = value
-  end
-  if table.getn(result) < 2 then
+    if type(t) ~= "table" then
+        error("lib.lua.shuffle: Argument is not a table.", 2)
+    end
+    local result = {}
+    setmetatable(result, getmetatable(t))
+    for key, value in pairs(t) do
+        result[key] = value
+    end
+    if table.getn(result) < 2 then
+        return result
+    end
+    for n = table.getn(result), 2, -1 do
+        local m = math.random(n)
+        result[n], result[m] = result[m], result[n]
+    end
     return result
-  end
-  for n = table.getn(result), 2, -1 do
-    local m = math.random(n)
-    result[n], result[m] = result[m], result[n]
-  end
-  return result
 end
 
 -- print_table uses the print command to print all
@@ -120,107 +120,107 @@
 -- Don't use it in levels. If you want to suppress
 -- the recursive function, use DEPTH = -1.
 function lib.lua.print_table(t, prefix, depth)
-  if type(t) ~= "table" then
-    print("print_table: Argument is of type "..type(t)..", not table.")
-    return
-  end
-  for key, value in pairs(t) do
-    local key_s
-    if type(key) == "string" then
-      key_s = "\"" .. key .. "\""
-    elseif type(key) == "number" then
-      key_s = key
-    elseif usertype(key) == "position" then
-      key_s = "<" .. key.x .. "/" .. key.y .. ">"
-    elseif type(key) == "userdata" then
-      key_s = "<" .. usertype(key) .. ">"
-    else
-      key_s = "<" .. type(key) .. ">"
+    if type(t) ~= "table" then
+        print("print_table: Argument is of type "..type(t)..", not table.")
+        return
     end
-    if type(value) == "number" then
-      print((prefix or "") .. "|" .. key_s .. " = " .. value)
-    elseif type(value) == "string" then
-      print((prefix or "") .. "|" .. key_s .. " = \"" .. value .. "\"")
-    elseif type(value) == "boolean" then
-      print((prefix or "") .. "|" .. key_s .. " = " .. cond(value, "true", "false"))
-    elseif type(value) == "table" then
-      if (depth or 0) < 5 then
-        print((prefix or "") .. "|" .. key_s .. " = |")
-        lib.lua.print_table(value,
-            (prefix or "") .. "|" .. string.rep(" ", string.len(key_s) + 3),
-            (depth or 0) + 1)
-        print((prefix or "") .. "|")
-      else
-        print((prefix or "") .. "|" .. key_s .. " = | ...")
-      end
-    elseif usertype(value) == "position" then
-      print((prefix or "") .. "|" .. key_s .. " = position " .. value.x
-            .. "/" .. value.y)
-    elseif usertype(value) == "polist" then
-      print((prefix or "") .. "|" .. key_s .. " = polist of " .. #value
-            .. " position(s)")
-    elseif usertype(value) == "object" then
-      print((prefix or "") .. "|" .. key_s .. " = object of name '"
-            .. (value.name or "") .. "'")
-    else
-      print((prefix or "") .. "|" .. key_s .. " of type " .. type(value)
-            .. " (usertype '" .. usertype(value) .. "')")
+    for key, value in pairs(t) do
+        local key_s
+        if type(key) == "string" then
+            key_s = "\"" .. key .. "\""
+        elseif type(key) == "number" then
+            key_s = key
+        elseif usertype(key) == "position" then
+            key_s = "<" .. key.x .. "/" .. key.y .. ">"
+        elseif type(key) == "userdata" then
+            key_s = "<" .. usertype(key) .. ">"
+        else
+            key_s = "<" .. type(key) .. ">"
+        end
+        if type(value) == "number" then
+            print((prefix or "") .. "|" .. key_s .. " = " .. value)
+        elseif type(value) == "string" then
+            print((prefix or "") .. "|" .. key_s .. " = \"" .. value .. "\"")
+        elseif type(value) == "boolean" then
+            print((prefix or "") .. "|" .. key_s .. " = " .. cond(value, "true", "false"))
+        elseif type(value) == "table" then
+            if (depth or 0) < 5 then
+                print((prefix or "") .. "|" .. key_s .. " = |")
+                lib.lua.print_table(value,
+                    (prefix or "") .. "|" .. string.rep(" ", string.len(key_s) + 3),
+                    (depth or 0) + 1)
+                print((prefix or "") .. "|")
+            else
+                print((prefix or "") .. "|" .. key_s .. " = | ...")
+            end
+        elseif usertype(value) == "position" then
+            print((prefix or "") .. "|" .. key_s .. " = position " .. value.x
+                  .. "/" .. value.y)
+        elseif usertype(value) == "polist" then
+            print((prefix or "") .. "|" .. key_s .. " = polist of " .. #value
+                  .. " position(s)")
+        elseif usertype(value) == "object" then
+            print((prefix or "") .. "|" .. key_s .. " = object of name '"
+                  .. (value.name or "") .. "'")
+        else
+            print((prefix or "") .. "|" .. key_s .. " of type " .. type(value)
+                  .. " (usertype '" .. usertype(value) .. "')")
+        end
     end
-  end
 end
 
 function lib.lua.to_string(thing)
-  local t = etype(thing)
-  local result = t
-  if (t == "nil") then
-    result = "nil"
-  elseif (t == "string") then
-    if string.find(thing, "\n", 1, true) then
-      result = "string of several lines: \n" .. thing
+    local t = etype(thing)
+    local result = t
+    if (t == "nil") then
+        result = "nil"
+    elseif (t == "string") then
+        if string.find(thing, "\n", 1, true) then
+            result = "string of several lines: \n" .. thing
+        end
+        result = "string: \"" .. thing .. "\""
+    elseif (t == "number") then
+        result = "number: " .. thing
+    elseif (t == "boolean") then
+        result = "boolean: " .. cond(thing, "true", "false")
+    elseif (t == "table") then
+        result = "table:\n"
+        local found = false
+        for key, value in pairs(thing) do
+            found = true
+            result = result .. "  " .. lib.lua.to_string(key) .. " -> " .. lib.lua.to_string(value) .. "\n"
+        end
+        if not found then
+            result = "empty table"
+        end
+    elseif (t == "position") then
+        result = "position: " .. thing.x .. "/" .. thing.y
+    elseif (t == "object") then
+        result = "object with name '" .. thing.name .. "' at " .. lib.lua.to_string(po(thing))
+    elseif (t == "tile") then
+        result = "tile"
+    elseif (t == "tiles") then
+        result = "tiles"
+    elseif (t == "group") then
+        result = "object group with " .. #thing .. " objects:\n"
+        for obj in thing do
+            result = result .. "  " .. lib.lua.to_string(obj) .. "\n"
+        end
+    elseif (t == "polist") then
+        result = "position list with " .. #thing .. " positions:\n"
+        for j = 1, #thing do
+            result = result .. "  " .. j .. ": " .. thing[j].x .. "/" .. thing[j].y .. "\n"
+        end
+    elseif (t == "map") then
+        result = "map of size " .. thing.width .. " x " .. thing.height .. " with default key '"
+                   .. thing.defaultkey .. "':\n"
+        for j = 1, thing.width do
+            result = result .. "  \"" .. thing[j] .. "\"\n"
+        end
+    elseif (t == "unknown") then
+        result = "unknown userdata"
     end
-    result = "string: \"" .. thing .. "\""
-  elseif (t == "number") then
-    result = "number: " .. thing
-  elseif (t == "boolean") then
-    result = "boolean: " .. cond(thing, "true", "false")
-  elseif (t == "table") then
-    result = "table:\n"
-    local found = false
-    for key, value in pairs(thing) do
-      found = true
-      result = result .. "  " .. lib.lua.to_string(key) .. " -> " .. lib.lua.to_string(value) .. "\n"
-    end
-    if not found then
-      result = "empty table"
-    end
-  elseif (t == "position") then
-    result = "position: " .. thing.x .. "/" .. thing.y
-  elseif (t == "object") then
-    result = "object with name '" .. thing.name .. "' at " .. lib.lua.to_string(po(thing))
-  elseif (t == "tile") then
-    result = "tile"
-  elseif (t == "tiles") then
-    result = "tiles"
-  elseif (t == "group") then
-    result = "object group with " .. #thing .. " objects:\n"
-    for obj in thing do
-      result = result .. "  " .. lib.lua.to_string(obj) .. "\n"
-    end
-  elseif (t == "polist") then
-    result = "position list with " .. #thing .. " positions:\n"
-    for j = 1, #thing do
-      result = result .. "  " .. j .. ": " .. thing[j].x .. "/" .. thing[j].y .. "\n"
-    end
-  elseif (t == "map") then
-    result = "map of size " .. thing.width .. " x " .. thing.height .. " with default key '"
-             .. thing.defaultkey .. "':\n"
-    for j = 1, thing.width do
-      result = result .. "  \"" .. thing[j] .. "\"\n"
-    end
-  elseif (t == "unknown") then
-    result = "unknown userdata"
-  end
-  return result
+    return result
 end
 
 ---------------------------------------------------------------------
@@ -233,16 +233,16 @@
 -- values as it should. The following function returns (given
 -- an integer) another integer between 0 and MODUL-1.
 function lib.lua.mod(value, modul)
-  assert_type(value, "lib.lua.mod first argument", 2, "number")
-  assert_type(modul, "lib.lua.mod second argument", 2, "positive")
-  if value < 0 then
-    -- No, the following call to lib.lua.mod is not a real recursion, it's
-    -- only for the case where VALUE is a negative multiple of MODUL
-    -- (otherwise we would get MODUL as result, not zero).
-    return lib.lua.mod(modul + (math.fmod or math.mod)(value, modul), modul)
-  else
-    return (math.fmod or math.mod)(value, modul)
-  end
+    assert_type(value, "lib.lua.mod first argument", 2, "number")
+    assert_type(modul, "lib.lua.mod second argument", 2, "positive")
+    if value < 0 then
+        -- No, the following call to lib.lua.mod is not a real recursion, it's
+        -- only for the case where VALUE is a negative multiple of MODUL
+        -- (otherwise we would get MODUL as result, not zero).
+        return lib.lua.mod(modul + (math.fmod or math.mod)(value, modul), modul)
+    else
+        return (math.fmod or math.mod)(value, modul)
+    end
 end
 
     ]]></el:luamain>

Modified: trunk/data/levels/lib/libmap.xml
===================================================================
--- trunk/data/levels/lib/libmap.xml	2009-03-31 15:39:49 UTC (rev 1604)
+++ trunk/data/levels/lib/libmap.xml	2009-03-31 21:37:25 UTC (rev 1605)
@@ -53,583 +53,583 @@
 setmetatable(lib.map, getmetatable(lib))
 
 function lib.map.concat_horizontally(map1, map2)
-  assert_type(map1, "lib.map.concat_horizontally first argument", 2, "map")
-  assert_type(map2, "lib.map.concat_horizontally second argument", 2, "map")
-  if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
-    error("lib.map.concat_horizontally: Default keys differ in length.", 2)
-  end
-  local result = {}
-  for y = 1, math.max(map1.height, map2.height) do
-    result[y] = (rawget(map1, y) or string.rep(map1.defaultkey, map1.width))
-             .. (rawget(map2, y) or string.rep(map2.defaultkey, map2.width))
-  end
-  return wo:newMap(map1.defaultkey, result)  
+    assert_type(map1, "lib.map.concat_horizontally first argument", 2, "map")
+    assert_type(map2, "lib.map.concat_horizontally second argument", 2, "map")
+    if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
+        error("lib.map.concat_horizontally: Default keys differ in length.", 2)
+    end
+    local result = {}
+    for y = 1, math.max(map1.height, map2.height) do
+        result[y] = (rawget(map1, y) or string.rep(map1.defaultkey, map1.width))
+                 .. (rawget(map2, y) or string.rep(map2.defaultkey, map2.width))
+    end
+    return wo:newMap(map1.defaultkey, result)  
 end
 
 function lib.map.concat_vertically(map1, map2)
-  assert_type(map1, "lib.map.concat_vertically first argument", 2, "map")
-  assert_type(map2, "lib.map.concat_vertically second argument", 2, "map")
-  if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
-    error("lib.map.concat_vertically: Default keys differ in length.", 2)
-  end
-  local result = {}
-  for y = 1, map1.height do
-    result[y] = rawget(map1, y)  -- rest of line will be filled by wo:newMap
-  end
-  -- As the default key for result will be set to the first
-  -- default key, we have to attach the missing lines of the
-  -- second map here now.
-  local rest = string.rep(map2.defaultkey, math.max(0, map1.width - map2.width))
-  for y = 1, map2.height do
-    result[y + map1.height] = rawget(map2, y) .. rest
-  end
-  return wo:newMap(map1.defaultkey, result)
+    assert_type(map1, "lib.map.concat_vertically first argument", 2, "map")
+    assert_type(map2, "lib.map.concat_vertically second argument", 2, "map")
+    if string.len(map1.defaultkey) ~= string.len(map2.defaultkey) then
+        error("lib.map.concat_vertically: Default keys differ in length.", 2)
+    end
+    local result = {}
+    for y = 1, map1.height do
+        result[y] = rawget(map1, y)  -- rest of line will be filled by wo:newMap
+    end
+    -- As the default key for result will be set to the first
+    -- default key, we have to attach the missing lines of the
+    -- second map here now.
+    local rest = string.rep(map2.defaultkey, math.max(0, map1.width - map2.width))
+    for y = 1, map2.height do
+        result[y + map1.height] = rawget(map2, y) .. rest
+    end
+    return wo:newMap(map1.defaultkey, result)
 end
 
 function lib.map.fuse(arg1, arg2)
-  local map1, map2 = arg1, arg2
-  if type(arg1) == "string" then
-    map1 = wo:newMap(arg1)
-  end
-  if type(arg2) == "string" then
-    map2 = wo:newMap(arg2)
-  end
-  assert_type(map1, "lib.map.fuse first argument", 2, "map")
-  assert_type(map2, "lib.map.fuse second argument", 2, "map")
-  local result = {}
-  for y = 1, math.max(map1.height, map2.height) do
-    result[y] = ""
-    for x = 1, math.max(map1.width, map2.width) do
-      result[y] = result[y] .. map1[{x - 1, y - 1}] .. map2[{x - 1, y - 1}]
+    local map1, map2 = arg1, arg2
+    if type(arg1) == "string" then
+        map1 = wo:newMap(arg1)
     end
-  end
-  return wo:newMap(map1.defaultkey .. map2.defaultkey, result)  
+    if type(arg2) == "string" then
+        map2 = wo:newMap(arg2)
+    end
+    assert_type(map1, "lib.map.fuse first argument", 2, "map")
+    assert_type(map2, "lib.map.fuse second argument", 2, "map")
+    local result = {}
+    for y = 1, math.max(map1.height, map2.height) do
+        result[y] = ""
+        for x = 1, math.max(map1.width, map2.width) do
+            result[y] = result[y] .. map1[{x - 1, y - 1}] .. map2[{x - 1, y - 1}]
+        end
+    end
+    return wo:newMap(map1.defaultkey .. map2.defaultkey, result)  
 end
 
 function lib.map.defuse(map)
-  assert_type(map, "lib.map.defuse first argument", 2, "map")
-  local kl = rawget(map, "__keylength")
-  local dk = rawget(map, "__defaultkey")
-  local result = {}
-  for j = 1, kl do
-    result[j] = wo:newMap(string.sub(dk, j, j), map.width, map.height)
-  end
-  for y = 0, map.height - 1 do
-    for x = 0, map.width - 1 do
-      local key = map[{x,y}]
-      for j = 1, kl do
-        result[j][{x,y}] = string.sub(key, j, j)
-      end
+    assert_type(map, "lib.map.defuse first argument", 2, "map")
+    local kl = rawget(map, "__keylength")
+    local dk = rawget(map, "__defaultkey")
+    local result = {}
+    for j = 1, kl do
+        result[j] = wo:newMap(string.sub(dk, j, j), map.width, map.height)
     end
-  end
-  return result
+    for y = 0, map.height - 1 do
+        for x = 0, map.width - 1 do
+            local key = map[{x,y}]
+            for j = 1, kl do
+                result[j][{x,y}] = string.sub(key, j, j)
+            end
+        end
+    end
+    return result
 end
 
 function lib.map.transform(map, op)
-  assert_type(map, "lib.map.transform first argument", 2, "map")
-  assert_type(op, "lib.map.transform second argument", 2, "natural")
-  if op > 7 then
-    error("lib.map.transform: Unknown transformation request.", 2)
-  end
-  local w, h = map.width, map.height
-  local function rot(x, y)
-    return ({[MAP_IDENT]             = {x,         y},
-             [MAP_ROT_CW]            = {y,         h - 1 - x},
-             [MAP_ROT_180]           = {w - 1 - x, h - 1 - y},
-             [MAP_ROT_CCW]           = {w - 1 - y, x},
-             [MAP_MIRROR_HORIZONTAL] = {w - 1 - x, y},
-             [MAP_MIRROR_VERTICAL]   = {x,         h - 1 - y},
-             [MAP_MIRROR_SLASH]      = {y,         x},
-             [MAP_MIRROR_BACKSLASH]  = {w - 1 - y, h - 1 - x}     })[op]
-  end
-  local new_w, new_h = w, h
-  if    (op == MAP_ROT_CW) or (op == MAP_ROT_CCW)
-     or (op == MAP_MIRROR_SLASH) or (op == MAP_MIRROR_BACKSLASH) then
-    new_w, new_h = h, w
-  end
-  local result = {}
-  for y = 1, new_h do
-    result[y] = ""
-    for x = 1, new_w do
-      result[y] = result[y] .. map[rot(x - 1, y - 1)]
+    assert_type(map, "lib.map.transform first argument", 2, "map")
+    assert_type(op, "lib.map.transform second argument", 2, "natural")
+    if op > 7 then
+        error("lib.map.transform: Unknown transformation request.", 2)
     end
-  end
-  return wo:newMap(map.defaultkey, result)  
+    local w, h = map.width, map.height
+    local function rot(x, y)
+        return ({[MAP_IDENT]             = {x,         y},
+                 [MAP_ROT_CW]            = {y,         h - 1 - x},
+                 [MAP_ROT_180]           = {w - 1 - x, h - 1 - y},
+                 [MAP_ROT_CCW]           = {w - 1 - y, x},
+                 [MAP_MIRROR_HORIZONTAL] = {w - 1 - x, y},
+                 [MAP_MIRROR_VERTICAL]   = {x,         h - 1 - y},
+                 [MAP_MIRROR_SLASH]      = {y,         x},
+                 [MAP_MIRROR_BACKSLASH]  = {w - 1 - y, h - 1 - x}     })[op]
+    end
+    local new_w, new_h = w, h
+    if    (op == MAP_ROT_CW) or (op == MAP_ROT_CCW)
+         or (op == MAP_MIRROR_SLASH) or (op == MAP_MIRROR_BACKSLASH) then
+        new_w, new_h = h, w
+    end
+    local result = {}
+    for y = 1, new_h do
+        result[y] = ""
+        for x = 1, new_w do
+            result[y] = result[y] .. map[rot(x - 1, y - 1)]
+        end
+    end
+    return wo:newMap(map.defaultkey, result)  
 end
 
 function lib.map.sub(map, origin, arg2, arg3)
-  -- syntax: map, pos1, pos2
-  --         map, pos1, width, height
-  assert_type(map, "lib.map.sub first argument", 2, "map")
-  assert_type(origin, "lib.map.sub second argument", 2, "position", "valid object", "string", "table")
-  assert_type(arg2, "lib.map.sub third argument", 2, "position", "valid object", "string", "table", "number")
-  local pos1, pos2 = origin, arg2
-  if etype(pos1) ~= "position" then
-    pos1 = po(pos1)
-  end
-  if type(arg2) == "number" then
-    -- arg2 and arg3 are width and height
-    assert_type(arg3, "lib.map.sub fourth argument", 2, "number")
-    pos2 = po(pos1.x + arg2 - 1, pos1.y + arg3 - 1)
-  elseif etype(arg2) ~= "position" then
-    pos2 = po(arg2)
-  end
-  pos1 = pos1:grid()
-  pos2 = pos2:grid()
-  if (pos2.x < pos1.x) or (pos2.y < pos1.y) then
-    error("lib.map.sub: Rectangular area not cleanly defined (first argument "
-        .. "is not top left-hand corner).", 2)
-  end
-  local result = {}
-  local kl = map.keylength
-  for y = pos1.y + 1, pos2.y + 1 do
-    if y <= map.height then
-      result[y-pos1.y] = string.sub(rawget(map, y) or "",
-                             pos1.x * kl + 1, (pos2.x + 1) * kl) or ""
+    -- syntax: map, pos1, pos2
+    --         map, pos1, width, height
+    assert_type(map, "lib.map.sub first argument", 2, "map")
+    assert_type(origin, "lib.map.sub second argument", 2, "position", "valid object", "string", "table")
+    assert_type(arg2, "lib.map.sub third argument", 2, "position", "valid object", "string", "table", "number")
+    local pos1, pos2 = origin, arg2
+    if etype(pos1) ~= "position" then
+        pos1 = po(pos1)
     end
-  end
-  return wo:newMap(rawget(map, "__defaultkey"), result)  
+    if type(arg2) == "number" then
+        -- arg2 and arg3 are width and height
+        assert_type(arg3, "lib.map.sub fourth argument", 2, "number")
+        pos2 = po(pos1.x + arg2 - 1, pos1.y + arg3 - 1)
+    elseif etype(arg2) ~= "position" then
+        pos2 = po(arg2)
+    end
+    pos1 = pos1:grid()
+    pos2 = pos2:grid()
+    if (pos2.x < pos1.x) or (pos2.y < pos1.y) then
+        error("lib.map.sub: Rectangular area not cleanly defined (first argument "
+            .. "is not top left-hand corner).", 2)
+    end
+    local result = {}
+    local kl = map.keylength
+    for y = pos1.y + 1, pos2.y + 1 do
+        if y <= map.height then
+            result[y-pos1.y] = string.sub(rawget(map, y) or "",
+                                   pos1.x * kl + 1, (pos2.x + 1) * kl) or ""
+        end
+    end
+    return wo:newMap(rawget(map, "__defaultkey"), result)  
 end
 
 -- TODO: Speed up.
 function lib.map.paste(map1, map2, posarg)
-  assert_type(map1, "lib.map.paste first argument", 2, "map")
-  assert_type(map2, "lib.map.paste second argument", 2, "map")
-  assert_type(posarg, "lib.map.paste third argument", 2, "position", "valid object", "string", "group", "polist", "table")  
-  assert_bool(map1.keylength == map2.keylength, "lib.map.paste: Can't work on maps with different keylengths.", 2)
-  local postype = etype(posarg)
-  if postype == "position" then
-    local kl = rawget(map2, "__keylength")
-    local dk = rawget(map2, "__defaultkey")
-    for y = 1, map2.height do
-      local line = rawget(map2, y)
-      for x = 1, map2.width do
-        tile = string.sub(line, kl * (x - 1) + 1, x * kl)
-        if tile ~= dk then
-          map1[{posarg.x + x - 1, posarg.y + y - 1}] = tile
+    assert_type(map1, "lib.map.paste first argument", 2, "map")
+    assert_type(map2, "lib.map.paste second argument", 2, "map")
+    assert_type(posarg, "lib.map.paste third argument", 2, "position", "valid object", "string", "group", "polist", "table")  
+    assert_bool(map1.keylength == map2.keylength, "lib.map.paste: Can't work on maps with different keylengths.", 2)
+    local postype = etype(posarg)
+    if postype == "position" then
+        local kl = rawget(map2, "__keylength")
+        local dk = rawget(map2, "__defaultkey")
+        for y = 1, map2.height do
+            local line = rawget(map2, y)
+            for x = 1, map2.width do
+                tile = string.sub(line, kl * (x - 1) + 1, x * kl)
+                if tile ~= dk then
+                    map1[{posarg.x + x - 1, posarg.y + y - 1}] = tile
+                end
+            end
         end
-      end
+    elseif postype == "group" then
+        for obj in posarg do
+            lib.map.paste(map1, map2, po(obj))
+        end
+    elseif postype == "polist" then
+        for j = 1, #posarg do
+            lib.map.paste(map1, map2, posarg[j])
+        end
+    else
+        lib.map.paste(map1, map2, po(posarg))
     end
-  elseif postype == "group" then
-    for obj in posarg do
-      lib.map.paste(map1, map2, po(obj))
-    end
-  elseif postype == "polist" then
-    for j = 1, #posarg do
-      lib.map.paste(map1, map2, posarg[j])
-    end
-  else
-    lib.map.paste(map1, map2, po(posarg))
-  end
 end
 
 function lib.map.replace(map, tile1, tile2arg)
-  assert_type(map, "lib.map.replace first argument", 2, "map")
-  assert_type(tile1, "lib.map.replace second argument", 2, "string")
-  assert_type(tile2arg, "lib.map.replace third argument", 2, "nil", "string")
-  local kl = rawget(map, "__keylength")
-  local tile2 = tile2arg or rawget(map, "__defaultkey")
-  if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
-    error("lib.map.replace: Tiles do not have the same length as default key.", 2)
-  end
-  for y = 1, map.height do
-    local line = rawget(map, y)
-    for x = 1, map.width do
-      tile = string.sub(line, kl * (x - 1) + 1, x * kl)
-      if tile == tile1 then
-        map[{x-1, y-1}] = tile2
-      end
+    assert_type(map, "lib.map.replace first argument", 2, "map")
+    assert_type(tile1, "lib.map.replace second argument", 2, "string")
+    assert_type(tile2arg, "lib.map.replace third argument", 2, "nil", "string")
+    local kl = rawget(map, "__keylength")
+    local tile2 = tile2arg or rawget(map, "__defaultkey")
+    if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
+        error("lib.map.replace: Tiles do not have the same length as default key.", 2)
     end
-  end
+    for y = 1, map.height do
+        local line = rawget(map, y)
+        for x = 1, map.width do
+            tile = string.sub(line, kl * (x - 1) + 1, x * kl)
+            if tile == tile1 then
+                map[{x-1, y-1}] = tile2
+            end
+        end
+    end
 end
 
 function lib.map.replace_outside(map, tile1, tile2arg)
-  assert_type(map, "lib.map.replace_outside first argument", 2, "map")
-  assert_type(tile1, "lib.map.replace_outside second argument", 2, "string")
-  assert_type(tile2arg, "lib.map.replace_outside third argument", 2, "nil", "string")
-  local kl = rawget(map, "__keylength")
-  local tile2 = tile2arg or rawget(map, "__defaultkey")
-  if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
-    error("lib.map.replace_outside: Tiles do not have the same length as default key.", 2)
-  end
-  if tile1 == tile2 then
-    error("lib.map.replace_outside: Old and new tile must be different.", 2)
-  end
-  -- mark outside floor fields from the border
-  local function check_for_outside(x, y)
-    if string.sub(rawget(map, y), kl * (x - 1) + 1, x * kl) == tile1 then
-      map[{x-1, y-1}] = tile2
-      if y > 1          then  check_for_outside(x, y - 1)  end
-      if y < map.height then  check_for_outside(x, y + 1)  end
-      if x > 1          then  check_for_outside(x - 1, y)  end
-      if x < map.width  then  check_for_outside(x + 1, y)  end
+    assert_type(map, "lib.map.replace_outside first argument", 2, "map")
+    assert_type(tile1, "lib.map.replace_outside second argument", 2, "string")
+    assert_type(tile2arg, "lib.map.replace_outside third argument", 2, "nil", "string")
+    local kl = rawget(map, "__keylength")
+    local tile2 = tile2arg or rawget(map, "__defaultkey")
+    if (string.len(tile1) ~= kl) or (string.len(tile2) ~= kl) then
+        error("lib.map.replace_outside: Tiles do not have the same length as default key.", 2)
     end
-  end
-  for y = 1, map.height do
-    check_for_outside(1, y)
-    check_for_outside(map.width, y)
-  end
-  for x = 1, map.width do
-    check_for_outside(x, 1)
-    check_for_outside(x, map.height)
-  end
+    if tile1 == tile2 then
+        error("lib.map.replace_outside: Old and new tile must be different.", 2)
+    end
+    -- mark outside floor fields from the border
+    local function check_for_outside(x, y)
+        if string.sub(rawget(map, y), kl * (x - 1) + 1, x * kl) == tile1 then
+            map[{x-1, y-1}] = tile2
+            if y > 1          then  check_for_outside(x, y - 1)  end
+            if y < map.height then  check_for_outside(x, y + 1)  end
+            if x > 1          then  check_for_outside(x - 1, y)  end
+            if x < map.width  then  check_for_outside(x + 1, y)  end
+        end
+    end
+    for y = 1, map.height do
+        check_for_outside(1, y)
+        check_for_outside(map.width, y)
+    end
+    for x = 1, map.width do
+        check_for_outside(x, 1)
+        check_for_outside(x, map.height)
+    end
 end
 
 -- TODO: Maybe use assert_type.
 function lib.map.match(map, conditionsarg, ...)
-  assert_type(map, "lib.map.match first argument", 2, "map")
-  local kl = rawget(map, "__keylength")
-  local conditions 
-  if #{...} == 0 then
-    if      (type(conditionsarg) == "table")
-       and ((usertype(conditionsarg[1]) == "position") or (usertype(conditionsarg[1]) == "polist")) then
-      conditions = lib.lua.deep_copy({conditionsarg})
+    assert_type(map, "lib.map.match first argument", 2, "map")
+    local kl = rawget(map, "__keylength")
+    local conditions 
+    if #{...} == 0 then
+        if      (type(conditionsarg) == "table")
+             and ((usertype(conditionsarg[1]) == "position") or (usertype(conditionsarg[1]) == "polist")) then
+            conditions = lib.lua.deep_copy({conditionsarg})
+        else
+            conditions = lib.lua.deep_copy(conditionsarg)
+        end
     else
-      conditions = lib.lua.deep_copy(conditionsarg)
+        conditions = lib.lua.deep_copy({conditionsarg, ...})
     end
-  else
-    conditions = lib.lua.deep_copy({conditionsarg, ...})
-  end
-  if type(conditions) == "nil" then
-    conditions = {}
-  end
-  if type(conditions) == "string" then
-    conditions = {{po(0,0), conditions}}
-  end
-  if type(conditions) ~= "table" then
-    error("lib.map.match: Conditions of wrong type " .. type(conditions)
-        .. ", expected table, string, or nil.", 2)
-  end
-  for _, condition in pairs(conditions) do
-    if (type(condition) ~= "table") or (#condition < 2) then
-      error("lib.map.match: Wrong type in condition list, expected a table with "
-          .. "at least two entries.", 2)
+    if type(conditions) == "nil" then
+        conditions = {}
     end
-    if (usertype(condition[1]) == "position") then
-      condition[1] = po(grp()) .. condition[1]
+    if type(conditions) == "string" then
+        conditions = {{po(0,0), conditions}}
     end
-    if (usertype(condition[1]) ~= "polist") then
-      error("lib.map.match: Wrong type in condition, expected position or "
-          .. "position list as first entry.", 2)
+    if type(conditions) ~= "table" then
+        error("lib.map.match: Conditions of wrong type " .. type(conditions)
+            .. ", expected table, string, or nil.", 2)
     end
-    for j = 2, #condition do
-      if (type(condition[j]) ~= "string") or (string.len(condition[j]) ~= kl) then
-        error("lib.map.match: Tile key in condition has wrong type or key length.", 2)
-      end
-    end       
-  end
-  local result = po(grp())
-  for y = 0, map.height - 1 do
-    for x = 0, map.width - 1 do
-      local conditions_fulfilled = true
-      for _, condition in pairs(conditions) do
-        for j = 1, #condition[1] do
-          if conditions_fulfilled then
-            local ch = map[{x + condition[1][j].x, y + condition[1][j].y}]
-            local found = false
-            for j = 2, #condition do
-              found = found or (condition[j] == ch)
+    for _, condition in pairs(conditions) do
+        if (type(condition) ~= "table") or (#condition < 2) then
+            error("lib.map.match: Wrong type in condition list, expected a table with "
+                .. "at least two entries.", 2)
+        end
+        if (usertype(condition[1]) == "position") then
+            condition[1] = po(grp()) .. condition[1]
+        end
+        if (usertype(condition[1]) ~= "polist") then
+            error("lib.map.match: Wrong type in condition, expected position or "
+                .. "position list as first entry.", 2)
+        end
+        for j = 2, #condition do
+            if (type(condition[j]) ~= "string") or (string.len(condition[j]) ~= kl) then
+                error("lib.map.match: Tile key in condition has wrong type or key length.", 2)
             end
-            conditions_fulfilled = found  -- at this point, cf was always true
-          end
+        end       
+    end
+    local result = po(grp())
+    for y = 0, map.height - 1 do
+        for x = 0, map.width - 1 do
+            local conditions_fulfilled = true
+            for _, condition in pairs(conditions) do
+                for j = 1, #condition[1] do
+                    if conditions_fulfilled then
+                        local ch = map[{x + condition[1][j].x, y + condition[1][j].y}]
+                        local found = false
+                        for j = 2, #condition do
+                            found = found or (condition[j] == ch)
+                        end
+                        conditions_fulfilled = found  -- at this point, cf was always true
+                    end
+                end
+            end
+            if conditions_fulfilled then
+                result = result .. po(x,y)
+            end
         end
-      end
-      if conditions_fulfilled then
-        result = result .. po(x,y)
-      end
     end
-  end
-  return result
+    return result
 end
 
 function lib.map.covers(map, pos)
-  if type(pos) == "table" then
-    return (pos[1] >= 0) and (pos[2] >= 0)
-        and (pos[1] < map.width) and (pos[2] < map.height)
-  else
-    return (pos.x >= 0) and (pos.y >= 0)
-        and (pos.x < map.width) and (pos.y < map.height)
-  end
+    if type(pos) == "table" then
+        return (pos[1] >= 0) and (pos[2] >= 0)
+            and (pos[1] < map.width) and (pos[2] < map.height)
+    else
+        return (pos.x >= 0) and (pos.y >= 0)
+            and (pos.x < map.width) and (pos.y < map.height)
+    end
 end
 
 -- TODO: Add string as posarg, maybe speed up.
 function lib.map.get(map, posarg)
-  if type(posarg) == "number" then
-    return rawget(map, posarg)
-  elseif (usertype(posarg) == "position") or (usertype(posarg) == "object") then
-    local pos = posarg:grid()
-    if map:covers(pos) then
-      local kl = rawget(map, "__keylength")
-      return string.sub(rawget(map, pos.y + 1), kl * pos.x + 1, (pos.x + 1) * kl)
+    if type(posarg) == "number" then
+        return rawget(map, posarg)
+    elseif (usertype(posarg) == "position") or (usertype(posarg) == "object") then
+        local pos = posarg:grid()
+        if map:covers(pos) then
+            local kl = rawget(map, "__keylength")
+            return string.sub(rawget(map, pos.y + 1), kl * pos.x + 1, (pos.x + 1) * kl)
+        else
+            return rawget(map, "__defaultkey")
+        end
+    elseif usertype(posarg) == "group" then
+        local result = {}
+        for obj in posarg do
+            table.insert(result, lib.map.get(map, obj))
+        end
+        return result
+    elseif usertype(posarg) == "polist" then
+        local result = {}
+        for j = 1, #posarg do
+            result[j] = lib.map.get(map, posarg[j])
+        end
+        return result
+    elseif type(posarg) == "table" then
+        if map:covers(posarg) then
+            local kl = rawget(map, "__keylength")
+            return string.sub(rawget(map, posarg[2] + 1), kl * posarg[1] + 1, (posarg[1] + 1) * kl)
+        else
+            return rawget(map, "__defaultkey")
+        end
+    elseif type(posarg) == "string" then
+        if (posarg == "type") then
+            return getmetatable(map)._type
+        elseif (posarg == "width") or (posarg == "height")
+             or (posarg == "defaultkey") or (posarg == "keylength") then
+            return rawget(map, "__"..posarg)
+        else  
+            return (rawget(map, "user_attributes"))[posarg]
+        end
     else
-      return rawget(map, "__defaultkey")
+        error("lib.map.get: Can't understand position argument.")
     end
-  elseif usertype(posarg) == "group" then
-    local result = {}
-    for obj in posarg do
-      table.insert(result, lib.map.get(map, obj))
-    end
-    return result
-  elseif usertype(posarg) == "polist" then
-    local result = {}
-    for j = 1, #posarg do
-      result[j] = lib.map.get(map, posarg[j])
-    end
-    return result
-  elseif type(posarg) == "table" then
-    if map:covers(posarg) then
-      local kl = rawget(map, "__keylength")
-      return string.sub(rawget(map, posarg[2] + 1), kl * posarg[1] + 1, (posarg[1] + 1) * kl)
-    else
-      return rawget(map, "__defaultkey")
-    end
-  elseif type(posarg) == "string" then
-    if (posarg == "type") then
-      return getmetatable(map)._type
-    elseif (posarg == "width") or (posarg == "height")
-       or (posarg == "defaultkey") or (posarg == "keylength") then
-      return rawget(map, "__"..posarg)
-    else  
-      return (rawget(map, "user_attributes"))[posarg]
-    end
-  else
-    error("lib.map.get: Can't understand position argument.")
-  end
 end
 
 -- TODO: Add string as posarg, maybe speed up.
 function lib.map.set(map, posarg, value)
-  if type(posarg) == "string" then
-    if (posarg == "type") then
-      if tostring(value) ~= "map" then
-        error("lib.map.set: A map is a map is a map is a map, and not a "
-            .. tostring(value) .. "!", 2)
-      else
-        return
-      end
-    elseif (posarg == "width") or (posarg == "height") then
-      error("lib.map.set: Use extend or sub to change the size of a map.", 2)
-    elseif (posarg == "keylength") then
-      error("lib.map.set: Can't change keylength without default key.", 2)
-    elseif (posarg == "defaultkey") then
-      map:set_default_key(value)
-      return
+    if type(posarg) == "string" then
+        if (posarg == "type") then
+            if tostring(value) ~= "map" then
+                error("lib.map.set: A map is a map is a map is a map, and not a "
+                    .. tostring(value) .. "!", 2)
+            else
+                return
+            end
+        elseif (posarg == "width") or (posarg == "height") then
+            error("lib.map.set: Use extend or sub to change the size of a map.", 2)
+        elseif (posarg == "keylength") then
+            error("lib.map.set: Can't change keylength without default key.", 2)
+        elseif (posarg == "defaultkey") then
+            map:set_default_key(value)
+            return
+        end
+        map.user_attributes[posarg] = value
+    else
+        if type(value) ~= "string" then
+            error("lib.map.set: Key must be of type string, is "..type(value)..".", 2)
+        end
+        local kl = rawget(map, "__keylength")
+        if string.len(value) ~= kl then
+            error("lib.map.set: Key must be of the same length as default key "
+                .."(should be "..kl.. ", is "..string.len(value)..").", 2)
+        end
+        if (usertype(posarg) == "position") or (usertype(posarg) == "object") then
+            local pos = posarg:grid()
+            if (pos.x < 0) or (pos.y < 0) then
+                error("lib.map.set: Negative positions are not supported.", 2)
+            end
+            map:extend(pos)
+            rawset(map, pos.y + 1,
+                   string.sub(rawget(map, pos.y + 1), 1, pos.x * kl)
+                .. value
+                .. string.sub(rawget(map, pos.y + 1), (pos.x + 1) * kl + 1, -1))
+        elseif usertype(posarg) == "group" then
+            for obj in posarg do
+                map:extend(obj)
+                rawset(map, obj.y + 1,
+                     string.sub(rawget(map, obj.y + 1), 1, obj.x * kl)
+                  .. value
+                  .. string.sub(rawget(map, obj.y + 1), (obj.x + 1) * kl + 1, -1))
+            end
+        elseif usertype(posarg) == "polist" then
+            for j = 1, #posarg do
+                map:extend(posarg[j])
+                rawset(map, posarg[j].y + 1,
+                     string.sub(rawget(map, posarg[j].y + 1), 1, posarg[j].x * kl)
+                  .. value
+                  .. string.sub(rawget(map, posarg[j].y + 1), (posarg[j].x + 1) * kl + 1, -1))
+            end
+        elseif type(posarg) == "table" then
+            lib.map.set(map, po(posarg), value)
+        end
     end
-    map.user_attributes[posarg] = value
-  else
-    if type(value) ~= "string" then
-      error("lib.map.set: Key must be of type string, is "..type(value)..".", 2)
-    end
-    local kl = rawget(map, "__keylength")
-    if string.len(value) ~= kl then
-      error("lib.map.set: Key must be of the same length as default key "
-          .."(should be "..kl.. ", is "..string.len(value)..").", 2)
-    end
-    if (usertype(posarg) == "position") or (usertype(posarg) == "object") then
-      local pos = posarg:grid()
-      if (pos.x < 0) or (pos.y < 0) then
-        error("lib.map.set: Negative positions are not supported.", 2)
-      end
-      map:extend(pos)
-      rawset(map, pos.y + 1,
-             string.sub(rawget(map, pos.y + 1), 1, pos.x * kl)
-          .. value
-          .. string.sub(rawget(map, pos.y + 1), (pos.x + 1) * kl + 1, -1))
-    elseif usertype(posarg) == "group" then
-      for obj in posarg do
-        map:extend(obj)
-        rawset(map, obj.y + 1,
-             string.sub(rawget(map, obj.y + 1), 1, obj.x * kl)
-          .. value
-          .. string.sub(rawget(map, obj.y + 1), (obj.x + 1) * kl + 1, -1))
-      end
-    elseif usertype(posarg) == "polist" then
-      for j = 1, #posarg do
-        map:extend(posarg[j])
-        rawset(map, posarg[j].y + 1,
-             string.sub(rawget(map, posarg[j].y + 1), 1, posarg[j].x * kl)
-          .. value
-          .. string.sub(rawget(map, posarg[j].y + 1), (posarg[j].x + 1) * kl + 1, -1))
-      end
-    elseif type(posarg) == "table" then
-      lib.map.set(map, po(posarg), value)
-    end
-  end
 end
 
 function lib.map.extend(map, posarg)
-  assert_type(map, "lib.map.extend first argument", 2, "map")
-  assert_type(posarg, "lib.map.extend second argument", 2, "position", "valid object", "string", "table")
-  local pos = posarg
-  if etype(pos) ~= "position" then
-    pos = po(pos)
-  end
-  local w, h = rawget(map, "__width"), rawget(map, "__height")
-  if pos.x >= w then
-    pos = pos:grid()  
-    local dk = rawget(map, "__defaultkey")
-    local attach = string.rep(dk, pos.x - w + 1)
-    for y = 1, h do
-      rawset(map, y, rawget(map, y) .. attach)
+    assert_type(map, "lib.map.extend first argument", 2, "map")
+    assert_type(posarg, "lib.map.extend second argument", 2, "position", "valid object", "string", "table")
+    local pos = posarg
+    if etype(pos) ~= "position" then
+        pos = po(pos)
     end
-    w = pos.x + 1
-    rawset(map, "__width", w)
-  end
-  if pos.y >= h then
-    pos = pos:grid()
-    local dk = rawget(map, "__defaultkey")
-    local line = string.rep(dk, w)
-    for y = h + 1, pos.y + 1 do
-      rawset(map, y, line)
+    local w, h = rawget(map, "__width"), rawget(map, "__height")
+    if pos.x >= w then
+        pos = pos:grid()  
+        local dk = rawget(map, "__defaultkey")
+        local attach = string.rep(dk, pos.x - w + 1)
+        for y = 1, h do
+            rawset(map, y, rawget(map, y) .. attach)
+        end
+        w = pos.x + 1
+        rawset(map, "__width", w)
     end
-    h = pos.y + 1
-    rawset(map, "__height", h)
-  end
+    if pos.y >= h then
+        pos = pos:grid()
+        local dk = rawget(map, "__defaultkey")
+        local line = string.rep(dk, w)
+        for y = h + 1, pos.y + 1 do
+            rawset(map, y, line)
+        end
+        h = pos.y + 1
+        rawset(map, "__height", h)
+    end
 end
 
 function lib.map.trim(map, trimkeyarg)
-  assert_type(map, "lib.map.trim first argument", 2, "map")
-  assert_type(trimkeyarg, "lib.map.trim second argument", 2, "nil", "string")
-  local border_n = map.height - 1
-  local border_s = 0
-  local border_w = map.width - 1
-  local border_e = 0
-  local trimkey = trimkeyarg or rawget(map, "__defaultkey")
-  if string.len(trimkey) ~= rawget(map, "__keylength") then
-    error("lib.map.trim: Trim key has wrong key length.", 2)
-  end
-  for x = 0, map.width - 1 do
-    for y = 0, map.height - 1 do
-      if map[{x,y}] ~= trimkey then
-        border_n = math.min(border_n, y)
-        border_s = math.max(border_s, y)
-        border_w = math.min(border_w, x)
-        border_e = math.max(border_e, x)        
-      end
+    assert_type(map, "lib.map.trim first argument", 2, "map")
+    assert_type(trimkeyarg, "lib.map.trim second argument", 2, "nil", "string")
+    local border_n = map.height - 1
+    local border_s = 0
+    local border_w = map.width - 1
+    local border_e = 0
+    local trimkey = trimkeyarg or rawget(map, "__defaultkey")
+    if string.len(trimkey) ~= rawget(map, "__keylength") then
+        error("lib.map.trim: Trim key has wrong key length.", 2)
     end
-  end
-  if (border_n >= border_s) or (border_w >= border_e) then
-    return wo:newMap(trimkey)
-  end
-  return map:sub(po(border_w, border_n), po(border_e, border_s))
+    for x = 0, map.width - 1 do
+        for y = 0, map.height - 1 do
+            if map[{x,y}] ~= trimkey then
+                border_n = math.min(border_n, y)
+                border_s = math.max(border_s, y)
+                border_w = math.min(border_w, x)
+                border_e = math.max(border_e, x)        
+            end
+        end
+    end
+    if (border_n >= border_s) or (border_w >= border_e) then
+        return wo:newMap(trimkey)
+    end
+    return map:sub(po(border_w, border_n), po(border_e, border_s))
 end  
 
 function lib.map.print(map, withXYCounts, left_separator, right_separator)
-  assert_type(map, "lib.map.print first argument", 2, "map")
-  assert_type(left_separator, "lib.map.print second argument", 2, "nil", "string")
-  assert_type(right_separator, "lib.map.print third argument", 2, "nil", "string")  
-  local w, h = map.width, map.height
-  local kl = rawget(map, "__keylength")
-  if withXYCounts then
-    local line = string.rep(" ", kl) .. (left_separator or "")
-    for x = 0, w - 1 do
-      line = line .. string.rep(" ", math.max(0, kl - string.len(x)))
-                  .. string.sub(x, math.max(0, string.len(x) - kl) + 1, string.len(x))
-    end
-    line = line .. (right_separator or "")
-    print(line)
-  end
-  for y = 0, h - 1 do
-    local line = ""
+    assert_type(map, "lib.map.print first argument", 2, "map")
+    assert_type(left_separator, "lib.map.print second argument", 2, "nil", "string")
+    assert_type(right_separator, "lib.map.print third argument", 2, "nil", "string")  
+    local w, h = map.width, map.height
+    local kl = rawget(map, "__keylength")
     if withXYCounts then
-      line =    string.rep(" ", math.max(0, kl - string.len(y)))
-             .. string.sub(y, math.max(0, string.len(y) - kl) + 1, string.len(y))      
+        local line = string.rep(" ", kl) .. (left_separator or "")
+        for x = 0, w - 1 do
+            line = line .. string.rep(" ", math.max(0, kl - string.len(x)))
+                      .. string.sub(x, math.max(0, string.len(x) - kl) + 1, string.len(x))
+        end
+        line = line .. (right_separator or "")
+        print(line)
     end
-    line = line .. (left_separator or "") .. map[y + 1] .. (right_separator or "")
-    print(line)
-  end
+    for y = 0, h - 1 do
+        local line = ""
+        if withXYCounts then
+            line =    string.rep(" ", math.max(0, kl - string.len(y)))
+                   .. string.sub(y, math.max(0, string.len(y) - kl) + 1, string.len(y))      
+        end
+        line = line .. (left_separator or "") .. map[y + 1] .. (right_separator or "")
+        print(line)
+    end
 end
 
 function lib.map.set_default_key(map, newkey)
-  assert_type(map, "lib.map.set_default_key first argument", 2, "map")
-  assert_type(newkey, "lib.map.set_default_key second argument", 2, "non-empty string")
-  local new_width = map.width * map.keylength / string.len(newkey)
-  if new_width ~= math.ceil(new_width) then
-    error("lib.map.set_default_key: Map width doesn't fit to new default key.", 2)
-  end
-  rawset(map, "__defaultkey", newkey)
-  rawset(map, "__keylength", string.len(newkey))
-  rawset(map, "__width", new_width)
+    assert_type(map, "lib.map.set_default_key first argument", 2, "map")
+    assert_type(newkey, "lib.map.set_default_key second argument", 2, "non-empty string")
+    local new_width = map.width * map.keylength / string.len(newkey)
+    if new_width ~= math.ceil(new_width) then
+        error("lib.map.set_default_key: Map width doesn't fit to new default key.", 2)
+    end
+    rawset(map, "__defaultkey", newkey)
+    rawset(map, "__keylength", string.len(newkey))
+    rawset(map, "__width", new_width)
 end
 
 lib.map.metatable = {
-  __concat = lib.map.concat_horizontally,
-  __add = lib.map.concat_vertically,
-  __mul = lib.map.fuse,
-  __pow = lib.map.transform,
-  __index = lib.map.get,
-  __newindex = lib.map.set,
-  _type = "map"
+    __concat = lib.map.concat_horizontally,
+    __add = lib.map.concat_vertically,
+    __mul = lib.map.fuse,
+    __pow = lib.map.transform,
+    __index = lib.map.get,
+    __newindex = lib.map.set,
+    _type = "map"
 }
 
 wo:_register("newMap",
-  function(world, defaultKey, arg1, arg2)
-    local newmap = {user_attributes = {}}
-    -- Check arguments, create map if necessary.
-    assert_type(defaultKey, "wo:newMap first argument (default key)", 2, "non-empty string")
-    local width = 0
-    local height = 0
-    local kl = string.len(defaultKey)
-    if (type(arg1) == "table") and (type(arg2) == "nil") then
-      -- Interpret table as map.
-      for key, entry in pairs(arg1) do
-        if type(key) == "number" then
-          -- This line is going to be a real map entry.
-          height = math.max(height, key)
-          assert_type(entry, "wo:newMap line " .. key, 2, "string")
-          local line_width = string.len(entry) / kl
-          if line_width ~= math.floor(line_width) then
-            error("newMap: Line " .. key .. " doesn't fit to key length (" .. kl .. ").", 2)
-          end
-          width = math.max(width, line_width)
-          newmap[key] = entry
-        elseif type(key) == "string" then
-          newmap.user_attributes[key] = entry
+    function(world, defaultKey, arg1, arg2)
+        local newmap = {user_attributes = {}}
+        -- Check arguments, create map if necessary.
+        assert_type(defaultKey, "wo:newMap first argument (default key)", 2, "non-empty string")
+        local width = 0
+        local height = 0
+        local kl = string.len(defaultKey)
+        if (type(arg1) == "table") and (type(arg2) == "nil") then
+            -- Interpret table as map.
+            for key, entry in pairs(arg1) do
+                if type(key) == "number" then
+                    -- This line is going to be a real map entry.
+                    height = math.max(height, key)
+                    assert_type(entry, "wo:newMap line " .. key, 2, "string")
+                    local line_width = string.len(entry) / kl
+                    if line_width ~= math.floor(line_width) then
+                        error("newMap: Line " .. key .. " doesn't fit to key length (" .. kl .. ").", 2)
+                    end
+                    width = math.max(width, line_width)
+                    newmap[key] = entry
+                elseif type(key) == "string" then
+                    newmap.user_attributes[key] = entry
+                else
+                    error("newMap: Strange type for a map table key: " .. etype(key) .. ".", 2)
+                end
+            end
+            -- Now complete the map, make it rectangular.
+            for y = 1, height do
+                newmap[y] = newmap[y] or ""
+                newmap[y] = newmap[y] .. string.rep(defaultKey, width - string.len(newmap[y]) / kl)
+            end
+        elseif type(arg1) == "number" and type(arg2) == "number" then
+            -- Create map from scratch.
+            assert_type(arg1, "wo:newMap third argument (width)", 2, "positive integer")
+            assert_type(arg2, "wo:newMap fourth argument (height)", 2, "positive integer")
+            local line = string.rep(defaultKey, arg1)
+            for y = 1, arg2 do
+                newmap[y] = line
+            end
+            width = arg1
+            height = arg2
+        elseif type(arg1) == "nil" and type(arg2) == "nil" then
+            -- Create 1x1-map from scratch.
+            return wo:newMap(defaultKey, 1, 1)
         else
-          error("newMap: Strange type for a map table key: " .. etype(key) .. ".", 2)
+            error("wo:newMap: Syntax error. Can't understand arguments.", 2)
         end
-      end
-      -- Now complete the map, make it rectangular.
-      for y = 1, height do
-        newmap[y] = newmap[y] or ""
-        newmap[y] = newmap[y] .. string.rep(defaultKey, width - string.len(newmap[y]) / kl)
-      end
-    elseif type(arg1) == "number" and type(arg2) == "number" then
-      -- Create map from scratch.
-      assert_type(arg1, "wo:newMap third argument (width)", 2, "positive integer")
-      assert_type(arg2, "wo:newMap fourth argument (height)", 2, "positive integer")
-      local line = string.rep(defaultKey, arg1)
-      for y = 1, arg2 do
-        newmap[y] = line
-      end
-      width = arg1
-      height = arg2
-    elseif type(arg1) == "nil" and type(arg2) == "nil" then
-      -- Create 1x1-map from scratch.
-      return wo:newMap(defaultKey, 1, 1)
-    else
-      error("wo:newMap: Syntax error. Can't understand arguments.", 2)
+        -- Set additional values.
+        newmap.__width = width
+        newmap.__height = height
+        newmap.__defaultkey = defaultKey
+        newmap.__keylength = string.len(defaultKey)
+        -- Set methods and finally metatable.
+        newmap.covers = lib.map.covers
+        newmap.defuse = lib.map.defuse
+        newmap.extend = lib.map.extend
+        newmap.match = lib.map.match
+        newmap.paste = lib.map.paste
+        newmap.print = lib.map.print
+        newmap.replace = lib.map.replace
+        newmap.replace_outside = lib.map.replace_outside
+        newmap.set_default_key = lib.map.set_default_key
+        newmap.sub = lib.map.sub
+        newmap.trim = lib.map.trim
+        setmetatable(newmap, lib.map.metatable)
+        return newmap
     end
-    -- Set additional values.
-    newmap.__width = width
-    newmap.__height = height
-    newmap.__defaultkey = defaultKey
-    newmap.__keylength = string.len(defaultKey)
-    -- Set methods and finally metatable.
-    newmap.covers = lib.map.covers
-    newmap.defuse = lib.map.defuse
-    newmap.extend = lib.map.extend
-    newmap.match = lib.map.match
-    newmap.paste = lib.map.paste
-    newmap.print = lib.map.print
-    newmap.replace = lib.map.replace
-    newmap.replace_outside = lib.map.replace_outside
-    newmap.set_default_key = lib.map.set_default_key
-    newmap.sub = lib.map.sub
-    newmap.trim = lib.map.trim
-    setmetatable(newmap, lib.map.metatable)
-    return newmap
-  end
 )
 
     ]]></el:luamain>

Modified: trunk/data/levels/lib/libmath.xml
===================================================================
--- trunk/data/levels/lib/libmath.xml	2009-03-31 15:39:49 UTC (rev 1604)
+++ trunk/data/levels/lib/libmath.xml	2009-03-31 21:37:25 UTC (rev 1605)
@@ -50,23 +50,23 @@
 -- If X2 and Y2 are nil, X1 and Y1 are assumed to be positions
 -- instead of coordinates.
 function lib.math.manhattan_distance(x1, y1, x2, y2)
-  if x1 and y1 and x2 and y2 then
-    -- x1, y1, x2, y2 are coordinates
-    return math.abs(x1 - x2) + math.abs(y1 - y2)
-  end
-  if x1 and y1 then
-    -- x1 and y1 are positions, possibly tables.
-    local p1 = x1
-    local p2 = y1
-    if type(p1) == "table" then
-      p1 = po(p1)
+    if x1 and y1 and x2 and y2 then
+        -- x1, y1, x2, y2 are coordinates
+        return math.abs(x1 - x2) + math.abs(y1 - y2)
     end
-    if type(p2) == "table" then
-      p2 = po(p2)
+    if x1 and y1 then
+        -- x1 and y1 are positions, possibly tables.
+        local p1 = x1
+        local p2 = y1
+        if type(p1) == "table" then
+            p1 = po(p1)
+        end
+        if type(p2) == "table" then
+            p2 = po(p2)
+        end
+        return math.abs(p1.x - p2.x) + math.abs(p1.y - p2.y)
     end
-    return math.abs(p1.x - p2.x) + math.abs(p1.y - p2.y)
-  end
-  error("manhattan_distance: Too less arguments.", 2)
+    error("manhattan_distance: Too less arguments.", 2)
 end
 
 ---------------------------------------------------------------------
@@ -86,37 +86,37 @@
 --   lib.math.digits(x, {0,1,2,3,4,5,6,7,8,9,"A","B","C","D","E","F"})
 -- NUMBER is supposed to be a non-negative integer.
 function lib.math.digits(number, base)
-  -- Check arguments and calculate fullbase and exponent
-  assert_type(number, "lib.math.digits first argument", 2, "natural")
-  assert_type(base, "lib.math.digits second argument", 2, "integer", "table")
-  local fullbase = {}
-  local exponent = 0
-  if type(base) == "number" then
-    if base < 2 then
-      error("lib.math.digits: Second argument out of range, is "..base..", must be at least 2.", 2)
+    -- Check arguments and calculate fullbase and exponent
+    assert_type(number, "lib.math.digits first argument", 2, "natural")
+    assert_type(base, "lib.math.digits second argument", 2, "integer", "table")
+    local fullbase = {}
+    local exponent = 0
+    if type(base) == "number" then
+        if base < 2 then
+            error("lib.math.digits: Second argument out of range, is "..base..", must be at least 2.", 2)
+        end
+        for j = 1, base do
+            table.insert(fullbase, j - 1)
+        end
+    else -- type(base) == "table"
+        if table.getn(base) < 2 then
+            error("lib.math.digits: Second argument has not enough elements, must be at least 2.", 2)
+        end
+        fullbase = base
     end
-    for j = 1, base do
-      table.insert(fullbase, j - 1)
+    exponent = table.getn(fullbase)
+    -- Decompose NUMBER
+    local remains = number
+    local result = {}
+    while remains > 0 do
+        local d = remains % exponent
+        table.insert(result, fullbase[d + 1])
+        remains = (remains - d) / exponent
+        if remains ~= math.ceil(remains) then
+            error("lib.math.digits: Internal error during calculation (remains = "..remains..").")
+        end
     end
-  else -- type(base) == "table"
-    if table.getn(base) < 2 then
-      error("lib.math.digits: Second argument has not enough elements, must be at least 2.", 2)
-    end
-    fullbase = base
-  end
-  exponent = table.getn(fullbase)
-  -- Decompose NUMBER
-  local remains = number
-  local result = {}
-  while remains > 0 do
-    local d = remains % exponent
-    table.insert(result, fullbase[d + 1])
-    remains = (remains - d) / exponent
-    if remains ~= math.ceil(remains) then
-      error("lib.math.digits: Internal error during calculation (remains = "..remains..").")
-    end
-  end
-  return result
+    return result
 end
 
 -- Return a table of all combinations of DEPTH entries,
@@ -128,28 +128,28 @@
 -- of depth DEPTH. Note that liblua has to be loaded to use
 -- lib.math.combinations.
 function lib.math.combinations(depth, digits)
-  local all_combinations = {{}}
-  local digs = digits
-  assert_type(depth, "lib.math.combinations first argument (depth)", 2, "positive integer")
-  assert_type(digits, "lib.math.combinations second argument (digits)", 2, "positive integer", "table")
-  if type(digits) == "number" then
-    digs = {}
-    for j = 1, digits do
-      digs[j] = j
+    local all_combinations = {{}}
+    local digs = digits
+    assert_type(depth, "lib.math.combinations first argument (depth)", 2, "positive integer")
+    assert_type(digits, "lib.math.combinations second argument (digits)", 2, "positive integer", "table")
+    if type(digits) == "number" then
+        digs = {}
+        for j = 1, digits do
+            digs[j] = j
+        end
     end
-  end
-  for _ = 1, depth do
-    local next_step = {}
-    for _, old_combination in pairs(all_combinations) do
-      for _, new_digit in pairs(digs) do
-        local new_combination = lib.lua.deep_copy(old_combination)
-        table.insert(new_combination, new_digit)
-        table.insert(next_step, new_combination)
-      end
+    for _ = 1, depth do
+        local next_step = {}
+        for _, old_combination in pairs(all_combinations) do
+            for _, new_digit in pairs(digs) do
+                local new_combination = lib.lua.deep_copy(old_combination)
+                table.insert(new_combination, new_digit)
+                table.insert(next_step, new_combination)
+            end
+        end
+        all_combinations = next_step
     end
-    all_combinations = next_step
-  end
-  return all_combinations
+    return all_combinations
 end
 
 -- cubic_polynomial returns the result of the
@@ -162,12 +162,12 @@
 -- to your own liking. Entries in A which are not
 -- numbers are considered zero.
 function lib.math.cubic_polynomial(a, x, y)
-  assert_type(a, "lib.math.cubic_polynomial first argument", 2, "table")
-  assert_type(x, "lib.math.cubic_polynomial second argument", 2, "number")
-  assert_type(y, "lib.math.cubic_polynomial third argument", 2, "number")
-  return   (a[10] or 0)*y*y*y + (a[9] or 0)*x*y*y + (a[8] or 0)*x*x*y
-         + (a[7] or 0)*x*x*x + (a[6] or 0)*y*y + (a[5] or 0)*x*y
-         + (a[4] or 0)*x*x + (a[3] or 0)*y + (a[2] or 0)*x + (a[1] or 0)
+    assert_type(a, "lib.math.cubic_polynomial first argument", 2, "table")
+    assert_type(x, "lib.math.cubic_polynomial second argument", 2, "number")
+    assert_type(y, "lib.math.cubic_polynomial third argument", 2, "number")
+    return   (a[10] or 0)*y*y*y + (a[9] or 0)*x*y*y + (a[8] or 0)*x*x*y
+           + (a[7] or 0)*x*x*x + (a[6] or 0)*y*y + (a[5] or 0)*x*y
+           + (a[4] or 0)*x*x + (a[3] or 0)*y + (a[2] or 0)*x + (a[1] or 0)
 end
 
 -- steps takes DISCRIMINATOR and returns a value dependend on where
@@ -179,18 +179,18 @@
 --     3: If  13 <= x
 -- Negative and non-integer values are allowed.
 function lib.math.steps(discriminator, steps)
-  assert_type(discriminator, "lib.math.steps first argument", 2, "number")
-  assert_type(steps, "lib.math.steps second argument", 2, "table")
-  local result = 0
-  for _, height in ipairs(steps) do
-    assert_type(height, "lib.math.steps entry in second argument (height)", 2, "number")
-    if discriminator < height then
-      return result
-    else
-      result = result + 1
+    assert_type(discriminator, "lib.math.steps first argument", 2, "number")
+    assert_type(steps, "lib.math.steps second argument", 2, "table")
+    local result = 0
+    for _, height in ipairs(steps) do
+        assert_type(height, "lib.math.steps entry in second argument (height)", 2, "number")
+        if discriminator < height then
+            return result
+        else
+            result = result + 1
+        end
     end
-  end
-  return result
+    return result
 end
 
 ---------------------------------------------------------------------
@@ -201,42 +201,42 @@
 -- This function outputs a table with integer entries between
 -- 1 and n at positions 1 to n.
 function lib.math.permutation(n)
-  assert_type(n, "lib.math.permutation first argument", 2, "positive integer")
-  if n == 1 then
-    return {1}
-  end
-  local sequence = {}
-  for j = 1, n do
-    table.insert(sequence, j)
-  end
-  for n = table.getn(sequence), 2, -1 do
-    local m = math.random(n)
-    sequence[n], sequence[m] = sequence[m], sequence[n]
-  end
-  return sequence
+    assert_type(n, "lib.math.permutation first argument", 2, "positive integer")
+    if n == 1 then
+        return {1}
+    end
+    local sequence = {}
+    for j = 1, n do
+        table.insert(sequence, j)
+    end
+    for n = table.getn(sequence), 2, -1 do
+        local m = math.random(n)
+        sequence[n], sequence[m] = sequence[m], sequence[n]
+    end
+    return sequence
 end
 
 -- Return a random cyclic permutation (i.e. with only one cycle) of n elements.
 function lib.math.cyclic_permutation(n)
-  assert_type(n, "lib.math.cyclic_permutation first argument", 2, "positive integer")
-  local sequence1 = lib.math.permutation(n)
-  local sequence2 = {}
-  for j = 1, n - 1 do
-    sequence2[sequence1[j]] = sequence1[j+1]
-  end
-  sequence2[sequence1[n]] = sequence1[1]
-  return sequence2
+    assert_type(n, "lib.math.cyclic_permutation first argument", 2, "positive integer")
+    local sequence1 = lib.math.permutation(n)
+    local sequence2 = {}
+    for j = 1, n - 1 do
+        sequence2[sequence1[j]] = sequence1[j+1]
+    end
+    sequence2[sequence1[n]] = sequence1[1]
+    return sequence2
 end
 
 -- Return a table with NUMBER random entries.
 -- Additional arguments like with math.random.
 function lib.math.random_vector(number, ...)
-  assert_type(number, "lib.math.random_vector first argument", 2, "natural")
-  local result = {}
-  for j = 1, number do
-    result[j] = math.random(...)
-  end
-  return result
+    assert_type(number, "lib.math.random_vector first argument", 2, "natural")
+    local result = {}
+    for j = 1, number do
+        result[j] = math.random(...)
+    end
+    return result
 end
 
     ]]></el:luamain>

Modified: trunk/data/levels/lib/libsoko.xml
===================================================================
--- trunk/data/levels/lib/libsoko.xml	2009-03-31 15:39:49 UTC (rev 1604)
+++ trunk/data/levels/lib/libsoko.xml	2009-03-31 21:37:25 UTC (rev 1605)
@@ -392,6 +392,10 @@
     end
     
     lib.soko.polist.inf = lib.soko.polist.way .. lib.soko.polist.wall
+    
+    local nogoals = fl(lib.soko.polist.way) - fl(lib.soko.polist.goal)
+    nogoals.freeze_check = true
+    no["box#*"].freeze_check = true
 
     -- polist.wall_one
     -- There are three conditions for an element of polist.wall_one:



From ral at mail.berlios.de  Tue Mar 31 23:45:16 2009
From: ral at mail.berlios.de (ral at BerliOS)
Date: Tue, 31 Mar 2009 23:45:16 +0200
Subject: [Enigma-game-svn] r1606 - trunk/lib-src/lua
Message-ID: <200903312145.n2VLjGXP027082@sheep.berlios.de>

Author: ral
Date: 2009-03-31 23:45:14 +0200 (Tue, 31 Mar 2009)
New Revision: 1606

Modified:
   trunk/lib-src/lua/lapi.c
   trunk/lib-src/lua/lapi.h
   trunk/lib-src/lua/lauxlib.c
   trunk/lib-src/lua/lauxlib.h
   trunk/lib-src/lua/lbaselib.c
   trunk/lib-src/lua/lcode.c
   trunk/lib-src/lua/lcode.h
   trunk/lib-src/lua/ldblib.c
   trunk/lib-src/lua/ldebug.c
   trunk/lib-src/lua/ldebug.h
   trunk/lib-src/lua/ldo.c
   trunk/lib-src/lua/ldo.h
   trunk/lib-src/lua/ldump.c
   trunk/lib-src/lua/lfunc.c
   trunk/lib-src/lua/lfunc.h
   trunk/lib-src/lua/lgc.c
   trunk/lib-src/lua/lgc.h
   trunk/lib-src/lua/linit.c
   trunk/lib-src/lua/liolib.c
   trunk/lib-src/lua/llex.c
   trunk/lib-src/lua/llex.h
   trunk/lib-src/lua/llimits.h
   trunk/lib-src/lua/lmathlib.c
   trunk/lib-src/lua/lmem.c
   trunk/lib-src/lua/lmem.h
   trunk/lib-src/lua/loadlib.c
   trunk/lib-src/lua/lobject.c
   trunk/lib-src/lua/lobject.h
   trunk/lib-src/lua/lopcodes.c
   trunk/lib-src/lua/lopcodes.h
   trunk/lib-src/lua/loslib.c
   trunk/lib-src/lua/lparser.c
   trunk/lib-src/lua/lparser.h
   trunk/lib-src/lua/lstate.c
   trunk/lib-src/lua/lstate.h
   trunk/lib-src/lua/lstring.c
   trunk/lib-src/lua/lstring.h
   trunk/lib-src/lua/lstrlib.c
   trunk/lib-src/lua/ltable.c
   trunk/lib-src/lua/ltable.h
   trunk/lib-src/lua/ltablib.c
   trunk/lib-src/lua/ltm.c
   trunk/lib-src/lua/ltm.h
   trunk/lib-src/lua/lua.h
   trunk/lib-src/lua/luaconf.h
   trunk/lib-src/lua/lualib.h
   trunk/lib-src/lua/lundump.c
   trunk/lib-src/lua/lundump.h
   trunk/lib-src/lua/lvm.c
   trunk/lib-src/lua/lvm.h
   trunk/lib-src/lua/lzio.c
   trunk/lib-src/lua/lzio.h
Log:
Trunk 1.1:
- update Lua to 5.1.4

Modified: trunk/lib-src/lua/lapi.c
===================================================================
--- trunk/lib-src/lua/lapi.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lapi.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lapi.c,v 2.55 2006/06/07 12:37:17 roberto Exp $
+** $Id: lapi.c,v 2.55.1.5 2008/07/04 18:41:18 roberto Exp $
 ** Lua API
 ** See Copyright Notice in lua.h
 */
@@ -93,15 +93,14 @@
 
 
 LUA_API int lua_checkstack (lua_State *L, int size) {
-  int res;
+  int res = 1;
   lua_lock(L);
-  if ((L->top - L->base + size) > LUAI_MAXCSTACK)
+  if (size > LUAI_MAXCSTACK || (L->top - L->base + size) > LUAI_MAXCSTACK)
     res = 0;  /* stack overflow */
-  else {
+  else if (size > 0) {
     luaD_checkstack(L, size);
     if (L->ci->top < L->top + size)
       L->ci->top = L->top + size;
-    res = 1;
   }
   lua_unlock(L);
   return res;
@@ -123,6 +122,11 @@
 }
 
 
+LUA_API void lua_setlevel (lua_State *from, lua_State *to) {
+  to->nCcalls = from->nCcalls;
+}
+
+
 LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {
   lua_CFunction old;
   lua_lock(L);
@@ -749,7 +753,7 @@
       res = 0;
       break;
   }
-  luaC_objbarrier(L, gcvalue(o), hvalue(L->top - 1));
+  if (res) luaC_objbarrier(L, gcvalue(o), hvalue(L->top - 1));
   L->top--;
   lua_unlock(L);
   return res;
@@ -925,10 +929,13 @@
         g->GCthreshold = g->totalbytes - a;
       else
         g->GCthreshold = 0;
-      while (g->GCthreshold <= g->totalbytes)
+      while (g->GCthreshold <= g->totalbytes) {
         luaC_step(L);
-      if (g->gcstate == GCSpause)  /* end of cycle? */
-        res = 1;  /* signal it */
+        if (g->gcstate == GCSpause) {  /* end of cycle? */
+          res = 1;  /* signal it */
+          break;
+        }
+      }
       break;
     }
     case LUA_GCSETPAUSE: {

Modified: trunk/lib-src/lua/lapi.h
===================================================================
--- trunk/lib-src/lua/lapi.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lapi.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lapi.h,v 2.2 2005/04/25 19:24:10 roberto Exp $
+** $Id: lapi.h,v 2.2.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Auxiliary functions from Lua API
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lauxlib.c
===================================================================
--- trunk/lib-src/lua/lauxlib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lauxlib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lauxlib.c,v 1.159 2006/03/21 19:31:09 roberto Exp $
+** $Id: lauxlib.c,v 1.159.1.3 2008/01/21 13:20:51 roberto Exp $
 ** Auxiliary functions for building Lua libraries
 ** See Copyright Notice in lua.h
 */
@@ -244,7 +244,7 @@
   if (libname) {
     int size = libsize(l);
     /* check whether lib already exists */
-    luaL_findtable(L, LUA_REGISTRYINDEX, "_LOADED", size);
+    luaL_findtable(L, LUA_REGISTRYINDEX, "_LOADED", 1);
     lua_getfield(L, -1, libname);  /* get _LOADED[libname] */
     if (!lua_istable(L, -1)) {  /* not found? */
       lua_pop(L, 1);  /* remove previous result */
@@ -535,7 +535,7 @@
     return "\n";
   }
   if (feof(lf->f)) return NULL;
-  *size = fread(lf->buff, 1, LUAL_BUFFERSIZE, lf->f);
+  *size = fread(lf->buff, 1, sizeof(lf->buff), lf->f);
   return (*size > 0) ? lf->buff : NULL;
 }
 
@@ -570,9 +570,8 @@
     while ((c = getc(lf.f)) != EOF && c != '\n') ;  /* skip first line */
     if (c == '\n') c = getc(lf.f);
   }
-  if (c == LUA_SIGNATURE[0] && lf.f != stdin) {  /* binary file? */
-    fclose(lf.f);
-    lf.f = fopen(filename, "rb");  /* reopen in binary mode */
+  if (c == LUA_SIGNATURE[0] && filename) {  /* binary file? */
+    lf.f = freopen(filename, "rb", lf.f);  /* reopen in binary mode */
     if (lf.f == NULL) return errfile(L, "reopen", fnameindex);
     /* skip eventual `#!...' */
    while ((c = getc(lf.f)) != EOF && c != LUA_SIGNATURE[0]) ;
@@ -581,7 +580,7 @@
   ungetc(c, lf.f);
   status = lua_load(L, getF, &lf, lua_tostring(L, -1));
   readstatus = ferror(lf.f);
-  if (lf.f != stdin) fclose(lf.f);  /* close file (even in case of errors) */
+  if (filename) fclose(lf.f);  /* close file (even in case of errors) */
   if (readstatus) {
     lua_settop(L, fnameindex);  /* ignore results from `lua_load' */
     return errfile(L, "read", fnameindex);

Modified: trunk/lib-src/lua/lauxlib.h
===================================================================
--- trunk/lib-src/lua/lauxlib.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lauxlib.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lauxlib.h,v 1.88 2006/04/12 20:31:15 roberto Exp $
+** $Id: lauxlib.h,v 1.88.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Auxiliary functions for building Lua libraries
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lbaselib.c
===================================================================
--- trunk/lib-src/lua/lbaselib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lbaselib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lbaselib.c,v 1.191 2006/06/02 15:34:00 roberto Exp $
+** $Id: lbaselib.c,v 1.191.1.6 2008/02/14 16:46:22 roberto Exp $
 ** Basic library
 ** See Copyright Notice in lua.h
 */
@@ -114,11 +114,11 @@
 }
 
 
-static void getfunc (lua_State *L) {
+static void getfunc (lua_State *L, int opt) {
   if (lua_isfunction(L, 1)) lua_pushvalue(L, 1);
   else {
     lua_Debug ar;
-    int level = luaL_optint(L, 1, 1);
+    int level = opt ? luaL_optint(L, 1, 1) : luaL_checkint(L, 1);
     luaL_argcheck(L, level >= 0, 1, "level must be non-negative");
     if (lua_getstack(L, level, &ar) == 0)
       luaL_argerror(L, 1, "invalid level");
@@ -131,7 +131,7 @@
 
 
 static int luaB_getfenv (lua_State *L) {
-  getfunc(L);
+  getfunc(L, 1);
   if (lua_iscfunction(L, -1))  /* is a C function? */
     lua_pushvalue(L, LUA_GLOBALSINDEX);  /* return the thread's global env. */
   else
@@ -142,7 +142,7 @@
 
 static int luaB_setfenv (lua_State *L) {
   luaL_checktype(L, 2, LUA_TTABLE);
-  getfunc(L);
+  getfunc(L, 0);
   lua_pushvalue(L, 2);
   if (lua_isnumber(L, 1) && lua_tonumber(L, 1) == 0) {
     /* change environment of current thread */
@@ -344,10 +344,12 @@
   luaL_checktype(L, 1, LUA_TTABLE);
   i = luaL_optint(L, 2, 1);
   e = luaL_opt(L, luaL_checkint, 3, luaL_getn(L, 1));
+  if (i > e) return 0;  /* empty range */
   n = e - i + 1;  /* number of elements */
-  if (n <= 0) return 0;  /* empty range */
-  luaL_checkstack(L, n, "table too big to unpack");
-  for (; i<=e; i++)  /* push arg[i...e] */
+  if (n <= 0 || !lua_checkstack(L, n))  /* n <= 0 means arith. overflow */
+    return luaL_error(L, "too many results to unpack");
+  lua_rawgeti(L, 1, i);  /* push arg[i] (avoiding overflow problems) */
+  while (i++ < e)  /* push arg[i + 1...e] */
     lua_rawgeti(L, 1, i);
   return n;
 }
@@ -477,19 +479,56 @@
 ** =======================================================
 */
 
+#define CO_RUN	0	/* running */
+#define CO_SUS	1	/* suspended */
+#define CO_NOR	2	/* 'normal' (it resumed another coroutine) */
+#define CO_DEAD	3
+
+static const char *const statnames[] =
+    {"running", "suspended", "normal", "dead"};
+
+static int costatus (lua_State *L, lua_State *co) {
+  if (L == co) return CO_RUN;
+  switch (lua_status(co)) {
+    case LUA_YIELD:
+      return CO_SUS;
+    case 0: {
+      lua_Debug ar;
+      if (lua_getstack(co, 0, &ar) > 0)  /* does it have frames? */
+        return CO_NOR;  /* it is running */
+      else if (lua_gettop(co) == 0)
+          return CO_DEAD;
+      else
+        return CO_SUS;  /* initial state */
+    }
+    default:  /* some error occured */
+      return CO_DEAD;
+  }
+}
+
+
+static int luaB_costatus (lua_State *L) {
+  lua_State *co = lua_tothread(L, 1);
+  luaL_argcheck(L, co, 1, "coroutine expected");
+  lua_pushstring(L, statnames[costatus(L, co)]);
+  return 1;
+}
+
+
 static int auxresume (lua_State *L, lua_State *co, int narg) {
-  int status;
+  int status = costatus(L, co);
   if (!lua_checkstack(co, narg))
     luaL_error(L, "too many arguments to resume");
-  if (lua_status(co) == 0 && lua_gettop(co) == 0) {
-    lua_pushliteral(L, "cannot resume dead coroutine");
+  if (status != CO_SUS) {
+    lua_pushfstring(L, "cannot resume %s coroutine", statnames[status]);
     return -1;  /* error flag */
   }
   lua_xmove(L, co, narg);
+  lua_setlevel(L, co);
   status = lua_resume(co, narg);
   if (status == 0 || status == LUA_YIELD) {
     int nres = lua_gettop(co);
-    if (!lua_checkstack(L, nres))
+    if (!lua_checkstack(L, nres + 1))
       luaL_error(L, "too many results to resume");
     lua_xmove(co, L, nres);  /* move yielded values */
     return nres;
@@ -556,39 +595,10 @@
 }
 
 
-static int luaB_costatus (lua_State *L) {
-  lua_State *co = lua_tothread(L, 1);
-  luaL_argcheck(L, co, 1, "coroutine expected");
-  if (L == co) lua_pushliteral(L, "running");
-  else {
-    switch (lua_status(co)) {
-      case LUA_YIELD:
-        lua_pushliteral(L, "suspended");
-        break;
-      case 0: {
-        lua_Debug ar;
-        if (lua_getstack(co, 0, &ar) > 0)  /* does it have frames? */
-          lua_pushliteral(L, "normal");  /* it is running */
-        else if (lua_gettop(co) == 0)
-            lua_pushliteral(L, "dead");
-        else
-          lua_pushliteral(L, "suspended");  /* initial state */
-        break;
-      }
-      default:  /* some error occured */
-        lua_pushliteral(L, "dead");
-        break;
-    }
-  }
-  return 1;
-}
-
-
 static int luaB_corunning (lua_State *L) {
   if (lua_pushthread(L))
-    return 0;  /* main thread is not a coroutine */
-  else
-    return 1;
+    lua_pushnil(L);  /* main thread is not a coroutine */
+  return 1;
 }
 
 

Modified: trunk/lib-src/lua/lcode.c
===================================================================
--- trunk/lib-src/lua/lcode.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lcode.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lcode.c,v 2.25 2006/03/21 19:28:49 roberto Exp $
+** $Id: lcode.c,v 2.25.1.3 2007/12/28 15:32:23 roberto Exp $
 ** Code generator for Lua
 ** See Copyright Notice in lua.h
 */
@@ -35,15 +35,20 @@
 void luaK_nil (FuncState *fs, int from, int n) {
   Instruction *previous;
   if (fs->pc > fs->lasttarget) {  /* no jumps to current position? */
-    if (fs->pc == 0)  /* function start? */
-      return;  /* positions are already clean */
-    if (GET_OPCODE(*(previous = &fs->f->code[fs->pc-1])) == OP_LOADNIL) {
-      int pfrom = GETARG_A(*previous);
-      int pto = GETARG_B(*previous);
-      if (pfrom <= from && from <= pto+1) {  /* can connect both? */
-        if (from+n-1 > pto)
-          SETARG_B(*previous, from+n-1);
-        return;
+    if (fs->pc == 0) {  /* function start? */
+      if (from >= fs->nactvar)
+        return;  /* positions are already clean */
+    }
+    else {
+      previous = &fs->f->code[fs->pc-1];
+      if (GET_OPCODE(*previous) == OP_LOADNIL) {
+        int pfrom = GETARG_A(*previous);
+        int pto = GETARG_B(*previous);
+        if (pfrom <= from && from <= pto+1) {  /* can connect both? */
+          if (from+n-1 > pto)
+            SETARG_B(*previous, from+n-1);
+          return;
+        }
       }
     }
   }
@@ -657,10 +662,16 @@
   if (constfolding(op, e1, e2))
     return;
   else {
+    int o2 = (op != OP_UNM && op != OP_LEN) ? luaK_exp2RK(fs, e2) : 0;
     int o1 = luaK_exp2RK(fs, e1);
-    int o2 = (op != OP_UNM && op != OP_LEN) ? luaK_exp2RK(fs, e2) : 0;
-    freeexp(fs, e2);
-    freeexp(fs, e1);
+    if (o1 > o2) {
+      freeexp(fs, e1);
+      freeexp(fs, e2);
+    }
+    else {
+      freeexp(fs, e2);
+      freeexp(fs, e1);
+    }
     e1->u.s.info = luaK_codeABC(fs, op, 0, o1, o2);
     e1->k = VRELOCABLE;
   }
@@ -688,7 +699,7 @@
   e2.t = e2.f = NO_JUMP; e2.k = VKNUM; e2.u.nval = 0;
   switch (op) {
     case OPR_MINUS: {
-      if (e->k == VK)
+      if (!isnumeral(e))
         luaK_exp2anyreg(fs, e);  /* cannot operate on non-numeric constants */
       codearith(fs, OP_UNM, e, &e2);
       break;
@@ -718,10 +729,15 @@
       luaK_exp2nextreg(fs, v);  /* operand must be on the `stack' */
       break;
     }
-    default: {
+    case OPR_ADD: case OPR_SUB: case OPR_MUL: case OPR_DIV:
+    case OPR_MOD: case OPR_POW: {
       if (!isnumeral(v)) luaK_exp2RK(fs, v);
       break;
     }
+    default: {
+      luaK_exp2RK(fs, v);
+      break;
+    }
   }
 }
 

Modified: trunk/lib-src/lua/lcode.h
===================================================================
--- trunk/lib-src/lua/lcode.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lcode.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lcode.h,v 1.48 2006/03/21 19:28:03 roberto Exp $
+** $Id: lcode.h,v 1.48.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Code generator for Lua
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/ldblib.c
===================================================================
--- trunk/lib-src/lua/ldblib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldblib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldblib.c,v 1.104 2005/12/29 15:32:11 roberto Exp $
+** $Id: ldblib.c,v 1.104.1.3 2008/01/21 13:11:21 roberto Exp $
 ** Interface from Lua to its debug API
 ** See Copyright Notice in lua.h
 */
@@ -255,24 +255,25 @@
 
 
 static int db_sethook (lua_State *L) {
-  int arg;
+  int arg, mask, count;
+  lua_Hook func;
   lua_State *L1 = getthread(L, &arg);
   if (lua_isnoneornil(L, arg+1)) {
     lua_settop(L, arg+1);
-    lua_sethook(L1, NULL, 0, 0);  /* turn off hooks */
+    func = NULL; mask = 0; count = 0;  /* turn off hooks */
   }
   else {
     const char *smask = luaL_checkstring(L, arg+2);
-    int count = luaL_optint(L, arg+3, 0);
     luaL_checktype(L, arg+1, LUA_TFUNCTION);
-    lua_sethook(L1, hookf, makemask(smask, count), count);
+    count = luaL_optint(L, arg+3, 0);
+    func = hookf; mask = makemask(smask, count);
   }
-  gethooktable(L1);
-  lua_pushlightuserdata(L1, L1);
+  gethooktable(L);
+  lua_pushlightuserdata(L, L1);
   lua_pushvalue(L, arg+1);
-  lua_xmove(L, L1, 1);
-  lua_rawset(L1, -3);  /* set new hook */
-  lua_pop(L1, 1);  /* remove hook table */
+  lua_rawset(L, -3);  /* set new hook */
+  lua_pop(L, 1);  /* remove hook table */
+  lua_sethook(L1, func, mask, count);  /* set hooks */
   return 0;
 }
 
@@ -286,11 +287,10 @@
   if (hook != NULL && hook != hookf)  /* external hook? */
     lua_pushliteral(L, "external hook");
   else {
-    gethooktable(L1);
-    lua_pushlightuserdata(L1, L1);
-    lua_rawget(L1, -2);   /* get hook */
-    lua_remove(L1, -2);  /* remove hook table */
-    lua_xmove(L1, L, 1);
+    gethooktable(L);
+    lua_pushlightuserdata(L, L1);
+    lua_rawget(L, -2);   /* get hook */
+    lua_remove(L, -2);  /* remove hook table */
   }
   lua_pushstring(L, unmakemask(mask, buff));
   lua_pushinteger(L, lua_gethookcount(L1));

Modified: trunk/lib-src/lua/ldebug.c
===================================================================
--- trunk/lib-src/lua/ldebug.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldebug.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldebug.c,v 2.29 2005/12/22 16:19:56 roberto Exp $
+** $Id: ldebug.c,v 2.29.1.6 2008/05/08 16:56:26 roberto Exp $
 ** Debug Interface
 ** See Copyright Notice in lua.h
 */
@@ -275,12 +275,12 @@
 
 static int precheck (const Proto *pt) {
   check(pt->maxstacksize <= MAXSTACK);
-  lua_assert(pt->numparams+(pt->is_vararg & VARARG_HASARG) <= pt->maxstacksize);
-  lua_assert(!(pt->is_vararg & VARARG_NEEDSARG) ||
+  check(pt->numparams+(pt->is_vararg & VARARG_HASARG) <= pt->maxstacksize);
+  check(!(pt->is_vararg & VARARG_NEEDSARG) ||
               (pt->is_vararg & VARARG_HASARG));
   check(pt->sizeupvalues <= pt->nups);
   check(pt->sizelineinfo == pt->sizecode || pt->sizelineinfo == 0);
-  check(GET_OPCODE(pt->code[pt->sizecode-1]) == OP_RETURN);
+  check(pt->sizecode > 0 && GET_OPCODE(pt->code[pt->sizecode-1]) == OP_RETURN);
   return 1;
 }
 
@@ -346,9 +346,18 @@
           int dest = pc+1+b;
           check(0 <= dest && dest < pt->sizecode);
           if (dest > 0) {
-            /* cannot jump to a setlist count */
-            Instruction d = pt->code[dest-1];
-            check(!(GET_OPCODE(d) == OP_SETLIST && GETARG_C(d) == 0));
+            int j;
+            /* check that it does not jump to a setlist count; this
+               is tricky, because the count from a previous setlist may
+               have the same value of an invalid setlist; so, we must
+               go all the way back to the first of them (if any) */
+            for (j = 0; j < dest; j++) {
+              Instruction d = pt->code[dest-1-j];
+              if (!(GET_OPCODE(d) == OP_SETLIST && GETARG_C(d) == 0)) break;
+            }
+            /* if 'j' is even, previous value is not a setlist (even if
+               it looks like one) */
+            check((j&1) == 0);
           }
         }
         break;
@@ -363,7 +372,11 @@
     }
     switch (op) {
       case OP_LOADBOOL: {
-        check(c == 0 || pc+2 < pt->sizecode);  /* check its jump */
+        if (c == 1) {  /* does it jump? */
+          check(pc+2 < pt->sizecode);  /* check its jump */
+          check(GET_OPCODE(pt->code[pc+1]) != OP_SETLIST ||
+                GETARG_C(pt->code[pc+1]) != 0);
+        }
         break;
       }
       case OP_LOADNIL: {
@@ -428,18 +441,23 @@
       }
       case OP_SETLIST: {
         if (b > 0) checkreg(pt, a + b);
-        if (c == 0) pc++;
+        if (c == 0) {
+          pc++;
+          check(pc < pt->sizecode - 1);
+        }
         break;
       }
       case OP_CLOSURE: {
-        int nup;
+        int nup, j;
         check(b < pt->sizep);
         nup = pt->p[b]->nups;
         check(pc + nup < pt->sizecode);
-        for (; nup>0; nup--) {
-          OpCode op1 = GET_OPCODE(pt->code[pc+nup]);
+        for (j = 1; j <= nup; j++) {
+          OpCode op1 = GET_OPCODE(pt->code[pc + j]);
           check(op1 == OP_GETUPVAL || op1 == OP_MOVE);
         }
+        if (reg != NO_REG)  /* tracing? */
+          pc += nup;  /* do not 'execute' these pseudo-instructions */
         break;
       }
       case OP_VARARG: {
@@ -561,8 +579,8 @@
 
 
 void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {
-  if (ttisstring(p1)) p1 = p2;
-  lua_assert(!ttisstring(p1));
+  if (ttisstring(p1) || ttisnumber(p1)) p1 = p2;
+  lua_assert(!ttisstring(p1) && !ttisnumber(p1));
   luaG_typeerror(L, p1, "concatenate");
 }
 

Modified: trunk/lib-src/lua/ldebug.h
===================================================================
--- trunk/lib-src/lua/ldebug.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldebug.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldebug.h,v 2.3 2005/04/25 19:24:10 roberto Exp $
+** $Id: ldebug.h,v 2.3.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Auxiliary functions from Debug Interface module
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/ldo.c
===================================================================
--- trunk/lib-src/lua/ldo.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldo.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldo.c,v 2.38 2006/06/05 19:36:14 roberto Exp $
+** $Id: ldo.c,v 2.38.1.3 2008/01/18 22:31:22 roberto Exp $
 ** Stack and Call structure of Lua
 ** See Copyright Notice in lua.h
 */
@@ -83,7 +83,7 @@
   L->base = L->ci->base;
   luaF_close(L, L->base);  /* close eventual pending closures */
   luaD_seterrorobj(L, status, L->base);
-  L->nCcalls = 0;
+  L->nCcalls = L->baseCcalls;
   L->allowhook = 1;
   restore_stack_limit(L);
   L->errfunc = 0;
@@ -332,7 +332,7 @@
   ptrdiff_t fr = savestack(L, firstResult);  /* next call may change stack */
   luaD_callhook(L, LUA_HOOKRET, -1);
   if (f_isLua(L->ci)) {  /* Lua function? */
-    while (L->ci->tailcalls--)  /* call hook for eventual tail calls */
+    while ((L->hookmask & LUA_MASKRET) && L->ci->tailcalls--) /* tail calls */
       luaD_callhook(L, LUA_HOOKTAILRET, -1);
   }
   return restorestack(L, fr);
@@ -417,22 +417,24 @@
 LUA_API int lua_resume (lua_State *L, int nargs) {
   int status;
   lua_lock(L);
-  if (L->status != LUA_YIELD) {
-    if (L->status != 0)
-      return resume_error(L, "cannot resume dead coroutine");
-    else if (L->ci != L->base_ci)
+  if (L->status != LUA_YIELD && (L->status != 0 || L->ci != L->base_ci))
       return resume_error(L, "cannot resume non-suspended coroutine");
-  }
+  if (L->nCcalls >= LUAI_MAXCCALLS)
+    return resume_error(L, "C stack overflow");
   luai_userstateresume(L, nargs);
-  lua_assert(L->errfunc == 0 && L->nCcalls == 0);
+  lua_assert(L->errfunc == 0);
+  L->baseCcalls = ++L->nCcalls;
   status = luaD_rawrunprotected(L, resume, L->top - nargs);
   if (status != 0) {  /* error? */
     L->status = cast_byte(status);  /* mark thread as `dead' */
     luaD_seterrorobj(L, status, L->top);
     L->ci->top = L->top;
   }
-  else
+  else {
+    lua_assert(L->nCcalls == L->baseCcalls);
     status = L->status;
+  }
+  --L->nCcalls;
   lua_unlock(L);
   return status;
 }
@@ -441,7 +443,7 @@
 LUA_API int lua_yield (lua_State *L, int nresults) {
   luai_userstateyield(L, nresults);
   lua_lock(L);
-  if (L->nCcalls > 0)
+  if (L->nCcalls > L->baseCcalls)
     luaG_runerror(L, "attempt to yield across metamethod/C-call boundary");
   L->base = L->top - nresults;  /* protect stack slots below */
   L->status = LUA_YIELD;

Modified: trunk/lib-src/lua/ldo.h
===================================================================
--- trunk/lib-src/lua/ldo.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldo.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldo.h,v 2.7 2005/08/24 16:15:49 roberto Exp $
+** $Id: ldo.h,v 2.7.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Stack and Call structure of Lua
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/ldump.c
===================================================================
--- trunk/lib-src/lua/ldump.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ldump.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ldump.c,v 1.15 2006/02/16 15:53:49 lhf Exp $
+** $Id: ldump.c,v 2.8.1.1 2007/12/27 13:02:25 roberto Exp $
 ** save precompiled Lua chunks
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lfunc.c
===================================================================
--- trunk/lib-src/lua/lfunc.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lfunc.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lfunc.c,v 2.12 2005/12/22 16:19:56 roberto Exp $
+** $Id: lfunc.c,v 2.12.1.2 2007/12/28 14:58:43 roberto Exp $
 ** Auxiliary functions to manipulate prototypes and closures
 ** See Copyright Notice in lua.h
 */
@@ -55,7 +55,7 @@
   GCObject **pp = &L->openupval;
   UpVal *p;
   UpVal *uv;
-  while ((p = ngcotouv(*pp)) != NULL && p->v >= level) {
+  while (*pp != NULL && (p = ngcotouv(*pp))->v >= level) {
     lua_assert(p->v != &p->u.value);
     if (p->v == level) {  /* found a corresponding upvalue? */
       if (isdead(g, obj2gco(p)))  /* is it dead? */
@@ -96,7 +96,7 @@
 void luaF_close (lua_State *L, StkId level) {
   UpVal *uv;
   global_State *g = G(L);
-  while ((uv = ngcotouv(L->openupval)) != NULL && uv->v >= level) {
+  while (L->openupval != NULL && (uv = ngcotouv(L->openupval))->v >= level) {
     GCObject *o = obj2gco(uv);
     lua_assert(!isblack(o) && uv->v != &uv->u.value);
     L->openupval = uv->next;  /* remove from `open' list */

Modified: trunk/lib-src/lua/lfunc.h
===================================================================
--- trunk/lib-src/lua/lfunc.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lfunc.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lfunc.h,v 2.4 2005/04/25 19:24:10 roberto Exp $
+** $Id: lfunc.h,v 2.4.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Auxiliary functions to manipulate prototypes and closures
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lgc.c
===================================================================
--- trunk/lib-src/lua/lgc.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lgc.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lgc.c,v 2.38 2006/05/24 14:34:06 roberto Exp $
+** $Id: lgc.c,v 2.38.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Garbage Collector
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lgc.h
===================================================================
--- trunk/lib-src/lua/lgc.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lgc.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lgc.h,v 2.15 2005/08/24 16:15:49 roberto Exp $
+** $Id: lgc.h,v 2.15.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Garbage Collector
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/linit.c
===================================================================
--- trunk/lib-src/lua/linit.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/linit.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: linit.c,v 1.14 2005/12/29 15:32:11 roberto Exp $
+** $Id: linit.c,v 1.14.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Initialization of libraries for lua.c
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/liolib.c
===================================================================
--- trunk/lib-src/lua/liolib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/liolib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: liolib.c,v 2.73 2006/05/08 20:14:16 roberto Exp $
+** $Id: liolib.c,v 2.73.1.3 2008/01/18 17:47:43 roberto Exp $
 ** Standard I/O (and system) library
 ** See Copyright Notice in lua.h
 */
@@ -51,7 +51,7 @@
 }
 
 
-#define topfile(L)	((FILE **)luaL_checkudata(L, 1, LUA_FILEHANDLE))
+#define tofilep(L)	((FILE **)luaL_checkudata(L, 1, LUA_FILEHANDLE))
 
 
 static int io_type (lua_State *L) {
@@ -70,7 +70,7 @@
 
 
 static FILE *tofile (lua_State *L) {
-  FILE **f = topfile(L);
+  FILE **f = tofilep(L);
   if (*f == NULL)
     luaL_error(L, "attempt to use a closed file");
   return *f;
@@ -93,19 +93,31 @@
 
 
 /*
-** this function has a separated environment, which defines the
-** correct __close for 'popen' files
+** function to (not) close the standard files stdin, stdout, and stderr
 */
+static int io_noclose (lua_State *L) {
+  lua_pushnil(L);
+  lua_pushliteral(L, "cannot close standard file");
+  return 2;
+}
+
+
+/*
+** function to close 'popen' files
+*/
 static int io_pclose (lua_State *L) {
-  FILE **p = topfile(L);
+  FILE **p = tofilep(L);
   int ok = lua_pclose(L, *p);
   *p = NULL;
   return pushresult(L, ok, NULL);
 }
 
 
+/*
+** function to close regular files
+*/
 static int io_fclose (lua_State *L) {
-  FILE **p = topfile(L);
+  FILE **p = tofilep(L);
   int ok = (fclose(*p) == 0);
   *p = NULL;
   return pushresult(L, ok, NULL);
@@ -128,18 +140,18 @@
 
 
 static int io_gc (lua_State *L) {
-  FILE *f = *topfile(L);
-  /* ignore closed files and standard files */
-  if (f != NULL && f != stdin && f != stdout && f != stderr)
+  FILE *f = *tofilep(L);
+  /* ignore closed files */
+  if (f != NULL)
     aux_close(L);
   return 0;
 }
 
 
 static int io_tostring (lua_State *L) {
-  FILE *f = *topfile(L);
+  FILE *f = *tofilep(L);
   if (f == NULL)
-    lua_pushstring(L, "file (closed)");
+    lua_pushliteral(L, "file (closed)");
   else
     lua_pushfstring(L, "file (%p)", f);
   return 1;
@@ -155,6 +167,10 @@
 }
 
 
+/*
+** this function has a separated environment, which defines the
+** correct __close for 'popen' files
+*/
 static int io_popen (lua_State *L) {
   const char *filename = luaL_checkstring(L, 1);
   const char *mode = luaL_optstring(L, 2, "r");
@@ -280,7 +296,7 @@
     char *p = luaL_prepbuffer(&b);
     if (fgets(p, LUAL_BUFFERSIZE, f) == NULL) {  /* eof? */
       luaL_pushresult(&b);  /* close buffer */
-      return (lua_strlen(L, -1) > 0);  /* check whether read something */
+      return (lua_objlen(L, -1) > 0);  /* check whether read something */
     }
     l = strlen(p);
     if (l == 0 || p[l-1] != '\n')
@@ -308,7 +324,7 @@
     n -= nr;  /* still have to read `n' chars */
   } while (n > 0 && nr == rlen);  /* until end of count or eof */
   luaL_pushresult(&b);  /* close buffer */
-  return (n == 0 || lua_strlen(L, -1) > 0);
+  return (n == 0 || lua_objlen(L, -1) > 0);
 }
 
 
@@ -502,31 +518,36 @@
     lua_pushvalue(L, -1);
     lua_rawseti(L, LUA_ENVIRONINDEX, k);
   }
-  lua_setfield(L, -2, fname);
+  lua_pushvalue(L, -2);  /* copy environment */
+  lua_setfenv(L, -2);  /* set it */
+  lua_setfield(L, -3, fname);
 }
 
 
+static void newfenv (lua_State *L, lua_CFunction cls) {
+  lua_createtable(L, 0, 1);
+  lua_pushcfunction(L, cls);
+  lua_setfield(L, -2, "__close");
+}
+
+
 LUALIB_API int luaopen_io (lua_State *L) {
   createmeta(L);
   /* create (private) environment (with fields IO_INPUT, IO_OUTPUT, __close) */
-  lua_createtable(L, 2, 1);
+  newfenv(L, io_fclose);
   lua_replace(L, LUA_ENVIRONINDEX);
   /* open library */
   luaL_register(L, LUA_IOLIBNAME, iolib);
   /* create (and set) default files */
+  newfenv(L, io_noclose);  /* close function for default files */
   createstdfile(L, stdin, IO_INPUT, "stdin");
   createstdfile(L, stdout, IO_OUTPUT, "stdout");
   createstdfile(L, stderr, 0, "stderr");
-  /* create environment for 'popen' */
+  lua_pop(L, 1);  /* pop environment for default files */
   lua_getfield(L, -1, "popen");
-  lua_createtable(L, 0, 1);
-  lua_pushcfunction(L, io_pclose);
-  lua_setfield(L, -2, "__close");
-  lua_setfenv(L, -2);
+  newfenv(L, io_pclose);  /* create environment for 'popen' */
+  lua_setfenv(L, -2);  /* set fenv for 'popen' */
   lua_pop(L, 1);  /* pop 'popen' */
-  /* set default close function */
-  lua_pushcfunction(L, io_fclose);
-  lua_setfield(L, LUA_ENVIRONINDEX, "__close");
   return 1;
 }
 

Modified: trunk/lib-src/lua/llex.c
===================================================================
--- trunk/lib-src/lua/llex.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/llex.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: llex.c,v 2.20 2006/03/09 18:14:31 roberto Exp $
+** $Id: llex.c,v 2.20.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lexical Analyzer
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/llex.h
===================================================================
--- trunk/lib-src/lua/llex.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/llex.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: llex.h,v 1.58 2006/03/23 18:23:32 roberto Exp $
+** $Id: llex.h,v 1.58.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lexical Analyzer
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/llimits.h
===================================================================
--- trunk/lib-src/lua/llimits.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/llimits.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: llimits.h,v 1.69 2005/12/27 17:12:00 roberto Exp $
+** $Id: llimits.h,v 1.69.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Limits, basic types, and some other `installation-dependent' definitions
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lmathlib.c
===================================================================
--- trunk/lib-src/lua/lmathlib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lmathlib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lmathlib.c,v 1.67 2005/08/26 17:36:32 roberto Exp $
+** $Id: lmathlib.c,v 1.67.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Standard mathematical library
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lmem.c
===================================================================
--- trunk/lib-src/lua/lmem.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lmem.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lmem.c,v 1.70 2005/12/26 13:35:47 roberto Exp $
+** $Id: lmem.c,v 1.70.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Interface to Memory Manager
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lmem.h
===================================================================
--- trunk/lib-src/lua/lmem.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lmem.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lmem.h,v 1.31 2005/04/25 19:24:10 roberto Exp $
+** $Id: lmem.h,v 1.31.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Interface to Memory Manager
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/loadlib.c
===================================================================
--- trunk/lib-src/lua/loadlib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/loadlib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: loadlib.c,v 1.52 2006/04/10 18:27:23 roberto Exp $
+** $Id: loadlib.c,v 1.52.1.3 2008/08/06 13:29:28 roberto Exp $
 ** Dynamic library loader for Lua
 ** See Copyright Notice in lua.h
 **
@@ -16,9 +16,9 @@
 #define loadlib_c
 #define LUA_LIB
 
+#include "lua.h"
+
 #include "lauxlib.h"
-#include "lobject.h"
-#include "lua.h"
 #include "lualib.h"
 
 
@@ -98,7 +98,7 @@
   char buff[MAX_PATH + 1];
   char *lb;
   DWORD nsize = sizeof(buff)/sizeof(char);
-  DWORD n = GetModuleFileName(NULL, buff, nsize);
+  DWORD n = GetModuleFileNameA(NULL, buff, nsize);
   if (n == 0 || n == nsize || (lb = strrchr(buff, '\\')) == NULL)
     luaL_error(L, "unable to get ModuleFileName");
   else {
@@ -112,7 +112,7 @@
 static void pusherror (lua_State *L) {
   int error = GetLastError();
   char buffer[128];
-  if (FormatMessage(FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_FROM_SYSTEM,
+  if (FormatMessageA(FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_FROM_SYSTEM,
       NULL, error, 0, buffer, sizeof(buffer), NULL))
     lua_pushstring(L, buffer);
   else
@@ -125,7 +125,7 @@
 
 
 static void *ll_load (lua_State *L, const char *path) {
-  HINSTANCE lib = LoadLibrary(path);
+  HINSTANCE lib = LoadLibraryA(path);
   if (lib == NULL) pusherror(L);
   return lib;
 }
@@ -356,15 +356,16 @@
   path = lua_tostring(L, -1);
   if (path == NULL)
     luaL_error(L, LUA_QL("package.%s") " must be a string", pname);
-  lua_pushstring(L, "");  /* error accumulator */
+  lua_pushliteral(L, "");  /* error accumulator */
   while ((path = pushnexttemplate(L, path)) != NULL) {
     const char *filename;
     filename = luaL_gsub(L, lua_tostring(L, -1), LUA_PATH_MARK, name);
+    lua_remove(L, -2);  /* remove path template */
     if (readable(filename))  /* does file exist and is readable? */
       return filename;  /* return that file name */
-    lua_pop(L, 2);  /* remove path template and file name */ 
-    luaO_pushfstring(L, "\n\tno file " LUA_QS, filename);
-    lua_concat(L, 2);
+    lua_pushfstring(L, "\n\tno file " LUA_QS, filename);
+    lua_remove(L, -2);  /* remove file name */
+    lua_concat(L, 2);  /* add entry to possible error message */
   }
   return NULL;  /* not found */
 }
@@ -423,8 +424,8 @@
   funcname = mkfuncname(L, name);
   if ((stat = ll_loadfunc(L, filename, funcname)) != 0) {
     if (stat != ERRFUNC) loaderror(L, filename);  /* real error */
-    luaO_pushfstring(L, "\n\tno module " LUA_QS " in file " LUA_QS,
-                        name, filename);
+    lua_pushfstring(L, "\n\tno module " LUA_QS " in file " LUA_QS,
+                       name, filename);
     return 1;  /* function not found */
   }
   return 1;
@@ -438,7 +439,7 @@
     luaL_error(L, LUA_QL("package.preload") " must be a table");
   lua_getfield(L, -1, name);
   if (lua_isnil(L, -1))  /* not found? */
-    luaO_pushfstring(L, "\n\tno field package.preload['%s']", name);
+    lua_pushfstring(L, "\n\tno field package.preload['%s']", name);
   return 1;
 }
 
@@ -462,7 +463,7 @@
   lua_getfield(L, LUA_ENVIRONINDEX, "loaders");
   if (!lua_istable(L, -1))
     luaL_error(L, LUA_QL("package.loaders") " must be a table");
-  lua_pushstring(L, "");  /* error message accumulator */
+  lua_pushliteral(L, "");  /* error message accumulator */
   for (i=1; ; i++) {
     lua_rawgeti(L, -2, i);  /* get a loader */
     if (lua_isnil(L, -1))
@@ -505,8 +506,10 @@
 
 static void setfenv (lua_State *L) {
   lua_Debug ar;
-  lua_getstack(L, 1, &ar);
-  lua_getinfo(L, "f", &ar);
+  if (lua_getstack(L, 1, &ar) == 0 ||
+      lua_getinfo(L, "f", &ar) == 0 ||  /* get calling function */
+      lua_iscfunction(L, -1))
+    luaL_error(L, LUA_QL("module") " not called from a Lua function");
   lua_pushvalue(L, -2);
   lua_setfenv(L, -2);
   lua_pop(L, 1);
@@ -646,8 +649,8 @@
   setpath(L, "path", LUA_PATH, LUA_PATH_DEFAULT);  /* set field `path' */
   setpath(L, "cpath", LUA_CPATH, LUA_CPATH_DEFAULT); /* set field `cpath' */
   /* store config information */
-  lua_pushstring(L, LUA_DIRSEP "\n" LUA_PATHSEP "\n" LUA_PATH_MARK "\n"
-                    LUA_EXECDIR "\n" LUA_IGMARK);
+  lua_pushliteral(L, LUA_DIRSEP "\n" LUA_PATHSEP "\n" LUA_PATH_MARK "\n"
+                     LUA_EXECDIR "\n" LUA_IGMARK);
   lua_setfield(L, -2, "config");
   /* set field `loaded' */
   luaL_findtable(L, LUA_REGISTRYINDEX, "_LOADED", 2);

Modified: trunk/lib-src/lua/lobject.c
===================================================================
--- trunk/lib-src/lua/lobject.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lobject.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lobject.c,v 2.22 2006/02/10 17:43:52 roberto Exp $
+** $Id: lobject.c,v 2.22.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Some generic functions over Lua objects
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lobject.h
===================================================================
--- trunk/lib-src/lua/lobject.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lobject.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lobject.h,v 2.20 2006/01/18 11:37:34 roberto Exp $
+** $Id: lobject.h,v 2.20.1.2 2008/08/06 13:29:48 roberto Exp $
 ** Type definitions for Lua objects
 ** See Copyright Notice in lua.h
 */
@@ -208,7 +208,7 @@
 
 
 #define getstr(ts)	cast(const char *, (ts) + 1)
-#define svalue(o)       getstr(tsvalue(o))
+#define svalue(o)       getstr(rawtsvalue(o))
 
 
 

Modified: trunk/lib-src/lua/lopcodes.c
===================================================================
--- trunk/lib-src/lua/lopcodes.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lopcodes.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lopcodes.c,v 1.37 2005/11/08 19:45:36 roberto Exp $
+** $Id: lopcodes.c,v 1.37.1.1 2007/12/27 13:02:25 roberto Exp $
 ** See Copyright Notice in lua.h
 */
 

Modified: trunk/lib-src/lua/lopcodes.h
===================================================================
--- trunk/lib-src/lua/lopcodes.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lopcodes.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lopcodes.h,v 1.125 2006/03/14 19:04:44 roberto Exp $
+** $Id: lopcodes.h,v 1.125.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Opcodes for Lua virtual machine
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/loslib.c
===================================================================
--- trunk/lib-src/lua/loslib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/loslib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: loslib.c,v 1.19 2006/04/26 18:19:49 roberto Exp $
+** $Id: loslib.c,v 1.19.1.3 2008/01/18 16:38:18 roberto Exp $
 ** Standard Operating System library
 ** See Copyright Notice in lua.h
 */
@@ -146,11 +146,22 @@
     setboolfield(L, "isdst", stm->tm_isdst);
   }
   else {
-    char b[256];
-    if (strftime(b, sizeof(b), s, stm))
-      lua_pushstring(L, b);
-    else
-      return luaL_error(L, LUA_QL("date") " format too long");
+    char cc[3];
+    luaL_Buffer b;
+    cc[0] = '%'; cc[2] = '\0';
+    luaL_buffinit(L, &b);
+    for (; *s; s++) {
+      if (*s != '%' || *(s + 1) == '\0')  /* no conversion specifier? */
+        luaL_addchar(&b, *s);
+      else {
+        size_t reslen;
+        char buff[200];  /* should be big enough for any conversion result */
+        cc[1] = *(++s);
+        reslen = strftime(buff, sizeof(buff), cc, stm);
+        luaL_addlstring(&b, buff, reslen);
+      }
+    }
+    luaL_pushresult(&b);
   }
   return 1;
 }
@@ -204,7 +215,6 @@
 
 static int os_exit (lua_State *L) {
   exit(luaL_optint(L, 1, EXIT_SUCCESS));
-  return 0;  /* to avoid warnings */
 }
 
 static const luaL_Reg syslib[] = {

Modified: trunk/lib-src/lua/lparser.c
===================================================================
--- trunk/lib-src/lua/lparser.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lparser.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lparser.c,v 2.42 2006/06/05 15:57:59 roberto Exp $
+** $Id: lparser.c,v 2.42.1.3 2007/12/28 15:32:23 roberto Exp $
 ** Lua Parser
 ** See Copyright Notice in lua.h
 */
@@ -489,7 +489,7 @@
 
 static void listfield (LexState *ls, struct ConsControl *cc) {
   expr(ls, &cc->v);
-  luaY_checklimit(ls->fs, cc->na, MAXARG_Bx, "items in a constructor");
+  luaY_checklimit(ls->fs, cc->na, MAX_INT, "items in a constructor");
   cc->na++;
   cc->tostore++;
 }
@@ -938,6 +938,8 @@
     primaryexp(ls, &nv.v);
     if (nv.v.k == VLOCAL)
       check_conflict(ls, lh, &nv.v);
+    luaY_checklimit(ls->fs, nvars, LUAI_MAXCCALLS - ls->L->nCcalls,
+                    "variables in assignment");
     assignment(ls, &nv, nvars+1);
   }
   else {  /* assignment -> `=' explist1 */

Modified: trunk/lib-src/lua/lparser.h
===================================================================
--- trunk/lib-src/lua/lparser.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lparser.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lparser.h,v 1.57 2006/03/09 18:14:31 roberto Exp $
+** $Id: lparser.h,v 1.57.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lua Parser
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lstate.c
===================================================================
--- trunk/lib-src/lua/lstate.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lstate.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lstate.c,v 2.36 2006/05/24 14:15:50 roberto Exp $
+** $Id: lstate.c,v 2.36.1.2 2008/01/03 15:20:39 roberto Exp $
 ** Global State
 ** See Copyright Notice in lua.h
 */
@@ -93,7 +93,7 @@
   resethookcount(L);
   L->openupval = NULL;
   L->size_ci = 0;
-  L->nCcalls = 0;
+  L->nCcalls = L->baseCcalls = 0;
   L->status = 0;
   L->base_ci = L->ci = NULL;
   L->savedpc = NULL;
@@ -205,7 +205,7 @@
   do {  /* repeat until no more errors */
     L->ci = L->base_ci;
     L->base = L->top = L->ci->base;
-    L->nCcalls = 0;
+    L->nCcalls = L->baseCcalls = 0;
   } while (luaD_rawrunprotected(L, callallgcTM, NULL) != 0);
   lua_assert(G(L)->tmudata == NULL);
   luai_userstateclose(L);

Modified: trunk/lib-src/lua/lstate.h
===================================================================
--- trunk/lib-src/lua/lstate.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lstate.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lstate.h,v 2.24 2006/02/06 18:27:59 roberto Exp $
+** $Id: lstate.h,v 2.24.1.2 2008/01/03 15:20:39 roberto Exp $
 ** Global State
 ** See Copyright Notice in lua.h
 */
@@ -112,6 +112,7 @@
   int stacksize;
   int size_ci;  /* size of array `base_ci' */
   unsigned short nCcalls;  /* number of nested C calls */
+  unsigned short baseCcalls;  /* nested C calls when resuming coroutine */
   lu_byte hookmask;
   lu_byte allowhook;
   int basehookcount;

Modified: trunk/lib-src/lua/lstring.c
===================================================================
--- trunk/lib-src/lua/lstring.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lstring.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lstring.c,v 2.8 2005/12/22 16:19:56 roberto Exp $
+** $Id: lstring.c,v 2.8.1.1 2007/12/27 13:02:25 roberto Exp $
 ** String table (keeps all strings handled by Lua)
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lstring.h
===================================================================
--- trunk/lib-src/lua/lstring.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lstring.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lstring.h,v 1.43 2005/04/25 19:24:10 roberto Exp $
+** $Id: lstring.h,v 1.43.1.1 2007/12/27 13:02:25 roberto Exp $
 ** String table (keep all strings handled by Lua)
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lstrlib.c
===================================================================
--- trunk/lib-src/lua/lstrlib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lstrlib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lstrlib.c,v 1.132 2006/04/26 20:41:19 roberto Exp $
+** $Id: lstrlib.c,v 1.132.1.4 2008/07/11 17:27:21 roberto Exp $
 ** Standard library for string operations and pattern-matching
 ** See Copyright Notice in lua.h
 */
@@ -35,7 +35,8 @@
 
 static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {
   /* relative string position: negative means back from end */
-  return (pos>=0) ? pos : (ptrdiff_t)len+pos+1;
+  if (pos < 0) pos += (ptrdiff_t)len + 1;
+  return (pos >= 0) ? pos : 0;
 }
 
 
@@ -629,10 +630,6 @@
       lua_gettable(L, 3);
       break;
     }
-    default: {
-      luaL_argerror(L, 3, "string/function/table expected"); 
-      return;
-    }
   }
   if (!lua_toboolean(L, -1)) {  /* nil or false? */
     lua_pop(L, 1);
@@ -648,11 +645,15 @@
   size_t srcl;
   const char *src = luaL_checklstring(L, 1, &srcl);
   const char *p = luaL_checkstring(L, 2);
+  int  tr = lua_type(L, 3);
   int max_s = luaL_optint(L, 4, srcl+1);
   int anchor = (*p == '^') ? (p++, 1) : 0;
   int n = 0;
   MatchState ms;
   luaL_Buffer b;
+  luaL_argcheck(L, tr == LUA_TNUMBER || tr == LUA_TSTRING ||
+                   tr == LUA_TFUNCTION || tr == LUA_TTABLE, 3,
+                      "string/function/table expected");
   luaL_buffinit(L, &b);
   ms.L = L;
   ms.src_init = src;
@@ -723,7 +724,7 @@
 
 static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {
   const char *p = strfrmt;
-  while (strchr(FLAGS, *p)) p++;  /* skip flags */
+  while (*p != '\0' && strchr(FLAGS, *p) != NULL) p++;  /* skip flags */
   if ((size_t)(p - strfrmt) >= sizeof(FLAGS))
     luaL_error(L, "invalid format (repeated flags)");
   if (isdigit(uchar(*p))) p++;  /* skip width */

Modified: trunk/lib-src/lua/ltable.c
===================================================================
--- trunk/lib-src/lua/ltable.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ltable.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ltable.c,v 2.32 2006/01/18 11:49:02 roberto Exp $
+** $Id: ltable.c,v 2.32.1.2 2007/12/28 15:32:23 roberto Exp $
 ** Lua tables (hash)
 ** See Copyright Notice in lua.h
 */
@@ -84,8 +84,8 @@
 static Node *hashnum (const Table *t, lua_Number n) {
   unsigned int a[numints];
   int i;
-  n += 1;  /* normalize number (avoid -0) */
-  lua_assert(sizeof(a) <= sizeof(n));
+  if (luai_numeq(n, 0))  /* avoid problems with -0 */
+    return gnode(t, 0);
   memcpy(a, &n, sizeof(a));
   for (i = 1; i < numints; i++) a[0] += a[i];
   return hashmod(t, a[0]);

Modified: trunk/lib-src/lua/ltable.h
===================================================================
--- trunk/lib-src/lua/ltable.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ltable.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ltable.h,v 2.10 2006/01/10 13:13:06 roberto Exp $
+** $Id: ltable.h,v 2.10.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lua tables (hash)
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/ltablib.c
===================================================================
--- trunk/lib-src/lua/ltablib.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ltablib.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ltablib.c,v 1.38 2005/10/23 17:38:15 roberto Exp $
+** $Id: ltablib.c,v 1.38.1.3 2008/02/14 16:46:58 roberto Exp $
 ** Library for Table Manipulation
 ** See Copyright Notice in lua.h
 */
@@ -118,7 +118,8 @@
 static int tremove (lua_State *L) {
   int e = aux_getn(L, 1);
   int pos = luaL_optint(L, 2, e);
-  if (e == 0) return 0;  /* table is `empty' */
+  if (!(1 <= pos && pos <= e))  /* position is outside bounds? */
+   return 0;  /* nothing to remove */
   luaL_setn(L, 1, e - 1);  /* t.n = n-1 */
   lua_rawgeti(L, 1, pos);  /* result = t[pos] */
   for ( ;pos<e; pos++) {
@@ -131,6 +132,15 @@
 }
 
 
+static void addfield (lua_State *L, luaL_Buffer *b, int i) {
+  lua_rawgeti(L, 1, i);
+  if (!lua_isstring(L, -1))
+    luaL_error(L, "invalid value (%s) at index %d in table for "
+                  LUA_QL("concat"), luaL_typename(L, -1), i);
+    luaL_addvalue(b);
+}
+
+
 static int tconcat (lua_State *L) {
   luaL_Buffer b;
   size_t lsep;
@@ -140,13 +150,12 @@
   i = luaL_optint(L, 3, 1);
   last = luaL_opt(L, luaL_checkint, 4, luaL_getn(L, 1));
   luaL_buffinit(L, &b);
-  for (; i <= last; i++) {
-    lua_rawgeti(L, 1, i);
-    luaL_argcheck(L, lua_isstring(L, -1), 1, "table contains non-strings");
-    luaL_addvalue(&b);
-    if (i != last)
-      luaL_addlstring(&b, sep, lsep);
+  for (; i < last; i++) {
+    addfield(L, &b, i);
+    luaL_addlstring(&b, sep, lsep);
   }
+  if (i == last)  /* add last value (if interval was not empty) */
+    addfield(L, &b, i);
   luaL_pushresult(&b);
   return 1;
 }

Modified: trunk/lib-src/lua/ltm.c
===================================================================
--- trunk/lib-src/lua/ltm.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ltm.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ltm.c,v 2.8 2006/01/10 12:50:00 roberto Exp $
+** $Id: ltm.c,v 2.8.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Tag methods
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/ltm.h
===================================================================
--- trunk/lib-src/lua/ltm.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/ltm.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: ltm.h,v 2.6 2005/06/06 13:30:25 roberto Exp $
+** $Id: ltm.h,v 2.6.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Tag methods
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lua.h
===================================================================
--- trunk/lib-src/lua/lua.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lua.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lua.h,v 1.218 2006/06/02 15:34:00 roberto Exp $
+** $Id: lua.h,v 1.218.1.5 2008/08/06 13:30:12 roberto Exp $
 ** Lua - An Extensible Extension Language
 ** Lua.org, PUC-Rio, Brazil (http://www.lua.org)
 ** See Copyright Notice at the end of this file
@@ -17,9 +17,9 @@
 
 
 #define LUA_VERSION	"Lua 5.1"
-#define LUA_RELEASE	"Lua 5.1.1"
+#define LUA_RELEASE	"Lua 5.1.4"
 #define LUA_VERSION_NUM	501
-#define LUA_COPYRIGHT	"Copyright (C) 1994-2006 Lua.org, PUC-Rio"
+#define LUA_COPYRIGHT	"Copyright (C) 1994-2008 Lua.org, PUC-Rio"
 #define LUA_AUTHORS 	"R. Ierusalimschy, L. H. de Figueiredo & W. Celes"
 
 
@@ -294,7 +294,10 @@
 #define lua_Chunkwriter		lua_Writer
 
 
+/* hack */
+LUA_API void lua_setlevel	(lua_State *from, lua_State *to);
 
+
 /*
 ** {======================================================================
 ** Debug API
@@ -359,7 +362,7 @@
 
 
 /******************************************************************************
-* Copyright (C) 1994-2006 Lua.org, PUC-Rio.  All rights reserved.
+* Copyright (C) 1994-2008 Lua.org, PUC-Rio.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the

Modified: trunk/lib-src/lua/luaconf.h
===================================================================
--- trunk/lib-src/lua/luaconf.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/luaconf.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: luaconf.h,v 1.82 2006/04/10 18:27:23 roberto Exp $
+** $Id: luaconf.h,v 1.82.1.7 2008/02/11 16:25:08 roberto Exp $
 ** Configuration file for Lua
 ** See Copyright Notice in lua.h
 */
@@ -360,7 +360,7 @@
 /*
 @@ LUA_COMPAT_OPENLIB controls compatibility with old 'luaL_openlib'
 @* behavior.
-** CHANGE it to undefined as soon as you replace to 'luaL_registry'
+** CHANGE it to undefined as soon as you replace to 'luaL_register'
 ** your uses of 'luaL_openlib'
 */
 #define LUA_COMPAT_OPENLIB
@@ -440,9 +440,10 @@
 @* can use.
 ** CHANGE it if you need lots of (Lua) stack space for your C
 ** functions. This limit is arbitrary; its only purpose is to stop C
-** functions to consume unlimited stack space.
+** functions to consume unlimited stack space. (must be smaller than
+** -LUA_REGISTRYINDEX)
 */
-#define LUAI_MAXCSTACK	2048
+#define LUAI_MAXCSTACK	8000
 
 
 
@@ -666,7 +667,7 @@
 */
 #if defined(LUA_USE_POPEN)
 
-#define lua_popen(L,c,m)	((void)L, popen(c,m))
+#define lua_popen(L,c,m)	((void)L, fflush(NULL), popen(c,m))
 #define lua_pclose(L,file)	((void)L, (pclose(file) != -1))
 
 #elif defined(LUA_WIN)

Modified: trunk/lib-src/lua/lualib.h
===================================================================
--- trunk/lib-src/lua/lualib.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lualib.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lualib.h,v 1.36 2005/12/27 17:12:00 roberto Exp $
+** $Id: lualib.h,v 1.36.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lua standard libraries
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lundump.c
===================================================================
--- trunk/lib-src/lua/lundump.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lundump.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lundump.c,v 1.60 2006/02/16 15:53:49 lhf Exp $
+** $Id: lundump.c,v 2.7.1.4 2008/04/04 19:51:41 roberto Exp $
 ** load precompiled Lua chunks
 ** See Copyright Notice in lua.h
 */
@@ -29,6 +29,7 @@
 
 #ifdef LUAC_TRUST_BINARIES
 #define IF(c,s)
+#define error(S,s)
 #else
 #define IF(c,s)		if (c) error(S,s)
 
@@ -113,7 +114,7 @@
    	setnilvalue(o);
 	break;
    case LUA_TBOOLEAN:
-   	setbvalue(o,LoadChar(S));
+   	setbvalue(o,LoadChar(S)!=0);
 	break;
    case LUA_TNUMBER:
 	setnvalue(o,LoadNumber(S));
@@ -122,7 +123,7 @@
 	setsvalue2n(S->L,o,LoadString(S));
 	break;
    default:
-	IF (1, "bad constant");
+	error(S,"bad constant");
 	break;
   }
  }
@@ -159,7 +160,9 @@
 
 static Proto* LoadFunction(LoadState* S, TString* p)
 {
- Proto* f=luaF_newproto(S->L);
+ Proto* f;
+ if (++S->L->nCcalls > LUAI_MAXCCALLS) error(S,"code too deep");
+ f=luaF_newproto(S->L);
  setptvalue2s(S->L,S->L->top,f); incr_top(S->L);
  f->source=LoadString(S); if (f->source==NULL) f->source=p;
  f->linedefined=LoadInt(S);
@@ -173,6 +176,7 @@
  LoadDebug(S,f);
  IF (!luaG_checkcode(f), "bad code");
  S->L->top--;
+ S->L->nCcalls--;
  return f;
 }
 

Modified: trunk/lib-src/lua/lundump.h
===================================================================
--- trunk/lib-src/lua/lundump.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lundump.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lundump.h,v 1.40 2005/11/11 14:03:13 lhf Exp $
+** $Id: lundump.h,v 1.37.1.1 2007/12/27 13:02:25 roberto Exp $
 ** load precompiled Lua chunks
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lvm.c
===================================================================
--- trunk/lib-src/lua/lvm.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lvm.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lvm.c,v 2.63 2006/06/05 15:58:59 roberto Exp $
+** $Id: lvm.c,v 2.63.1.3 2007/12/28 15:32:23 roberto Exp $
 ** Lua virtual machine
 ** See Copyright Notice in lua.h
 */
@@ -61,11 +61,9 @@
   lu_byte mask = L->hookmask;
   const Instruction *oldpc = L->savedpc;
   L->savedpc = pc;
-  if (mask > LUA_MASKLINE) {  /* instruction-hook set? */
-    if (L->hookcount == 0) {
-      resethookcount(L);
-      luaD_callhook(L, LUA_HOOKCOUNT, -1);
-    }
+  if ((mask & LUA_MASKCOUNT) && L->hookcount == 0) {
+    resethookcount(L);
+    luaD_callhook(L, LUA_HOOKCOUNT, -1);
   }
   if (mask & LUA_MASKLINE) {
     Proto *p = ci_func(L->ci)->l.p;
@@ -165,7 +163,7 @@
   const TValue *tm = luaT_gettmbyobj(L, p1, event);  /* try first operand */
   if (ttisnil(tm))
     tm = luaT_gettmbyobj(L, p2, event);  /* try second operand */
-  if (!ttisfunction(tm)) return 0;
+  if (ttisnil(tm)) return 0;
   callTMres(L, res, tm, p1, p2);
   return 1;
 }
@@ -281,10 +279,12 @@
   do {
     StkId top = L->base + last + 1;
     int n = 2;  /* number of elements handled in this pass (at least 2) */
-    if (!tostring(L, top-2) || !tostring(L, top-1)) {
+    if (!(ttisstring(top-2) || ttisnumber(top-2)) || !tostring(L, top-1)) {
       if (!call_binTM(L, top-2, top-1, top-2, TM_CONCAT))
         luaG_concaterror(L, top-2, top-1);
-    } else if (tsvalue(top-1)->len > 0) {  /* if len=0, do nothing */
+    } else if (tsvalue(top-1)->len == 0)  /* second op is empty? */
+      (void)tostring(L, top - 2);  /* result is first op (as string) */
+    else {
       /* at least two string values; get as many as possible */
       size_t tl = tsvalue(top-1)->len;
       char *buffer;

Modified: trunk/lib-src/lua/lvm.h
===================================================================
--- trunk/lib-src/lua/lvm.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lvm.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lvm.h,v 2.5 2005/08/22 18:54:49 roberto Exp $
+** $Id: lvm.h,v 2.5.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Lua virtual machine
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lzio.c
===================================================================
--- trunk/lib-src/lua/lzio.c	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lzio.c	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lzio.c,v 1.31 2005/06/03 20:15:29 roberto Exp $
+** $Id: lzio.c,v 1.31.1.1 2007/12/27 13:02:25 roberto Exp $
 ** a generic input stream interface
 ** See Copyright Notice in lua.h
 */

Modified: trunk/lib-src/lua/lzio.h
===================================================================
--- trunk/lib-src/lua/lzio.h	2009-03-31 21:37:25 UTC (rev 1605)
+++ trunk/lib-src/lua/lzio.h	2009-03-31 21:45:14 UTC (rev 1606)
@@ -1,5 +1,5 @@
 /*
-** $Id: lzio.h,v 1.21 2005/05/17 19:49:15 roberto Exp $
+** $Id: lzio.h,v 1.21.1.1 2007/12/27 13:02:25 roberto Exp $
 ** Buffered streams
 ** See Copyright Notice in lua.h
 */



